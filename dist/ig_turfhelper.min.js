!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory(global.turfHelper=global.turfHelper||{})}(this,function(exports){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};!function(global,factory){"object"===(void 0===exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory(global.turfHelper=global.turfHelper||{})}(void 0,function(exports){function Wicket$1(){return new Wkt.Wkt}function arrayMap(array,iteratee){for(var index=-1,length=null==array?0:array.length,result=Array(length);++index<length;)result[index]=iteratee(array[index],index,array);return result}function eq(value,other){return value===other||value!=value&&other!=other}function assocIndexOf(array,key){for(var length=array.length;length--;)if(eq(array[length][0],key))return length;return-1}function ListCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function baseGetTag(value){return null==value?void 0===value?undefinedTag:nullTag:symToStringTag&&symToStringTag in Object(value)?function(value){var isOwn=hasOwnProperty$1.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=void 0;var unmasked=!0}catch(e){}var result=nativeObjectToString.call(value);return unmasked&&(isOwn?value[symToStringTag$1]=tag:delete value[symToStringTag$1]),result}(value):function(value){return nativeObjectToString$1.call(value)}(value)}function isObject(value){var type=void 0===value?"undefined":_typeof$$1(value);return null!=value&&("object"==type||"function"==type)}function isFunction(value){if(!isObject(value))return!1;var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}function toSource(func){if(null!=func){try{return funcToString$1.call(func)}catch(e){}try{return func+""}catch(e){}}return""}function baseIsNative(value){if(!isObject(value)||function(func){return!!maskSrcKey&&maskSrcKey in func}(value))return!1;return(isFunction(value)?reIsNative:reIsHostCtor).test(toSource(value))}function getNative(object,key){var value=function(object,key){return null==object?void 0:object[key]}(object,key);return baseIsNative(value)?value:void 0}function Hash(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function getMapData(map,key){var data=map.__data__;return function(value){var type=void 0===value?"undefined":_typeof$$1(value);return"string"==type||"number"==type||"symbol"==type||"boolean"==type?"__proto__"!==value:null===value}(key)?data["string"==typeof key?"string":"hash"]:data.map}function MapCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}function SetCache(values){var index=-1,length=null==values?0:values.length;for(this.__data__=new MapCache;++index<length;)this.add(values[index])}function arraySome(array,predicate){for(var index=-1,length=null==array?0:array.length;++index<length;)if(predicate(array[index],index,array))return!0;return!1}function cacheHas(cache,key){return cache.has(key)}function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$2,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength))return!1;var stacked=stack.get(array);if(stacked&&stack.get(other))return stacked==other;var index=-1,result=!0,seen=bitmask&COMPARE_UNORDERED_FLAG$1?new SetCache:void 0;for(stack.set(array,other),stack.set(other,array);++index<arrLength;){var arrValue=array[index],othValue=other[index];if(customizer)var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);if(void 0!==compared){if(compared)continue;result=!1;break}if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack)))return seen.push(othIndex)})){result=!1;break}}else if(arrValue!==othValue&&!equalFunc(arrValue,othValue,bitmask,customizer,stack)){result=!1;break}}return stack.delete(array),stack.delete(other),result}function mapToArray(map){var index=-1,result=Array(map.size);return map.forEach(function(value,key){result[++index]=[key,value]}),result}function setToArray(set$$1){var index=-1,result=Array(set$$1.size);return set$$1.forEach(function(value){result[++index]=value}),result}function arrayFilter(array,predicate){for(var index=-1,length=null==array?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];predicate(value,index,array)&&(result[resIndex++]=value)}return result}function isObjectLike(value){return null!=value&&"object"==(void 0===value?"undefined":_typeof$$1(value))}function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag$1}function isIndex(value,length){return!!(length=null==length?MAX_SAFE_INTEGER:length)&&("number"==typeof value||reIsUint.test(value))&&value>-1&&value%1==0&&value<length}function isLength(value){return"number"==typeof value&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER$1}function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?function(n,iteratee){for(var index=-1,result=Array(n);++index<n;)result[index]=iteratee(index);return result}(value.length,String):[],length=result.length;for(var key in value)!inherited&&!hasOwnProperty$6.call(value,key)||skipIndexes&&("length"==key||isBuff&&("offset"==key||"parent"==key)||isType&&("buffer"==key||"byteLength"==key||"byteOffset"==key)||isIndex(key,length))||result.push(key);return result}function baseKeys(object){if(!function(value){var Ctor=value&&value.constructor;return value===("function"==typeof Ctor&&Ctor.prototype||objectProto$11)}(object))return nativeKeys(object);var result=[];for(var key in Object(object))hasOwnProperty$8.call(object,key)&&"constructor"!=key&&result.push(key);return result}function isArrayLike(value){return null!=value&&isLength(value.length)&&!isFunction(value)}function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}function getAllKeys(object){return function(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:function(array,values){for(var index=-1,length=values.length,offset=array.length;++index<length;)array[offset+index]=values[index];return array}(result,symbolsFunc(object))}(object,keys,getSymbols)}function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag$1(object),othTag=othIsArr?arrayTag:getTag$1(other),objIsObj=(objTag=objTag==argsTag?objectTag:objTag)==objectTag,othIsObj=(othTag=othTag==argsTag?objectTag:othTag)==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other))return!1;objIsArr=!0,objIsObj=!1}if(isSameTag&&!objIsObj)return stack||(stack=new Stack),objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):function(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset)return!1;object=object.buffer,other=other.buffer;case arrayBufferTag:return!(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array$1(object),new Uint8Array$1(other)));case boolTag:case dateTag:case numberTag:return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:return object==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG$3;if(convert||(convert=setToArray),object.size!=other.size&&!isPartial)return!1;var stacked=stack.get(object);if(stacked)return stacked==other;bitmask|=COMPARE_UNORDERED_FLAG$2,stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);return stack.delete(object),result;case symbolTag:if(symbolValueOf)return symbolValueOf.call(object)==symbolValueOf.call(other)}return!1}(object,other,objTag,bitmask,customizer,equalFunc,stack);if(!(bitmask&COMPARE_PARTIAL_FLAG$1)){var objIsWrapped=objIsObj&&hasOwnProperty$4.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty$4.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;return stack||(stack=new Stack),equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}return!!isSameTag&&(stack||(stack=new Stack),function(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$4,objProps=getAllKeys(object),objLength=objProps.length;if(objLength!=getAllKeys(other).length&&!isPartial)return!1;for(var index=objLength;index--;){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty$5.call(other,key)))return!1}var stacked=stack.get(object);if(stacked&&stack.get(other))return stacked==other;var result=!0;stack.set(object,other),stack.set(other,object);for(var skipCtor=isPartial;++index<objLength;){var objValue=object[key=objProps[index]],othValue=other[key];if(customizer)var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);if(!(void 0===compared?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=!1;break}skipCtor||(skipCtor="constructor"==key)}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;objCtor!=othCtor&&"constructor"in object&&"constructor"in other&&!("function"==typeof objCtor&&objCtor instanceof objCtor&&"function"==typeof othCtor&&othCtor instanceof othCtor)&&(result=!1)}return stack.delete(object),stack.delete(other),result}(object,other,bitmask,customizer,equalFunc,stack))}function baseIsEqual(value,other,bitmask,customizer,stack){return value===other||(null==value||null==other||!isObjectLike(value)&&!isObjectLike(other)?value!=value&&other!=other:baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack))}function isStrictComparable(value){return value==value&&!isObject(value)}function matchesStrictComparable(key,srcValue){return function(object){return null!=object&&(object[key]===srcValue&&(void 0!==srcValue||key in Object(object)))}}function baseMatches(source){var matchData=function(object){for(var result=keys(object),length=result.length;length--;){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)]}return result}(source);return 1==matchData.length&&matchData[0][2]?matchesStrictComparable(matchData[0][0],matchData[0][1]):function(object){return object===source||function(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(null==object)return!length;for(object=Object(object);index--;){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object))return!1}for(;++index<length;){var key=(data=matchData[index])[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(void 0===objValue&&!(key in object))return!1}else{var stack=new Stack;if(customizer)var result=customizer(objValue,srcValue,key,object,source,stack);if(!(void 0===result?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result))return!1}}return!0}(object,source,matchData)}}function isSymbol(value){return"symbol"==(void 0===value?"undefined":_typeof$$1(value))||isObjectLike(value)&&baseGetTag(value)==symbolTag$1}function isKey(value,object){if(isArray(value))return!1;var type=void 0===value?"undefined":_typeof$$1(value);return!("number"!=type&&"symbol"!=type&&"boolean"!=type&&null!=value&&!isSymbol(value))||(reIsPlainProp.test(value)||!reIsDeepProp.test(value)||null!=object&&value in Object(object))}function memoize(func,resolver){if("function"!=typeof func||null!=resolver&&"function"!=typeof resolver)throw new TypeError(FUNC_ERROR_TEXT);var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key))return cache.get(key);var result=func.apply(this,args);return memoized.cache=cache.set(key,result)||cache,result};return memoized.cache=new(memoize.Cache||MapCache),memoized}function baseToString(value){if("string"==typeof value)return value;if(isArray(value))return arrayMap(value,baseToString)+"";if(isSymbol(value))return symbolToString?symbolToString.call(value):"";var result=value+"";return"0"==result&&1/value==-INFINITY?"-0":result}function castPath(value,object){return isArray(value)?value:isKey(value,object)?[value]:stringToPath(function(value){return null==value?"":baseToString(value)}(value))}function toKey(value){if("string"==typeof value||isSymbol(value))return value;var result=value+"";return"0"==result&&1/value==-INFINITY$1?"-0":result}function baseGet(object,path){for(var index=0,length=(path=castPath(path,object)).length;null!=object&&index<length;)object=object[toKey(path[index++])];return index&&index==length?object:void 0}function baseHasIn(object,key){return null!=object&&key in Object(object)}function hasIn(object,path){return null!=object&&function(object,path,hasFunc){for(var index=-1,length=(path=castPath(path,object)).length,result=!1;++index<length;){var key=toKey(path[index]);if(!(result=null!=object&&hasFunc(object,key)))break;object=object[key]}return result||++index!=length?result:!!(length=null==object?0:object.length)&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object))}(object,path,baseHasIn)}function baseMatchesProperty(path,srcValue){return isKey(path)&&isStrictComparable(srcValue)?matchesStrictComparable(toKey(path),srcValue):function(object){var objValue=function(object,path,defaultValue){var result=null==object?void 0:baseGet(object,path);return void 0===result?defaultValue:result}(object,path);return void 0===objValue&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG$5|COMPARE_UNORDERED_FLAG$3)}}function identity(value){return value}function property(path){return isKey(path)?function(key){return function(object){return null==object?void 0:object[key]}}(toKey(path)):function(path){return function(object){return baseGet(object,path)}}(path)}function baseIteratee(value){return"function"==typeof value?value:null==value?identity:"object"==(void 0===value?"undefined":_typeof$$1(value))?isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value):property(value)}function map(collection,iteratee){return(isArray(collection)?arrayMap:function(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];return baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection)}),result})(collection,baseIteratee(iteratee))}function forEach(collection,iteratee){return(isArray(collection)?function(array,iteratee){for(var index=-1,length=null==array?0:array.length;++index<length&&!1!==iteratee(array[index],index,array););return array}:baseEach)(collection,function(value){return"function"==typeof value?value:identity}(iteratee))}function toLatLng(position){return position instanceof google.maps.LatLng?{lat:position.lat(),lng:position.lng()}:position.lat&&position.lng?position:{lat:position[1],lng:position[0]}}function toLatLngs(coordinates){return map(coordinates,toLatLng)}function toCoord$1(LatLng){if(google.maps&&google.maps.LatLng&&LatLng instanceof google.maps.LatLng)return[LatLng.lng(),LatLng.lat()];if(LatLng.lat&&LatLng.lng)return[LatLng.lng,LatLng.lat];if(LatLng.length&&LatLng.length>=2)return LatLng;throw new Error("google.maps is not present in the global scope")}function toCoords(arrayLatLng,closeRing){var ring=map(arrayLatLng,toCoord$1);if(!0===closeRing){var last_coord=ring.pop();last_coord[0]===ring[0][0]&&last_coord[1]===ring[0][1]?ring.push(ring[0]):(ring.push(last_coord),ring.push(ring[0]))}return ring}function feature(geometry,properties,bbox,id){if(void 0===geometry)throw new Error("geometry is required");if(properties&&properties.constructor!==Object)throw new Error("properties must be an Object");if(bbox){if(!Array.isArray(bbox))throw new Error("bbox must be an Array");if(4!==bbox.length)throw new Error("bbox must be an Array of 4 numbers")}if(id&&-1===["string","number"].indexOf(void 0===id?"undefined":_typeof$$1(id)))throw new Error("id must be a number or a string");var feat={type:"Feature"};return id&&(feat.id=id),bbox&&(feat.bbox=bbox),feat.properties=properties||{},feat.geometry=geometry,feat}function point(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");if(!Array.isArray(coordinates))throw new Error("Coordinates must be an Array");if(coordinates.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!isNumber(coordinates[0])||!isNumber(coordinates[1]))throw new Error("Coordinates must contain numbers");return feature({type:"Point",coordinates:coordinates},properties,bbox,id)}function polygon(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");for(var i=0;i<coordinates.length;i++){var ring=coordinates[i];if(ring.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var j=0;j<ring[ring.length-1].length;j++){if(0===i&&0===j&&!isNumber(ring[0][0])||!isNumber(ring[0][1]))throw new Error("Coordinates must contain numbers");if(ring[ring.length-1][j]!==ring[0][j])throw new Error("First and last Position are not equivalent.")}}return feature({type:"Polygon",coordinates:coordinates},properties,bbox,id)}function lineString(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");if(coordinates.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!isNumber(coordinates[0][1])||!isNumber(coordinates[0][1]))throw new Error("Coordinates must contain numbers");return feature({type:"LineString",coordinates:coordinates},properties,bbox,id)}function featureCollection(features,bbox,id){if(!features)throw new Error("No features passed");if(!Array.isArray(features))throw new Error("features must be an Array");if(bbox&&4!==bbox.length)throw new Error("bbox must be an Array of 4 numbers");if(id&&-1===["string","number"].indexOf(void 0===id?"undefined":_typeof$$1(id)))throw new Error("id must be a number or a string");var fc={type:"FeatureCollection"};return id&&(fc.id=id),bbox&&(fc.bbox=bbox),fc.features=features,fc}function radiansToLength(radians,units){if(void 0===radians||null===radians)throw new Error("radians is required");if(units&&"string"!=typeof units)throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function lengthToRadians(distance,units){if(void 0===distance||null===distance)throw new Error("distance is required");if(units&&"string"!=typeof units)throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function radiansToDegrees(radians){if(null===radians||void 0===radians)throw new Error("radians is required");return 180*(radians%(2*Math.PI))/Math.PI}function degreesToRadians(degrees){if(null===degrees||void 0===degrees)throw new Error("degrees is required");return degrees%360*Math.PI/180}function isNumber(num){return!isNaN(num)&&null!==num&&!Array.isArray(num)}function isObject$2(input){return!!input&&input.constructor===Object}function arrayToFeaturePolygon(LatLngArray){return{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[toCoords(LatLngArray,!0)]}}}function polylineToFeatureLinestring(objeto){var vertices;return vertices=toCoords(objeto instanceof google.maps.Polyline?objeto.getPath().getArray():objeto),lineString(vertices)}function polygonToFeaturePolygon(object){var polygonFeature;if("Feature"===object.type)polygonFeature=object;else if(object instanceof google.maps.Polygon)polygonFeature=arrayToFeaturePolygon(toCoords(object=object.getPath().getArray(),!0));else if(object&&object.constructor===Array)polygonFeature=arrayToFeaturePolygon(toCoords(object,!0));else{if(!object.geometry)throw new Error("object is not a Feature, google.maps.Polygon nor an array of google.maps.LatLng");polygonFeature={type:"Feature",properties:{},geometry:object.geometry}}return polygonFeature.properties={},polygonFeature}function arrayToFeaturePoints(latLngArray){var FeatureCollection={type:"FeatureCollection",features:[]};return latLngArray.forEach(function(latLng){var Feature={type:"Feature",geometry:{type:"Point",coordinates:toCoords([latLng])[0]}};FeatureCollection.features.push(Feature)}),FeatureCollection}function tin(points,z){if("FeatureCollection"!==points.type)throw new Error("points must be a FeatureCollection");var isPointZ=!1;return featureCollection(function(vertices){if(vertices.length<3)return[];vertices.sort(byX);var a,b,c,A,B,G,i=vertices.length-1,xmin=vertices[i].x,xmax=vertices[0].x,ymin=vertices[i].y,ymax=ymin;for(;i--;)vertices[i].y<ymin&&(ymin=vertices[i].y),vertices[i].y>ymax&&(ymax=vertices[i].y);var j,dx=xmax-xmin,dy=ymax-ymin,dmax=dx>dy?dx:dy,xmid=.5*(xmax+xmin),ymid=.5*(ymax+ymin),open=[new Triangle({x:xmid-20*dmax,y:ymid-dmax,__sentinel:!0},{x:xmid,y:ymid+20*dmax,__sentinel:!0},{x:xmid+20*dmax,y:ymid-dmax,__sentinel:!0})],closed=[],edges=[];i=vertices.length;for(;i--;){for(edges.length=0,j=open.length;j--;)(dx=vertices[i].x-open[j].x)>0&&dx*dx>open[j].r?(closed.push(open[j]),open.splice(j,1)):(dy=vertices[i].y-open[j].y,dx*dx+dy*dy>open[j].r||(edges.push(open[j].a,open[j].b,open[j].b,open[j].c,open[j].c,open[j].a),open.splice(j,1)));for(dedup(edges),j=edges.length;j;)b=edges[--j],a=edges[--j],c=vertices[i],A=b.x-a.x,B=b.y-a.y,G=2*(A*(c.y-b.y)-B*(c.x-b.x)),Math.abs(G)>1e-12&&open.push(new Triangle(a,b,c))}Array.prototype.push.apply(closed,open),i=closed.length;for(;i--;)(closed[i].a.__sentinel||closed[i].b.__sentinel||closed[i].c.__sentinel)&&closed.splice(i,1);return closed}(points.features.map(function(p){var point$$1={x:p.geometry.coordinates[0],y:p.geometry.coordinates[1]};return z?point$$1.z=p.properties[z]:3===p.geometry.coordinates.length&&(isPointZ=!0,point$$1.z=p.geometry.coordinates[2]),point$$1})).map(function(triangle){var a=[triangle.a.x,triangle.a.y],b=[triangle.b.x,triangle.b.y],c=[triangle.c.x,triangle.c.y],properties={};return isPointZ?(a.push(triangle.a.z),b.push(triangle.b.z),c.push(triangle.c.z)):properties={a:triangle.a.z,b:triangle.b.z,c:triangle.c.z},polygon([[a,b,c,a]],properties)}))}function Triangle(a,b,c){this.a=a,this.b=b,this.c=c;var dx,dy,A=b.x-a.x,B=b.y-a.y,C=c.x-a.x,D=c.y-a.y,E=A*(a.x+b.x)+B*(a.y+b.y),F=C*(a.x+c.x)+D*(a.y+c.y),G=2*(A*(c.y-b.y)-B*(c.x-b.x));this.x=(D*E-B*F)/G,this.y=(A*F-C*E)/G,dx=this.x-a.x,dy=this.y-a.y,this.r=dx*dx+dy*dy}function byX(a,b){return b.x-a.x}function dedup(edges){var a,b,i,m,n,j=edges.length;outer:for(;j;)for(b=edges[--j],a=edges[--j],i=j;i;)if(n=edges[--i],m=edges[--i],a===m&&b===n||a===n&&b===m){edges.splice(j,2),edges.splice(i,2),j-=2;continue outer}}function clone(geojson){if(!geojson)throw new Error("geojson is required");switch(geojson.type){case"Feature":return cloneFeature(geojson);case"FeatureCollection":return function(geojson){var cloned={type:"FeatureCollection"};return Object.keys(geojson).forEach(function(key){switch(key){case"type":case"features":return;default:cloned[key]=geojson[key]}}),cloned.features=geojson.features.map(function(feature){return cloneFeature(feature)}),cloned}(geojson);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return cloneGeometry(geojson);default:throw new Error("unknown GeoJSON type")}}function cloneFeature(geojson){var cloned={type:"Feature"};return Object.keys(geojson).forEach(function(key){switch(key){case"type":case"properties":case"geometry":return;default:cloned[key]=geojson[key]}}),cloned.properties=cloneProperties(geojson.properties),cloned.geometry=cloneGeometry(geojson.geometry),cloned}function cloneProperties(properties){var cloned={};return properties?(Object.keys(properties).forEach(function(key){var value=properties[key];"object"===(void 0===value?"undefined":_typeof$$1(value))?(value.length&&(cloned[key]=value.map(function(item){return item})),cloned[key]=cloneProperties(value)):cloned[key]=value}),cloned):cloned}function cloneGeometry(geometry){var geom={type:geometry.type};return geometry.bbox&&(geom.bbox=geometry.bbox),"GeometryCollection"===geometry.type?(geom.geometries=geometry.geometries.map(function(geom){return cloneGeometry(geom)}),geom):(geom.coordinates=deepSlice(geometry.coordinates),geom)}function deepSlice(coords){return"object"!==_typeof$$1(coords[0])?coords.slice():coords.map(function(coord){return deepSlice(coord)})}function getCoord(obj){if(!obj)throw new Error("obj is required");var coordinates=getCoords(obj);if(coordinates.length>1&&isNumber(coordinates[0])&&isNumber(coordinates[1]))return coordinates;throw new Error("Coordinate is not a valid Point")}function getCoords(obj){if(!obj)throw new Error("obj is required");var coordinates;if(obj.length?coordinates=obj:obj.coordinates?coordinates=obj.coordinates:obj.geometry&&obj.geometry.coordinates&&(coordinates=obj.geometry.coordinates),coordinates)return containsNumber(coordinates),coordinates;throw new Error("No valid coordinates")}function containsNumber(coordinates){if(coordinates.length>1&&isNumber(coordinates[0])&&isNumber(coordinates[1]))return!0;if(Array.isArray(coordinates[0])&&coordinates[0].length)return containsNumber(coordinates[0]);throw new Error("coordinates must only contain numbers")}function getType(geojson,name){if(!geojson)throw new Error((name||"geojson")+" is required");if(geojson.geometry&&geojson.geometry.type)return geojson.geometry.type;if(geojson.type)return geojson.type;throw new Error((name||"geojson")+" is invalid")}function coordEach(geojson,callback,excludeWrapCoord){if(null!==geojson){var featureIndex,geometryIndex,j,k,l,geometry$$1,stopG,coords,geometryMaybeCollection,isGeometryCollection,wrapShrink=0,coordIndex=0,type=geojson.type,isFeatureCollection="FeatureCollection"===type,isFeature="Feature"===type,stop=isFeatureCollection?geojson.features.length:1;for(featureIndex=0;featureIndex<stop;featureIndex++)for(stopG=(isGeometryCollection=!!(geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson)&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1,geometryIndex=0;geometryIndex<stopG;geometryIndex++){var featureSubIndex=0;if(null!==(geometry$$1=isGeometryCollection?geometryMaybeCollection.geometries[geometryIndex]:geometryMaybeCollection)){coords=geometry$$1.coordinates;var geomType=geometry$$1.type;switch(wrapShrink=!excludeWrapCoord||"Polygon"!==geomType&&"MultiPolygon"!==geomType?0:1,geomType){case null:break;case"Point":callback(coords,coordIndex,featureIndex,featureSubIndex),coordIndex++,featureSubIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++)callback(coords[j],coordIndex,featureIndex,featureSubIndex),coordIndex++,"MultiPoint"===geomType&&featureSubIndex++;"LineString"===geomType&&featureSubIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++)callback(coords[j][k],coordIndex,featureIndex,featureSubIndex),coordIndex++;"MultiLineString"===geomType&&featureSubIndex++}"Polygon"===geomType&&featureSubIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length;k++)for(l=0;l<coords[j][k].length-wrapShrink;l++)callback(coords[j][k][l],coordIndex,featureIndex,featureSubIndex),coordIndex++;featureSubIndex++}break;case"GeometryCollection":for(j=0;j<geometry$$1.geometries.length;j++)coordEach(geometry$$1.geometries[j],callback,excludeWrapCoord);break;default:throw new Error("Unknown Geometry Type")}}}}}function featureEach(geojson,callback){if("Feature"===geojson.type)callback(geojson,0);else if("FeatureCollection"===geojson.type)for(var i=0;i<geojson.features.length;i++)callback(geojson.features[i],i)}function geomEach(geojson,callback){var i,j,g,geometry$$1,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex=0,isFeatureCollection="FeatureCollection"===geojson.type,isFeature="Feature"===geojson.type,stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){for(geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson,featureProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{},featureBBox=isFeatureCollection?geojson.features[i].bbox:isFeature?geojson.bbox:void 0,featureId=isFeatureCollection?geojson.features[i].id:isFeature?geojson.id:void 0,stopG=(isGeometryCollection=!!geometryMaybeCollection&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1,g=0;g<stopG;g++)if(null!==(geometry$$1=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection))switch(geometry$$1.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":callback(geometry$$1,featureIndex,featureProperties,featureBBox,featureId);break;case"GeometryCollection":for(j=0;j<geometry$$1.geometries.length;j++)callback(geometry$$1.geometries[j],featureIndex,featureProperties,featureBBox,featureId);break;default:throw new Error("Unknown Geometry Type")}else callback(null,featureIndex,featureProperties,featureBBox,featureId);featureIndex++}}function flattenEach(geojson,callback){geomEach(geojson,function(geometry$$1,featureIndex,properties,bbox,id){var type=null===geometry$$1?null:geometry$$1.type;switch(type){case null:case"Point":case"LineString":case"Polygon":return void callback(feature(geometry$$1,properties,bbox,id),featureIndex,0)}var geomType;switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon"}geometry$$1.coordinates.forEach(function(coordinate,featureSubIndex){callback(feature({type:geomType,coordinates:coordinate},properties),featureIndex,featureSubIndex)})})}function lineReduce(geojson,callback,initialValue){var previousValue=initialValue;return function(geojson,callback){if(!geojson)throw new Error("geojson is required");flattenEach(geojson,function(feature$$1,featureIndex,featureSubIndex){if(null!==feature$$1.geometry){var type=feature$$1.geometry.type,coords=feature$$1.geometry.coordinates;switch(type){case"LineString":callback(feature$$1,featureIndex,featureSubIndex,0);break;case"Polygon":for(var lineIndex=0;lineIndex<coords.length;lineIndex++)callback(lineString(coords[lineIndex],feature$$1.properties),featureIndex,featureSubIndex,lineIndex)}}})}(geojson,function(currentLine,featureIndex,featureSubIndex,lineIndex){previousValue=0===featureIndex&&void 0===initialValue?currentLine:callback(previousValue,currentLine,featureIndex,featureSubIndex,lineIndex)}),previousValue}function lineDissolve(geojson,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var mutate=options.mutate;if("FeatureCollection"!==getType(geojson))throw new Error("geojson must be a FeatureCollection");if(!geojson.features.length)throw new Error("geojson is empty");!1!==mutate&&void 0!==mutate||(geojson=clone(geojson));var result=[],lastLine=lineReduce(geojson,function(previousLine,currentLine){var merged=function(a,b){var coords,coords1=a.geometry.coordinates,coords2=b.geometry.coordinates,s1=coordId(coords1[0]),e1=coordId(coords1[coords1.length-1]),s2=coordId(coords2[0]),e2=coordId(coords2[coords2.length-1]);if(s1===e2)coords=coords2.concat(coords1.slice(1));else if(s2===e1)coords=coords1.concat(coords2.slice(1));else if(s1===s2)coords=coords1.slice(1).reverse().concat(coords2);else{if(e1!==e2)return null;coords=coords1.concat(coords2.reverse().slice(1))}return lineString(coords)}(previousLine,currentLine);return merged||(result.push(previousLine),currentLine)});return lastLine&&result.push(lastLine),result.length?1===result.length?result[0]:function(coordinates,properties,bbox,id){if(!coordinates)throw new Error("No coordinates passed");return feature({type:"MultiLineString",coordinates:coordinates},properties,bbox,id)}(result.map(function(line){return line.coordinates})):null}function coordId(coord){return coord[0].toString()+","+coord[1].toString()}function object(topology,o){function arc(i,points){points.length&&points.pop();for(var a=arcs[i<0?~i:i],k=0,n=a.length;k<n;++k)points.push(transformPoint(a[k],k));i<0&&reverse(points,n)}function point(p){return transformPoint(p)}function line(arcs){for(var points=[],i=0,n=arcs.length;i<n;++i)arc(arcs[i],points);return points.length<2&&points.push(points[0]),points}function ring(arcs){for(var points=line(arcs);points.length<4;)points.push(points[0]);return points}function polygon(arcs){return arcs.map(ring)}function geometry(o){var coordinates,type=o.type;switch(type){case"GeometryCollection":return{type:type,geometries:o.geometries.map(geometry)};case"Point":coordinates=point(o.coordinates);break;case"MultiPoint":coordinates=o.coordinates.map(point);break;case"LineString":coordinates=line(o.arcs);break;case"MultiLineString":coordinates=o.arcs.map(line);break;case"Polygon":coordinates=polygon(o.arcs);break;case"MultiPolygon":coordinates=o.arcs.map(polygon);break;default:return null}return{type:type,coordinates:coordinates}}var transformPoint=transform(topology.transform),arcs=topology.arcs;return geometry(o)}function mergeArcs(topology,objects){function geometry(o){switch(o.type){case"GeometryCollection":o.geometries.forEach(geometry);break;case"Polygon":extract(o.arcs);break;case"MultiPolygon":o.arcs.forEach(extract)}}function extract(polygon){polygon.forEach(function(ring){ring.forEach(function(arc){(polygonsByArc[arc=arc<0?~arc:arc]||(polygonsByArc[arc]=[])).push(polygon)})}),polygons.push(polygon)}function area(ring){return function(ring){for(var a,i=-1,n=ring.length,b=ring[n-1],area=0;++i<n;)a=b,b=ring[i],area+=a[0]*b[1]-a[1]*b[0];return Math.abs(area)}(object(topology,{type:"Polygon",arcs:[ring]}).coordinates[0])}var polygonsByArc={},polygons=[],groups=[];return objects.forEach(geometry),polygons.forEach(function(polygon){if(!polygon._){var group=[],neighbors=[polygon];for(polygon._=1,groups.push(group);polygon=neighbors.pop();)group.push(polygon),polygon.forEach(function(ring){ring.forEach(function(arc){polygonsByArc[arc<0?~arc:arc].forEach(function(polygon){polygon._||(polygon._=1,neighbors.push(polygon))})})})}}),polygons.forEach(function(polygon){delete polygon._}),{type:"MultiPolygon",arcs:groups.map(function(polygons){var n,arcs=[];if(polygons.forEach(function(polygon){polygon.forEach(function(ring){ring.forEach(function(arc){polygonsByArc[arc<0?~arc:arc].length<2&&arcs.push(arc)})})}),arcs=stitch(topology,arcs),(n=arcs.length)>1)for(var ki,t,i=1,k=area(arcs[0]);i<n;++i)(ki=area(arcs[i]))>k&&(t=arcs[0],arcs[0]=arcs[i],arcs[i]=t,k=ki);return arcs})}}function reverse$1(array,start,end){for(var t,mid=start+(end---start>>1);start<mid;++start,--end)t=array[start],array[start]=array[end],array[end]=t}function geomifyObject(input){return null==input?{type:null}:("FeatureCollection"===input.type?function(input){var output={type:"GeometryCollection",geometries:input.features.map(geomifyFeature)};null!=input.bbox&&(output.bbox=input.bbox);return output}:"Feature"===input.type?geomifyFeature:geomifyGeometry)(input)}function geomifyFeature(input){var key,output=geomifyGeometry(input.geometry);null!=input.id&&(output.id=input.id),null!=input.bbox&&(output.bbox=input.bbox);for(key in input.properties){output.properties=input.properties;break}return output}function geomifyGeometry(input){if(null==input)return{type:null};var output="GeometryCollection"===input.type?{type:"GeometryCollection",geometries:input.geometries.map(geomifyGeometry)}:"Point"===input.type||"MultiPoint"===input.type?{type:input.type,coordinates:input.coordinates}:{type:input.type,arcs:input.coordinates};return null!=input.bbox&&(output.bbox=input.bbox),output}function hashArc(arc){var t,i=arc[0],j=arc[1];return j<i&&(t=i,i=j,j=t),i+31*j}function equalArc(arcA,arcB){var t,ia=arcA[0],ja=arcA[1],ib=arcB[0],jb=arcB[1];return ja<ia&&(t=ia,ia=ja,ja=t),jb<ib&&(t=ib,ib=jb,jb=t),ia===ib&&ja===jb}function polygonDissolve(geojson,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var mutate=options.mutate;if("FeatureCollection"!==getType(geojson))throw new Error("geojson must be a FeatureCollection");if(!geojson.features.length)throw new Error("geojson is empty");!1!==mutate&&void 0!==mutate||(geojson=clone(geojson));var geoms=[];flattenEach(geojson,function(feature$$1){geoms.push(feature$$1.geometry)});var topo=topology({geoms:function(geometries,properties,bbox,id){if(!geometries)throw new Error("geometries is required");if(!Array.isArray(geometries))throw new Error("geometries must be an Array");return feature({type:"GeometryCollection",geometries:geometries},properties,bbox,id)}(geoms).geometry});return merge(topo,topo.objects.geoms.geometries)}function dissolve(geojson,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var mutate=options.mutate;if("FeatureCollection"!==getType(geojson))throw new Error("geojson must be a FeatureCollection");if(!geojson.features.length)throw new Error("geojson is empty");!1!==mutate&&void 0!==mutate||(geojson=clone(geojson));var type=function(geojson){var types={};flattenEach(geojson,function(feature$$1){types[feature$$1.geometry.type]=!0});var keys=Object.keys(types);return 1===keys.length?keys[0]:null}(geojson);if(!type)throw new Error("geojson must be homogenous");switch(type){case"LineString":return lineDissolve(geojson,options);case"Polygon":return polygonDissolve(geojson,options);default:throw new Error(type+" is not supported")}}function distance(from,to,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var units=options.units,coordinates1=getCoord(from),coordinates2=getCoord(to),dLat=degreesToRadians(coordinates2[1]-coordinates1[1]),dLon=degreesToRadians(coordinates2[0]-coordinates1[0]),lat1=degreesToRadians(coordinates1[1]),lat2=degreesToRadians(coordinates2[1]),a=Math.pow(Math.sin(dLat/2),2)+Math.pow(Math.sin(dLon/2),2)*Math.cos(lat1)*Math.cos(lat2);return radiansToLength(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),units)}function concave$1(points,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");if(!points)throw new Error("points is required");var maxEdge=options.maxEdge||1/0;if(!isNumber(maxEdge))throw new Error("maxEdge is invalid");var tinPolys=tin(function(points){var cleaned=[],existing={};return featureEach(points,function(pt){if(pt.geometry){var key=pt.geometry.coordinates.join("-");existing.hasOwnProperty(key)||(cleaned.push(pt),existing[key]=!0)}}),featureCollection(cleaned)}(points));if(tinPolys.features=tinPolys.features.filter(function(triangle){var pt1=triangle.geometry.coordinates[0][0],pt2=triangle.geometry.coordinates[0][1],pt3=triangle.geometry.coordinates[0][2],dist1=distance(pt1,pt2,options),dist2=distance(pt2,pt3,options),dist3=distance(pt1,pt3,options);return dist1<=maxEdge&&dist2<=maxEdge&&dist3<=maxEdge}),tinPolys.features.length<1)return null;var dissolved=dissolve(tinPolys,options);return 1===dissolved.coordinates.length&&(dissolved.coordinates=dissolved.coordinates[0],dissolved.type="Polygon"),feature(dissolved)}function concave(latLngArray,maxEdge,units){return concave$1(arrayToFeaturePoints(latLngArray),{maxEdge:maxEdge,units:units})}function cleanLine(line){var points=getCoords(line);if(2===points.length&&!function(pt1,pt2){return pt1[0]===pt2[0]&&pt1[1]===pt2[1]}(points[0],points[1]))return points;var prevPoint,point$$1,nextPoint,newPoints=[],secondToLast=points.length-1;newPoints.push(points[0]);for(var i=1;i<secondToLast;i++)prevPoint=points[i-1],point$$1=points[i],function(start,end,point$$1){var x=point$$1[0],y=point$$1[1],startX=start[0],startY=start[1],endX=end[0],endY=end[1],dxl=endX-startX,dyl=endY-startY;return(x-startX)*dyl-(y-startY)*dxl==0&&(Math.abs(dxl)>=Math.abs(dyl)?dxl>0?startX<=x&&x<=endX:endX<=x&&x<=startX:dyl>0?startY<=y&&y<=endY:endY<=y&&y<=startY)}(prevPoint,nextPoint=points[i+1],point$$1)||newPoints.push(point$$1);return newPoints.push(nextPoint),newPoints}function simplify(geojson,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var tolerance=options.tolerance,highQuality=options.highQuality,mutate=options.mutate;if(!geojson)throw new Error("geojson is required");if(tolerance&&tolerance<0)throw new Error("invalid tolerance");return!0!==mutate&&(geojson=clone(geojson)),geomEach(geojson,function(geom){!function(geometry$$1,tolerance,highQuality){var type=geometry$$1.type;if("Point"===type||"MultiPoint"===type)return geometry$$1;!function(geojson,options){var mutate="object"===(void 0===options?"undefined":_typeof$$1(options))?options.mutate:options;if(!geojson)throw new Error("geojson is required");var type=getType(geojson),newCoords=[];switch(type){case"LineString":newCoords=cleanLine(geojson);break;case"MultiLineString":case"Polygon":getCoords(geojson).forEach(function(line){newCoords.push(cleanLine(line))});break;case"MultiPolygon":getCoords(geojson).forEach(function(polygons){var polyPoints=[];polygons.forEach(function(ring){polyPoints.push(cleanLine(ring))}),newCoords.push(polyPoints)});break;case"Point":return geojson;case"MultiPoint":var existing={};getCoords(geojson).forEach(function(coord){var key=coord.join("-");existing.hasOwnProperty(key)||(newCoords.push(coord),existing[key]=!0)});break;default:throw new Error(type+" geometry not supported")}geojson.coordinates?!0===mutate&&(geojson.coordinates=newCoords):!0===mutate?geojson.geometry.coordinates=newCoords:feature({type:type,coordinates:newCoords},geojson.properties,geojson.bbox,geojson.id)}(geometry$$1,!0);var coordinates=geometry$$1.coordinates;switch(type){case"LineString":geometry$$1.coordinates=simplifyLine(coordinates,tolerance,highQuality);break;case"MultiLineString":geometry$$1.coordinates=coordinates.map(function(lines){return simplifyLine(lines,tolerance,highQuality)});break;case"Polygon":geometry$$1.coordinates=simplifyPolygon(coordinates,tolerance,highQuality);break;case"MultiPolygon":geometry$$1.coordinates=coordinates.map(function(rings){return simplifyPolygon(rings,tolerance,highQuality)})}}(geom,tolerance,highQuality)}),geojson}function simplifyLine(coordinates,tolerance,highQuality){return simplify$1(coordinates.map(function(coord){return{x:coord[0],y:coord[1],z:coord[2]}}),tolerance,highQuality).map(function(coords){return coords.z?[coords.x,coords.y,coords.z]:[coords.x,coords.y]})}function simplifyPolygon(coordinates,tolerance,highQuality){return coordinates.map(function(ring){var pts=ring.map(function(coord){return{x:coord[0],y:coord[1]}});if(pts.length<4)throw new Error("invalid polygon");for(var simpleRing=simplify$1(pts,tolerance,highQuality).map(function(coords){return[coords.x,coords.y]});!function(ring){return!(ring.length<3||3===ring.length&&ring[2][0]===ring[0][0]&&ring[2][1]===ring[0][1])}(simpleRing);)simpleRing=simplify$1(pts,tolerance-=.01*tolerance,highQuality).map(function(coords){return[coords.x,coords.y]});return simpleRing[simpleRing.length-1][0]===simpleRing[0][0]&&simpleRing[simpleRing.length-1][1]===simpleRing[0][1]||simpleRing.push(simpleRing[0]),simpleRing})}function simplifyPointArray(coordArray,tolerance,highQuality){tolerance=tolerance||1e-5,highQuality=highQuality||!1;return simplify(lineString(toCoords(coordArray)),tolerance).geometry.coordinates}function simplifyFeature(object,output,tolerance,highQuality){output=(output||"feature").toLowerCase();var Feature;if(object instanceof google.maps.Polyline||object instanceof google.maps.Polygon){Feature={type:"Feature",properties:{},geometry:Wicket$1().fromObject(object).toJson()}}else Feature=object.type&&"Feature"===object.type&&object.geometry?object:polygonToFeaturePolygon(object);"MultiPolygon"===Feature.geometry.type&&(Feature.geometry.type="Polygon",Feature.geometry.coordinates=Feature.geometry.coordinates[0]);var simplifiedgeom=simplify(Feature,tolerance);return simplifiedgeom&&simplifiedgeom.geometry?Feature=simplifiedgeom:warn("Cannot simplify  Feature",Feature),"geometry"===output?Feature.geometry:"object"===output?Wicket$1().fromJson(Feature.geometry).toObject():Feature}function bearing(start,end,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");if(!0===options.final)return function(start,end){var bear=bearing(end,start);return bear=(bear+180)%360}(start,end);var coordinates1=getCoord(start),coordinates2=getCoord(end),lon1=degreesToRadians(coordinates1[0]),lon2=degreesToRadians(coordinates2[0]),lat1=degreesToRadians(coordinates1[1]),lat2=degreesToRadians(coordinates2[1]),a=Math.sin(lon2-lon1)*Math.cos(lat2),b=Math.cos(lat1)*Math.sin(lat2)-Math.sin(lat1)*Math.cos(lat2)*Math.cos(lon2-lon1);return radiansToDegrees(Math.atan2(a,b))}function destination(origin,distance,bearing,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var units=options.units,coordinates1=getCoord(origin),longitude1=degreesToRadians(coordinates1[0]),latitude1=degreesToRadians(coordinates1[1]),bearing_rad=degreesToRadians(bearing),radians=lengthToRadians(distance,units),latitude2=Math.asin(Math.sin(latitude1)*Math.cos(radians)+Math.cos(latitude1)*Math.sin(radians)*Math.cos(bearing_rad));return point([radiansToDegrees(longitude1+Math.atan2(Math.sin(bearing_rad)*Math.sin(radians)*Math.cos(latitude1),Math.cos(radians)-Math.sin(latitude1)*Math.sin(latitude2))),radiansToDegrees(latitude2)])}function along$1(line,distance$$1,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var coords;if("Feature"===line.type)coords=line.geometry.coordinates;else{if("LineString"!==line.type)throw new Error("input must be a LineString Feature or Geometry");coords=line.coordinates}if(!isNumber(distance$$1))throw new Error("distance must be a number");for(var travelled=0,i=0;i<coords.length&&!(distance$$1>=travelled&&i===coords.length-1);i++){if(travelled>=distance$$1){var overshot=distance$$1-travelled;if(overshot){var direction=bearing(coords[i],coords[i-1])-180;return destination(coords[i],overshot,direction,options)}return point(coords[i])}travelled+=distance(coords[i],coords[i+1],options)}return point(coords[coords.length-1])}function along(object,distance,units){var Feature;if(object instanceof google.maps.Polyline){Feature={type:"Feature",properties:{},geometry:Wicket$1().fromObject(object).toJson()}}else if(object.type&&"Feature"===object.type&&object.geometry)Feature=object;else{Feature=lineString(toCoords(object))}return along$1(Feature,distance,units)}function NumberUtil(){}function IllegalArgumentException(){}function Double(){}function Comparable(){}function Clonable(){}function Comparator(){}function Serializable(){}function RuntimeException(message){this.name="RuntimeException",this.message=message,this.stack=(new Error).stack,Error.call(this,message)}function AssertionFailedException(){if(0===arguments.length)RuntimeException.call(this);else if(1===arguments.length){var message=arguments[0];RuntimeException.call(this,message)}}function Assert(){}function Coordinate(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)Coordinate.call(this,0,0);else if(1===arguments.length){var c=arguments[0];Coordinate.call(this,c.x,c.y,c.z)}else if(2===arguments.length){var x=arguments[0],y=arguments[1];Coordinate.call(this,x,y,Coordinate.NULL_ORDINATE)}else if(3===arguments.length){var x=arguments[0],y=arguments[1],z=arguments[2];this.x=x,this.y=y,this.z=z}}function DimensionalComparator(){if(this._dimensionsToTest=2,0===arguments.length)DimensionalComparator.call(this,2);else if(1===arguments.length){var dimensionsToTest=arguments[0];if(2!==dimensionsToTest&&3!==dimensionsToTest)throw new IllegalArgumentException("only 2 or 3 dimensions may be specified");this._dimensionsToTest=dimensionsToTest}}function Iterator(){}function Collection(){}function IndexOutOfBoundsException$1(message){this.message=message||""}function List(){}function NoSuchElementException(message){this.message=message||""}function OperationNotSupported(message){this.message=message||""}function ArrayList(){this.array_=[],arguments[0]instanceof Collection&&this.addAll(arguments[0])}function CoordinateList(){if(ArrayList.apply(this),0===arguments.length);else if(1===arguments.length){coord=arguments[0];this.ensureCapacity(coord.length),this.add(coord,!0)}else if(2===arguments.length){var coord=arguments[0],allowRepeated=arguments[1];this.ensureCapacity(coord.length),this.add(coord,allowRepeated)}}function Envelope(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof Coordinate){var p=arguments[0];this.init(p.x,p.x,p.y,p.y)}else if(arguments[0]instanceof Envelope){var env=arguments[0];this.init(env)}}else if(2===arguments.length){var p1=arguments[0],p2=arguments[1];this.init(p1.x,p2.x,p1.y,p2.y)}else if(4===arguments.length){var x1=arguments[0],x2=arguments[1],y1=arguments[2],y2=arguments[3];this.init(x1,x2,y1,y2)}}function Exception(){}function NotRepresentableException(){Exception.call(this,"Projective point not representable on the Cartesian plane.")}function Location(){}function MathUtil(){}function StringBuffer(str){this.str=str}function Integer(value){this.value=value}function Character(){}function DD(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){var x=arguments[0];this.init(x)}else if(arguments[0]instanceof DD){var dd=arguments[0];this.init(dd)}else if("string"==typeof arguments[0]){var str=arguments[0];DD.call(this,DD.parse(str))}}else if(2===arguments.length){var hi=arguments[0],lo=arguments[1];this.init(hi,lo)}}function CGAlgorithmsDD(){}function CoordinateSequence(){}function System(){}function HCoordinate(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var p=arguments[0];this.x=p.x,this.y=p.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var _x=arguments[0],_y=arguments[1];this.x=_x,this.y=_y,this.w=1}else if(arguments[0]instanceof HCoordinate&&arguments[1]instanceof HCoordinate){var p1=arguments[0],p2=arguments[1];this.x=p1.y*p2.w-p2.y*p1.w,this.y=p2.x*p1.w-p1.x*p2.w,this.w=p1.x*p2.y-p2.x*p1.y}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var p1=arguments[0],p2=arguments[1];this.x=p1.y-p2.y,this.y=p2.x-p1.x,this.w=p1.x*p2.y-p2.x*p1.y}}else if(3===arguments.length){var _x=arguments[0],_y=arguments[1],_w=arguments[2];this.x=_x,this.y=_y,this.w=_w}else if(4===arguments.length){var p1=arguments[0],p2=arguments[1],q1=arguments[2],q2=arguments[3],px=p1.y-p2.y,py=p2.x-p1.x,pw=p1.x*p2.y-p2.x*p1.y,qx=q1.y-q2.y,qy=q2.x-q1.x,qw=q1.x*q2.y-q2.x*q1.y;this.x=py*qw-qy*pw,this.y=qx*pw-px*qw,this.w=px*qy-qx*py}}function CoordinateSequenceFactory(){}function GeometryComponentFilter(){}function Geometry(){this._envelope=null,this._factory=null,this._SRID=null,this._userData=null;var factory=arguments[0];this._factory=factory,this._SRID=factory.getSRID()}function CoordinateFilter(){}function BoundaryNodeRule(){}function Mod2BoundaryNodeRule(){}function EndPointBoundaryNodeRule(){}function MultiValentEndPointBoundaryNodeRule(){}function MonoValentEndPointBoundaryNodeRule(){}function CoordinateArrays(){}function ForwardComparator(){}function BidirectionalComparator(){}function Map$3(){}function SortedMap(){}function Set$2(){}function HashSet(){this.array_=[],arguments[0]instanceof Collection&&this.addAll(arguments[0])}function colorOf(p){return null==p?BLACK:p.color}function parentOf(p){return null==p?null:p.parent}function setColor(p,c){null!==p&&(p.color=c)}function leftOf(p){return null==p?null:p.left}function rightOf(p){return null==p?null:p.right}function TreeMap(){this.root_=null,this.size_=0}function Lineal(){}function SortedSet(){}function TreeSet(){this.array_=[],arguments[0]instanceof Collection&&this.addAll(arguments[0])}function Arrays(){}function Dimension(){}function GeometryFilter(){}function CoordinateSequenceFilter(){}function GeometryCollection(){this._geometries=null;var geometries=arguments[0],factory=arguments[1];if(Geometry.call(this,factory),null===geometries&&(geometries=[]),Geometry.hasNullElements(geometries))throw new IllegalArgumentException("geometries must not contain null elements");this._geometries=geometries}function MultiLineString(){var lineStrings=arguments[0],factory=arguments[1];GeometryCollection.call(this,lineStrings,factory)}function BoundaryOp(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){geom=arguments[0];BoundaryOp.call(this,geom,BoundaryNodeRule.MOD2_BOUNDARY_RULE)}else if(2===arguments.length){var geom=arguments[0],bnRule=arguments[1];this._geom=geom,this._geomFact=geom.getFactory(),this._bnRule=bnRule}}function Counter(){this.count=null}function IOException(){}function StringUtil(){}function CoordinateSequences(){}function LineString(){this._points=null;var points=arguments[0],factory=arguments[1];Geometry.call(this,factory),this.init(points)}function Puntal(){}function Point(){this._coordinates=null;var coordinates=arguments[0],factory=arguments[1];Geometry.call(this,factory),this.init(coordinates)}function Polygonal(){}function Polygon(){this._shell=null,this._holes=null;var shell=arguments[0],holes=arguments[1],factory=arguments[2];if(Geometry.call(this,factory),null===shell&&(shell=this.getFactory().createLinearRing()),null===holes&&(holes=[]),Geometry.hasNullElements(holes))throw new IllegalArgumentException("holes must not contain null elements");if(shell.isEmpty()&&Geometry.hasNonEmptyElements(holes))throw new IllegalArgumentException("shell is empty but holes are not");this._shell=shell,this._holes=holes}function MultiPoint(){var points=arguments[0],factory=arguments[1];GeometryCollection.call(this,points,factory)}function LinearRing(){if(arguments[0]instanceof Coordinate&&arguments[1]instanceof GeometryFactory){var points=arguments[0],factory=arguments[1];LinearRing.call(this,factory.getCoordinateSequenceFactory().create(points),factory)}else if(hasInterface(arguments[0],CoordinateSequence)&&arguments[1]instanceof GeometryFactory){var points=arguments[0],factory=arguments[1];LineString.call(this,points,factory),this.validateConstruction()}}function MultiPolygon(){var polygons=arguments[0],factory=arguments[1];GeometryCollection.call(this,polygons,factory)}function GeometryEditor(){if(this._factory=null,this._isUserDataCopied=!1,0===arguments.length);else if(1===arguments.length){var factory=arguments[0];this._factory=factory}}function GeometryEditorOperation(){}function NoOpGeometryOperation(){}function CoordinateOperation(){}function CoordinateSequenceOperation(){}function CoordinateArraySequence(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){coordinates=arguments[0];CoordinateArraySequence.call(this,coordinates,3)}else if(Number.isInteger(arguments[0])){size=arguments[0];this._coordinates=new Array(size).fill(null);for(i=0;i<size;i++)this._coordinates[i]=new Coordinate}else if(hasInterface(arguments[0],CoordinateSequence)){var coordSeq=arguments[0];if(null===coordSeq)return this._coordinates=new Array(0).fill(null),null;this._dimension=coordSeq.getDimension(),this._coordinates=new Array(coordSeq.size()).fill(null);for(i=0;i<this._coordinates.length;i++)this._coordinates[i]=coordSeq.getCoordinateCopy(i)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var coordinates=arguments[0],dimension=arguments[1];this._coordinates=coordinates,this._dimension=dimension,null===coordinates&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var size=arguments[0],dimension=arguments[1];this._coordinates=new Array(size).fill(null),this._dimension=dimension;for(var i=0;i<size;i++)this._coordinates[i]=new Coordinate}}function CoordinateArraySequenceFactory(){}function is(a,b){return a===b||a!=a&&b!=b}function sharedIterator(itp,array,array2){var p=[0],done=!1;return itp.push(p),{next:function(){var v,k=p[0];return!done&&k<array.length?(v=array2?[array[k],array2[k]]:array[k],p[0]++):(done=!0,itp.splice(itp.indexOf(p),1)),{done:done,value:v}}}}function sharedSize(){return this._values.length}function HashMap(){this.map_=new MapImpl}function PrecisionModel(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=PrecisionModel.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof Type){var modelType=arguments[0];this._modelType=modelType,modelType===PrecisionModel.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){var scale=arguments[0];this._modelType=PrecisionModel.FIXED,this.setScale(scale)}else if(arguments[0]instanceof PrecisionModel){var pm=arguments[0];this._modelType=pm._modelType,this._scale=pm._scale}}function Type(){this._name=null;var name=arguments[0];this._name=name,Type.nameToTypeMap.put(name,this)}function GeometryFactory(){if(this._precisionModel=null,this._coordinateSequenceFactory=null,this._SRID=null,0===arguments.length)GeometryFactory.call(this,new PrecisionModel,0);else if(1===arguments.length){if(hasInterface(arguments[0],CoordinateSequenceFactory)){coordinateSequenceFactory=arguments[0];GeometryFactory.call(this,new PrecisionModel,0,coordinateSequenceFactory)}else if(arguments[0]instanceof PrecisionModel){precisionModel=arguments[0];GeometryFactory.call(this,precisionModel,0,GeometryFactory.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){var precisionModel=arguments[0],SRID=arguments[1];GeometryFactory.call(this,precisionModel,SRID,GeometryFactory.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){var precisionModel=arguments[0],SRID=arguments[1],coordinateSequenceFactory=arguments[2];this._precisionModel=precisionModel,this._coordinateSequenceFactory=coordinateSequenceFactory,this._SRID=SRID}}function WKTParser(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory}function WKTWriter(geometryFactory){this.parser=new WKTParser(geometryFactory)}function LineIntersector(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new Coordinate,this._intPt[1]=new Coordinate,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}function RobustLineIntersector(){LineIntersector.apply(this)}function RobustDeterminant(){}function RayCrossingCounter(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var p=arguments[0];this._p=p}function CGAlgorithms(){}function LineSegment(){if(this.p0=null,this.p1=null,0===arguments.length)LineSegment.call(this,new Coordinate,new Coordinate);else if(1===arguments.length){var ls=arguments[0];LineSegment.call(this,ls.p0,ls.p1)}else if(2===arguments.length){var p0=arguments[0],p1=arguments[1];this.p0=p0,this.p1=p1}else if(4===arguments.length){var x0=arguments[0],y0=arguments[1],x1=arguments[2],y1=arguments[3];LineSegment.call(this,new Coordinate(x0,y0),new Coordinate(x1,y1))}}function IntersectionMatrix(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map(function(){return Array(3)}),this.setAll(Dimension.FALSE);else if(1===arguments.length)if("string"==typeof arguments[0]){var elements=arguments[0];IntersectionMatrix.call(this),this.set(elements)}else if(arguments[0]instanceof IntersectionMatrix){var other=arguments[0];IntersectionMatrix.call(this),this._matrix[Location.INTERIOR][Location.INTERIOR]=other._matrix[Location.INTERIOR][Location.INTERIOR],this._matrix[Location.INTERIOR][Location.BOUNDARY]=other._matrix[Location.INTERIOR][Location.BOUNDARY],this._matrix[Location.INTERIOR][Location.EXTERIOR]=other._matrix[Location.INTERIOR][Location.EXTERIOR],this._matrix[Location.BOUNDARY][Location.INTERIOR]=other._matrix[Location.BOUNDARY][Location.INTERIOR],this._matrix[Location.BOUNDARY][Location.BOUNDARY]=other._matrix[Location.BOUNDARY][Location.BOUNDARY],this._matrix[Location.BOUNDARY][Location.EXTERIOR]=other._matrix[Location.BOUNDARY][Location.EXTERIOR],this._matrix[Location.EXTERIOR][Location.INTERIOR]=other._matrix[Location.EXTERIOR][Location.INTERIOR],this._matrix[Location.EXTERIOR][Location.BOUNDARY]=other._matrix[Location.EXTERIOR][Location.BOUNDARY],this._matrix[Location.EXTERIOR][Location.EXTERIOR]=other._matrix[Location.EXTERIOR][Location.EXTERIOR]}}function Centroid(){this._areaBasePt=null,this._triangleCent3=new Coordinate,this._areasum2=0,this._cg3=new Coordinate,this._lineCentSum=new Coordinate,this._totalLength=0,this._ptCount=0,this._ptCentSum=new Coordinate;var geom=arguments[0];this._areaBasePt=null,this.add(geom)}function EmptyStackException(message){this.message=message||""}function Stack$2(){this.array_=[]}function UniqueCoordinateArrayFilter(){this.treeSet=new TreeSet,this.list=new ArrayList}function ConvexHull(){if(this._geomFactory=null,this._inputPts=null,1===arguments.length){var geometry=arguments[0];ConvexHull.call(this,ConvexHull.extractCoordinates(geometry),geometry.getFactory())}else if(2===arguments.length){var pts=arguments[0],geomFactory=arguments[1];this._inputPts=UniqueCoordinateArrayFilter.filterCoordinates(pts),this._geomFactory=geomFactory}}function RadialComparator(){this._origin=null;var origin=arguments[0];this._origin=origin}function GeometryTransformer(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1}function LineStringSnapper(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new LineSegment,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof LineString&&"number"==typeof arguments[1]){var srcLine=arguments[0],snapTolerance=arguments[1];LineStringSnapper.call(this,srcLine.getCoordinates(),snapTolerance)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){var srcPts=arguments[0],snapTolerance=arguments[1];this._srcPts=srcPts,this._isClosed=LineStringSnapper.isClosed(srcPts),this._snapTolerance=snapTolerance}}function GeometrySnapper(){this._srcGeom=null;var srcGeom=arguments[0];this._srcGeom=srcGeom}function SnapTransformer(){if(GeometryTransformer.apply(this),this._snapTolerance=null,this._snapPts=null,this._isSelfSnap=!1,2===arguments.length){var snapTolerance=arguments[0],snapPts=arguments[1];this._snapTolerance=snapTolerance,this._snapPts=snapPts}else if(3===arguments.length){var snapTolerance=arguments[0],snapPts=arguments[1],isSelfSnap=arguments[2];this._snapTolerance=snapTolerance,this._snapPts=snapPts,this._isSelfSnap=isSelfSnap}}function CommonBits(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null}function CommonBitsRemover(){this._commonCoord=null,this._ccFilter=new CommonCoordinateFilter}function CommonCoordinateFilter(){this._commonBitsX=new CommonBits,this._commonBitsY=new CommonBits}function Translater(){this.trans=null;var trans=arguments[0];this.trans=trans}function GeometryCollectionIterator(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var parent=arguments[0];this._parent=parent,this._atStart=!0,this._index=0,this._max=parent.getNumGeometries()}function PointLocator(){if(this._boundaryRule=BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var boundaryRule=arguments[0];if(null===boundaryRule)throw new IllegalArgumentException("Rule must be non-null");this._boundaryRule=boundaryRule}}function Octant(){}function SegmentString(){}function BasicSegmentString(){this._pts=null,this._data=null;var pts=arguments[0],data=arguments[1];this._pts=pts,this._data=data}function Boundable(){}function ItemBoundable(){this._bounds=null,this._item=null;var bounds=arguments[0],item=arguments[1];this._bounds=bounds,this._item=item}function PriorityQueue(){this._size=null,this._items=null,this._size=0,this._items=new ArrayList,this._items.add(null)}function ItemVisitor(){}function SpatialIndex(){}function AbstractNode(){if(this._childBoundables=new ArrayList,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var level=arguments[0];this._level=level}}function BoundablePair(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var boundable1=arguments[0],boundable2=arguments[1],itemDistance=arguments[2];this._boundable1=boundable1,this._boundable2=boundable2,this._itemDistance=itemDistance,this._distance=this.distance()}function AbstractSTRtree(){if(this._root=null,this._built=!1,this._itemBoundables=new ArrayList,this._nodeCapacity=null,0===arguments.length)AbstractSTRtree.call(this,AbstractSTRtree.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var nodeCapacity=arguments[0];Assert.isTrue(nodeCapacity>1,"Node capacity must be greater than 1"),this._nodeCapacity=nodeCapacity}}function ItemDistance(){}function STRtree(){if(0===arguments.length)STRtree.call(this,STRtree.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var nodeCapacity=arguments[0];AbstractSTRtree.call(this,nodeCapacity)}}function STRtreeNode(){var level=arguments[0];AbstractNode.call(this,level)}function SegmentPointComparator(){}function SegmentNode(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var segString=arguments[0],coord=arguments[1],segmentIndex=arguments[2],segmentOctant=arguments[3];this._segString=segString,this.coord=new Coordinate(coord),this.segmentIndex=segmentIndex,this._segmentOctant=segmentOctant,this._isInterior=!coord.equals2D(segString.getCoordinate(segmentIndex))}function SegmentNodeList(){this._nodeMap=new TreeMap,this._edge=null;var edge=arguments[0];this._edge=edge}function NodeVertexIterator(){this._nodeList=null,this._edge=null,this._nodeIt=null,this._currNode=null,this._nextNode=null,this._currSegIndex=0;var nodeList=arguments[0];this._nodeList=nodeList,this._edge=nodeList.getEdge(),this._nodeIt=nodeList.iterator(),this.readNextNode()}function NodableSegmentString(){}function NodedSegmentString(){this._nodeList=new SegmentNodeList(this),this._pts=null,this._data=null;var pts=arguments[0],data=arguments[1];this._pts=pts,this._data=data}function MonotoneChainOverlapAction(){this.tempEnv1=new Envelope,this.tempEnv2=new Envelope,this._overlapSeg1=new LineSegment,this._overlapSeg2=new LineSegment}function MonotoneChain(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var pts=arguments[0],start=arguments[1],end=arguments[2],context=arguments[3];this._pts=pts,this._start=start,this._end=end,this._context=context}function Quadrant(){}function MonotoneChainBuilder(){}function Noder(){}function SinglePassNoder(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var segInt=arguments[0];this.setSegmentIntersector(segInt)}}function MCIndexNoder(){if(this._monoChains=new ArrayList,this._index=new STRtree,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){var si=arguments[0];SinglePassNoder.call(this,si)}}function SegmentOverlapAction(){MonotoneChainOverlapAction.apply(this),this._si=null;var si=arguments[0];this._si=si}function TopologyException(){if(this.pt=null,1===arguments.length){msg=arguments[0];RuntimeException.call(this,msg)}else if(2===arguments.length){var msg=arguments[0],pt=arguments[1];RuntimeException.call(this,TopologyException.msgWithCoord(msg,pt)),this.name="TopologyException",this.pt=new Coordinate(pt)}}function SegmentIntersector(){}function InteriorIntersectionFinder(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new ArrayList,this._intersectionCount=0,this._keepIntersections=!0;var li=arguments[0];this._li=li,this._interiorIntersection=null}function FastNodingValidator(){this._li=new RobustLineIntersector,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var segStrings=arguments[0];this._segStrings=segStrings}function EdgeNodingValidator(){this._nv=null;var edges=arguments[0];this._nv=new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges))}function GeometryCollectionMapper(){this._mapOp=null;var mapOp=arguments[0];this._mapOp=mapOp}function Position(){}function TopologyLocation(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var location=arguments[0];this.init(location.length)}else if(Number.isInteger(arguments[0])){on=arguments[0];this.init(1),this.location[Position.ON]=on}else if(arguments[0]instanceof TopologyLocation){var gl=arguments[0];if(this.init(gl.location.length),null!==gl)for(var i=0;i<this.location.length;i++)this.location[i]=gl.location[i]}}else if(3===arguments.length){var on=arguments[0],left=arguments[1],right=arguments[2];this.init(3),this.location[Position.ON]=on,this.location[Position.LEFT]=left,this.location[Position.RIGHT]=right}}function Label(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){onLoc=arguments[0];this.elt[0]=new TopologyLocation(onLoc),this.elt[1]=new TopologyLocation(onLoc)}else if(arguments[0]instanceof Label){var lbl=arguments[0];this.elt[0]=new TopologyLocation(lbl.elt[0]),this.elt[1]=new TopologyLocation(lbl.elt[1])}}else if(2===arguments.length){var geomIndex=arguments[0],onLoc=arguments[1];this.elt[0]=new TopologyLocation(Location.NONE),this.elt[1]=new TopologyLocation(Location.NONE),this.elt[geomIndex].setLocation(onLoc)}else if(3===arguments.length){var onLoc=arguments[0],leftLoc=arguments[1],rightLoc=arguments[2];this.elt[0]=new TopologyLocation(onLoc,leftLoc,rightLoc),this.elt[1]=new TopologyLocation(onLoc,leftLoc,rightLoc)}else if(4===arguments.length){var geomIndex=arguments[0],onLoc=arguments[1],leftLoc=arguments[2],rightLoc=arguments[3];this.elt[0]=new TopologyLocation(Location.NONE,Location.NONE,Location.NONE),this.elt[1]=new TopologyLocation(Location.NONE,Location.NONE,Location.NONE),this.elt[geomIndex].setLocations(onLoc,leftLoc,rightLoc)}}function EdgeRing(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new ArrayList,this._pts=new ArrayList,this._label=new Label(Location.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new ArrayList,this._geometryFactory=null;var start=arguments[0],geometryFactory=arguments[1];this._geometryFactory=geometryFactory,this.computePoints(start),this.computeRing()}function MinimalEdgeRing(){var start=arguments[0],geometryFactory=arguments[1];EdgeRing.call(this,start,geometryFactory)}function MaximalEdgeRing(){var start=arguments[0],geometryFactory=arguments[1];EdgeRing.call(this,start,geometryFactory)}function GraphComponent(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var label=arguments[0];this._label=label}}function Node(){GraphComponent.apply(this),this._coord=null,this._edges=null;var coord=arguments[0],edges=arguments[1];this._coord=coord,this._edges=edges,this._label=new Label(0,Location.NONE)}function NodeMap(){this.nodeMap=new TreeMap,this.nodeFact=null;var nodeFact=arguments[0];this.nodeFact=nodeFact}function EdgeEnd(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){edge=arguments[0];this._edge=edge}else if(3===arguments.length){var edge=arguments[0],p0=arguments[1],p1=arguments[2];EdgeEnd.call(this,edge,p0,p1,null)}else if(4===arguments.length){var edge=arguments[0],p0=arguments[1],p1=arguments[2],label=arguments[3];EdgeEnd.call(this,edge),this.init(p0,p1),this._label=label}}function DirectedEdge(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];var edge=arguments[0],isForward=arguments[1];if(EdgeEnd.call(this,edge),this._isForward=isForward,isForward)this.init(edge.getCoordinate(0),edge.getCoordinate(1));else{var n=edge.getNumPoints()-1;this.init(edge.getCoordinate(n),edge.getCoordinate(n-1))}this.computeDirectedLabel()}function NodeFactory(){}function PlanarGraph(){if(this._edges=new ArrayList,this._nodes=null,this._edgeEndList=new ArrayList,0===arguments.length)this._nodes=new NodeMap(new NodeFactory);else if(1===arguments.length){var nodeFact=arguments[0];this._nodes=new NodeMap(nodeFact)}}function PolygonBuilder(){this._geometryFactory=null,this._shellList=new ArrayList;var geometryFactory=arguments[0];this._geometryFactory=geometryFactory}function LineBuilder(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new ArrayList,this._resultLineList=new ArrayList;var op=arguments[0],geometryFactory=arguments[1],ptLocator=arguments[2];this._op=op,this._geometryFactory=geometryFactory,this._ptLocator=ptLocator}function PointBuilder(){this._op=null,this._geometryFactory=null,this._resultPointList=new ArrayList;var op=arguments[0],geometryFactory=arguments[1];this._op=op,this._geometryFactory=geometryFactory}function PointOnGeometryLocator(){}function SimplePointInAreaLocator(){this._geom=null;var geom=arguments[0];this._geom=geom}function EdgeEndStar(){this._edgeMap=new TreeMap,this._edgeList=null,this._ptInAreaLocation=[Location.NONE,Location.NONE]}function DirectedEdgeStar(){EdgeEndStar.apply(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}function OverlayNodeFactory(){NodeFactory.apply(this)}function MonotoneChain$1(){this.mce=null,this.chainIndex=null;var mce=arguments[0],chainIndex=arguments[1];this.mce=mce,this.chainIndex=chainIndex}function SweepLineEvent(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var x=arguments[0],insertEvent=arguments[1];this._eventType=SweepLineEvent.DELETE,this._xValue=x,this._insertEvent=insertEvent}else if(3===arguments.length){var label=arguments[0],x=arguments[1],obj=arguments[2];this._eventType=SweepLineEvent.INSERT,this._label=label,this._xValue=x,this._obj=obj}}function EdgeSetIntersector(){}function SegmentIntersector$1(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var li=arguments[0],includeProper=arguments[1],recordIsolated=arguments[2];this._li=li,this._includeProper=includeProper,this._recordIsolated=recordIsolated}function SimpleMCSweepLineIntersector(){EdgeSetIntersector.apply(this),this.events=new ArrayList,this.nOverlaps=null}function IntervalRTreeNode$1(){this._min=Double.POSITIVE_INFINITY,this._max=Double.NEGATIVE_INFINITY}function NodeComparator(){}function IntervalRTreeLeafNode(){IntervalRTreeNode$1.apply(this),this._item=null;var min=arguments[0],max=arguments[1],item=arguments[2];this._min=min,this._max=max,this._item=item}function IntervalRTreeBranchNode(){IntervalRTreeNode$1.apply(this),this._node1=null,this._node2=null;var n1=arguments[0],n2=arguments[1];this._node1=n1,this._node2=n2,this.buildExtent(this._node1,this._node2)}function SortedPackedIntervalRTree(){this._leaves=new ArrayList,this._root=null,this._level=0}function LinearComponentExtracter(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){lines=arguments[0];this._lines=lines}else if(2===arguments.length){var lines=arguments[0],isForcedToLineString=arguments[1];this._lines=lines,this._isForcedToLineString=isForcedToLineString}}function ArrayListVisitor(){this._items=new ArrayList}function IndexedPointInAreaLocator(){this._index=null;var g=arguments[0];if(!hasInterface(g,Polygonal))throw new IllegalArgumentException("Argument must be Polygonal");this._index=new IntervalIndexedGeometry(g)}function SegmentVisitor(){this._counter=null;var counter=arguments[0];this._counter=counter}function IntervalIndexedGeometry(){this._index=new SortedPackedIntervalRTree;var geom=arguments[0];this.init(geom)}function EdgeIntersection(){this.coord=null,this.segmentIndex=null,this.dist=null;var coord=arguments[0],segmentIndex=arguments[1],dist=arguments[2];this.coord=new Coordinate(coord),this.segmentIndex=segmentIndex,this.dist=dist}function EdgeIntersectionList(){this._nodeMap=new TreeMap,this.edge=null;var edge=arguments[0];this.edge=edge}function MonotoneChainIndexer(){}function MonotoneChainEdge(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Envelope,this.env2=new Envelope;var e=arguments[0];this.e=e,this.pts=e.getCoordinates();var mcb=new MonotoneChainIndexer;this.startIndex=mcb.getChainStartIndices(this.pts)}function Depth(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var i=0;i<2;i++)for(var j=0;j<3;j++)this._depth[i][j]=Depth.NULL_VALUE}function Edge(){if(GraphComponent.apply(this),this.pts=null,this._env=null,this.eiList=new EdgeIntersectionList(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new Depth,this._depthDelta=0,1===arguments.length){pts=arguments[0];Edge.call(this,pts,null)}else if(2===arguments.length){var pts=arguments[0],label=arguments[1];this.pts=pts,this._label=label}}function GeometryGraph(){if(PlanarGraph.apply(this),this._parentGeom=null,this._lineEdgeMap=new HashMap,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new PointLocator,2===arguments.length){var argIndex=arguments[0],parentGeom=arguments[1];GeometryGraph.call(this,argIndex,parentGeom,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var argIndex=arguments[0],parentGeom=arguments[1],boundaryNodeRule=arguments[2];this._argIndex=argIndex,this._parentGeom=parentGeom,this._boundaryNodeRule=boundaryNodeRule,null!==parentGeom&&this.add(parentGeom)}}function GeometryGraphOperation(){if(this._li=new RobustLineIntersector,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){g0=arguments[0];this.setComputationPrecision(g0.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new GeometryGraph(0,g0)}else if(2===arguments.length){var g0=arguments[0],g1=arguments[1];GeometryGraphOperation.call(this,g0,g1,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var g0=arguments[0],g1=arguments[1],boundaryNodeRule=arguments[2];g0.getPrecisionModel().compareTo(g1.getPrecisionModel())>=0?this.setComputationPrecision(g0.getPrecisionModel()):this.setComputationPrecision(g1.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new GeometryGraph(0,g0,boundaryNodeRule),this._arg[1]=new GeometryGraph(1,g1,boundaryNodeRule)}}function OrientedCoordinateArray(){this._pts=null,this._orientation=null;var pts=arguments[0];this._pts=pts,this._orientation=OrientedCoordinateArray.orientation(pts)}function EdgeList(){this._edges=new ArrayList,this._ocaMap=new TreeMap}function OverlayOp(){this._ptLocator=new PointLocator,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new EdgeList,this._resultPolyList=new ArrayList,this._resultLineList=new ArrayList,this._resultPointList=new ArrayList;var g0=arguments[0],g1=arguments[1];GeometryGraphOperation.call(this,g0,g1),this._graph=new PlanarGraph(new OverlayNodeFactory),this._geomFact=g0.getFactory()}function SnapOverlayOp(){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null;var g1=arguments[0],g2=arguments[1];this._geom[0]=g1,this._geom[1]=g2,this.computeSnapTolerance()}function SnapIfNeededOverlayOp(){this._geom=new Array(2).fill(null);var g1=arguments[0],g2=arguments[1];this._geom[0]=g1,this._geom[1]=g2}function InteriorPointArea(){this._factory=null,this._interiorPoint=null,this._maxWidth=0;var g=arguments[0];this._factory=g.getFactory(),this.add(g)}function SafeBisectorFinder(){this._poly=null,this._centreY=null,this._hiY=Double.MAX_VALUE,this._loY=-Double.MAX_VALUE;var poly=arguments[0];this._poly=poly,this._hiY=poly.getEnvelopeInternal().getMaxY(),this._loY=poly.getEnvelopeInternal().getMinY(),this._centreY=InteriorPointArea.avg(this._loY,this._hiY)}function InteriorPointLine(){this._centroid=null,this._minDistance=Double.MAX_VALUE,this._interiorPoint=null;var g=arguments[0];this._centroid=g.getCentroid().getCoordinate(),this.addInterior(g),null===this._interiorPoint&&this.addEndpoints(g)}function InteriorPointPoint(){this._centroid=null,this._minDistance=Double.MAX_VALUE,this._interiorPoint=null;var g=arguments[0];this._centroid=g.getCentroid().getCoordinate(),this.add(g)}function MonotoneChainSelectAction(){this.tempEnv1=new Envelope,this.selectedSegment=new LineSegment}function NodeBase(){this._items=new ArrayList,this._subnode=[null,null]}function Interval(){if(this.min=null,this.max=null,0===arguments.length)this.min=0,this.max=0;else if(1===arguments.length){var interval=arguments[0];this.init(interval.min,interval.max)}else if(2===arguments.length){var min=arguments[0],max=arguments[1];this.init(min,max)}}function DoubleBits(){}function Key(){this._pt=0,this._level=0,this._interval=null;var interval=arguments[0];this.computeKey(interval)}function Node$1(){NodeBase.apply(this),this._interval=null,this._centre=null,this._level=null;var interval=arguments[0],level=arguments[1];this._interval=interval,this._level=level,this._centre=(interval.getMin()+interval.getMax())/2}function IntervalSize(){}function Root(){NodeBase.apply(this)}function Bintree(){this._root=null,this._minExtent=1,this._root=new Root}function PointInRing(){}function MCPointInRing(){this._ring=null,this._tree=null,this._crossings=0,this._interval=new Interval;var ring=arguments[0];this._ring=ring,this.buildIndex()}function MCSelecter(){MonotoneChainSelectAction.apply(this),this.mcp=null,this.p=null;var mcp=arguments[0],p=arguments[1];this.mcp=mcp,this.p=p}function Angle(){}function Triangle$1(){this.p0=null,this.p1=null,this.p2=null;var p0=arguments[0],p1=arguments[1],p2=arguments[2];this.p0=p0,this.p1=p1,this.p2=p2}function MinimumBoundingCircle(){this._input=null,this._extremalPts=null,this._centre=null,this._radius=0;var geom=arguments[0];this._input=geom}function MinimumDiameter(){if(this._inputGeom=null,this._isConvex=null,this._convexHullPts=null,this._minBaseSeg=new LineSegment,this._minWidthPt=null,this._minPtIndex=null,this._minWidth=0,1===arguments.length){inputGeom=arguments[0];MinimumDiameter.call(this,inputGeom,!1)}else if(2===arguments.length){var inputGeom=arguments[0],isConvex=arguments[1];this._inputGeom=inputGeom,this._isConvex=isConvex}}function Densifier(){this._inputGeom=null,this._distanceTolerance=null;var inputGeom=arguments[0];this._inputGeom=inputGeom}function DensifyTransformer(){GeometryTransformer.apply(this),this.distanceTolerance=null;var distanceTolerance=arguments[0];this.distanceTolerance=distanceTolerance}function HalfEdge(){this._orig=null,this._sym=null,this._next=null;var orig=arguments[0];this._orig=orig}function MarkHalfEdge(){this._isMarked=!1;var orig=arguments[0];HalfEdge.call(this,orig)}function EdgeGraph(){this._vertexMap=new HashMap}function DissolveHalfEdge(){this._isStart=!1;var orig=arguments[0];MarkHalfEdge.call(this,orig)}function DissolveEdgeGraph(){EdgeGraph.apply(this)}function LineDissolver(){this._result=null,this._factory=null,this._graph=null,this._lines=new ArrayList,this._nodeEdgeStack=new Stack$2,this._ringStartEdge=null,this._graph=new DissolveEdgeGraph}function NodeBase$1(){this._items=new ArrayList,this._subnode=new Array(4).fill(null)}function Key$1(){this._pt=new Coordinate,this._level=0,this._env=null;var itemEnv=arguments[0];this.computeKey(itemEnv)}function Node$2(){NodeBase$1.apply(this),this._env=null,this._centrex=null,this._centrey=null,this._level=null;var env=arguments[0],level=arguments[1];this._env=env,this._level=level,this._centrex=(env.getMinX()+env.getMaxX())/2,this._centrey=(env.getMinY()+env.getMaxY())/2}function Root$1(){NodeBase$1.apply(this)}function Quadtree(){this._root=null,this._minExtent=1,this._root=new Root$1}function GeoJSONParser(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory}function GeoJSONReader(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new GeoJSONParser(this.geometryFactory)}function GeoJSONWriter(){this.parser=new GeoJSONParser(this.geometryFactory)}function p2c(p){return[p.x,p.y]}function ScaledNoder(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var noder=arguments[0],scaleFactor=arguments[1];ScaledNoder.call(this,noder,scaleFactor,0,0)}else if(4===arguments.length){var noder=arguments[0],scaleFactor=arguments[1];this._noder=noder,this._scaleFactor=scaleFactor,this._isScaled=!this.isIntegerPrecision()}}function IsSimpleOp(){if(this._inputGeom=null,this._isClosedEndpointsInInterior=!0,this._nonSimpleLocation=null,1===arguments.length){geom=arguments[0];this._inputGeom=geom}else if(2===arguments.length){var geom=arguments[0],boundaryNodeRule=arguments[1];this._inputGeom=geom,this._isClosedEndpointsInInterior=!boundaryNodeRule.isInBoundary(2)}}function EndpointInfo(){this.pt=null,this.isClosed=null,this.degree=null;var pt=arguments[0];this.pt=pt,this.isClosed=!1,this.degree=0}function BufferParameters(){if(this._quadrantSegments=BufferParameters.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=BufferParameters.CAP_ROUND,this._joinStyle=BufferParameters.JOIN_ROUND,this._mitreLimit=BufferParameters.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=BufferParameters.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){quadrantSegments=arguments[0];this.setQuadrantSegments(quadrantSegments)}else if(2===arguments.length){var quadrantSegments=arguments[0],endCapStyle=arguments[1];this.setQuadrantSegments(quadrantSegments),this.setEndCapStyle(endCapStyle)}else if(4===arguments.length){var quadrantSegments=arguments[0],endCapStyle=arguments[1],joinStyle=arguments[2],mitreLimit=arguments[3];this.setQuadrantSegments(quadrantSegments),this.setEndCapStyle(endCapStyle),this.setJoinStyle(joinStyle),this.setMitreLimit(mitreLimit)}}function RightmostEdgeFinder(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}function LinkedList(){this.array_=[]}function BufferSubgraph(){this._finder=null,this._dirEdgeList=new ArrayList,this._nodes=new ArrayList,this._rightMostCoord=null,this._env=null,this._finder=new RightmostEdgeFinder}function BufferInputLineSimplifier(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=CGAlgorithms.COUNTERCLOCKWISE;var inputLine=arguments[0];this._inputLine=inputLine}function OffsetSegmentString(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new ArrayList}function OffsetSegmentGenerator(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new LineSegment,this._seg1=new LineSegment,this._offset0=new LineSegment,this._offset1=new LineSegment,this._side=0,this._hasNarrowConcaveAngle=!1;var precisionModel=arguments[0],bufParams=arguments[1],distance=arguments[2];this._precisionModel=precisionModel,this._bufParams=bufParams,this._li=new RobustLineIntersector,this._filletAngleQuantum=Math.PI/2/bufParams.getQuadrantSegments(),bufParams.getQuadrantSegments()>=8&&bufParams.getJoinStyle()===BufferParameters.JOIN_ROUND&&(this._closingSegLengthFactor=OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR),this.init(distance)}function OffsetCurveBuilder(){this._distance=0,this._precisionModel=null,this._bufParams=null;var precisionModel=arguments[0],bufParams=arguments[1];this._precisionModel=precisionModel,this._bufParams=bufParams}function SubgraphDepthLocater(){this._subgraphs=null,this._seg=new LineSegment,this._cga=new CGAlgorithms;var subgraphs=arguments[0];this._subgraphs=subgraphs}function DepthSegment(){this._upwardSeg=null,this._leftDepth=null;var seg=arguments[0],depth=arguments[1];this._upwardSeg=new LineSegment(seg),this._leftDepth=depth}function OffsetCurveSetBuilder(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new ArrayList;var inputGeom=arguments[0],distance=arguments[1],curveBuilder=arguments[2];this._inputGeom=inputGeom,this._distance=distance,this._curveBuilder=curveBuilder}function IntersectionAdder(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var li=arguments[0];this._li=li}function BufferBuilder(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new EdgeList;var bufParams=arguments[0];this._bufParams=bufParams}function NodingValidator(){this._li=new RobustLineIntersector,this._segStrings=null;var segStrings=arguments[0];this._segStrings=segStrings}function HotPixel(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var pt=arguments[0],scaleFactor=arguments[1],li=arguments[2];if(this._originalPt=pt,this._pt=pt,this._scaleFactor=scaleFactor,this._li=li,scaleFactor<=0)throw new IllegalArgumentException("Scale factor must be non-zero");1!==scaleFactor&&(this._pt=new Coordinate(this.scale(pt.x),this.scale(pt.y)),this._p0Scaled=new Coordinate,this._p1Scaled=new Coordinate),this.initCorners(this._pt)}function MCIndexPointSnapper(){this._index=null;var index=arguments[0];this._index=index}function HotPixelSnapAction(){MonotoneChainSelectAction.apply(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var hotPixel=arguments[0],parentEdge=arguments[1],hotPixelVertexIndex=arguments[2];this._hotPixel=hotPixel,this._parentEdge=parentEdge,this._hotPixelVertexIndex=hotPixelVertexIndex}function InteriorIntersectionFinderAdder(){this._li=null,this._interiorIntersections=null;var li=arguments[0];this._li=li,this._interiorIntersections=new ArrayList}function MCIndexSnapRounder(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var pm=arguments[0];this._pm=pm,this._li=new RobustLineIntersector,this._li.setPrecisionModel(pm),this._scaleFactor=pm.getScale()}function BufferOp(){if(this._argGeom=null,this._distance=null,this._bufParams=new BufferParameters,this._resultGeometry=null,this._saveException=null,1===arguments.length){g=arguments[0];this._argGeom=g}else if(2===arguments.length){var g=arguments[0],bufParams=arguments[1];this._argGeom=g,this._bufParams=bufParams}}function PolygonExtracter(){this._comps=null;var comps=arguments[0];this._comps=comps}function GeometryLocation(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var component=arguments[0],pt=arguments[1];GeometryLocation.call(this,component,GeometryLocation.INSIDE_AREA,pt)}else if(3===arguments.length){var component=arguments[0],segIndex=arguments[1],pt=arguments[2];this._component=component,this._segIndex=segIndex,this._pt=pt}}function PointExtracter(){this._pts=null;var pts=arguments[0];this._pts=pts}function ConnectedElementLocationFilter(){this._locations=null;var locations=arguments[0];this._locations=locations}function DistanceOp(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new PointLocator,this._minDistanceLocation=null,this._minDistance=Double.MAX_VALUE,2===arguments.length){var g0=arguments[0],g1=arguments[1];DistanceOp.call(this,g0,g1,0)}else if(3===arguments.length){var g0=arguments[0],g1=arguments[1],terminateDistance=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=g0,this._geom[1]=g1,this._terminateDistance=terminateDistance}}function EdgeString(){this._factory=null,this._directedEdges=new ArrayList,this._coordinates=null;var factory=arguments[0];this._factory=factory}function GraphComponent$1(){this._isMarked=!1,this._isVisited=!1,this._data=null}function DirectedEdge$1(){GraphComponent$1.apply(this),this._parentEdge=null,this._from=null,this._to=null,this._p0=null,this._p1=null,this._sym=null,this._edgeDirection=null,this._quadrant=null,this._angle=null;var from=arguments[0],to=arguments[1],directionPt=arguments[2],edgeDirection=arguments[3];this._from=from,this._to=to,this._edgeDirection=edgeDirection,this._p0=from.getCoordinate(),this._p1=directionPt;var dx=this._p1.x-this._p0.x,dy=this._p1.y-this._p0.y;this._quadrant=Quadrant.quadrant(dx,dy),this._angle=Math.atan2(dy,dx)}function LineMergeDirectedEdge(){var from=arguments[0],to=arguments[1],directionPt=arguments[2],edgeDirection=arguments[3];DirectedEdge$1.call(this,from,to,directionPt,edgeDirection)}function Edge$1(){if(GraphComponent$1.apply(this),this._dirEdge=null,0===arguments.length);else if(2===arguments.length){var de0=arguments[0],de1=arguments[1];this.setDirectedEdges(de0,de1)}}function DirectedEdgeStar$1(){this._outEdges=new ArrayList,this._sorted=!1}function Node$3(){if(GraphComponent$1.apply(this),this._pt=null,this._deStar=null,1===arguments.length){pt=arguments[0];Node$3.call(this,pt,new DirectedEdgeStar$1)}else if(2===arguments.length){var pt=arguments[0],deStar=arguments[1];this._pt=pt,this._deStar=deStar}}function LineMergeEdge(){Edge$1.apply(this),this._line=null;var line=arguments[0];this._line=line}function NodeMap$1(){this._nodeMap=new TreeMap}function PlanarGraph$1(){this._edges=new HashSet,this._dirEdges=new HashSet,this._nodeMap=new NodeMap$1}function LineMergeGraph(){PlanarGraph$1.apply(this)}function LineMerger(){this._graph=new LineMergeGraph,this._mergedLineStrings=null,this._factory=null,this._edgeStrings=null}function PolygonizeDirectedEdge(){this._edgeRing=null,this._next=null,this._label=-1;var from=arguments[0],to=arguments[1],directionPt=arguments[2],edgeDirection=arguments[3];DirectedEdge$1.call(this,from,to,directionPt,edgeDirection)}function PolygonizeEdge(){Edge$1.apply(this),this._line=null;var line=arguments[0];this._line=line}function ConnectedInteriorTester(){this._geometryFactory=new GeometryFactory,this._geomGraph=null,this._disconnectedRingcoord=null;var geomGraph=arguments[0];this._geomGraph=geomGraph}function EdgeEndBuilder(){}function EdgeEndBundle(){if(this._edgeEnds=new ArrayList,1===arguments.length){e=arguments[0];EdgeEndBundle.call(this,null,e)}else if(2===arguments.length){arguments[0];var e=arguments[1];EdgeEnd.call(this,e.getEdge(),e.getCoordinate(),e.getDirectedCoordinate(),new Label(e.getLabel())),this.insert(e)}}function EdgeEndBundleStar(){EdgeEndStar.apply(this)}function RelateNode(){var coord=arguments[0],edges=arguments[1];Node.call(this,coord,edges)}function RelateNodeFactory(){NodeFactory.apply(this)}function RelateNodeGraph(){this._nodes=new NodeMap(new RelateNodeFactory)}function ConsistentAreaTester(){this._li=new RobustLineIntersector,this._geomGraph=null,this._nodeGraph=new RelateNodeGraph,this._invalidPoint=null;var geomGraph=arguments[0];this._geomGraph=geomGraph}function IndexedNestedRingTester(){this._graph=null,this._rings=new ArrayList,this._totalEnv=new Envelope,this._index=null,this._nestedPt=null;var graph=arguments[0];this._graph=graph}function TopologyValidationError(){if(this._errorType=null,this._pt=null,1===arguments.length){errorType=arguments[0];TopologyValidationError.call(this,errorType,null)}else if(2===arguments.length){var errorType=arguments[0],pt=arguments[1];this._errorType=errorType,null!==pt&&(this._pt=pt.copy())}}function IsValidOp(){this._parentGeometry=null,this._isSelfTouchingRingFormingHoleValid=!1,this._validErr=null;var parentGeometry=arguments[0];this._parentGeometry=parentGeometry}function EdgeRing$1(){this._factory=null,this._deList=new ArrayList,this._lowestEdge=null,this._ring=null,this._ringPts=null,this._holes=null,this._shell=null,this._isHole=null,this._isProcessed=!1,this._isIncludedSet=!1,this._isIncluded=!1;var factory=arguments[0];this._factory=factory}function EnvelopeComparator(){}function PolygonizeGraph(){PlanarGraph$1.apply(this),this._factory=null;var factory=arguments[0];this._factory=factory}function Polygonizer(){if(this._lineStringAdder=new LineStringAdder(this),this._graph=null,this._dangles=new ArrayList,this._cutEdges=new ArrayList,this._invalidRingLines=new ArrayList,this._holeList=null,this._shellList=null,this._polyList=null,this._isCheckingRingsValid=!0,this._extractOnlyPolygonal=null,this._geomFactory=null,0===arguments.length)Polygonizer.call(this,!1);else if(1===arguments.length){var extractOnlyPolygonal=arguments[0];this._extractOnlyPolygonal=extractOnlyPolygonal}}function LineStringAdder(){this.p=null;var p=arguments[0];this.p=p}function RelateComputer(){this._li=new RobustLineIntersector,this._ptLocator=new PointLocator,this._arg=null,this._nodes=new NodeMap(new RelateNodeFactory),this._im=null,this._isolatedEdges=new ArrayList,this._invalidPoint=null;var arg=arguments[0];this._arg=arg}function RectangleContains(){this._rectEnv=null;var rectangle=arguments[0];this._rectEnv=rectangle.getEnvelopeInternal()}function RectangleLineIntersector(){this._li=new RobustLineIntersector,this._rectEnv=null,this._diagUp0=null,this._diagUp1=null,this._diagDown0=null,this._diagDown1=null;var rectEnv=arguments[0];this._rectEnv=rectEnv,this._diagUp0=new Coordinate(rectEnv.getMinX(),rectEnv.getMinY()),this._diagUp1=new Coordinate(rectEnv.getMaxX(),rectEnv.getMaxY()),this._diagDown0=new Coordinate(rectEnv.getMinX(),rectEnv.getMaxY()),this._diagDown1=new Coordinate(rectEnv.getMaxX(),rectEnv.getMinY())}function ShortCircuitedGeometryVisitor(){this._isDone=!1}function RectangleIntersects(){this._rectangle=null,this._rectEnv=null;var rectangle=arguments[0];this._rectangle=rectangle,this._rectEnv=rectangle.getEnvelopeInternal()}function EnvelopeIntersectsVisitor(){ShortCircuitedGeometryVisitor.apply(this),this._rectEnv=null,this._intersects=!1;var rectEnv=arguments[0];this._rectEnv=rectEnv}function GeometryContainsPointVisitor(){ShortCircuitedGeometryVisitor.apply(this),this._rectSeq=null,this._rectEnv=null,this._containsPoint=!1;var rectangle=arguments[0];this._rectSeq=rectangle.getExteriorRing().getCoordinateSequence(),this._rectEnv=rectangle.getEnvelopeInternal()}function RectangleIntersectsSegmentVisitor(){ShortCircuitedGeometryVisitor.apply(this),this._rectEnv=null,this._rectIntersector=null,this._hasIntersection=!1,this._p0=new Coordinate,this._p1=new Coordinate;var rectangle=arguments[0];this._rectEnv=rectangle.getEnvelopeInternal(),this._rectIntersector=new RectangleLineIntersector(this._rectEnv)}function RelateOp(){if(this._relate=null,2===arguments.length){var g0=arguments[0],g1=arguments[1];GeometryGraphOperation.call(this,g0,g1),this._relate=new RelateComputer(this._arg)}else if(3===arguments.length){var g0=arguments[0],g1=arguments[1],boundaryNodeRule=arguments[2];GeometryGraphOperation.call(this,g0,g1,boundaryNodeRule),this._relate=new RelateComputer(this._arg)}}function GeometryCombiner(){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null;var geoms=arguments[0];this._geomFactory=GeometryCombiner.extractFactory(geoms),this._inputGeoms=geoms}function CascadedPolygonUnion(){this._inputPolys=null,this._geomFactory=null;var polys=arguments[0];this._inputPolys=polys,null===this._inputPolys&&(this._inputPolys=new ArrayList)}function PointGeometryUnion(){this._pointGeom=null,this._otherGeom=null,this._geomFact=null;var pointGeom=arguments[0],otherGeom=arguments[1];this._pointGeom=pointGeom,this._otherGeom=otherGeom,this._geomFact=otherGeom.getFactory()}function GeometryExtracter(){this._sortIndex=-1,this._comps=null;var sortIndex=arguments[0],comps=arguments[1];this._sortIndex=sortIndex,this._comps=comps}function UnaryUnionOp(){if(this._polygons=new ArrayList,this._lines=new ArrayList,this._points=new ArrayList,this._geomFact=null,1===arguments.length){if(hasInterface(arguments[0],Collection)){geoms=arguments[0];this.extract(geoms)}else if(arguments[0]instanceof Geometry){var geom=arguments[0];this.extract(geom)}}else if(2===arguments.length){var geoms=arguments[0],geomFact=arguments[1];this._geomFact=geomFact,this.extract(geoms)}}function UnionInteracting(){this._geomFactory=null,this._g0=null,this._g1=null,this._interacts0=null,this._interacts1=null;var g0=arguments[0],g1=arguments[1];this._g0=g0,this._g1=g1,this._geomFactory=g0.getFactory(),this._interacts0=new Array(g0.getNumGeometries()).fill(null),this._interacts1=new Array(g1.getNumGeometries()).fill(null)}function UnionOp(){}function PrecisionReducerCoordinateOperation(){GeometryEditor.CoordinateOperation.apply(this),this._targetPM=null,this._removeCollapsed=!0;var targetPM=arguments[0],removeCollapsed=arguments[1];this._targetPM=targetPM,this._removeCollapsed=removeCollapsed}function GeometryPrecisionReducer(){this._targetPM=null,this._removeCollapsed=!0,this._changePrecisionModel=!1,this._isPointwise=!1;var pm=arguments[0];this._targetPM=pm}function DouglasPeuckerLineSimplifier(){this._pts=null,this._usePt=null,this._distanceTolerance=null,this._seg=new LineSegment;var pts=arguments[0];this._pts=pts}function DouglasPeuckerSimplifier(){this._inputGeom=null,this._distanceTolerance=null,this._isEnsureValidTopology=!0;var inputGeom=arguments[0];this._inputGeom=inputGeom}function DPTransformer(){GeometryTransformer.apply(this),this._isEnsureValidTopology=!0,this._distanceTolerance=null;var isEnsureValidTopology=arguments[0],distanceTolerance=arguments[1];this._isEnsureValidTopology=isEnsureValidTopology,this._distanceTolerance=distanceTolerance}function TaggedLineSegment(){if(this._parent=null,this._index=null,2===arguments.length){var p0=arguments[0],p1=arguments[1];TaggedLineSegment.call(this,p0,p1,null,-1)}else if(4===arguments.length){var p0=arguments[0],p1=arguments[1],parent=arguments[2],index=arguments[3];LineSegment.call(this,p0,p1),this._parent=parent,this._index=index}}function TaggedLineString(){if(this._parentLine=null,this._segs=null,this._resultSegs=new ArrayList,this._minimumSize=null,1===arguments.length){parentLine=arguments[0];TaggedLineString.call(this,parentLine,2)}else if(2===arguments.length){var parentLine=arguments[0],minimumSize=arguments[1];this._parentLine=parentLine,this._minimumSize=minimumSize,this.init()}}function LineSegmentIndex(){this._index=new Quadtree}function LineSegmentVisitor(){this._querySeg=null,this._items=new ArrayList;var querySeg=arguments[0];this._querySeg=querySeg}function TaggedLineStringSimplifier(){this._li=new RobustLineIntersector,this._inputIndex=new LineSegmentIndex,this._outputIndex=new LineSegmentIndex,this._line=null,this._linePts=null,this._distanceTolerance=0;var inputIndex=arguments[0],outputIndex=arguments[1];this._inputIndex=inputIndex,this._outputIndex=outputIndex}function TaggedLinesSimplifier(){this._inputIndex=new LineSegmentIndex,this._outputIndex=new LineSegmentIndex,this._distanceTolerance=0}function TopologyPreservingSimplifier(){this._inputGeom=null,this._lineSimplifier=new TaggedLinesSimplifier,this._linestringMap=null;var inputGeom=arguments[0];this._inputGeom=inputGeom}function LineStringTransformer(){GeometryTransformer.apply(this),this._linestringMap=null;var linestringMap=arguments[0];this._linestringMap=linestringMap}function LineStringMapBuilderFilter(){this.tps=null;var tps=arguments[0];this.tps=tps}function SplitSegment(){this._seg=null,this._segLen=null,this._splitPt=null,this._minimumLen=0;var seg=arguments[0];this._seg=seg,this._segLen=seg.getLength()}function ConstraintSplitPointFinder(){}function NonEncroachingSplitPointFinder(){}function TrianglePredicate(){}function Vertex(){if(this._p=null,1===arguments.length){var _p=arguments[0];this._p=new Coordinate(_p)}else if(2===arguments.length){var _x=arguments[0],_y=arguments[1];this._p=new Coordinate(_x,_y)}else if(3===arguments.length){var _x=arguments[0],_y=arguments[1],_z=arguments[2];this._p=new Coordinate(_x,_y,_z)}}function ConstraintVertex(){this._isOnConstraint=null,this._constraint=null;var p=arguments[0];Vertex.call(this,p)}function QuadEdge(){this._rot=null,this._vertex=null,this._next=null,this._data=null}function IncrementalDelaunayTriangulator(){this._subdiv=null,this._isUsingTolerance=!1;var subdiv=arguments[0];this._subdiv=subdiv,this._isUsingTolerance=subdiv.getTolerance()>0}function QuadEdgeLocator(){}function LastFoundQuadEdgeLocator(){this._subdiv=null,this._lastEdge=null;var subdiv=arguments[0];this._subdiv=subdiv,this.init()}function LocateFailureException(){if(this._seg=null,1===arguments.length){if("string"==typeof arguments[0]){msg=arguments[0];RuntimeException.call(this,msg)}else if(arguments[0]instanceof LineSegment){seg=arguments[0];RuntimeException.call(this,"Locate failed to converge (at edge: "+seg+").  Possible causes include invalid Subdivision topology or very close sites"),this._seg=new LineSegment(seg)}}else if(2===arguments.length){var msg=arguments[0],seg=arguments[1];RuntimeException.call(this,LocateFailureException.msgWithSpatial(msg,seg)),this._seg=new LineSegment(seg)}}function TriangleVisitor(){}function QuadEdgeSubdivision(){this._visitedKey=0,this._quadEdges=new ArrayList,this._startingEdge=null,this._tolerance=null,this._edgeCoincidenceTolerance=null,this._frameVertex=new Array(3).fill(null),this._frameEnv=null,this._locator=null,this._seg=new LineSegment,this._triEdges=new Array(3).fill(null);var env=arguments[0],tolerance=arguments[1];this._tolerance=tolerance,this._edgeCoincidenceTolerance=tolerance/QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR,this.createFrame(env),this._startingEdge=this.initSubdiv(),this._locator=new LastFoundQuadEdgeLocator(this)}function TriangleCircumcentreVisitor(){}function TriangleEdgesListVisitor(){this._triList=new ArrayList}function TriangleVertexListVisitor(){this._triList=new ArrayList}function TriangleCoordinatesVisitor(){this._coordList=new CoordinateList,this._triCoords=new ArrayList}function Segment(){if(this._ls=null,this._data=null,2===arguments.length){var p0=arguments[0],p1=arguments[1];this._ls=new LineSegment(p0,p1)}else if(3===arguments.length){var p0=arguments[0],p1=arguments[1],data=arguments[2];this._ls=new LineSegment(p0,p1),this._data=data}else if(6===arguments.length){var x1=arguments[0],y1=arguments[1],z1=arguments[2],x2=arguments[3],y2=arguments[4],z2=arguments[5];Segment.call(this,new Coordinate(x1,y1,z1),new Coordinate(x2,y2,z2))}else if(7===arguments.length){var x1=arguments[0],y1=arguments[1],z1=arguments[2],x2=arguments[3],y2=arguments[4],z2=arguments[5],data=arguments[6];Segment.call(this,new Coordinate(x1,y1,z1),new Coordinate(x2,y2,z2),data)}}function KdNodeVisitor(){}function KdNode(){if(this._p=null,this._data=null,this._left=null,this._right=null,this._count=null,2===arguments.length){var p=arguments[0],data=arguments[1];this._p=new Coordinate(p),this._left=null,this._right=null,this._count=1,this._data=data}else if(3===arguments.length){var _x=arguments[0],_y=arguments[1],data=arguments[2];this._p=new Coordinate(_x,_y),this._left=null,this._right=null,this._count=1,this._data=data}}function KdTree(){if(this._root=null,this._numberOfNodes=null,this._tolerance=null,0===arguments.length)KdTree.call(this,0);else if(1===arguments.length){var tolerance=arguments[0];this._tolerance=tolerance}}function BestMatchVisitor(){this._tolerance=null,this._matchNode=null,this._matchDist=0,this._p=null;var p=arguments[0],tolerance=arguments[1];this._p=p,this._tolerance=tolerance}function ConformingDelaunayTriangulator(){this._initialVertices=null,this._segVertices=null,this._segments=new ArrayList,this._subdiv=null,this._incDel=null,this._convexHull=null,this._splitFinder=new NonEncroachingSplitPointFinder,this._kdt=null,this._vertexFactory=null,this._computeAreaEnv=null,this._splitPt=null,this._tolerance=null;var initialVertices=arguments[0],tolerance=arguments[1];this._initialVertices=new ArrayList(initialVertices),this._tolerance=tolerance,this._kdt=new KdTree(tolerance)}function DelaunayTriangulationBuilder(){this._siteCoords=null,this._tolerance=0,this._subdiv=null}function ConformingDelaunayTriangulationBuilder(){this._siteCoords=null,this._constraintLines=null,this._tolerance=0,this._subdiv=null,this._constraintVertexMap=new TreeMap}function VoronoiDiagramBuilder(){this._siteCoords=null,this._tolerance=0,this._subdiv=null,this._clipEnv=null,this._diagramEnv=null}function LinearLocation(){if(this._componentIndex=0,this._segmentIndex=0,this._segmentFraction=0,0===arguments.length);else if(1===arguments.length){var loc=arguments[0];this._componentIndex=loc._componentIndex,this._segmentIndex=loc._segmentIndex,this._segmentFraction=loc._segmentFraction}else if(2===arguments.length){var segmentIndex=arguments[0],segmentFraction=arguments[1];LinearLocation.call(this,0,segmentIndex,segmentFraction)}else if(3===arguments.length){var componentIndex=arguments[0],segmentIndex=arguments[1],segmentFraction=arguments[2];this._componentIndex=componentIndex,this._segmentIndex=segmentIndex,this._segmentFraction=segmentFraction,this.normalize()}else if(4===arguments.length){var componentIndex=arguments[0],segmentIndex=arguments[1],segmentFraction=arguments[2],doNormalize=arguments[3];this._componentIndex=componentIndex,this._segmentIndex=segmentIndex,this._segmentFraction=segmentFraction,doNormalize&&this.normalize()}}function LinearIterator(){if(this._linearGeom=null,this._numLines=null,this._currentLine=null,this._componentIndex=0,this._vertexIndex=0,1===arguments.length){linear=arguments[0];LinearIterator.call(this,linear,0,0)}else if(2===arguments.length){var linear=arguments[0],start=arguments[1];LinearIterator.call(this,linear,start.getComponentIndex(),LinearIterator.segmentEndVertexIndex(start))}else if(3===arguments.length){var linearGeom=arguments[0],componentIndex=arguments[1],vertexIndex=arguments[2];if(!hasInterface(linearGeom,Lineal))throw new IllegalArgumentException("Lineal geometry is required");this._linearGeom=linearGeom,this._numLines=linearGeom.getNumGeometries(),this._componentIndex=componentIndex,this._vertexIndex=vertexIndex,this.loadCurrentLine()}}function LocationIndexOfPoint(){this._linearGeom=null;var linearGeom=arguments[0];this._linearGeom=linearGeom}function LocationIndexOfLine(){this._linearGeom=null;var linearGeom=arguments[0];this._linearGeom=linearGeom}function LinearGeometryBuilder(){this._geomFact=null,this._lines=new ArrayList,this._coordList=null,this._ignoreInvalidLines=!1,this._fixInvalidLines=!1,this._lastPt=null;var geomFact=arguments[0];this._geomFact=geomFact}function ExtractLineByLocation(){this._line=null;var line=arguments[0];this._line=line}function LocationIndexedLine(){this._linearGeom=null;var linearGeom=arguments[0];this._linearGeom=linearGeom,this.checkGeometryType()}function LengthIndexOfPoint(){this._linearGeom=null;var linearGeom=arguments[0];this._linearGeom=linearGeom}function LengthLocationMap(){this._linearGeom=null;var linearGeom=arguments[0];this._linearGeom=linearGeom}function LengthIndexedLine(){this._linearGeom=null;var linearGeom=arguments[0];this._linearGeom=linearGeom}function union(poly1,poly2){return function(){for(var reader=new GeoJSONReader,result=reader.read(JSON.stringify(arguments[0].geometry)),i=1;i<arguments.length;i++)result=UnionOp.union(result,reader.read(JSON.stringify(arguments[i].geometry)));return result=(new GeoJSONWriter).write(result),{type:"Feature",geometry:result,properties:arguments[0].properties}}(polygonToFeaturePolygon(poly1),polygonToFeaturePolygon(poly2))}function bbox$1(geojson){var BBox=[1/0,1/0,-1/0,-1/0];return coordEach(geojson,function(coord){BBox[0]>coord[0]&&(BBox[0]=coord[0]),BBox[1]>coord[1]&&(BBox[1]=coord[1]),BBox[2]<coord[0]&&(BBox[2]=coord[0]),BBox[3]<coord[1]&&(BBox[3]=coord[1])}),BBox}function convert(geojson,projection,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var mutate=options.mutate;if(!geojson)throw new Error("geojson is required");return Array.isArray(geojson)&&isNumber(geojson[0])?geojson="mercator"===projection?convertToMercator(geojson):convertToWgs84(geojson):(!0!==mutate&&(geojson=clone(geojson)),coordEach(geojson,function(coord){var newCoord="mercator"===projection?convertToMercator(coord):convertToWgs84(coord);coord[0]=newCoord[0],coord[1]=newCoord[1]})),geojson}function convertToMercator(lonLat){var D2R=Math.PI/180,A=6378137,MAXEXTENT=20037508.342789244,xy=[A*(Math.abs(lonLat[0])<=180?lonLat[0]:lonLat[0]-360*function(x){return x<0?-1:x>0?1:0}(lonLat[0]))*D2R,A*Math.log(Math.tan(.25*Math.PI+.5*lonLat[1]*D2R))];return xy[0]>MAXEXTENT&&(xy[0]=MAXEXTENT),xy[0]<-MAXEXTENT&&(xy[0]=-MAXEXTENT),xy[1]>MAXEXTENT&&(xy[1]=MAXEXTENT),xy[1]<-MAXEXTENT&&(xy[1]=-MAXEXTENT),xy}function convertToWgs84(xy){var R2D=180/Math.PI,A=6378137;return[xy[0]*R2D/A,(.5*Math.PI-2*Math.atan(Math.exp(-xy[1]/A)))*R2D]}function Adder(){this.reset()}function _add(adder,a,b){var x=adder.s=a+b,bv=x-a,av=x-bv;adder.t=a-av+(b-bv)}function asin(x){return x>1?halfPi:x<-1?-halfPi:Math.asin(x)}function noop(){}function streamGeometry(geometry,stream){geometry&&streamGeometryType.hasOwnProperty(geometry.type)&&streamGeometryType[geometry.type](geometry,stream)}function streamLine(coordinates,stream,closed){var coordinate,i=-1,n=coordinates.length-closed;for(stream.lineStart();++i<n;)coordinate=coordinates[i],stream.point(coordinate[0],coordinate[1],coordinate[2]);stream.lineEnd()}function streamPolygon(coordinates,stream){var i=-1,n=coordinates.length;for(stream.polygonStart();++i<n;)streamLine(coordinates[i],stream,1);stream.polygonEnd()}function spherical(cartesian){return[atan2(cartesian[1],cartesian[0]),asin(cartesian[2])]}function cartesian(spherical){var lambda=spherical[0],phi=spherical[1],cosPhi=cos(phi);return[cosPhi*cos(lambda),cosPhi*sin(lambda),sin(phi)]}function cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]}function cartesianAddInPlace(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2]}function cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*k]}function cartesianNormalizeInPlace(d){var l=sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l,d[1]/=l,d[2]/=l}function rotationIdentity(lambda,phi){return[lambda>pi?lambda-tau:lambda<-pi?lambda+tau:lambda,phi]}function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=tau)?deltaPhi||deltaGamma?compose(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,deltaGamma):rotationIdentity}function forwardRotationLambda(deltaLambda){return function(lambda,phi){return lambda+=deltaLambda,[lambda>pi?lambda-tau:lambda<-pi?lambda+tau:lambda,phi]}}function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);return rotation.invert=forwardRotationLambda(-deltaLambda),rotation}function rotationPhiGamma(deltaPhi,deltaGamma){function rotation(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaPhi+x*sinDeltaPhi;return[atan2(y*cosDeltaGamma-k*sinDeltaGamma,x*cosDeltaPhi-z*sinDeltaPhi),asin(k*cosDeltaGamma+y*sinDeltaGamma)]}var cosDeltaPhi=cos(deltaPhi),sinDeltaPhi=sin(deltaPhi),cosDeltaGamma=cos(deltaGamma),sinDeltaGamma=sin(deltaGamma);return rotation.invert=function(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaGamma-y*sinDeltaGamma;return[atan2(y*cosDeltaGamma+z*sinDeltaGamma,x*cosDeltaPhi+k*sinDeltaPhi),asin(k*cosDeltaPhi-x*sinDeltaPhi)]},rotation}function circleRadius(cosRadius,point){(point=cartesian(point))[0]-=cosRadius,cartesianNormalizeInPlace(point);var radius=function(x){return x>1?0:x<-1?pi:Math.acos(x)}(-point[1]);return((-point[2]<0?-radius:radius)+tau-epsilon)%tau}function Intersection(point,points,other,entry){this.x=point,this.z=points,this.o=other,this.e=entry,this.v=!1,this.n=this.p=null}function link(array){if(n=array.length){for(var n,b,i=0,a=array[0];++i<n;)a.n=b=array[i],b.p=a,a=b;a.n=b=array[0],b.p=a}}function clipExtent(x0,y0,x1,y1){function visible(x,y){return x0<=x&&x<=x1&&y0<=y&&y<=y1}function interpolate(from,to,direction,stream){var a=0,a1=0;if(null==from||(a=corner(from,direction))!==(a1=corner(to,direction))||comparePoint(from,to)<0^direction>0)do{stream.point(0===a||3===a?x0:x1,a>1?y1:y0)}while((a=(a+direction+4)%4)!==a1);else stream.point(to[0],to[1])}function corner(p,direction){return abs(p[0]-x0)<epsilon?direction>0?0:3:abs(p[0]-x1)<epsilon?direction>0?2:1:abs(p[1]-y0)<epsilon?direction>0?1:0:direction>0?3:2}function compareIntersection(a,b){return comparePoint(a.x,b.x)}function comparePoint(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:0===ca?b[1]-a[1]:1===ca?a[0]-b[0]:2===ca?a[1]-b[1]:b[0]-a[0]}return function(stream){function point(x,y){visible(x,y)&&activeStream.point(x,y)}function linePoint(x,y){var v=visible(x,y);if(polygon&&ring.push([x,y]),first)x__=x,y__=y,v__=v,first=!1,v&&(activeStream.lineStart(),activeStream.point(x,y));else if(v&&v_)activeStream.point(x,y);else{var a=[x_=Math.max(clipMin,Math.min(clipMax,x_)),y_=Math.max(clipMin,Math.min(clipMax,y_))],b=[x=Math.max(clipMin,Math.min(clipMax,x)),y=Math.max(clipMin,Math.min(clipMax,y))];clipLine(a,b,x0,y0,x1,y1)?(v_||(activeStream.lineStart(),activeStream.point(a[0],a[1])),activeStream.point(b[0],b[1]),v||activeStream.lineEnd(),clean=!1):v&&(activeStream.lineStart(),activeStream.point(x,y),clean=!1)}x_=x,y_=y,v_=v}var segments,polygon,ring,x__,y__,v__,x_,y_,v_,first,clean,activeStream=stream,bufferStream=clipBuffer(),clipStream={point:point,lineStart:function(){clipStream.point=linePoint,polygon&&polygon.push(ring=[]),first=!0,v_=!1,x_=y_=NaN},lineEnd:function(){segments&&(linePoint(x__,y__),v__&&v_&&bufferStream.rejoin(),segments.push(bufferStream.result())),clipStream.point=point,v_&&activeStream.lineEnd()},polygonStart:function(){activeStream=bufferStream,segments=[],polygon=[],clean=!0},polygonEnd:function(){var startInside=function(){for(var winding=0,i=0,n=polygon.length;i<n;++i)for(var a0,a1,ring=polygon[i],j=1,m=ring.length,point=ring[0],b0=point[0],b1=point[1];j<m;++j)a0=b0,a1=b1,b0=(point=ring[j])[0],b1=point[1],a1<=y1?b1>y1&&(b0-a0)*(y1-a1)>(b1-a1)*(x0-a0)&&++winding:b1<=y1&&(b0-a0)*(y1-a1)<(b1-a1)*(x0-a0)&&--winding;return winding}(),cleanInside=clean&&startInside,visible=(segments=merge$1(segments)).length;(cleanInside||visible)&&(stream.polygonStart(),cleanInside&&(stream.lineStart(),interpolate(null,null,1,stream),stream.lineEnd()),visible&&clipPolygon(segments,compareIntersection,startInside,interpolate,stream),stream.polygonEnd()),activeStream=stream,segments=polygon=ring=null}};return clipStream}}function validSegment(segment){return segment.length>1}function compareIntersection(a,b){return((a=a.x)[0]<0?a[1]-halfPi-epsilon:halfPi-a[1])-((b=b.x)[0]<0?b[1]-halfPi-epsilon:halfPi-b[1])}function transformer(methods){return function(stream){var s=new TransformStream;for(var key in methods)s[key]=methods[key];return s.stream=stream,s}}function TransformStream(){}function fitExtent(projection,extent,object){var w=extent[1][0]-extent[0][0],h=extent[1][1]-extent[0][1],clip=projection.clipExtent&&projection.clipExtent();projection.scale(150).translate([0,0]),null!=clip&&projection.clipExtent(null),geoStream(object,projection.stream(boundsStream$1));var b=boundsStream$1.result(),k=Math.min(w/(b[1][0]-b[0][0]),h/(b[1][1]-b[0][1])),x=+extent[0][0]+(w-k*(b[1][0]+b[0][0]))/2,y=+extent[0][1]+(h-k*(b[1][1]+b[0][1]))/2;return null!=clip&&projection.clipExtent(clip),projection.scale(150*k).translate([x,y])}function projection(project){return function(projectAt){function projection(point){return point=projectRotate(point[0]*radians,point[1]*radians),[point[0]*k+dx,dy-point[1]*k]}function projectTransform(x,y){return x=project(x,y),[x[0]*k+dx,dy-x[1]*k]}function recenter(){projectRotate=compose(rotate=rotateRadians(deltaLambda,deltaPhi,deltaGamma),project);var center=project(lambda,phi);return dx=x-center[0]*k,dy=y+center[1]*k,reset()}function reset(){return cache=cacheStream=null,projection}var project,dx,dy,rotate,projectRotate,y0,x1,y1,cache,cacheStream,k=150,x=480,y=250,lambda=0,phi=0,deltaLambda=0,deltaPhi=0,deltaGamma=0,theta=null,preclip=clipAntimeridian,x0=null,postclip=identity$4,delta2=.5,projectResample=resample(projectTransform,delta2);projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transformRadians(preclip(rotate,projectResample(postclip(cacheStream=stream))))},projection.clipAngle=function(_){return arguments.length?(preclip=+_?clipCircle(theta=_*radians,6*radians):(theta=null,clipAntimeridian),reset()):theta*degrees},projection.clipExtent=function(_){return arguments.length?(postclip=null==_?(x0=y0=x1=y1=null,identity$4):clipExtent(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):null==x0?null:[[x0,y0],[x1,y1]]},projection.scale=function(_){return arguments.length?(k=+_,recenter()):k},projection.translate=function(_){return arguments.length?(x=+_[0],y=+_[1],recenter()):[x,y]},projection.center=function(_){return arguments.length?(lambda=_[0]%360*radians,phi=_[1]%360*radians,recenter()):[lambda*degrees,phi*degrees]},projection.rotate=function(_){return arguments.length?(deltaLambda=_[0]%360*radians,deltaPhi=_[1]%360*radians,deltaGamma=_.length>2?_[2]%360*radians:0,recenter()):[deltaLambda*degrees,deltaPhi*degrees,deltaGamma*degrees]},projection.precision=function(_){return arguments.length?(projectResample=resample(projectTransform,delta2=_*_),reset()):sqrt(delta2)},projection.fitExtent=function(extent$$1,object){return fitExtent(projection,extent$$1,object)},projection.fitSize=function(size,object){return function(projection,size,object){return fitExtent(projection,[[0,0],size],object)}(projection,size,object)};return function(){return project=projectAt.apply(this,arguments),projection.invert=project.invert&&function(point){return(point=projectRotate.invert((point[0]-dx)/k,(dy-point[1])/k))&&[point[0]*degrees,point[1]*degrees]},recenter()}}(function(){return project})()}function mercatorRaw(lambda,phi){return[lambda,log(tan((halfPi+phi)/2))]}function transverseMercatorRaw(lambda,phi){return[log(tan((halfPi+phi)/2)),-lambda]}function bufferFeature(geojson,radius,units,steps){var properties=geojson.properties||{},geometry$$1="Feature"===geojson.type?geojson.geometry:geojson;if("GeometryCollection"===geometry$$1.type){var results=[];return geomEach(geojson,function(geometry$$1){var buffered=bufferFeature(geometry$$1,radius,units,steps);buffered&&results.push(buffered)}),featureCollection(results)}var projected,bbox=bbox$1(geojson),needsTransverseMercator=bbox[1]>50&&bbox[3]>50;projected=needsTransverseMercator?{type:geometry$$1.type,coordinates:projectCoords(geometry$$1.coordinates,defineProjection(geometry$$1))}:function(geojson,options){return convert(geojson,"mercator",options)}(geometry$$1);var geom=(new GeoJSONReader).read(projected),distance=radiansToLength(lengthToRadians(radius,units),"meters"),buffered=BufferOp.bufferOp(geom,distance);if(buffered=(new GeoJSONWriter).write(buffered),!coordsIsNaN(buffered.coordinates)){var result;return(result=needsTransverseMercator?{type:buffered.type,coordinates:unprojectCoords(buffered.coordinates,defineProjection(geometry$$1))}:function(geojson,options){return convert(geojson,"wgs84",options)}(buffered)).geometry?result:feature(result,properties)}}function coordsIsNaN(coords){return Array.isArray(coords[0])?coordsIsNaN(coords[0]):isNaN(coords[0])}function projectCoords(coords,proj){return"object"!==_typeof$$1(coords[0])?proj(coords):coords.map(function(coord){return projectCoords(coord,proj)})}function unprojectCoords(coords,proj){return"object"!==_typeof$$1(coords[0])?proj.invert(coords):coords.map(function(coord){return unprojectCoords(coord,proj)})}function defineProjection(geojson){var coords=function(geojson,properties){var ext=bbox$1(geojson);return point([(ext[0]+ext[2])/2,(ext[1]+ext[3])/2],properties)}(geojson).geometry.coordinates.reverse(),rotate=coords.map(function(coord){return-coord});return geoTransverseMercator().center(coords).rotate(rotate).scale(earthRadius)}function createbuffer(object,output,distance,units,comment,steps){units=units||"meters",output=(output||"feature").toLowerCase();var Feature;if(object instanceof google.maps.Polyline||object instanceof google.maps.Polygon||object instanceof google.maps.Marker||object instanceof google.maps.LatLng){Feature={type:"Feature",properties:{},geometry:Wicket$1().fromObject(object).toJson()}}else Feature=object.type&&"Feature"===object.type&&object.geometry?object:polygonToFeaturePolygon(object);var buffered=function(geojson,radius,options){var units=(options=options||{}).units,steps=options.steps||64;if(!geojson)throw new Error("geojson is required");if("object"!==(void 0===options?"undefined":_typeof$$1(options)))throw new Error("options must be an object");if("number"!=typeof steps)throw new Error("steps must be an number");if(void 0===radius)throw new Error("radius is required");if(steps<=0)throw new Error("steps must be greater than 0");steps=steps||64,units=units||"kilometers";var results=[];switch(geojson.type){case"GeometryCollection":return geomEach(geojson,function(geometry$$1){var buffered=bufferFeature(geometry$$1,radius,units,steps);buffered&&results.push(buffered)}),featureCollection(results);case"FeatureCollection":return featureEach(geojson,function(feature$$1){var multiBuffered=bufferFeature(feature$$1,radius,units,steps);multiBuffered&&featureEach(multiBuffered,function(buffered){buffered&&results.push(buffered)})}),featureCollection(results)}return bufferFeature(geojson,radius,units,steps)}(Feature,distance,{units:units,steps:steps});return"FeatureCollection"===buffered.type&&(buffered=buffered.features[0]),"geometry"===output?buffered.geometry:"object"===output?Wicket$1().fromJson(buffered.geometry).toObject():buffered}function booleanPointInPolygon(point,polygon,options){if("object"!==(void 0===(options=options||{})?"undefined":_typeof$$1(options)))throw new Error("options is invalid");var ignoreBoundary=options.ignoreBoundary;if(!point)throw new Error("point is required");if(!polygon)throw new Error("polygon is required");var pt=getCoord(point),polys=getCoords(polygon),type=polygon.geometry?polygon.geometry.type:polygon.type,bbox=polygon.bbox;if(bbox&&!1===function(pt,bbox){return bbox[0]<=pt[0]&&bbox[1]<=pt[1]&&bbox[2]>=pt[0]&&bbox[3]>=pt[1]}(pt,bbox))return!1;"Polygon"===type&&(polys=[polys]);for(var i=0,insidePoly=!1;i<polys.length&&!insidePoly;i++)if(inRing(pt,polys[i][0],ignoreBoundary)){for(var inHole=!1,k=1;k<polys[i].length&&!inHole;)inRing(pt,polys[i][k],!ignoreBoundary)&&(inHole=!0),k++;inHole||(insidePoly=!0)}return insidePoly}function inRing(pt,ring,ignoreBoundary){var isInside=!1;ring[0][0]===ring[ring.length-1][0]&&ring[0][1]===ring[ring.length-1][1]&&(ring=ring.slice(0,ring.length-1));for(var i=0,j=ring.length-1;i<ring.length;j=i++){var xi=ring[i][0],yi=ring[i][1],xj=ring[j][0],yj=ring[j][1];if(pt[1]*(xi-xj)+yi*(xj-pt[0])+yj*(pt[0]-xi)==0&&(xi-pt[0])*(xj-pt[0])<=0&&(yi-pt[1])*(yj-pt[1])<=0)return!ignoreBoundary;yi>pt[1]!=yj>pt[1]&&pt[0]<(xj-xi)*(pt[1]-yi)/(yj-yi)+xi&&(isInside=!isInside)}return isInside}function pointInPolygon(sourceArray,geojsonPolygon){var pointsInside=[],pointsOutside=[];return"Feature"!==geojsonPolygon.type&&(geojsonPolygon={type:"Feature",properties:{},geometry:geojsonPolygon}),"Polygon"!==geojsonPolygon.geometry.type&&"Multipolygon"!==geojsonPolygon.geometry.type||forEach(sourceArray,function(item){booleanPointInPolygon(function(marker){if(!marker.getPosition||"function"!=typeof marker.getPosition)throw new Error("input object does not have a getPosition method");var position=marker.getPosition();return{type:"Feature",properties:{},geometry:{type:"Point",coordinates:[position.lng(),position.lat()]}}}(item),geojsonPolygon)?pointsInside.push(item):pointsOutside.push(item)}),{pointsInside:pointsInside,pointsOutside:pointsOutside}}function kinks(object){var Feature;if(object instanceof google.maps.Polyline||object instanceof google.maps.Polygon){Feature={type:"Feature",properties:{},geometry:Wicket().fromObject(object).toJson()}}else Feature=object.type&&"Feature"===object.type&&object.geometry?object:polygonToFeaturePolygon(object);return function(featureIn){var coordinates,feature$$1,results={type:"FeatureCollection",features:[]};if("LineString"===(feature$$1="Feature"===featureIn.type?featureIn.geometry:featureIn).type)coordinates=[feature$$1.coordinates];else if("MultiLineString"===feature$$1.type)coordinates=feature$$1.coordinates;else if("MultiPolygon"===feature$$1.type)coordinates=[].concat.apply([],feature$$1.coordinates);else{if("Polygon"!==feature$$1.type)throw new Error("Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry");coordinates=feature$$1.coordinates}return coordinates.forEach(function(line1){coordinates.forEach(function(line2){for(var i=0;i<line1.length-1;i++)for(var k=i;k<line2.length-1;k++){if(line1===line2){if(1===Math.abs(i-k))continue;if(0===i&&k===line1.length-2&&line1[i][0]===line1[line1.length-1][0]&&line1[i][1]===line1[line1.length-1][1])continue}var intersection=function(line1StartX,line1StartY,line1EndX,line1EndY,line2StartX,line2StartY,line2EndX,line2EndY){var denominator,a,b,numerator1,numerator2,result={x:null,y:null,onLine1:!1,onLine2:!1};return 0==(denominator=(line2EndY-line2StartY)*(line1EndX-line1StartX)-(line2EndX-line2StartX)*(line1EndY-line1StartY))?null!==result.x&&null!==result.y&&result:(a=line1StartY-line2StartY,b=line1StartX-line2StartX,numerator1=(line2EndX-line2StartX)*a-(line2EndY-line2StartY)*b,numerator2=(line1EndX-line1StartX)*a-(line1EndY-line1StartY)*b,a=numerator1/denominator,b=numerator2/denominator,result.x=line1StartX+a*(line1EndX-line1StartX),result.y=line1StartY+a*(line1EndY-line1StartY),a>=0&&a<=1&&(result.onLine1=!0),b>=0&&b<=1&&(result.onLine2=!0),!(!result.onLine1||!result.onLine2)&&[result.x,result.y])}(line1[i][0],line1[i][1],line1[i+1][0],line1[i+1][1],line2[k][0],line2[k][1],line2[k+1][0],line2[k+1][1]);intersection&&results.features.push(point([intersection[0],intersection[1]]))}})}),results}(Feature)}function partialSort(arr,k,left,right,compare){for(left=left||0,right=right||arr.length-1,compare=compare||function(a,b){return a<b?-1:a>b?1:0};right>left;){if(right-left>600){var n=right-left+1,m=k-left+1,z=Math.log(n),s=.5*Math.exp(2*z/3),sd=.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1);partialSort(arr,k,Math.max(left,Math.floor(k-m*s/n+sd)),Math.min(right,Math.floor(k+(n-m)*s/n+sd)),compare)}var t=arr[k],i=left,j=right;for(swap(arr,left,k),compare(arr[right],t)>0&&swap(arr,left,right);i<j;){for(swap(arr,i,j),i++,j--;compare(arr[i],t)<0;)i++;for(;compare(arr[j],t)>0;)j--}0===compare(arr[left],t)?swap(arr,left,j):swap(arr,++j,right),j<=k&&(left=j+1),k<=j&&(right=j-1)}}function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j],arr[j]=tmp}function rbush(maxEntries,format){if(!(this instanceof rbush))return new rbush(maxEntries,format);this._maxEntries=Math.max(4,maxEntries||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),format&&this._initFormat(format),this.clear()}function calcBBox(node,toBBox){distBBox(node,0,node.children.length,toBBox,node)}function distBBox(node,k,p,toBBox,destNode){destNode||(destNode=createNode(null)),destNode.minX=1/0,destNode.minY=1/0,destNode.maxX=-1/0,destNode.maxY=-1/0;for(var child,i=k;i<p;i++)child=node.children[i],extend$1(destNode,node.leaf?toBBox(child):child);return destNode}function extend$1(a,b){return a.minX=Math.min(a.minX,b.minX),a.minY=Math.min(a.minY,b.minY),a.maxX=Math.max(a.maxX,b.maxX),a.maxY=Math.max(a.maxY,b.maxY),a}function compareNodeMinX(a,b){return a.minX-b.minX}function compareNodeMinY(a,b){return a.minY-b.minY}function bboxArea(a){return(a.maxX-a.minX)*(a.maxY-a.minY)}function bboxMargin(a){return a.maxX-a.minX+(a.maxY-a.minY)}function contains$1(a,b){return a.minX<=b.minX&&a.minY<=b.minY&&b.maxX<=a.maxX&&b.maxY<=a.maxY}function intersects(a,b){return b.minX<=a.maxX&&b.minY<=a.maxY&&b.maxX>=a.minX&&b.maxY>=a.minY}function createNode(children){return{children:children,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function multiSelect(arr,left,right,n,compare){for(var mid,stack=[left,right];stack.length;)(right=stack.pop())-(left=stack.pop())<=n||(mid=left+Math.ceil((right-left)/n/2)*n,quickselect(arr,mid,left,right,compare),stack.push(left,mid,mid,right))}function equalArrays$3(array1,array2){if(!array1||!array2)return!1;if(array1.length!==array2.length)return!1;for(var i=0,l=array1.length;i<l;i++)if(array1[i]instanceof Array&&array2[i]instanceof Array){if(!equalArrays$3(array1[i],array2[i]))return!1}else if(array1[i]!==array2[i])return!1;return!0}function area$1(geojson){return function(geojson,callback,initialValue){var previousValue=initialValue;return geomEach(geojson,function(currentGeometry,currentIndex,currentProperties){previousValue=0===currentIndex&&void 0===initialValue?currentGeometry:callback(previousValue,currentGeometry,currentIndex,currentProperties)}),previousValue}(geojson,function(value,geom){return value+calculateArea(geom)},0)}function calculateArea(geojson){var i,area=0;switch(geojson.type){case"Polygon":return polygonArea(geojson.coordinates);case"MultiPolygon":for(i=0;i<geojson.coordinates.length;i++)area+=polygonArea(geojson.coordinates[i]);return area;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0;case"GeometryCollection":for(i=0;i<geojson.geometries.length;i++)area+=calculateArea(geojson.geometries[i]);return area}}function polygonArea(coords){var area=0;if(coords&&coords.length>0){area+=Math.abs(ringArea(coords[0]));for(var i=1;i<coords.length;i++)area-=Math.abs(ringArea(coords[i]))}return area}function ringArea(coords){var p1,p2,lowerIndex,middleIndex,upperIndex,i,area=0,coordsLength=coords.length;if(coordsLength>2){for(i=0;i<coordsLength;i++)i===coordsLength-2?(lowerIndex=coordsLength-2,middleIndex=coordsLength-1,upperIndex=0):i===coordsLength-1?(lowerIndex=coordsLength-1,middleIndex=0,upperIndex=1):(lowerIndex=i,middleIndex=i+1,upperIndex=i+2),p1=coords[lowerIndex],p2=coords[middleIndex],area+=(rad(coords[upperIndex][0])-rad(p1[0]))*Math.sin(rad(p2[1]));area=area*RADIUS*RADIUS/2}return area}function rad(_){return _*Math.PI/180}function isConvex(pts,righthanded){if(void 0===righthanded&&(righthanded=!0),3!=pts.length)throw new Error("This function requires an array of three points [x,y]");return(pts[1][0]-pts[0][0])*(pts[2][1]-pts[0][1])-(pts[1][1]-pts[0][1])*(pts[2][0]-pts[0][0])>=0==righthanded}function equalArrays$2(array1,array2){if(!array1||!array2)return!1;if(array1.length!=array2.length)return!1;for(var i=0,l=array1.length;i<l;i++)if(array1[i]instanceof Array&&array2[i]instanceof Array){if(!equalArrays$2(array1[i],array2[i]))return!1}else if(array1[i]!=array2[i])return!1;return!0}function unkink(object){var polygonFeature=polygonToFeaturePolygon(object);return console.log(polygonFeature),function(geojson){var features=[];return flattenEach(geojson,function(feature$$1){"Polygon"===feature$$1.geometry.type&&featureEach(simplepolygon(feature$$1),function(poly){features.push(polygon(poly.geometry.coordinates,feature$$1.properties))})}),featureCollection(features)}(polygonFeature)}function filter(collection,predicate){return(isArray(collection)?arrayFilter:function(collection,predicate){var result=[];return baseEach(collection,function(value,index,collection){predicate(value,index,collection)&&result.push(value)}),result})(collection,baseIteratee(predicate))}function baseExtremum(array,iteratee,comparator){for(var index=-1,length=array.length;++index<length;){var value=array[index],current=iteratee(value);if(null!=current&&(void 0===computed?current==current&&!isSymbol(current):comparator(current,computed)))var computed=current,result=value}return result}function baseGt(value,other){return value>other}function baseLt(value,other){return value<other}function quickselect$3(arr,k,left,right,compare){quickselectStep(arr,k,left||0,right||arr.length-1,compare||function(a,b){return a<b?-1:a>b?1:0})}function quickselectStep(arr,k,left,right,compare){for(;right>left;){if(right-left>600){var n=right-left+1,m=k-left+1,z=Math.log(n),s=.5*Math.exp(2*z/3),sd=.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1);quickselectStep(arr,k,Math.max(left,Math.floor(k-m*s/n+sd)),Math.min(right,Math.floor(k+(n-m)*s/n+sd)),compare)}var t=arr[k],i=left,j=right;for(swap$1(arr,left,k),compare(arr[right],t)>0&&swap$1(arr,left,right);i<j;){for(swap$1(arr,i,j),i++,j--;compare(arr[i],t)<0;)i++;for(;compare(arr[j],t)>0;)j--}0===compare(arr[left],t)?swap$1(arr,left,j):swap$1(arr,++j,right),j<=k&&(left=j+1),k<=j&&(right=j-1)}}function swap$1(arr,i,j){var tmp=arr[i];arr[i]=arr[j],arr[j]=tmp}function rbush$3(maxEntries,format){if(!(this instanceof rbush$3))return new rbush$3(maxEntries,format);this._maxEntries=Math.max(4,maxEntries||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),format&&this._initFormat(format),this.clear()}function calcBBox$1(node,toBBox){distBBox$1(node,0,node.children.length,toBBox,node)}function distBBox$1(node,k,p,toBBox,destNode){destNode||(destNode=createNode$1(null)),destNode.minX=1/0,destNode.minY=1/0,destNode.maxX=-1/0,destNode.maxY=-1/0;for(var child,i=k;i<p;i++)child=node.children[i],extend$2(destNode,node.leaf?toBBox(child):child);return destNode}function extend$2(a,b){return a.minX=Math.min(a.minX,b.minX),a.minY=Math.min(a.minY,b.minY),a.maxX=Math.max(a.maxX,b.maxX),a.maxY=Math.max(a.maxY,b.maxY),a}function compareNodeMinX$1(a,b){return a.minX-b.minX}function compareNodeMinY$1(a,b){return a.minY-b.minY}function bboxArea$1(a){return(a.maxX-a.minX)*(a.maxY-a.minY)}function bboxMargin$1(a){return a.maxX-a.minX+(a.maxY-a.minY)}function contains$2(a,b){return a.minX<=b.minX&&a.minY<=b.minY&&b.maxX<=a.maxX&&b.maxY<=a.maxY}function intersects$2(a,b){return b.minX<=a.maxX&&b.minY<=a.maxY&&b.maxX>=a.minX&&b.maxY>=a.minY}function createNode$1(children){return{children:children,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function multiSelect$1(arr,left,right,n,compare){for(var mid,stack=[left,right];stack.length;)(right=stack.pop())-(left=stack.pop())<=n||(quickselect$3(arr,mid=left+Math.ceil((right-left)/n/2)*n,left,right,compare),stack.push(left,mid,mid,right))}function bboxPolygon(bbox){var lowLeft=[bbox[0],bbox[1]],topLeft=[bbox[0],bbox[3]],topRight=[bbox[2],bbox[3]];return{type:"Feature",bbox:bbox,properties:{},geometry:{type:"Polygon",coordinates:[[lowLeft,[bbox[2],bbox[1]],topRight,topLeft,lowLeft]]}}}function turfBBox(geojson){var bbox=[1/0,1/0,-1/0,-1/0];return coordEach(geojson,function(coord){bbox[0]>coord[0]&&(bbox[0]=coord[0]),bbox[1]>coord[1]&&(bbox[1]=coord[1]),bbox[2]<coord[0]&&(bbox[2]=coord[0]),bbox[3]<coord[1]&&(bbox[3]=coord[1])}),bbox}function lineSegment(geojson){if(!geojson)throw new Error("geojson is required");var results=[];return flattenEach(geojson,function(feature$$1){!function(geojson,results){var coords=[],geometry$$1=geojson.geometry;switch(geometry$$1.type){case"Polygon":coords=getCoords(geometry$$1);break;case"LineString":coords=[getCoords(geometry$$1)]}coords.forEach(function(coord){(function(coords,properties){var segments=[];return coords.reduce(function(previousCoords,currentCoords){var segment=lineString([previousCoords,currentCoords],properties);return segment.bbox=function(coords1,coords2){var x1=coords1[0],y1=coords1[1],x2=coords2[0],y2=coords2[1];return[x1<x2?x1:x2,y1<y2?y1:y2,x1>x2?x1:x2,y1>y2?y1:y2]}(previousCoords,currentCoords),segments.push(segment),currentCoords}),segments})(coord,geojson.properties).forEach(function(segment){segment.id=results.length,results.push(segment)})})}(feature$$1,results)}),featureCollection(results)}function lineIntersect(line1,line2){var unique={},results=[];if("LineString"===line1.type&&(line1=feature(line1)),"LineString"===line2.type&&(line2=feature(line2)),"Feature"===line1.type&&"Feature"===line2.type&&"LineString"===line1.geometry.type&&"LineString"===line2.geometry.type&&2===line1.geometry.coordinates.length&&2===line2.geometry.coordinates.length){var intersect=intersects$1(line1,line2);return intersect&&results.push(intersect),featureCollection(results)}var tree=function(maxEntries){var tree=rbush$3(maxEntries);return tree.insert=function(feature){if(Array.isArray(feature)){var bbox=feature;(feature=bboxPolygon(bbox)).bbox=bbox}else feature.bbox=feature.bbox?feature.bbox:turfBBox(feature);return rbush$3.prototype.insert.call(this,feature)},tree.load=function(features){var load=[];return Array.isArray(features)?features.forEach(function(bbox){var feature=bboxPolygon(bbox);feature.bbox=bbox,load.push(feature)}):featureEach(features,function(feature){feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),load.push(feature)}),rbush$3.prototype.load.call(this,load)},tree.remove=function(feature){if(Array.isArray(feature)){var bbox=feature;(feature=bboxPolygon(bbox)).bbox=bbox}return rbush$3.prototype.remove.call(this,feature)},tree.clear=function(){return rbush$3.prototype.clear.call(this)},tree.search=function(geojson){return{type:"FeatureCollection",features:rbush$3.prototype.search.call(this,this.toBBox(geojson))}},tree.collides=function(geojson){return rbush$3.prototype.collides.call(this,this.toBBox(geojson))},tree.all=function(){return{type:"FeatureCollection",features:rbush$3.prototype.all.call(this)}},tree.toJSON=function(){return rbush$3.prototype.toJSON.call(this)},tree.fromJSON=function(json){return rbush$3.prototype.fromJSON.call(this,json)},tree.toBBox=function(geojson){var bbox;return bbox=geojson.bbox?geojson.bbox:Array.isArray(geojson)&&4===geojson.length?geojson:turfBBox(geojson),{minX:bbox[0],minY:bbox[1],maxX:bbox[2],maxY:bbox[3]}},tree}();return tree.load(lineSegment(line2)),featureEach(lineSegment(line1),function(segment){featureEach(tree.search(segment),function(match){var intersect=intersects$1(segment,match);if(intersect){var key=getCoords(intersect).join(",");unique[key]||(unique[key]=!0,results.push(intersect))}})}),featureCollection(results)}function intersects$1(line1,line2){var coords1=getCoords(line1),coords2=getCoords(line2);if(2!==coords1.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==coords2.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var x1=coords1[0][0],y1=coords1[0][1],x2=coords1[1][0],y2=coords1[1][1],x3=coords2[0][0],y3=coords2[0][1],x4=coords2[1][0],y4=coords2[1][1],denom=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1),numeA=(x4-x3)*(y1-y3)-(y4-y3)*(x1-x3),numeB=(x2-x1)*(y1-y3)-(y2-y1)*(x1-x3);if(0===denom)return null;var uA=numeA/denom,uB=numeB/denom;if(uA>=0&&uA<=1&&uB>=0&&uB<=1){return point([x1+uA*(x2-x1),y1+uA*(y2-y1)])}return null}function nearestPointOnLine(lines,pt,options){if(options=options||{},!isObject$2(options))throw new Error("options is invalid");var type=lines.geometry?lines.geometry.type:lines.type;if("LineString"!==type&&"MultiLineString"!==type)throw new Error("lines must be LineString or MultiLineString");var closestPt=point([1/0,1/0],{dist:1/0}),length=0;return flattenEach(lines,function(line){for(var coords=getCoords(line),i=0;i<coords.length-1;i++){var start=point(coords[i]);start.properties.dist=distance(pt,start,options);var stop=point(coords[i+1]);stop.properties.dist=distance(pt,stop,options);var sectionLength=distance(start,stop,options),heightDistance=Math.max(start.properties.dist,stop.properties.dist),direction=bearing(start,stop),perpendicularPt1=destination(pt,heightDistance,direction+90,options),perpendicularPt2=destination(pt,heightDistance,direction-90,options),intersect=lineIntersect(lineString([perpendicularPt1.geometry.coordinates,perpendicularPt2.geometry.coordinates]),lineString([start.geometry.coordinates,stop.geometry.coordinates])),intersectPt=null;intersect.features.length>0&&((intersectPt=intersect.features[0]).properties.dist=distance(pt,intersectPt,options),intersectPt.properties.location=length+distance(start,intersectPt,options)),start.properties.dist<closestPt.properties.dist&&((closestPt=start).properties.index=i,closestPt.properties.location=length),stop.properties.dist<closestPt.properties.dist&&((closestPt=stop).properties.index=i+1,closestPt.properties.location=length+sectionLength),intersectPt&&intersectPt.properties.dist<closestPt.properties.dist&&((closestPt=intersectPt).properties.index=i),length+=sectionLength}}),closestPt}function lineSlice(startPt,stopPt,line){var coords;if("Feature"===line.type)coords=line.geometry.coordinates;else{if("LineString"!==line.type)throw new Error("input must be a LineString Feature or Geometry");coords=line.coordinates}for(var ends,startVertex=nearestPointOnLine(line,startPt),stopVertex=nearestPointOnLine(line,stopPt),clipCoords=[(ends=startVertex.properties.index<=stopVertex.properties.index?[startVertex,stopVertex]:[stopVertex,startVertex])[0].geometry.coordinates],i=ends[0].properties.index+1;i<ends[1].properties.index+1;i++)clipCoords.push(coords[i]);return clipCoords.push(ends[1].geometry.coordinates),lineString(clipCoords,line.properties)}function diffCoords(coord1,coord2){var vector=[Math.abs(coord1[0]-coord2[0]),Math.abs(coord1[1]-coord2[1])];return Math.sqrt(Math.pow(vector[0],2)+Math.pow(vector[1],2))}function lineIntersects$1(line1Start,line1End,line2Start,line2End,useOldMethod){if(!useOldMethod){var intersectionFC=lineIntersect(lineString([line1Start,line1End]),lineString([line2Start,line2End]));if(intersectionFC.features.length){var intersection=intersectionFC.features[0].geometry.coordinates;return intersection[0]=Math.round(1e8*intersection[0])/1e8,intersection[1]=Math.round(1e8*intersection[1])/1e8,intersection}return!1}var denominator,a,b,numerator1,numerator2,line1StartX=line1Start[0],line1StartY=line1Start[1],line1EndX=line1End[0],line1EndY=line1End[1],line2StartX=line2Start[0],line2StartY=line2Start[1],line2EndX=line2End[0],line2EndY=line2End[1],result={x:null,y:null,onLine1:!1,onLine2:!1};return 0==(denominator=(line2EndY-line2StartY)*(line1EndX-line1StartX)-(line2EndX-line2StartX)*(line1EndY-line1StartY))?null!==result.x&&null!==result.y&&result:(a=line1StartY-line2StartY,b=line1StartX-line2StartX,numerator1=(line2EndX-line2StartX)*a-(line2EndY-line2StartY)*b,numerator2=(line1EndX-line1StartX)*a-(line1EndY-line1StartY)*b,a=numerator1/denominator,b=numerator2/denominator,result.x=line1StartX+a*(line1EndX-line1StartX),result.y=line1StartY+a*(line1EndY-line1StartY),a>=0&&a<=1&&(result.onLine1=!0),b>=0&&b<=1&&(result.onLine2=!0),!(!result.onLine1||!result.onLine2)&&(result.x=Math.round(1e8*result.x)/1e8,result.y=Math.round(1e8*result.y)/1e8,[result.x,result.y]))}function traverseRings(ring1,ring2,useOldMethod){var intersections=featureCollection([]),samering=!1;(function(value,other){return baseIsEqual(value,other)})(ring1,ring2)&&(samering=!0);for(var i=0;i<ring1.length-1;i++)for(var k=samering?i:0;k<ring2.length-1;k++)if(ring1!==ring2||1!==Math.abs(i-k)&&Math.abs(i-k)!==ring1.length-2){var intersection=lineIntersects$1(ring1[i],ring1[i+1],ring2[k],ring2[k+1],useOldMethod);if(intersection&&(!(diffCoords(intersection,ring1[0])<5e-6||diffCoords(intersection,ring1[ring1.length-1])<5e-6)||!(diffCoords(intersection,ring2[0])<5e-6||diffCoords(intersection,ring2[ring2.length-1])<5e-6))){var FeatureIntersection=point([intersection[0],intersection[1]]);FeatureIntersection.properties={position1:i,position2:k},intersections.features.push(FeatureIntersection)}}return intersections}function trimPaths(arrayLatLng1,arrayLatLng2,useOldMethod){var ring1=toCoords(arrayLatLng1),ring2=toCoords(arrayLatLng2),intersections=traverseRings(ring1,ring2,useOldMethod);if(intersections.features.length>0){var sliced1,sliced2,line1=lineString(ring1),line2=lineString(ring2),line1Start=point(ring1[0]),line2End=point(ring2.slice(-1)[0]),first_segment_with_kinks=function(array){return array&&array.length?baseExtremum(array,identity,baseLt):void 0}(intersections.features),chosenIntersection=function(array){return array&&array.length?baseExtremum(array,identity,baseGt):void 0}(filter(intersections.features,function(kink){return kink.properties.position1===first_segment_with_kinks.properties.position1})),intersectLatLng=toLatLngs([chosenIntersection.geometry.coordinates])[0];return sliced1=0===chosenIntersection.properties.position1?line1:lineSlice(line1Start,chosenIntersection,line1),sliced2=chosenIntersection.properties.position2>=ring2.length-1?line2:lineSlice(chosenIntersection,line2End,line2),[toLatLngs(sliced1.geometry.coordinates),toLatLngs(sliced2.geometry.coordinates),intersectLatLng]}return[]}var beginsWith,endsWith,_typeof$$1="function"==typeof Symbol&&"symbol"===_typeof(Symbol.iterator)?function(obj){return void 0===obj?"undefined":_typeof(obj)}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":void 0===obj?"undefined":_typeof(obj)},Wkt=function Wkt(obj){return obj instanceof Wkt?obj:this instanceof Wkt?void(this._wrapped=obj):new Wkt(obj)};beginsWith=function(str,sub){return str.substring(0,sub.length)===sub},endsWith=function(str,sub){return str.substring(str.length-sub.length)===sub},Wkt.delimiter=" ",Wkt.isArray=function(obj){return!(!obj||obj.constructor!==Array)},Wkt.trim=function(str,sub){for(sub=sub||" ";beginsWith(str,sub);)str=str.substring(1);for(;endsWith(str,sub);)str=str.substring(0,str.length-1);return str},Wkt.Wkt=function(initializer){this.delimiter=Wkt.delimiter||" ",this.wrapVertices=!0,this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+|\+/,numeric:/-*\d+(\.*\d+)?/,comma:/\s*,\s*/,parenComma:/\)\s*,\s*\(/,coord:/-*\d+\.*\d+ -*\d+\.*\d+/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/,ogcTypes:/^(multi)?(point|line|polygon|box)?(string)?$/i,crudeJson:/^{.*"(type|coordinates|geometries|features)":.*}$/},this.components=void 0,initializer&&"string"==typeof initializer?this.read(initializer):initializer&&void 0!==(void 0===initializer?"undefined":_typeof$$1(initializer))&&this.fromObject(initializer)},Wkt.Wkt.prototype.isCollection=function(){switch(this.type.slice(0,5)){case"multi":case"polyg":return!0;default:return!1}},Wkt.Wkt.prototype.sameCoords=function(a,b){return a.x===b.x&&a.y===b.y},Wkt.Wkt.prototype.fromObject=function(obj){var result;return result=obj.hasOwnProperty("type")&&obj.hasOwnProperty("coordinates")?this.fromJson(obj):this.deconstruct.call(this,obj),this.components=result.components,this.isRectangle=result.isRectangle||!1,this.type=result.type,this},Wkt.Wkt.prototype.toObject=function(config){var obj=this.construct[this.type].call(this,config);return"object"!==(void 0===obj?"undefined":_typeof$$1(obj))||Wkt.isArray(obj)||(obj.properties=this.properties),obj},Wkt.Wkt.prototype.toString=function(config){return this.write()},Wkt.Wkt.prototype.fromJson=function(obj){var i,j,k,coords,iring,oring;if(this.type=obj.type.toLowerCase(),this.components=[],obj.hasOwnProperty("geometry"))return this.fromJson(obj.geometry),this.properties=obj.properties,this;if(coords=obj.coordinates,Wkt.isArray(coords[0])){for(i in coords)if(coords.hasOwnProperty(i))if(Wkt.isArray(coords[i][0])){oring=[];for(j in coords[i])if(coords[i].hasOwnProperty(j))if(Wkt.isArray(coords[i][j][0])){iring=[];for(k in coords[i][j])coords[i][j].hasOwnProperty(k)&&iring.push({x:coords[i][j][k][0],y:coords[i][j][k][1]});oring.push(iring)}else oring.push({x:coords[i][j][0],y:coords[i][j][1]});this.components.push(oring)}else"multipoint"===this.type?this.components.push([{x:coords[i][0],y:coords[i][1]}]):this.components.push({x:coords[i][0],y:coords[i][1]})}else this.components.push({x:coords[0],y:coords[1]});return this},Wkt.Wkt.prototype.toJson=function(){var cs,json,i,j,k,ring,rings;if(cs=this.components,json={coordinates:[],type:function(){var i,type,s;type=this.regExes.ogcTypes.exec(this.type).slice(1),s=[];for(i in type)type.hasOwnProperty(i)&&void 0!==type[i]&&s.push(type[i].toLowerCase().slice(0,1).toUpperCase()+type[i].toLowerCase().slice(1));return s}.call(this).join("")},"box"===this.type.toLowerCase()){json.type="Polygon",json.bbox=[];for(i in cs)cs.hasOwnProperty(i)&&(json.bbox=json.bbox.concat([cs[i].x,cs[i].y]));return json.coordinates=[[[cs[0].x,cs[0].y],[cs[0].x,cs[1].y],[cs[1].x,cs[1].y],[cs[1].x,cs[0].y],[cs[0].x,cs[0].y]]],json}for(i in cs)if(cs.hasOwnProperty(i))if(Wkt.isArray(cs[i])){rings=[];for(j in cs[i])if(cs[i].hasOwnProperty(j))if(Wkt.isArray(cs[i][j])){ring=[];for(k in cs[i][j])cs[i][j].hasOwnProperty(k)&&ring.push([cs[i][j][k].x,cs[i][j][k].y]);rings.push(ring)}else cs[i].length>1?rings.push([cs[i][j].x,cs[i][j].y]):rings=rings.concat([cs[i][j].x,cs[i][j].y]);json.coordinates.push(rings)}else cs.length>1?json.coordinates.push([cs[i].x,cs[i].y]):json.coordinates=json.coordinates.concat([cs[i].x,cs[i].y]);return json},Wkt.Wkt.prototype.merge=function(wkt){var prefix=this.type.slice(0,5);if(this.type!==wkt.type&&this.type.slice(5,this.type.length)!==wkt.type)throw TypeError("The input geometry types must agree or the calling Wkt.Wkt instance must be a multigeometry of the other");switch(prefix){case"point":this.components=[this.components.concat(wkt.components)];break;case"multi":this.components=this.components.concat("multi"===wkt.type.slice(0,5)?wkt.components:[wkt.components]);break;default:this.components=[this.components,wkt.components]}return"multi"!==prefix&&(this.type="multi"+this.type),this},Wkt.Wkt.prototype.read=function(str){var matches;if(matches=this.regExes.typeStr.exec(str))this.type=matches[1].toLowerCase(),this.base=matches[2],this.ingest[this.type]&&(this.components=this.ingest[this.type].apply(this,[this.base]));else{if(!this.regExes.crudeJson.test(str))throw console.log("Invalid WKT string provided to read() ",str),{name:"WKTError",message:"Invalid WKT string provided to read()"};if("object"!==("undefined"==typeof JSON?"undefined":_typeof$$1(JSON))||"function"!=typeof JSON.parse)throw console.log("JSON.parse() is not available; cannot parse GeoJSON strings"),{name:"JSONError",message:"JSON.parse() is not available; cannot parse GeoJSON strings"};this.fromJson(JSON.parse(str))}return this},Wkt.Wkt.prototype.write=function(components){var i,pieces,data;for(components=components||this.components,(pieces=[]).push(this.type.toUpperCase()+"("),i=0;i<components.length;i+=1){if(this.isCollection()&&i>0&&pieces.push(","),!this.extract[this.type])return null;data=this.extract[this.type].apply(this,[components[i]]),this.isCollection()&&"multipoint"!==this.type?pieces.push("("+data+")"):(pieces.push(data),i!==components.length-1&&"multipoint"!==this.type&&pieces.push(","))}return pieces.push(")"),pieces.join("")},Wkt.Wkt.prototype.extract={point:function(_point){return String(_point.x)+this.delimiter+String(_point.y)},multipoint:function(_multipoint){var i,s,parts=[];for(i=0;i<_multipoint.length;i+=1)s=this.extract.point.apply(this,[_multipoint[i]]),this.wrapVertices&&(s="("+s+")"),parts.push(s);return parts.join(",")},linestring:function(_linestring){return this.extract.point.apply(this,[_linestring])},multilinestring:function(_multilinestring){var i,parts=[];if(_multilinestring.length)for(i=0;i<_multilinestring.length;i+=1)parts.push(this.extract.linestring.apply(this,[_multilinestring[i]]));else parts.push(this.extract.point.apply(this,[_multilinestring]));return parts.join(",")},polygon:function(_polygon){return this.extract.multilinestring.apply(this,[_polygon])},multipolygon:function(_multipolygon){var i,parts=[];for(i=0;i<_multipolygon.length;i+=1)parts.push("("+this.extract.polygon.apply(this,[_multipolygon[i]])+")");return parts.join(",")},box:function(_box){return this.extract.linestring.apply(this,[_box])},geometrycollection:function(str){console.log("The geometrycollection WKT type is not yet supported.")}},Wkt.Wkt.prototype.ingest={point:function(str){var coords=Wkt.trim(str).split(this.regExes.spaces);return[{x:parseFloat(this.regExes.numeric.exec(coords[0])[0]),y:parseFloat(this.regExes.numeric.exec(coords[1])[0])}]},multipoint:function(str){var i,components,points;for(components=[],points=Wkt.trim(str).split(this.regExes.comma),i=0;i<points.length;i+=1)components.push(this.ingest.point.apply(this,[points[i]]));return components},linestring:function(str){var i,multipoints,components;for(multipoints=this.ingest.multipoint.apply(this,[str]),components=[],i=0;i<multipoints.length;i+=1)components=components.concat(multipoints[i]);return components},multilinestring:function(str){var i,components,line,lines;for(components=[],1===(lines=Wkt.trim(str).split(this.regExes.doubleParenComma)).length&&(lines=Wkt.trim(str).split(this.regExes.parenComma)),i=0;i<lines.length;i+=1)line=lines[i].replace(this.regExes.trimParens,"$1"),components.push(this.ingest.linestring.apply(this,[line]));return components},polygon:function(str){var i,j,components,subcomponents,ring,rings;for(rings=Wkt.trim(str).split(this.regExes.parenComma),components=[],i=0;i<rings.length;i+=1){for(ring=rings[i].replace(this.regExes.trimParens,"$1").split(this.regExes.comma),subcomponents=[],j=0;j<ring.length;j+=1){var split=ring[j].split(this.regExes.spaces);if(split.length>2&&(split=split.filter(function(n){return""!=n})),2===split.length){var x_cord=split[0],y_cord=split[1];subcomponents.push({x:parseFloat(x_cord),y:parseFloat(y_cord)})}}components.push(subcomponents)}return components},box:function(str){var i,multipoints,components;for(multipoints=this.ingest.multipoint.apply(this,[str]),components=[],i=0;i<multipoints.length;i+=1)components=components.concat(multipoints[i]);return components},multipolygon:function(str){var i,components,polygon,polygons;for(components=[],polygons=Wkt.trim(str).split(this.regExes.doubleParenComma),i=0;i<polygons.length;i+=1)polygon=polygons[i].replace(this.regExes.trimParens,"$1"),components.push(this.ingest.polygon.apply(this,[polygon]));return components},geometrycollection:function(str){console.log("The geometrycollection WKT type is not yet supported.")}},Wkt.Wkt.prototype.isRectangle=!1,Wkt.Wkt.prototype.construct={point:function(config,component){var c=component||this.components;return config=config||{optimized:!0},config.position=new google.maps.LatLng(c[0].y,c[0].x),new google.maps.Marker(config)},multipoint:function(config){var i,c,arr;for(c=this.components,config=config||{},arr=[],i=0;i<c.length;i+=1)arr.push(this.construct.point(config,c[i]));return arr},linestring:function(config,component){var i,c;for(c=component||this.components,(config=config||{editable:!1}).path=[],i=0;i<c.length;i+=1)config.path.push(new google.maps.LatLng(c[i].y,c[i].x));return new google.maps.Polyline(config)},multilinestring:function(config){var i,c,arr;for(c=this.components,(config=config||{editable:!1}).path=[],arr=[],i=0;i<c.length;i+=1)arr.push(this.construct.linestring(config,c[i]));return arr},box:function(config,component){var c=component||this.components;return config=config||{},config.bounds=new google.maps.LatLngBounds(new google.maps.LatLng(c[0].y,c[0].x),new google.maps.LatLng(c[1].y,c[1].x)),new google.maps.Rectangle(config)},polygon:function(config,component){var j,k,c,rings,verts;for(c=component||this.components,(config=config||{editable:!1}).paths=[],rings=[],j=0;j<c.length;j+=1){for(verts=[],k=0;k<c[j].length-1;k+=1)verts.push(new google.maps.LatLng(c[j][k].y,c[j][k].x));0!==j&&(null===config.reverseInnerPolygons||config.reverseInnerPolygons)&&verts.reverse(),rings.push(verts)}return config.paths=config.paths.concat(rings),this.isRectangle?function(){var bounds,v;bounds=new google.maps.LatLngBounds;for(v in rings[0])rings[0].hasOwnProperty(v)&&bounds.extend(rings[0][v]);return new google.maps.Rectangle({bounds:bounds})}():new google.maps.Polygon(config)},multipolygon:function(config){var i,c,arr;for(c=this.components,(config=config||{editable:!1}).path=[],arr=[],i=0;i<c.length;i+=1)arr.push(this.construct.polygon(config,c[i]));return arr}},Wkt.Wkt.prototype.deconstruct=function(obj,multiFlag){var features,i,j,verts,rings,sign,tmp,response,lat,lng,vertex,ring,polygons,polygon,k,linestring,linestrings;if(google.maps.geometry&&(sign=google.maps.geometry.spherical.computeSignedArea),obj.constructor===google.maps.LatLng)return response={type:"point",components:[{x:obj.lng(),y:obj.lat()}]};if(obj.constructor===google.maps.Point)return response={type:"point",components:[{x:obj.x,y:obj.y}]};if(obj.constructor===google.maps.Marker)return response={type:"point",components:[{x:obj.getPosition().lng(),y:obj.getPosition().lat()}]};if(obj.constructor===google.maps.Polyline){for(verts=[],i=0;i<obj.getPath().length;i+=1)tmp=obj.getPath().getAt(i),verts.push({x:tmp.lng(),y:tmp.lat()});return response={type:"linestring",components:verts}}if(obj.constructor===google.maps.Polygon){for(rings=[],void 0===multiFlag&&(multiFlag=function(){var areas,l;return!((l=obj.getPaths().length)<=1)&&(2===l?!(sign(obj.getPaths().getAt(0))*sign(obj.getPaths().getAt(1))<0):(areas=obj.getPaths().getArray().map(function(k){return sign(k)/Math.abs(sign(k))})).indexOf(areas[0])!==areas.lastIndexOf(areas[0])&&(multiFlag=!0,!0))}()),i=0;i<obj.getPaths().length;i+=1){for(tmp=obj.getPaths().getAt(i),verts=[],j=0;j<obj.getPaths().getAt(i).length;j+=1)verts.push({x:tmp.getAt(j).lng(),y:tmp.getAt(j).lat()});tmp.getAt(tmp.length-1).equals(tmp.getAt(0))||(i%2!=0?verts.unshift({x:tmp.getAt(tmp.length-1).lng(),y:tmp.getAt(tmp.length-1).lat()}):verts.push({x:tmp.getAt(0).lng(),y:tmp.getAt(0).lat()})),obj.getPaths().length>1&&i>0&&(sign(obj.getPaths().getAt(i))>0&&sign(obj.getPaths().getAt(i-1))>0||sign(obj.getPaths().getAt(i))<0&&sign(obj.getPaths().getAt(i-1))<0&&!multiFlag)&&(verts=[verts]),i%2!=0&&verts.reverse(),rings.push(verts)}return response={type:multiFlag?"multipolygon":"polygon",components:rings}}if(obj.constructor===google.maps.Circle){var point=obj.getCenter(),radius=obj.getRadius();verts=[];for(var d2r=Math.PI/180,rlat=(radius/=1609)/3963*(180/Math.PI),rlng=rlat/Math.cos(point.lat()*d2r),n=0;n<=32;n++){var theta=Math.PI*(n/16);lng=point.lng()+rlng*Math.cos(theta),lat=point.lat()+rlat*Math.sin(theta),verts.push({x:lng,y:lat})}return response={type:"polygon",components:[verts]}}if(obj.constructor===google.maps.LatLngBounds)return tmp=obj,(verts=[]).push({x:tmp.getSouthWest().lng(),y:tmp.getNorthEast().lat()}),verts.push({x:tmp.getNorthEast().lng(),y:tmp.getNorthEast().lat()}),verts.push({x:tmp.getNorthEast().lng(),y:tmp.getSouthWest().lat()}),verts.push({x:tmp.getSouthWest().lng(),y:tmp.getSouthWest().lat()}),verts.push({x:tmp.getSouthWest().lng(),y:tmp.getNorthEast().lat()}),response={type:"polygon",isRectangle:!0,components:[verts]};if(obj.constructor===google.maps.Rectangle)return tmp=obj.getBounds(),(verts=[]).push({x:tmp.getSouthWest().lng(),y:tmp.getNorthEast().lat()}),verts.push({x:tmp.getNorthEast().lng(),y:tmp.getNorthEast().lat()}),verts.push({x:tmp.getNorthEast().lng(),y:tmp.getSouthWest().lat()}),verts.push({x:tmp.getSouthWest().lng(),y:tmp.getSouthWest().lat()}),verts.push({x:tmp.getSouthWest().lng(),y:tmp.getNorthEast().lat()}),response={type:"polygon",isRectangle:!0,components:[verts]};if(obj.constructor===google.maps.Data.Feature)return this.deconstruct.call(this,obj.getGeometry());if(obj.constructor===google.maps.Data.Point)return response={type:"point",components:[{x:obj.get().lng(),y:obj.get().lat()}]};if(obj.constructor===google.maps.Data.LineString){for(verts=[],i=0;i<obj.getLength();i+=1)vertex=obj.getAt(i),verts.push({x:vertex.lng(),y:vertex.lat()});return response={type:"linestring",components:verts}}if(obj.constructor===google.maps.Data.Polygon){for(rings=[],i=0;i<obj.getLength();i+=1){for(ring=obj.getAt(i),verts=[],j=0;j<ring.getLength();j+=1)vertex=ring.getAt(j),verts.push({x:vertex.lng(),y:vertex.lat()});verts.push({x:ring.getAt(0).lng(),y:ring.getAt(0).lat()}),rings.push(verts)}return response={type:"polygon",components:rings}}if(obj.constructor===google.maps.Data.MultiPoint){for(verts=[],i=0;i<obj.getLength();i+=1)vertex=obj.getAt(i),verts.push([{x:vertex.lng(),y:vertex.lat()}]);return response={type:"multipoint",components:verts}}if(obj.constructor===google.maps.Data.MultiLineString){for(linestrings=[],i=0;i<obj.getLength();i+=1){for(verts=[],linestring=obj.getAt(i),j=0;j<linestring.getLength();j+=1)vertex=linestring.getAt(j),verts.push({x:vertex.lng(),y:vertex.lat()});linestrings.push(verts)}return response={type:"multilinestring",components:linestrings}}if(obj.constructor===google.maps.Data.MultiPolygon){for(polygons=[],k=0;k<obj.getLength();k+=1){for(polygon=obj.getAt(k),rings=[],i=0;i<polygon.getLength();i+=1){for(ring=polygon.getAt(i),verts=[],j=0;j<ring.getLength();j+=1)vertex=ring.getAt(j),verts.push({x:vertex.lng(),y:vertex.lat()});verts.push({x:ring.getAt(0).lng(),y:ring.getAt(0).lat()}),rings.push(verts)}polygons.push(rings)}return response={type:"multipolygon",components:polygons}}if(obj.constructor===google.maps.Data.GeometryCollection){var objects=[];for(k=0;k<obj.getLength();k+=1){var object=obj.getAt(k);objects.push(this.deconstruct.call(this,object))}return response={type:"geometrycollection",components:objects}}if(Wkt.isArray(obj)){for(features=[],i=0;i<obj.length;i+=1)features.push(this.deconstruct.call(this,obj[i],!0));return response={type:function(){var k,type=obj[0].constructor;for(k=0;k<obj.length;k+=1)if(obj[k].constructor!==type)return"geometrycollection";switch(type){case google.maps.Marker:return"multipoint";case google.maps.Polyline:return"multilinestring";case google.maps.Polygon:return"multipolygon";default:return"geometrycollection"}}(),components:function(){var i,comps;for(comps=[],i=0;i<features.length;i+=1)features[i].components&&comps.push(features[i].components);return{comps:comps}}()},response.components=response.components.comps,response}console.warn("The passed object does not have any recognizable properties.")};var splice=Array.prototype.splice;ListCache.prototype.clear=function(){this.__data__=[],this.size=0},ListCache.prototype.delete=function(key){var data=this.__data__,index=assocIndexOf(data,key);return!(index<0||(index==data.length-1?data.pop():splice.call(data,index,1),--this.size,0))},ListCache.prototype.get=function(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?void 0:data[index][1]},ListCache.prototype.has=function(key){return assocIndexOf(this.__data__,key)>-1},ListCache.prototype.set=function(key,value){var data=this.__data__,index=assocIndexOf(data,key);return index<0?(++this.size,data.push([key,value])):data[index][1]=value,this};var freeGlobal="object"==("undefined"==typeof global?"undefined":_typeof$$1(global))&&global&&global.Object===Object&&global,freeSelf="object"==("undefined"==typeof self?"undefined":_typeof$$1(self))&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")(),_Symbol=root.Symbol,objectProto$1=Object.prototype,hasOwnProperty$1=objectProto$1.hasOwnProperty,nativeObjectToString=objectProto$1.toString,symToStringTag$1=_Symbol?_Symbol.toStringTag:void 0,nativeObjectToString$1=Object.prototype.toString,nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag=_Symbol?_Symbol.toStringTag:void 0,asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]",coreJsData=root["__core-js_shared__"],maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}(),funcToString$1=Function.prototype.toString,reIsHostCtor=/^\[object .+?Constructor\]$/,funcProto=Function.prototype,objectProto=Object.prototype,funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Map$1=getNative(root,"Map"),nativeCreate=getNative(Object,"create"),HASH_UNDEFINED="__lodash_hash_undefined__",hasOwnProperty$2=Object.prototype.hasOwnProperty,hasOwnProperty$3=Object.prototype.hasOwnProperty,HASH_UNDEFINED$1="__lodash_hash_undefined__";Hash.prototype.clear=function(){this.__data__=nativeCreate?nativeCreate(null):{},this.size=0},Hash.prototype.delete=function(key){var result=this.has(key)&&delete this.__data__[key];return this.size-=result?1:0,result},Hash.prototype.get=function(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?void 0:result}return hasOwnProperty$2.call(data,key)?data[key]:void 0},Hash.prototype.has=function(key){var data=this.__data__;return nativeCreate?void 0!==data[key]:hasOwnProperty$3.call(data,key)},Hash.prototype.set=function(key,value){var data=this.__data__;return this.size+=this.has(key)?0:1,data[key]=nativeCreate&&void 0===value?HASH_UNDEFINED$1:value,this},MapCache.prototype.clear=function(){this.size=0,this.__data__={hash:new Hash,map:new(Map$1||ListCache),string:new Hash}},MapCache.prototype.delete=function(key){var result=getMapData(this,key).delete(key);return this.size-=result?1:0,result},MapCache.prototype.get=function(key){return getMapData(this,key).get(key)},MapCache.prototype.has=function(key){return getMapData(this,key).has(key)},MapCache.prototype.set=function(key,value){var data=getMapData(this,key),size=data.size;return data.set(key,value),this.size+=data.size==size?0:1,this};var LARGE_ARRAY_SIZE=200;Stack.prototype.clear=function(){this.__data__=new ListCache,this.size=0},Stack.prototype.delete=function(key){var data=this.__data__,result=data.delete(key);return this.size=data.size,result},Stack.prototype.get=function(key){return this.__data__.get(key)},Stack.prototype.has=function(key){return this.__data__.has(key)},Stack.prototype.set=function(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map$1||pairs.length<LARGE_ARRAY_SIZE-1)return pairs.push([key,value]),this.size=++data.size,this;data=this.__data__=new MapCache(pairs)}return data.set(key,value),this.size=data.size,this};var HASH_UNDEFINED$2="__lodash_hash_undefined__";SetCache.prototype.add=SetCache.prototype.push=function(value){return this.__data__.set(value,HASH_UNDEFINED$2),this},SetCache.prototype.has=function(value){return this.__data__.has(value)};var COMPARE_PARTIAL_FLAG$2=1,COMPARE_UNORDERED_FLAG$1=2,Uint8Array$1=root.Uint8Array,COMPARE_PARTIAL_FLAG$3=1,COMPARE_UNORDERED_FLAG$2=2,boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",symbolProto=_Symbol?_Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0,isArray=Array.isArray,propertyIsEnumerable=Object.prototype.propertyIsEnumerable,nativeGetSymbols=Object.getOwnPropertySymbols,getSymbols=nativeGetSymbols?function(object){return null==object?[]:(object=Object(object),arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol)}))}:function(){return[]},argsTag$1="[object Arguments]",objectProto$9=Object.prototype,hasOwnProperty$7=objectProto$9.hasOwnProperty,propertyIsEnumerable$1=objectProto$9.propertyIsEnumerable,isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty$7.call(value,"callee")&&!propertyIsEnumerable$1.call(value,"callee")},freeExports="object"==(void 0===exports?"undefined":_typeof$$1(exports))&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&"object"==("undefined"==typeof module?"undefined":_typeof$$1(module))&&module&&!module.nodeType&&module,Buffer=freeModule&&freeModule.exports===freeExports?root.Buffer:void 0,isBuffer=(Buffer?Buffer.isBuffer:void 0)||function(){return!1},MAX_SAFE_INTEGER=9007199254740991,reIsUint=/^(?:0|[1-9]\d*)$/,MAX_SAFE_INTEGER$1=9007199254740991,typedArrayTags={};typedArrayTags["[object Float32Array]"]=typedArrayTags["[object Float64Array]"]=typedArrayTags["[object Int8Array]"]=typedArrayTags["[object Int16Array]"]=typedArrayTags["[object Int32Array]"]=typedArrayTags["[object Uint8Array]"]=typedArrayTags["[object Uint8ClampedArray]"]=typedArrayTags["[object Uint16Array]"]=typedArrayTags["[object Uint32Array]"]=!0,typedArrayTags["[object Arguments]"]=typedArrayTags["[object Array]"]=typedArrayTags["[object ArrayBuffer]"]=typedArrayTags["[object Boolean]"]=typedArrayTags["[object DataView]"]=typedArrayTags["[object Date]"]=typedArrayTags["[object Error]"]=typedArrayTags["[object Function]"]=typedArrayTags["[object Map]"]=typedArrayTags["[object Number]"]=typedArrayTags["[object Object]"]=typedArrayTags["[object RegExp]"]=typedArrayTags["[object Set]"]=typedArrayTags["[object String]"]=typedArrayTags["[object WeakMap]"]=!1;var freeExports$1="object"==(void 0===exports?"undefined":_typeof$$1(exports))&&exports&&!exports.nodeType&&exports,freeModule$1=freeExports$1&&"object"==("undefined"==typeof module?"undefined":_typeof$$1(module))&&module&&!module.nodeType&&module,freeProcess=freeModule$1&&freeModule$1.exports===freeExports$1&&freeGlobal.process,nodeUtil=function(){try{return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}(),nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray,isTypedArray=nodeIsTypedArray?function(func){return function(value){return func(value)}}(nodeIsTypedArray):function(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]},hasOwnProperty$6=Object.prototype.hasOwnProperty,objectProto$11=Object.prototype,nativeKeys=function(func,transform){return function(arg){return func(transform(arg))}}(Object.keys,Object),hasOwnProperty$8=Object.prototype.hasOwnProperty,COMPARE_PARTIAL_FLAG$4=1,hasOwnProperty$5=Object.prototype.hasOwnProperty,DataView=getNative(root,"DataView"),Promise$1=getNative(root,"Promise"),Set=getNative(root,"Set"),WeakMap=getNative(root,"WeakMap"),dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map$1),promiseCtorString=toSource(Promise$1),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap),getTag=baseGetTag;(DataView&&"[object DataView]"!=getTag(new DataView(new ArrayBuffer(1)))||Map$1&&"[object Map]"!=getTag(new Map$1)||Promise$1&&"[object Promise]"!=getTag(Promise$1.resolve())||Set&&"[object Set]"!=getTag(new Set)||WeakMap&&"[object WeakMap]"!=getTag(new WeakMap))&&(getTag=function(value){var result=baseGetTag(value),Ctor="[object Object]"==result?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return"[object DataView]";case mapCtorString:return"[object Map]";case promiseCtorString:return"[object Promise]";case setCtorString:return"[object Set]";case weakMapCtorString:return"[object WeakMap]"}return result});var getTag$1=getTag,COMPARE_PARTIAL_FLAG$1=1,argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]",hasOwnProperty$4=Object.prototype.hasOwnProperty,COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2,symbolTag$1="[object Symbol]",reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,FUNC_ERROR_TEXT="Expected a function";memoize.Cache=MapCache;var MAX_MEMOIZE_SIZE=500,reLeadingDot=/^\./,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar=/\\(\\)?/g,stringToPath=function(func){var result=memoize(func,function(key){return cache.size===MAX_MEMOIZE_SIZE&&cache.clear(),key}),cache=result.cache;return result}(function(string){var result=[];return reLeadingDot.test(string)&&result.push(""),string.replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,"$1"):number||match)}),result}),INFINITY=1/0,symbolProto$1=_Symbol?_Symbol.prototype:void 0,symbolToString=symbolProto$1?symbolProto$1.toString:void 0,INFINITY$1=1/0,COMPARE_PARTIAL_FLAG$5=1,COMPARE_UNORDERED_FLAG$3=2,baseFor=function(fromRight){return function(object,iteratee,keysFunc){for(var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;length--;){var key=props[fromRight?length:++index];if(!1===iteratee(iterable[key],key,iterable))break}return object}}(),baseEach=function(eachFunc,fromRight){return function(collection,iteratee){if(null==collection)return collection;if(!isArrayLike(collection))return eachFunc(collection,iteratee);for(var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);(fromRight?index--:++index<length)&&!1!==iteratee(iterable[index],index,iterable););return collection}}(function(object,iteratee){return object&&baseFor(object,iteratee,keys)}),rsAstral="[\\ud800-\\udfff]",rsCombo="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",rsNonAstral="[^\\ud800-\\udfff]",rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",reOptMod="(?:"+rsCombo+"|\\ud83c[\\udffb-\\udfff])"+"?",earthRadius=([rsNonAstral,rsRegional,rsSurrPair].join("|"),[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|"),6371008.8),factors={meters:earthRadius,metres:earthRadius,millimeters:1e3*earthRadius,millimetres:1e3*earthRadius,centimeters:100*earthRadius,centimetres:100*earthRadius,kilometers:earthRadius/1e3,kilometres:earthRadius/1e3,miles:earthRadius/1609.344,nauticalmiles:earthRadius/1852,inches:39.37*earthRadius,yards:earthRadius/1.0936,feet:3.28084*earthRadius,radians:1,degrees:earthRadius/111325},warn=(console.debug.bind(console,"%c turfHelper:","color:#00CC00;font-weight:bold;"),console.debug.bind(console,"%c turfHelper:","color:orange;font-weight:bold;")),identity$2=function(x){return x},transform=function(_transform){if(null==_transform)return identity$2;var x0,y0,kx=_transform.scale[0],ky=_transform.scale[1],dx=_transform.translate[0],dy=_transform.translate[1];return function(input,i){i||(x0=y0=0);var j=2,n=input.length,output=new Array(n);for(output[0]=(x0+=input[0])*kx+dx,output[1]=(y0+=input[1])*ky+dy;j<n;)output[j]=input[j],++j;return output}},reverse=function(array,n){for(var t,j=array.length,i=j-n;i<--j;)t=array[i],array[i++]=array[j],array[j]=t},stitch=function(topology,arcs){function flush(fragmentByEnd,fragmentByStart){for(var k in fragmentByEnd){var f=fragmentByEnd[k];delete fragmentByStart[f.start],delete f.start,delete f.end,f.forEach(function(i){stitchedArcs[i<0?~i:i]=1}),fragments.push(f)}}var stitchedArcs={},fragmentByStart={},fragmentByEnd={},fragments=[],emptyIndex=-1;return arcs.forEach(function(i,j){var t,arc=topology.arcs[i<0?~i:i];arc.length<3&&!arc[1][0]&&!arc[1][1]&&(t=arcs[++emptyIndex],arcs[emptyIndex]=i,arcs[j]=t)}),arcs.forEach(function(i){var f,g,e=function(i){var p1,arc=topology.arcs[i<0?~i:i],p0=arc[0];return topology.transform?(p1=[0,0],arc.forEach(function(dp){p1[0]+=dp[0],p1[1]+=dp[1]})):p1=arc[arc.length-1],i<0?[p1,p0]:[p0,p1]}(i),start=e[0],end=e[1];if(f=fragmentByEnd[start])if(delete fragmentByEnd[f.end],f.push(i),f.end=end,g=fragmentByStart[end]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg}else fragmentByStart[f.start]=fragmentByEnd[f.end]=f;else if(f=fragmentByStart[end])if(delete fragmentByStart[f.start],f.unshift(i),f.start=start,g=fragmentByEnd[start]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf}else fragmentByStart[f.start]=fragmentByEnd[f.end]=f;else fragmentByStart[(f=[i]).start=start]=fragmentByEnd[f.end=end]=f}),flush(fragmentByEnd,fragmentByStart),flush(fragmentByStart,fragmentByEnd),arcs.forEach(function(i){stitchedArcs[i<0?~i:i]||fragments.push([i])}),fragments},merge=function(topology){return object(topology,mergeArcs.apply(this,arguments))},hashmap=function(size,hash,equal,keyType,keyEmpty,valueType){3===arguments.length&&(keyType=valueType=Array,keyEmpty=null);for(var keystore=new keyType(size=1<<Math.max(4,Math.ceil(Math.log(size)/Math.LN2))),valstore=new valueType(size),mask=size-1,i=0;i<size;++i)keystore[i]=keyEmpty;return{set:function(key,value){for(var index=hash(key)&mask,matchKey=keystore[index],collisions=0;matchKey!=keyEmpty;){if(equal(matchKey,key))return valstore[index]=value;if(++collisions>=size)throw new Error("full hashmap");matchKey=keystore[index=index+1&mask]}return keystore[index]=key,valstore[index]=value,value},maybeSet:function(key,value){for(var index=hash(key)&mask,matchKey=keystore[index],collisions=0;matchKey!=keyEmpty;){if(equal(matchKey,key))return valstore[index];if(++collisions>=size)throw new Error("full hashmap");matchKey=keystore[index=index+1&mask]}return keystore[index]=key,valstore[index]=value,value},get:function(key,missingValue){for(var index=hash(key)&mask,matchKey=keystore[index],collisions=0;matchKey!=keyEmpty;){if(equal(matchKey,key))return valstore[index];if(++collisions>=size)break;matchKey=keystore[index=index+1&mask]}return missingValue},keys:function(){for(var keys=[],i=0,n=keystore.length;i<n;++i){var matchKey=keystore[i];matchKey!=keyEmpty&&keys.push(matchKey)}return keys}}},equalPoint=function(pointA,pointB){return pointA[0]===pointB[0]&&pointA[1]===pointB[1]},buffer=new ArrayBuffer(16),floats=new Float64Array(buffer),uints=new Uint32Array(buffer),hashPoint=function(point){floats[0]=point[0],floats[1]=point[1];var hash=uints[0]^uints[1];return 2147483647&(hash=hash<<5^hash>>7^uints[2]^uints[3])},join=function(topology){function sequence(i,previousIndex,currentIndex,nextIndex){if(visitedByIndex[currentIndex]!==i){visitedByIndex[currentIndex]=i;var leftIndex=leftByIndex[currentIndex];if(leftIndex>=0){var rightIndex=rightByIndex[currentIndex];leftIndex===previousIndex&&rightIndex===nextIndex||leftIndex===nextIndex&&rightIndex===previousIndex||(++junctionCount,junctionByIndex[currentIndex]=1)}else leftByIndex[currentIndex]=previousIndex,rightByIndex[currentIndex]=nextIndex}}function hashIndex(i){return hashPoint(coordinates[i])}function equalIndex(i,j){return equalPoint(coordinates[i],coordinates[j])}var i,n,currentIndex,nextIndex,coordinates=topology.coordinates,lines=topology.lines,rings=topology.rings,indexes=function(){for(var indexByPoint=hashmap(1.4*coordinates.length,hashIndex,equalIndex,Int32Array,-1,Int32Array),indexes=new Int32Array(coordinates.length),i=0,n=coordinates.length;i<n;++i)indexes[i]=indexByPoint.maybeSet(i,i);return indexes}(),visitedByIndex=new Int32Array(coordinates.length),leftByIndex=new Int32Array(coordinates.length),rightByIndex=new Int32Array(coordinates.length),junctionByIndex=new Int8Array(coordinates.length),junctionCount=0;for(i=0,n=coordinates.length;i<n;++i)visitedByIndex[i]=leftByIndex[i]=rightByIndex[i]=-1;for(i=0,n=lines.length;i<n;++i){var line=lines[i],lineStart=line[0],lineEnd=line[1];for(currentIndex=indexes[lineStart],nextIndex=indexes[++lineStart],++junctionCount,junctionByIndex[currentIndex]=1;++lineStart<=lineEnd;)sequence(i,currentIndex,currentIndex=nextIndex,nextIndex=indexes[lineStart]);++junctionCount,junctionByIndex[nextIndex]=1}for(i=0,n=coordinates.length;i<n;++i)visitedByIndex[i]=-1;for(i=0,n=rings.length;i<n;++i){var ring=rings[i],ringStart=ring[0]+1,ringEnd=ring[1];for(sequence(i,indexes[ringEnd-1],currentIndex=indexes[ringStart-1],nextIndex=indexes[ringStart]);++ringStart<=ringEnd;)sequence(i,currentIndex,currentIndex=nextIndex,nextIndex=indexes[ringStart])}visitedByIndex=leftByIndex=rightByIndex=null;var j,junctionByPoint=function(size,hash,equal,type,empty){3===arguments.length&&(type=Array,empty=null);for(var store=new type(size=1<<Math.max(4,Math.ceil(Math.log(size)/Math.LN2))),mask=size-1,i=0;i<size;++i)store[i]=empty;return{add:function(value){for(var index=hash(value)&mask,match=store[index],collisions=0;match!=empty;){if(equal(match,value))return!0;if(++collisions>=size)throw new Error("full hashset");match=store[index=index+1&mask]}return store[index]=value,!0},has:function(value){for(var index=hash(value)&mask,match=store[index],collisions=0;match!=empty;){if(equal(match,value))return!0;if(++collisions>=size)break;match=store[index=index+1&mask]}return!1},values:function(){for(var values=[],i=0,n=store.length;i<n;++i){var match=store[i];match!=empty&&values.push(match)}return values}}}(1.4*junctionCount,hashPoint,equalPoint);for(i=0,n=coordinates.length;i<n;++i)junctionByIndex[j=indexes[i]]&&junctionByPoint.add(coordinates[j]);return junctionByPoint},cut=function(topology){var next,i,n,junctions=join(topology),coordinates=topology.coordinates,lines=topology.lines,rings=topology.rings;for(i=0,n=lines.length;i<n;++i)for(var line=lines[i],lineMid=line[0],lineEnd=line[1];++lineMid<lineEnd;)junctions.has(coordinates[lineMid])&&(next={0:lineMid,1:line[1]},line[1]=lineMid,line=line.next=next);for(i=0,n=rings.length;i<n;++i)for(var ring=rings[i],ringStart=ring[0],ringMid=ringStart,ringEnd=ring[1],ringFixed=junctions.has(coordinates[ringStart]);++ringMid<ringEnd;)junctions.has(coordinates[ringMid])&&(ringFixed?(next={0:ringMid,1:ring[1]},ring[1]=ringMid,ring=ring.next=next):(!function(array,start,end,offset){reverse$1(array,start,end),reverse$1(array,start,start+offset),reverse$1(array,start+offset,end)}(coordinates,ringStart,ringEnd,ringEnd-ringMid),coordinates[ringEnd]=coordinates[ringStart],ringFixed=!0,ringMid=ringStart));return topology},dedup$1=function(topology){function dedupLine(arc){var startPoint,endPoint,startArcs,startArc,endArcs,endArc,i,n;if(startArcs=arcsByEnd.get(startPoint=coordinates[arc[0]]))for(i=0,n=startArcs.length;i<n;++i)if(startArc=startArcs[i],function(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1];if(ia-ja!=ib-jb)return!1;for(;ia<=ja;++ia,++ib)if(!equalPoint(coordinates[ia],coordinates[ib]))return!1;return!0}(startArc,arc))return arc[0]=startArc[0],void(arc[1]=startArc[1]);if(endArcs=arcsByEnd.get(endPoint=coordinates[arc[1]]))for(i=0,n=endArcs.length;i<n;++i)if(endArc=endArcs[i],function(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1];if(ia-ja!=ib-jb)return!1;for(;ia<=ja;++ia,--jb)if(!equalPoint(coordinates[ia],coordinates[jb]))return!1;return!0}(endArc,arc))return arc[1]=endArc[0],void(arc[0]=endArc[1]);startArcs?startArcs.push(arc):arcsByEnd.set(startPoint,[arc]),endArcs?endArcs.push(arc):arcsByEnd.set(endPoint,[arc]),arcs.push(arc)}function equalRing(arcA,arcB){var ia=arcA[0],ib=arcB[0],n=arcA[1]-ia;if(n!==arcB[1]-ib)return!1;for(var ka=findMinimumOffset(arcA),kb=findMinimumOffset(arcB),i=0;i<n;++i)if(!equalPoint(coordinates[ia+(i+ka)%n],coordinates[ib+(i+kb)%n]))return!1;return!0}function reverseEqualRing(arcA,arcB){var ia=arcA[0],ib=arcB[0],ja=arcA[1],jb=arcB[1],n=ja-ia;if(n!==jb-ib)return!1;for(var ka=findMinimumOffset(arcA),kb=n-findMinimumOffset(arcB),i=0;i<n;++i)if(!equalPoint(coordinates[ia+(i+ka)%n],coordinates[jb-(i+kb)%n]))return!1;return!0}function findMinimumOffset(arc){for(var start=arc[0],end=arc[1],mid=start,minimum=mid,minimumPoint=coordinates[mid];++mid<end;){var point=coordinates[mid];(point[0]<minimumPoint[0]||point[0]===minimumPoint[0]&&point[1]<minimumPoint[1])&&(minimum=mid,minimumPoint=point)}return minimum-start}var line,ring,i,n,coordinates=topology.coordinates,lines=topology.lines,rings=topology.rings,arcCount=lines.length+rings.length;for(delete topology.lines,delete topology.rings,i=0,n=lines.length;i<n;++i)for(line=lines[i];line=line.next;)++arcCount;for(i=0,n=rings.length;i<n;++i)for(ring=rings[i];ring=ring.next;)++arcCount;var arcsByEnd=hashmap(2*arcCount*1.4,hashPoint,equalPoint),arcs=topology.arcs=[];for(i=0,n=lines.length;i<n;++i){line=lines[i];do{dedupLine(line)}while(line=line.next)}for(i=0,n=rings.length;i<n;++i)if((ring=rings[i]).next)do{dedupLine(ring)}while(ring=ring.next);else!function(arc){var endPoint,endArcs,endArc,i,n;if(endArcs=arcsByEnd.get(endPoint=coordinates[arc[0]]))for(i=0,n=endArcs.length;i<n;++i){if(endArc=endArcs[i],equalRing(endArc,arc))return arc[0]=endArc[0],void(arc[1]=endArc[1]);if(reverseEqualRing(endArc,arc))return arc[0]=endArc[1],void(arc[1]=endArc[0])}if(endArcs=arcsByEnd.get(endPoint=coordinates[arc[0]+findMinimumOffset(arc)]))for(i=0,n=endArcs.length;i<n;++i){if(endArc=endArcs[i],equalRing(endArc,arc))return arc[0]=endArc[0],void(arc[1]=endArc[1]);if(reverseEqualRing(endArc,arc))return arc[0]=endArc[1],void(arc[1]=endArc[0])}endArcs?endArcs.push(arc):arcsByEnd.set(endPoint,[arc]),arcs.push(arc)}(ring);return topology},topology=function(objects,quantization){function indexGeometry(geometry){geometry&&indexGeometryType.hasOwnProperty(geometry.type)&&indexGeometryType[geometry.type](geometry)}function indexArcs(arc){var indexes=[];do{var index=indexByArc.get(arc);indexes.push(arc[0]<arc[1]?index:~index)}while(arc=arc.next);return indexes}function indexMultiArcs(arcs){return arcs.map(indexArcs)}var bbox=function(objects){function boundGeometry(geometry){null!=geometry&&boundGeometryType.hasOwnProperty(geometry.type)&&boundGeometryType[geometry.type](geometry)}function boundPoint(coordinates){var x=coordinates[0],y=coordinates[1];x<x0&&(x0=x),x>x1&&(x1=x),y<y0&&(y0=y),y>y1&&(y1=y)}function boundLine(coordinates){coordinates.forEach(boundPoint)}function boundMultiLine(coordinates){coordinates.forEach(boundLine)}var x0=1/0,y0=1/0,x1=-1/0,y1=-1/0,boundGeometryType={GeometryCollection:function(o){o.geometries.forEach(boundGeometry)},Point:function(o){boundPoint(o.coordinates)},MultiPoint:function(o){o.coordinates.forEach(boundPoint)},LineString:function(o){boundLine(o.arcs)},MultiLineString:function(o){o.arcs.forEach(boundLine)},Polygon:function(o){o.arcs.forEach(boundLine)},MultiPolygon:function(o){o.arcs.forEach(boundMultiLine)}};for(var key in objects)boundGeometry(objects[key]);return x1>=x0&&y1>=y0?[x0,y0,x1,y1]:void 0}(objects=function(inputs){var key,outputs={};for(key in inputs)outputs[key]=geomifyObject(inputs[key]);return outputs}(objects)),transform=quantization>0&&bbox&&function(objects,bbox,n){function quantizePoint(input){return[Math.round((input[0]-x0)*kx),Math.round((input[1]-y0)*ky)]}function quantizePoints(input,m){for(var pi,px,py,x,y,i=-1,j=0,n=input.length,output=new Array(n);++i<n;)pi=input[i],x=Math.round((pi[0]-x0)*kx),y=Math.round((pi[1]-y0)*ky),x===px&&y===py||(output[j++]=[px=x,py=y]);for(output.length=j;j<m;)j=output.push([output[0][0],output[0][1]]);return output}function quantizeLine(input){return quantizePoints(input,2)}function quantizeRing(input){return quantizePoints(input,4)}function quantizePolygon(input){return input.map(quantizeRing)}function quantizeGeometry(o){null!=o&&quantizeGeometryType.hasOwnProperty(o.type)&&quantizeGeometryType[o.type](o)}var x0=bbox[0],y0=bbox[1],x1=bbox[2],y1=bbox[3],kx=x1-x0?(n-1)/(x1-x0):1,ky=y1-y0?(n-1)/(y1-y0):1,quantizeGeometryType={GeometryCollection:function(o){o.geometries.forEach(quantizeGeometry)},Point:function(o){o.coordinates=quantizePoint(o.coordinates)},MultiPoint:function(o){o.coordinates=o.coordinates.map(quantizePoint)},LineString:function(o){o.arcs=quantizeLine(o.arcs)},MultiLineString:function(o){o.arcs=o.arcs.map(quantizeLine)},Polygon:function(o){o.arcs=quantizePolygon(o.arcs)},MultiPolygon:function(o){o.arcs=o.arcs.map(quantizePolygon)}};for(var key in objects)quantizeGeometry(objects[key]);return{scale:[1/kx,1/ky],translate:[x0,y0]}}(objects,bbox,quantization),topology=dedup$1(cut(function(objects){function extractGeometry(geometry){geometry&&extractGeometryType.hasOwnProperty(geometry.type)&&extractGeometryType[geometry.type](geometry)}function extractLine(line){for(var i=0,n=line.length;i<n;++i)coordinates[++index]=line[i];var arc={0:index-n+1,1:index};return lines.push(arc),arc}function extractRing(ring){for(var i=0,n=ring.length;i<n;++i)coordinates[++index]=ring[i];var arc={0:index-n+1,1:index};return rings.push(arc),arc}function extractMultiRing(rings){return rings.map(extractRing)}var index=-1,lines=[],rings=[],coordinates=[],extractGeometryType={GeometryCollection:function(o){o.geometries.forEach(extractGeometry)},LineString:function(o){o.arcs=extractLine(o.arcs)},MultiLineString:function(o){o.arcs=o.arcs.map(extractLine)},Polygon:function(o){o.arcs=o.arcs.map(extractRing)},MultiPolygon:function(o){o.arcs=o.arcs.map(extractMultiRing)}};for(var key in objects)extractGeometry(objects[key]);return{type:"Topology",coordinates:coordinates,lines:lines,rings:rings,objects:objects}}(objects))),coordinates=topology.coordinates,indexByArc=hashmap(1.4*topology.arcs.length,hashArc,equalArc);objects=topology.objects,topology.bbox=bbox,topology.arcs=topology.arcs.map(function(arc,i){return indexByArc.set(arc,i),coordinates.slice(arc[0],arc[1]+1)}),delete topology.coordinates,coordinates=null;var indexGeometryType={GeometryCollection:function(o){o.geometries.forEach(indexGeometry)},LineString:function(o){o.arcs=indexArcs(o.arcs)},MultiLineString:function(o){o.arcs=o.arcs.map(indexArcs)},Polygon:function(o){o.arcs=o.arcs.map(indexArcs)},MultiPolygon:function(o){o.arcs=o.arcs.map(indexMultiArcs)}};for(var key in objects)indexGeometry(objects[key]);return transform&&(topology.transform=transform,topology.arcs=function(arcs){for(var i=-1,n=arcs.length;++i<n;){for(var x1,y1,arc=arcs[i],j=0,k=1,m=arc.length,point=arc[0],x0=point[0],y0=point[1];++j<m;)x1=(point=arc[j])[0],y1=point[1],x1===x0&&y1===y0||(arc[k++]=[x1-x0,y1-y0],x0=x1,y0=y1);1===k&&(arc[k++]=[0,0]),arc.length=k}return arcs}(topology.arcs)),topology},simplify$1=function(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}(function(module){!function(){function getSqDist(p1,p2){var dx=p1.x-p2.x,dy=p1.y-p2.y;return dx*dx+dy*dy}function getSqSegDist(p,p1,p2){var x=p1.x,y=p1.y,dx=p2.x-x,dy=p2.y-y;if(0!==dx||0!==dy){var t=((p.x-x)*dx+(p.y-y)*dy)/(dx*dx+dy*dy);t>1?(x=p2.x,y=p2.y):t>0&&(x+=dx*t,y+=dy*t)}return dx=p.x-x,dy=p.y-y,dx*dx+dy*dy}function simplify(points,tolerance,highestQuality){var sqTolerance=void 0!==tolerance?tolerance*tolerance:1;return points=highestQuality?points:function(points,sqTolerance){for(var point,prevPoint=points[0],newPoints=[prevPoint],i=1,len=points.length;i<len;i++)getSqDist(point=points[i],prevPoint)>sqTolerance&&(newPoints.push(point),prevPoint=point);return prevPoint!==point&&newPoints.push(point),newPoints}(points,sqTolerance),points=function(points,sqTolerance){var i,maxSqDist,sqDist,index,len=points.length,markers=new("undefined"!=typeof Uint8Array?Uint8Array:Array)(len),first=0,last=len-1,stack=[],newPoints=[];for(markers[first]=markers[last]=1;last;){for(maxSqDist=0,i=first+1;i<last;i++)(sqDist=getSqSegDist(points[i],points[first],points[last]))>maxSqDist&&(index=i,maxSqDist=sqDist);maxSqDist>sqTolerance&&(markers[index]=1,stack.push(first,index,index,last)),last=stack.pop(),first=stack.pop()}for(i=0;i<len;i++)markers[i]&&newPoints.push(points[i]);return newPoints}(points,sqTolerance)}module.exports=simplify}()}),extend=function(target,source){for(var key in source)source.hasOwnProperty(key)&&(target[key]=source[key])};extend(NumberUtil.prototype,{interfaces_:function(){return[]},getClass:function(){return NumberUtil}}),NumberUtil.equalsWithTolerance=function(x1,x2,tolerance){return Math.abs(x1-x2)<=tolerance},Double.isNaN=function(n){return Number.isNaN(n)},Double.doubleToLongBits=function(n){return n},Double.longBitsToDouble=function(n){return n},Double.isInfinite=function(n){return!Number.isFinite(n)},Double.MAX_VALUE=Number.MAX_VALUE,(RuntimeException.prototype=Object.create(Error.prototype)).constructor=Error;var inherits$1=function(c,p){c.prototype=Object.create(p.prototype),c.prototype.constructor=c};inherits$1(AssertionFailedException,RuntimeException),extend(AssertionFailedException.prototype,{interfaces_:function(){return[]},getClass:function(){return AssertionFailedException}}),extend(Assert.prototype,{interfaces_:function(){return[]},getClass:function(){return Assert}}),Assert.shouldNeverReachHere=function(){if(0===arguments.length)Assert.shouldNeverReachHere(null);else if(1===arguments.length){var message=arguments[0];throw new AssertionFailedException("Should never reach here"+(null!==message?": "+message:""))}},Assert.isTrue=function(){if(1===arguments.length){assertion=arguments[0];Assert.isTrue(assertion,null)}else if(2===arguments.length){var assertion=arguments[0],message=arguments[1];if(!assertion)throw null===message?new AssertionFailedException:new AssertionFailedException(message)}},Assert.equals=function(){if(2===arguments.length){var expectedValue=arguments[0],actualValue=arguments[1];Assert.equals(expectedValue,actualValue,null)}else if(3===arguments.length){var expectedValue=arguments[0],actualValue=arguments[1],message=arguments[2];if(!actualValue.equals(expectedValue))throw new AssertionFailedException("Expected "+expectedValue+" but encountered "+actualValue+(null!==message?": "+message:""))}},extend(Coordinate.prototype,{setOrdinate:function(ordinateIndex,value){switch(ordinateIndex){case Coordinate.X:this.x=value;break;case Coordinate.Y:this.y=value;break;case Coordinate.Z:this.z=value;break;default:throw new IllegalArgumentException("Invalid ordinate index: "+ordinateIndex)}},equals2D:function(){if(1===arguments.length){var other=arguments[0];return this.x===other.x&&this.y===other.y}if(2===arguments.length){var c=arguments[0],tolerance=arguments[1];return!!NumberUtil.equalsWithTolerance(this.x,c.x,tolerance)&&!!NumberUtil.equalsWithTolerance(this.y,c.y,tolerance)}},getOrdinate:function(ordinateIndex){switch(ordinateIndex){case Coordinate.X:return this.x;case Coordinate.Y:return this.y;case Coordinate.Z:return this.z}throw new IllegalArgumentException("Invalid ordinate index: "+ordinateIndex)},equals3D:function(other){return this.x===other.x&&this.y===other.y&&(this.z===other.z||Double.isNaN(this.z)&&Double.isNaN(other.z))},equals:function(other){return other instanceof Coordinate&&this.equals2D(other)},equalInZ:function(c,tolerance){return NumberUtil.equalsWithTolerance(this.z,c.z,tolerance)},compareTo:function(o){var other=o;return this.x<other.x?-1:this.x>other.x?1:this.y<other.y?-1:this.y>other.y?1:0},clone:function(){try{return null}catch(e){if(e instanceof CloneNotSupportedException)return Assert.shouldNeverReachHere("this shouldn't happen because this class is Cloneable"),null;throw e}},copy:function(){return new Coordinate(this)},toString:function(){return"("+this.x+", "+this.y+", "+this.z+")"},distance3D:function(c){var dx=this.x-c.x,dy=this.y-c.y,dz=this.z-c.z;return Math.sqrt(dx*dx+dy*dy+dz*dz)},distance:function(c){var dx=this.x-c.x,dy=this.y-c.y;return Math.sqrt(dx*dx+dy*dy)},hashCode:function(){var result=17;return result=37*result+Coordinate.hashCode(this.x),result=37*result+Coordinate.hashCode(this.y)},setCoordinate:function(other){this.x=other.x,this.y=other.y,this.z=other.z},interfaces_:function(){return[Comparable,Clonable,Serializable]},getClass:function(){return Coordinate}}),Coordinate.hashCode=function(){if(1===arguments.length){var x=arguments[0],f=Double.doubleToLongBits(x);return Math.trunc(f^f>>>32)}},extend(DimensionalComparator.prototype,{compare:function(o1,o2){var c1=o1,c2=o2,compX=DimensionalComparator.compare(c1.x,c2.x);if(0!==compX)return compX;var compY=DimensionalComparator.compare(c1.y,c2.y);if(0!==compY)return compY;if(this._dimensionsToTest<=2)return 0;return DimensionalComparator.compare(c1.z,c2.z)},interfaces_:function(){return[Comparator]},getClass:function(){return DimensionalComparator}}),DimensionalComparator.compare=function(a,b){return a<b?-1:a>b?1:Double.isNaN(a)?Double.isNaN(b)?0:-1:Double.isNaN(b)?1:0},Coordinate.DimensionalComparator=DimensionalComparator,Coordinate.serialVersionUID=0x5cbf2c235c7e5800,Coordinate.NULL_ORDINATE=Double.NaN,Coordinate.X=0,Coordinate.Y=1,Coordinate.Z=2,Iterator.prototype.hasNext=function(){},Iterator.prototype.next=function(){},Iterator.prototype.remove=function(){},Collection.prototype.add=function(){},Collection.prototype.addAll=function(){},Collection.prototype.isEmpty=function(){},Collection.prototype.iterator=function(){},Collection.prototype.size=function(){},Collection.prototype.toArray=function(){},Collection.prototype.remove=function(){},(IndexOutOfBoundsException$1.prototype=new Error).name="IndexOutOfBoundsException",(List.prototype=Object.create(Collection.prototype)).constructor=List,List.prototype.get=function(){},List.prototype.set=function(){},List.prototype.isEmpty=function(){},(NoSuchElementException.prototype=new Error).name="NoSuchElementException",(OperationNotSupported.prototype=new Error).name="OperationNotSupported",(ArrayList.prototype=Object.create(List.prototype)).constructor=ArrayList,ArrayList.prototype.ensureCapacity=function(){},ArrayList.prototype.interfaces_=function(){return[List,Collection]},ArrayList.prototype.add=function(e){return 1===arguments.length?this.array_.push(e):this.array_.splice(arguments[0],arguments[1]),!0},ArrayList.prototype.clear=function(){this.array_=[]},ArrayList.prototype.addAll=function(c){for(var i=c.iterator();i.hasNext();)this.add(i.next());return!0},ArrayList.prototype.set=function(index,element){var oldElement=this.array_[index];return this.array_[index]=element,oldElement},ArrayList.prototype.iterator=function(){return new Iterator_(this)},ArrayList.prototype.get=function(index){if(index<0||index>=this.size())throw new IndexOutOfBoundsException$1;return this.array_[index]},ArrayList.prototype.isEmpty=function(){return 0===this.array_.length},ArrayList.prototype.size=function(){return this.array_.length},ArrayList.prototype.toArray=function(){for(var array=[],i=0,len=this.array_.length;i<len;i++)array.push(this.array_[i]);return array},ArrayList.prototype.remove=function(o){for(var found=!1,i=0,len=this.array_.length;i<len;i++)if(this.array_[i]===o){this.array_.splice(i,1),found=!0;break}return found};var Iterator_=function(arrayList){this.arrayList_=arrayList,this.position_=0};Iterator_.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new NoSuchElementException;return this.arrayList_.get(this.position_++)},Iterator_.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},Iterator_.prototype.set=function(element){return this.arrayList_.set(this.position_-1,element)},Iterator_.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},inherits$1(CoordinateList,ArrayList),extend(CoordinateList.prototype,{getCoordinate:function(i){return this.get(i)},addAll:function(){if(2===arguments.length){for(var coll=arguments[0],allowRepeated=arguments[1],isChanged=!1,i=coll.iterator();i.hasNext();)this.add(i.next(),allowRepeated),isChanged=!0;return isChanged}return ArrayList.prototype.addAll.apply(this,arguments)},clone:function(){for(var clone=ArrayList.prototype.clone.call(this),i=0;i<this.size();i++)clone.add(i,this.get(i).copy());return clone},toCoordinateArray:function(){return this.toArray(CoordinateList.coordArrayType)},add:function(){if(1===arguments.length){coord=arguments[0];ArrayList.prototype.add.call(this,coord)}else if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var coord=arguments[0],allowRepeated=arguments[1];return this.add(coord,allowRepeated,!0),!0}if(arguments[0]instanceof Coordinate&&"boolean"==typeof arguments[1]){coord=arguments[0];if(!(allowRepeated=arguments[1])&&this.size()>=1){if(this.get(this.size()-1).equals2D(coord))return null}ArrayList.prototype.add.call(this,coord)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){var obj=arguments[0],allowRepeated=arguments[1];return this.add(obj,allowRepeated),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var coord=arguments[0],allowRepeated=arguments[1];if(arguments[2])for(i=0;i<coord.length;i++)this.add(coord[i],allowRepeated);else for(i=coord.length-1;i>=0;i--)this.add(coord[i],allowRepeated);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof Coordinate){var i=arguments[0],coord=arguments[1];if(!(allowRepeated=arguments[2])){var size=this.size();if(size>0){if(i>0){if(this.get(i-1).equals2D(coord))return null}if(i<size){if(this.get(i).equals2D(coord))return null}}}ArrayList.prototype.add.call(this,i,coord)}}else if(4===arguments.length){var coord=arguments[0],allowRepeated=arguments[1],start=arguments[2],end=arguments[3],inc=1;start>end&&(inc=-1);for(i=start;i!==end;i+=inc)this.add(coord[i],allowRepeated);return!0}},closeRing:function(){this.size()>0&&this.add(new Coordinate(this.get(0)),!1)},interfaces_:function(){return[]},getClass:function(){return CoordinateList}}),CoordinateList.coordArrayType=new Array(0).fill(null),extend(Envelope.prototype,{getArea:function(){return this.getWidth()*this.getHeight()},equals:function(other){if(!(other instanceof Envelope))return!1;var otherEnvelope=other;return this.isNull()?otherEnvelope.isNull():this._maxx===otherEnvelope.getMaxX()&&this._maxy===otherEnvelope.getMaxY()&&this._minx===otherEnvelope.getMinX()&&this._miny===otherEnvelope.getMinY()},intersection:function(env){if(this.isNull()||env.isNull()||!this.intersects(env))return new Envelope;var intMinX=this._minx>env._minx?this._minx:env._minx,intMinY=this._miny>env._miny?this._miny:env._miny;return new Envelope(intMinX,this._maxx<env._maxx?this._maxx:env._maxx,intMinY,this._maxy<env._maxy?this._maxy:env._maxy)},isNull:function(){return this._maxx<this._minx},getMaxX:function(){return this._maxx},covers:function(){if(1===arguments.length){if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.covers(p.x,p.y)}if(arguments[0]instanceof Envelope){var other=arguments[0];return!this.isNull()&&!other.isNull()&&(other.getMinX()>=this._minx&&other.getMaxX()<=this._maxx&&other.getMinY()>=this._miny&&other.getMaxY()<=this._maxy)}}else if(2===arguments.length){var x=arguments[0],y=arguments[1];return!this.isNull()&&(x>=this._minx&&x<=this._maxx&&y>=this._miny&&y<=this._maxy)}},intersects:function(){if(1===arguments.length){if(arguments[0]instanceof Envelope){var other=arguments[0];return!this.isNull()&&!other.isNull()&&!(other._minx>this._maxx||other._maxx<this._minx||other._miny>this._maxy||other._maxy<this._miny)}if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.intersects(p.x,p.y)}}else if(2===arguments.length){var x=arguments[0],y=arguments[1];return!this.isNull()&&!(x>this._maxx||x<this._minx||y>this._maxy||y<this._miny)}},getMinY:function(){return this._miny},getMinX:function(){return this._minx},expandToInclude:function(){if(1===arguments.length){if(arguments[0]instanceof Coordinate){var p=arguments[0];this.expandToInclude(p.x,p.y)}else if(arguments[0]instanceof Envelope){var other=arguments[0];if(other.isNull())return null;this.isNull()?(this._minx=other.getMinX(),this._maxx=other.getMaxX(),this._miny=other.getMinY(),this._maxy=other.getMaxY()):(other._minx<this._minx&&(this._minx=other._minx),other._maxx>this._maxx&&(this._maxx=other._maxx),other._miny<this._miny&&(this._miny=other._miny),other._maxy>this._maxy&&(this._maxy=other._maxy))}}else if(2===arguments.length){var x=arguments[0],y=arguments[1];this.isNull()?(this._minx=x,this._maxx=x,this._miny=y,this._maxy=y):(x<this._minx&&(this._minx=x),x>this._maxx&&(this._maxx=x),y<this._miny&&(this._miny=y),y>this._maxy&&(this._maxy=y))}},minExtent:function(){if(this.isNull())return 0;var w=this.getWidth(),h=this.getHeight();return w<h?w:h},getWidth:function(){return this.isNull()?0:this._maxx-this._minx},compareTo:function(o){var env=o;return this.isNull()?env.isNull()?0:-1:env.isNull()?1:this._minx<env._minx?-1:this._minx>env._minx?1:this._miny<env._miny?-1:this._miny>env._miny?1:this._maxx<env._maxx?-1:this._maxx>env._maxx?1:this._maxy<env._maxy?-1:this._maxy>env._maxy?1:0},translate:function(transX,transY){if(this.isNull())return null;this.init(this.getMinX()+transX,this.getMaxX()+transX,this.getMinY()+transY,this.getMaxY()+transY)},toString:function(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"},setToNull:function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},getHeight:function(){return this.isNull()?0:this._maxy-this._miny},maxExtent:function(){if(this.isNull())return 0;var w=this.getWidth(),h=this.getHeight();return w>h?w:h},expandBy:function(){if(1===arguments.length){var distance=arguments[0];this.expandBy(distance,distance)}else if(2===arguments.length){var deltaX=arguments[0],deltaY=arguments[1];if(this.isNull())return null;this._minx-=deltaX,this._maxx+=deltaX,this._miny-=deltaY,this._maxy+=deltaY,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},contains:function(){if(1===arguments.length){if(arguments[0]instanceof Envelope){var other=arguments[0];return this.covers(other)}if(arguments[0]instanceof Coordinate){var p=arguments[0];return this.covers(p)}}else if(2===arguments.length){var x=arguments[0],y=arguments[1];return this.covers(x,y)}},centre:function(){return this.isNull()?null:new Coordinate((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},init:function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof Coordinate){var p=arguments[0];this.init(p.x,p.x,p.y,p.y)}else if(arguments[0]instanceof Envelope){var env=arguments[0];this._minx=env._minx,this._maxx=env._maxx,this._miny=env._miny,this._maxy=env._maxy}}else if(2===arguments.length){var p1=arguments[0],p2=arguments[1];this.init(p1.x,p2.x,p1.y,p2.y)}else if(4===arguments.length){var x1=arguments[0],x2=arguments[1],y1=arguments[2],y2=arguments[3];x1<x2?(this._minx=x1,this._maxx=x2):(this._minx=x2,this._maxx=x1),y1<y2?(this._miny=y1,this._maxy=y2):(this._miny=y2,this._maxy=y1)}},getMaxY:function(){return this._maxy},distance:function(env){if(this.intersects(env))return 0;var dx=0;this._maxx<env._minx?dx=env._minx-this._maxx:this._minx>env._maxx&&(dx=this._minx-env._maxx);var dy=0;return this._maxy<env._miny?dy=env._miny-this._maxy:this._miny>env._maxy&&(dy=this._miny-env._maxy),0===dx?dy:0===dy?dx:Math.sqrt(dx*dx+dy*dy)},hashCode:function(){var result=17;return result=37*result+Coordinate.hashCode(this._minx),result=37*result+Coordinate.hashCode(this._maxx),result=37*result+Coordinate.hashCode(this._miny),result=37*result+Coordinate.hashCode(this._maxy)},interfaces_:function(){return[Comparable,Serializable]},getClass:function(){return Envelope}}),Envelope.intersects=function(){if(3===arguments.length){var p1=arguments[0],p2=arguments[1],q=arguments[2];return q.x>=(p1.x<p2.x?p1.x:p2.x)&&q.x<=(p1.x>p2.x?p1.x:p2.x)&&q.y>=(p1.y<p2.y?p1.y:p2.y)&&q.y<=(p1.y>p2.y?p1.y:p2.y)}if(4===arguments.length){var p1=arguments[0],p2=arguments[1],q1=arguments[2],q2=arguments[3],minq=Math.min(q1.x,q2.x),maxq=Math.max(q1.x,q2.x),minp=Math.min(p1.x,p2.x),maxp=Math.max(p1.x,p2.x);return!(minp>maxq)&&(!(maxp<minq)&&(minq=Math.min(q1.y,q2.y),maxq=Math.max(q1.y,q2.y),minp=Math.min(p1.y,p2.y),maxp=Math.max(p1.y,p2.y),!(minp>maxq)&&!(maxp<minq)))}},Envelope.serialVersionUID=0x51845cd552189800,inherits$1(NotRepresentableException,Exception),extend(NotRepresentableException.prototype,{interfaces_:function(){return[]},getClass:function(){return NotRepresentableException}}),extend(Location.prototype,{interfaces_:function(){return[]},getClass:function(){return Location}}),Location.toLocationSymbol=function(locationValue){switch(locationValue){case Location.EXTERIOR:return"e";case Location.BOUNDARY:return"b";case Location.INTERIOR:return"i";case Location.NONE:return"-"}throw new IllegalArgumentException("Unknown location value: "+locationValue)},Location.INTERIOR=0,Location.BOUNDARY=1,Location.EXTERIOR=2,Location.NONE=-1;var hasInterface=function(o,i){return o.interfaces_&&o.interfaces_().indexOf(i)>-1};extend(MathUtil.prototype,{interfaces_:function(){return[]},getClass:function(){return MathUtil}}),MathUtil.log10=function(x){var ln=Math.log(x);return Double.isInfinite(ln)?ln:Double.isNaN(ln)?ln:ln/MathUtil.LOG_10},MathUtil.min=function(v1,v2,v3,v4){var min=v1;return v2<min&&(min=v2),v3<min&&(min=v3),v4<min&&(min=v4),min},MathUtil.clamp=function(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){var x=arguments[0],min=arguments[1],max=arguments[2];return x<min?min:x>max?max:x}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var x=arguments[0],min=arguments[1],max=arguments[2];return x<min?min:x>max?max:x}},MathUtil.wrap=function(index,max){return index<0?max- -index%max:index%max},MathUtil.max=function(){if(3===arguments.length){var v1=arguments[0],v2=arguments[1],v3=arguments[2];return v2>(max=v1)&&(max=v2),v3>max&&(max=v3),max}if(4===arguments.length){var v1=arguments[0],v2=arguments[1],v3=arguments[2],v4=arguments[3],max=v1;return v2>max&&(max=v2),v3>max&&(max=v3),v4>max&&(max=v4),max}},MathUtil.average=function(x1,x2){return(x1+x2)/2},MathUtil.LOG_10=Math.log(10),StringBuffer.prototype.append=function(e){this.str+=e},StringBuffer.prototype.setCharAt=function(i,c){this.str=this.str.substr(0,i)+c+this.str.substr(i+1)},StringBuffer.prototype.toString=function(e){return this.str},Integer.prototype.intValue=function(){return this.value},Integer.prototype.compareTo=function(o){return this.value<o?-1:this.value>o?1:0},Integer.isNaN=function(n){return Number.isNaN(n)},Character.isWhitespace=function(c){return c<=32&&c>=0||127==c},Character.toUpperCase=function(c){return c.toUpperCase()},extend(DD.prototype,{le:function(y){return this._hi<y._hi||this._hi===y._hi&&this._lo<=y._lo},extractSignificantDigits:function(insertDecimalPoint,magnitude){var y=this.abs(),mag=DD.magnitude(y._hi),scale=DD.TEN.pow(mag);(y=y.divide(scale)).gt(DD.TEN)?(y=y.divide(DD.TEN),mag+=1):y.lt(DD.ONE)&&(y=y.multiply(DD.TEN),mag-=1);for(var decimalPointPos=mag+1,buf=new StringBuffer,numDigits=DD.MAX_PRINT_DIGITS-1,i=0;i<=numDigits;i++){insertDecimalPoint&&i===decimalPointPos&&buf.append(".");var digit=Math.trunc(y._hi);if(digit<0)break;var rebiasBy10=!1,digitChar=0;digit>9?(rebiasBy10=!0,digitChar="9"):digitChar="0"+digit,buf.append(digitChar),y=y.subtract(DD.valueOf(digit)).multiply(DD.TEN),rebiasBy10&&y.selfAdd(DD.TEN);var continueExtractingDigits=!0,remMag=DD.magnitude(y._hi);if(remMag<0&&Math.abs(remMag)>=numDigits-i&&(continueExtractingDigits=!1),!continueExtractingDigits)break}return magnitude[0]=mag,buf.toString()},sqr:function(){return this.multiply(this)},doubleValue:function(){return this._hi+this._lo},subtract:function(){if(arguments[0]instanceof DD){y=arguments[0];return this.add(y.negate())}if("number"==typeof arguments[0]){var y=arguments[0];return this.add(-y)}},equals:function(){if(1===arguments.length){var y=arguments[0];return this._hi===y._hi&&this._lo===y._lo}},isZero:function(){return 0===this._hi&&0===this._lo},selfSubtract:function(){if(arguments[0]instanceof DD){y=arguments[0];return this.isNaN()?this:this.selfAdd(-y._hi,-y._lo)}if("number"==typeof arguments[0]){var y=arguments[0];return this.isNaN()?this:this.selfAdd(-y,0)}},getSpecialNumberString:function(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null},min:function(x){return this.le(x)?this:x},selfDivide:function(){if(1===arguments.length){if(arguments[0]instanceof DD){y=arguments[0];return this.selfDivide(y._hi,y._lo)}if("number"==typeof arguments[0]){var y=arguments[0];return this.selfDivide(y,0)}}else if(2===arguments.length){var yhi=arguments[0],ylo=arguments[1],hc=null,tc=null,hy=null,ty=null,C=null,c=null,U=null,u=null;return C=this._hi/yhi,c=DD.SPLIT*C,hc=c-C,u=DD.SPLIT*yhi,hc=c-hc,tc=C-hc,hy=u-yhi,U=C*yhi,hy=u-hy,ty=yhi-hy,u=hc*hy-U+hc*ty+tc*hy+tc*ty,c=(this._hi-U-u+this._lo-C*ylo)/yhi,u=C+c,this._hi=u,this._lo=C-u+c,this}},dump:function(){return"DD<"+this._hi+", "+this._lo+">"},divide:function(){if(arguments[0]instanceof DD){var y=arguments[0],hc=null,tc=null,hy=null,ty=null,C=null,c=null,U=null,u=null;tc=(C=this._hi/y._hi)-(hc=(c=DD.SPLIT*C)-(hc=c-C)),u=hc*(hy=(u=DD.SPLIT*y._hi)-(hy=u-y._hi))-(U=C*y._hi)+hc*(ty=y._hi-hy)+tc*hy+tc*ty;return new DD(u=C+(c=(this._hi-U-u+this._lo-C*y._lo)/y._hi),C-u+c)}if("number"==typeof arguments[0]){y=arguments[0];return Double.isNaN(y)?DD.createNaN():DD.copy(this).selfDivide(y,0)}},ge:function(y){return this._hi>y._hi||this._hi===y._hi&&this._lo>=y._lo},pow:function(exp){if(0===exp)return DD.valueOf(1);var r=new DD(this),s=DD.valueOf(1),n=Math.abs(exp);if(n>1)for(;n>0;)n%2==1&&s.selfMultiply(r),(n/=2)>0&&(r=r.sqr());else s=r;return exp<0?s.reciprocal():s},ceil:function(){if(this.isNaN())return DD.NaN;var fhi=Math.ceil(this._hi),flo=0;return fhi===this._hi&&(flo=Math.ceil(this._lo)),new DD(fhi,flo)},compareTo:function(o){var other=o;return this._hi<other._hi?-1:this._hi>other._hi?1:this._lo<other._lo?-1:this._lo>other._lo?1:0},rint:function(){if(this.isNaN())return this;return this.add(.5).floor()},setValue:function(){if(arguments[0]instanceof DD){value=arguments[0];return this.init(value),this}if("number"==typeof arguments[0]){var value=arguments[0];return this.init(value),this}},max:function(x){return this.ge(x)?this:x},sqrt:function(){if(this.isZero())return DD.valueOf(0);if(this.isNegative())return DD.NaN;var x=1/Math.sqrt(this._hi),ax=this._hi*x,axdd=DD.valueOf(ax),d2=this.subtract(axdd.sqr())._hi*(.5*x);return axdd.add(d2)},selfAdd:function(){if(1===arguments.length){if(arguments[0]instanceof DD){y=arguments[0];return this.selfAdd(y._hi,y._lo)}if("number"==typeof arguments[0]){var y=arguments[0],H=null,h=null,S=null,s=null,e=null,f=null;return S=this._hi+y,e=S-this._hi,s=S-e,s=y-e+(this._hi-s),f=s+this._lo,H=S+f,h=f+(S-H),this._hi=H+h,this._lo=h+(H-this._hi),this}}else if(2===arguments.length){var yhi=arguments[0],ylo=arguments[1],H=null,h=null,T=null,t=null,S=null,s=null,e=null,f=null;S=this._hi+yhi,T=this._lo+ylo,s=S-(e=S-this._hi),t=T-(f=T-this._lo);var zhi=(H=S+(e=(s=yhi-e+(this._hi-s))+T))+(e=(t=ylo-f+(this._lo-t))+(h=e+(S-H))),zlo=e+(H-zhi);return this._hi=zhi,this._lo=zlo,this}},selfMultiply:function(){if(1===arguments.length){if(arguments[0]instanceof DD){y=arguments[0];return this.selfMultiply(y._hi,y._lo)}if("number"==typeof arguments[0]){var y=arguments[0];return this.selfMultiply(y,0)}}else if(2===arguments.length){var yhi=arguments[0],ylo=arguments[1],hx=null,tx=null,hy=null,ty=null,C=null,c=null;hx=(C=DD.SPLIT*this._hi)-this._hi,c=DD.SPLIT*yhi,hx=C-hx,tx=this._hi-hx,hy=c-yhi;var zhi=(C=this._hi*yhi)+(c=hx*(hy=c-hy)-C+hx*(ty=yhi-hy)+tx*hy+tx*ty+(this._hi*ylo+this._lo*yhi)),zlo=c+(hx=C-zhi);return this._hi=zhi,this._lo=zlo,this}},selfSqr:function(){return this.selfMultiply(this)},floor:function(){if(this.isNaN())return DD.NaN;var fhi=Math.floor(this._hi),flo=0;return fhi===this._hi&&(flo=Math.floor(this._lo)),new DD(fhi,flo)},negate:function(){return this.isNaN()?this:new DD(-this._hi,-this._lo)},clone:function(){try{return null}catch(ex){if(ex instanceof CloneNotSupportedException)return null;throw ex}},multiply:function(){if(arguments[0]instanceof DD){return(y=arguments[0]).isNaN()?DD.createNaN():DD.copy(this).selfMultiply(y)}if("number"==typeof arguments[0]){var y=arguments[0];return Double.isNaN(y)?DD.createNaN():DD.copy(this).selfMultiply(y,0)}},isNaN:function(){return Double.isNaN(this._hi)},intValue:function(){return Math.trunc(this._hi)},toString:function(){var mag=DD.magnitude(this._hi);return mag>=-3&&mag<=20?this.toStandardNotation():this.toSciNotation()},toStandardNotation:function(){var specialStr=this.getSpecialNumberString();if(null!==specialStr)return specialStr;var magnitude=new Array(1).fill(null),sigDigits=this.extractSignificantDigits(!0,magnitude),decimalPointPos=magnitude[0]+1,num=sigDigits;if("."===sigDigits.charAt(0))num="0"+sigDigits;else if(decimalPointPos<0)num="0."+DD.stringOfChar("0",-decimalPointPos)+sigDigits;else if(-1===sigDigits.indexOf(".")){var numZeroes=decimalPointPos-sigDigits.length;num=sigDigits+DD.stringOfChar("0",numZeroes)+".0"}return this.isNegative()?"-"+num:num},reciprocal:function(){var hc=null,tc=null,hy=null,ty=null,C=null,c=null,U=null,u=null;tc=(C=1/this._hi)-(hc=(c=DD.SPLIT*C)-(hc=c-C)),hy=(u=DD.SPLIT*this._hi)-this._hi;var zhi=C+(c=(1-(U=C*this._hi)-(u=hc*(hy=u-hy)-U+hc*(ty=this._hi-hy)+tc*hy+tc*ty)-C*this._lo)/this._hi);return new DD(zhi,C-zhi+c)},toSciNotation:function(){if(this.isZero())return DD.SCI_NOT_ZERO;var specialStr=this.getSpecialNumberString();if(null!==specialStr)return specialStr;var magnitude=new Array(1).fill(null),digits=this.extractSignificantDigits(!1,magnitude),expStr=DD.SCI_NOT_EXPONENT_CHAR+magnitude[0];if("0"===digits.charAt(0))throw new IllegalStateException("Found leading zero: "+digits);var trailingDigits="";digits.length>1&&(trailingDigits=digits.substring(1));var digitsWithDecimal=digits.charAt(0)+"."+trailingDigits;return this.isNegative()?"-"+digitsWithDecimal+expStr:digitsWithDecimal+expStr},abs:function(){return this.isNaN()?DD.NaN:this.isNegative()?this.negate():new DD(this)},isPositive:function(){return this._hi>0||0===this._hi&&this._lo>0},lt:function(y){return this._hi<y._hi||this._hi===y._hi&&this._lo<y._lo},add:function(){if(arguments[0]instanceof DD){y=arguments[0];return DD.copy(this).selfAdd(y)}if("number"==typeof arguments[0]){var y=arguments[0];return DD.copy(this).selfAdd(y)}},init:function(){if(1===arguments.length){if("number"==typeof arguments[0]){var x=arguments[0];this._hi=x,this._lo=0}else if(arguments[0]instanceof DD){var dd=arguments[0];this._hi=dd._hi,this._lo=dd._lo}}else if(2===arguments.length){var hi=arguments[0],lo=arguments[1];this._hi=hi,this._lo=lo}},gt:function(y){return this._hi>y._hi||this._hi===y._hi&&this._lo>y._lo},isNegative:function(){return this._hi<0||0===this._hi&&this._lo<0},trunc:function(){return this.isNaN()?DD.NaN:this.isPositive()?this.floor():this.ceil()},signum:function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},interfaces_:function(){return[Serializable,Comparable,Clonable]},getClass:function(){return DD}}),DD.sqr=function(x){return DD.valueOf(x).selfMultiply(x)},DD.valueOf=function(){if("string"==typeof arguments[0]){var str=arguments[0];return DD.parse(str)}if("number"==typeof arguments[0]){return new DD(arguments[0])}},DD.sqrt=function(x){return DD.valueOf(x).sqrt()},DD.parse=function(str){for(var i=0,strlen=str.length;Character.isWhitespace(str.charAt(i));)i++;var isNegative=!1;if(i<strlen){var signCh=str.charAt(i);"-"!==signCh&&"+"!==signCh||(i++,"-"===signCh&&(isNegative=!0))}for(var val=new DD,numDigits=0,numBeforeDec=0,exp=0;;){if(i>=strlen)break;var ch=str.charAt(i);if(i++,Character.isDigit(ch)){var d=ch-"0";val.selfMultiply(DD.TEN),val.selfAdd(d),numDigits++}else{if("."!==ch){if("e"===ch||"E"===ch){var expStr=str.substring(i);try{exp=Integer.parseInt(expStr)}catch(ex){throw ex instanceof NumberFormatException?new NumberFormatException("Invalid exponent "+expStr+" in string "+str):ex}break}throw new NumberFormatException("Unexpected character '"+ch+"' at position "+i+" in string "+str)}numBeforeDec=numDigits}}var val2=val,numDecPlaces=numDigits-numBeforeDec-exp;if(0===numDecPlaces)val2=val;else if(numDecPlaces>0){scale=DD.TEN.pow(numDecPlaces);val2=val.divide(scale)}else if(numDecPlaces<0){var scale=DD.TEN.pow(-numDecPlaces);val2=val.multiply(scale)}return isNegative?val2.negate():val2},DD.createNaN=function(){return new DD(Double.NaN,Double.NaN)},DD.copy=function(dd){return new DD(dd)},DD.magnitude=function(x){var xAbs=Math.abs(x),xLog10=Math.log(xAbs)/Math.log(10),xMag=Math.trunc(Math.floor(xLog10));return 10*Math.pow(10,xMag)<=xAbs&&(xMag+=1),xMag},DD.stringOfChar=function(ch,len){for(var buf=new StringBuffer,i=0;i<len;i++)buf.append(ch);return buf.toString()},DD.PI=new DD(3.141592653589793,1.2246467991473532e-16),DD.TWO_PI=new DD(6.283185307179586,2.4492935982947064e-16),DD.PI_2=new DD(1.5707963267948966,6.123233995736766e-17),DD.E=new DD(2.718281828459045,1.4456468917292502e-16),DD.NaN=new DD(Double.NaN,Double.NaN),DD.EPS=1.23259516440783e-32,DD.SPLIT=134217729,DD.MAX_PRINT_DIGITS=32,DD.TEN=DD.valueOf(10),DD.ONE=DD.valueOf(1),DD.SCI_NOT_EXPONENT_CHAR="E",DD.SCI_NOT_ZERO="0.0E0",extend(CGAlgorithmsDD.prototype,{interfaces_:function(){return[]},getClass:function(){return CGAlgorithmsDD}}),CGAlgorithmsDD.orientationIndex=function(p1,p2,q){var index=CGAlgorithmsDD.orientationIndexFilter(p1,p2,q);if(index<=1)return index;var dx1=DD.valueOf(p2.x).selfAdd(-p1.x),dy1=DD.valueOf(p2.y).selfAdd(-p1.y),dx2=DD.valueOf(q.x).selfAdd(-p2.x),dy2=DD.valueOf(q.y).selfAdd(-p2.y);return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()},CGAlgorithmsDD.signOfDet2x2=function(x1,y1,x2,y2){return x1.multiply(y2).selfSubtract(y1.multiply(x2)).signum()},CGAlgorithmsDD.intersection=function(p1,p2,q1,q2){var denom1=DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x)),denom2=DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y)),denom=denom1.subtract(denom2),numx1=DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y)),numx2=DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x)),fracP=numx1.subtract(numx2).selfDivide(denom).doubleValue(),x=DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue(),numy1=DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y)),numy2=DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x)),fracQ=numy1.subtract(numy2).selfDivide(denom).doubleValue();return new Coordinate(x,DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue())},CGAlgorithmsDD.orientationIndexFilter=function(pa,pb,pc){var detsum=null,detleft=(pa.x-pc.x)*(pb.y-pc.y),detright=(pa.y-pc.y)*(pb.x-pc.x),det=detleft-detright;if(detleft>0){if(detright<=0)return CGAlgorithmsDD.signum(det);detsum=detleft+detright}else{if(!(detleft<0))return CGAlgorithmsDD.signum(det);if(detright>=0)return CGAlgorithmsDD.signum(det);detsum=-detleft-detright}var errbound=CGAlgorithmsDD.DP_SAFE_EPSILON*detsum;return det>=errbound||-det>=errbound?CGAlgorithmsDD.signum(det):2},CGAlgorithmsDD.signum=function(x){return x>0?1:x<0?-1:0},CGAlgorithmsDD.DP_SAFE_EPSILON=1e-15,extend(CoordinateSequence.prototype,{setOrdinate:function(index,ordinateIndex,value){},size:function(){},getOrdinate:function(index,ordinateIndex){},getCoordinate:function(){},getCoordinateCopy:function(i){},getDimension:function(){},getX:function(index){},clone:function(){},expandEnvelope:function(env){},copy:function(){},getY:function(index){},toCoordinateArray:function(){},interfaces_:function(){return[Clonable]},getClass:function(){return CoordinateSequence}}),CoordinateSequence.X=0,CoordinateSequence.Y=1,CoordinateSequence.Z=2,CoordinateSequence.M=3,System.arraycopy=function(src,srcPos,dest,destPos,len){for(var c=0,i=srcPos;i<srcPos+len;i++)dest[destPos+c]=src[i],c++},System.getProperty=function(name){return{"line.separator":"\n"}[name]},extend(HCoordinate.prototype,{getY:function(){var a=this.y/this.w;if(Double.isNaN(a)||Double.isInfinite(a))throw new NotRepresentableException;return a},getX:function(){var a=this.x/this.w;if(Double.isNaN(a)||Double.isInfinite(a))throw new NotRepresentableException;return a},getCoordinate:function(){var p=new Coordinate;return p.x=this.getX(),p.y=this.getY(),p},interfaces_:function(){return[]},getClass:function(){return HCoordinate}}),HCoordinate.intersection=function(p1,p2,q1,q2){var px=p1.y-p2.y,py=p2.x-p1.x,pw=p1.x*p2.y-p2.x*p1.y,qx=q1.y-q2.y,qy=q2.x-q1.x,qw=q1.x*q2.y-q2.x*q1.y,w=px*qy-qx*py,xInt=(py*qw-qy*pw)/w,yInt=(qx*pw-px*qw)/w;if(Double.isNaN(xInt)||Double.isInfinite(xInt)||Double.isNaN(yInt)||Double.isInfinite(yInt))throw new NotRepresentableException;return new Coordinate(xInt,yInt)},extend(CoordinateSequenceFactory.prototype,{create:function(){1===arguments.length?arguments[0]instanceof Array||hasInterface(arguments[0],CoordinateSequence):arguments.length},interfaces_:function(){return[]},getClass:function(){return CoordinateSequenceFactory}}),extend(GeometryComponentFilter.prototype,{filter:function(geom){},interfaces_:function(){return[]},getClass:function(){return GeometryComponentFilter}}),extend(Geometry.prototype,{isGeometryCollection:function(){return this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION},getFactory:function(){return this._factory},getGeometryN:function(n){return this},getArea:function(){return 0},isRectangle:function(){return!1},equals:function(){if(arguments[0]instanceof Geometry){return null!==(g=arguments[0])&&this.equalsTopo(g)}if(arguments[0]instanceof Object){var o=arguments[0];if(!(o instanceof Geometry))return!1;var g=o;return this.equalsExact(g)}},equalsExact:function(other){return this===other||this.equalsExact(other,0)},geometryChanged:function(){this.apply(Geometry.geometryChangedFilter)},geometryChangedAction:function(){this._envelope=null},equalsNorm:function(g){return null!==g&&this.norm().equalsExact(g.norm())},getLength:function(){return 0},getNumGeometries:function(){return 1},compareTo:function(){if(1===arguments.length){other=o=arguments[0];return this.getSortIndex()!==other.getSortIndex()?this.getSortIndex()-other.getSortIndex():this.isEmpty()&&other.isEmpty()?0:this.isEmpty()?-1:other.isEmpty()?1:this.compareToSameClass(o)}if(2===arguments.length){var o=arguments[0],comp=arguments[1],other=o;return this.getSortIndex()!==other.getSortIndex()?this.getSortIndex()-other.getSortIndex():this.isEmpty()&&other.isEmpty()?0:this.isEmpty()?-1:other.isEmpty()?1:this.compareToSameClass(o,comp)}},getUserData:function(){return this._userData},getSRID:function(){return this._SRID},getEnvelope:function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},checkNotGeometryCollection:function(g){if(g.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION)throw new IllegalArgumentException("This method does not support GeometryCollection arguments")},equal:function(a,b,tolerance){return 0===tolerance?a.equals(b):a.distance(b)<=tolerance},norm:function(){var copy=this.copy();return copy.normalize(),copy},getPrecisionModel:function(){return this._factory.getPrecisionModel()},getEnvelopeInternal:function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new Envelope(this._envelope)},setSRID:function(SRID){this._SRID=SRID},setUserData:function(userData){this._userData=userData},compare:function(a,b){for(var i=a.iterator(),j=b.iterator();i.hasNext()&&j.hasNext();){var aElement=i.next(),bElement=j.next(),comparison=aElement.compareTo(bElement);if(0!==comparison)return comparison}return i.hasNext()?1:j.hasNext()?-1:0},hashCode:function(){return this.getEnvelopeInternal().hashCode()},isGeometryCollectionOrDerived:function(){return this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===Geometry.SORTINDEX_MULTIPOINT||this.getSortIndex()===Geometry.SORTINDEX_MULTILINESTRING||this.getSortIndex()===Geometry.SORTINDEX_MULTIPOLYGON},interfaces_:function(){return[Clonable,Comparable,Serializable]},getClass:function(){return Geometry}}),Geometry.hasNonEmptyElements=function(geometries){for(var i=0;i<geometries.length;i++)if(!geometries[i].isEmpty())return!0;return!1},Geometry.hasNullElements=function(array){for(var i=0;i<array.length;i++)if(null===array[i])return!0;return!1},Geometry.serialVersionUID=0x799ea46522854c00,Geometry.SORTINDEX_POINT=0,Geometry.SORTINDEX_MULTIPOINT=1,Geometry.SORTINDEX_LINESTRING=2,Geometry.SORTINDEX_LINEARRING=3,Geometry.SORTINDEX_MULTILINESTRING=4,Geometry.SORTINDEX_POLYGON=5,Geometry.SORTINDEX_MULTIPOLYGON=6,Geometry.SORTINDEX_GEOMETRYCOLLECTION=7,Geometry.geometryChangedFilter={interfaces_:function(){return[GeometryComponentFilter]},filter:function(geom){geom.geometryChangedAction()}},extend(CoordinateFilter.prototype,{filter:function(coord){},interfaces_:function(){return[]},getClass:function(){return CoordinateFilter}}),extend(BoundaryNodeRule.prototype,{isInBoundary:function(boundaryCount){},interfaces_:function(){return[]},getClass:function(){return BoundaryNodeRule}}),extend(Mod2BoundaryNodeRule.prototype,{isInBoundary:function(boundaryCount){return boundaryCount%2==1},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return Mod2BoundaryNodeRule}}),extend(EndPointBoundaryNodeRule.prototype,{isInBoundary:function(boundaryCount){return boundaryCount>0},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return EndPointBoundaryNodeRule}}),extend(MultiValentEndPointBoundaryNodeRule.prototype,{isInBoundary:function(boundaryCount){return boundaryCount>1},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return MultiValentEndPointBoundaryNodeRule}}),extend(MonoValentEndPointBoundaryNodeRule.prototype,{isInBoundary:function(boundaryCount){return 1===boundaryCount},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return MonoValentEndPointBoundaryNodeRule}}),BoundaryNodeRule.Mod2BoundaryNodeRule=Mod2BoundaryNodeRule,BoundaryNodeRule.EndPointBoundaryNodeRule=EndPointBoundaryNodeRule,BoundaryNodeRule.MultiValentEndPointBoundaryNodeRule=MultiValentEndPointBoundaryNodeRule,BoundaryNodeRule.MonoValentEndPointBoundaryNodeRule=MonoValentEndPointBoundaryNodeRule,BoundaryNodeRule.MOD2_BOUNDARY_RULE=new Mod2BoundaryNodeRule,BoundaryNodeRule.ENDPOINT_BOUNDARY_RULE=new EndPointBoundaryNodeRule,BoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new MultiValentEndPointBoundaryNodeRule,BoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new MonoValentEndPointBoundaryNodeRule,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE=BoundaryNodeRule.MOD2_BOUNDARY_RULE,extend(CoordinateArrays.prototype,{interfaces_:function(){return[]},getClass:function(){return CoordinateArrays}}),CoordinateArrays.isRing=function(pts){return!(pts.length<4)&&!!pts[0].equals2D(pts[pts.length-1])},CoordinateArrays.ptNotInList=function(testPts,pts){for(var i=0;i<testPts.length;i++){var testPt=testPts[i];if(CoordinateArrays.indexOf(testPt,pts)<0)return testPt}return null},CoordinateArrays.scroll=function(coordinates,firstCoordinate){var i=CoordinateArrays.indexOf(firstCoordinate,coordinates);if(i<0)return null;var newCoordinates=new Array(coordinates.length).fill(null);System.arraycopy(coordinates,i,newCoordinates,0,coordinates.length-i),System.arraycopy(coordinates,0,newCoordinates,coordinates.length-i,i),System.arraycopy(newCoordinates,0,coordinates,0,coordinates.length)},CoordinateArrays.equals=function(){if(2===arguments.length){if((coord1=arguments[0])===(coord2=arguments[1]))return!0;if(null===coord1||null===coord2)return!1;if(coord1.length!==coord2.length)return!1;for(i=0;i<coord1.length;i++)if(!coord1[i].equals(coord2[i]))return!1;return!0}if(3===arguments.length){var coord1=arguments[0],coord2=arguments[1],coordinateComparator=arguments[2];if(coord1===coord2)return!0;if(null===coord1||null===coord2)return!1;if(coord1.length!==coord2.length)return!1;for(var i=0;i<coord1.length;i++)if(0!==coordinateComparator.compare(coord1[i],coord2[i]))return!1;return!0}},CoordinateArrays.intersection=function(coordinates,env){for(var coordList=new CoordinateList,i=0;i<coordinates.length;i++)env.intersects(coordinates[i])&&coordList.add(coordinates[i],!0);return coordList.toCoordinateArray()},CoordinateArrays.hasRepeatedPoints=function(coord){for(var i=1;i<coord.length;i++)if(coord[i-1].equals(coord[i]))return!0;return!1},CoordinateArrays.removeRepeatedPoints=function(coord){if(!CoordinateArrays.hasRepeatedPoints(coord))return coord;return new CoordinateList(coord,!1).toCoordinateArray()},CoordinateArrays.reverse=function(coord){for(var last=coord.length-1,mid=Math.trunc(last/2),i=0;i<=mid;i++){var tmp=coord[i];coord[i]=coord[last-i],coord[last-i]=tmp}},CoordinateArrays.removeNull=function(coord){for(var nonNull=0,i=0;i<coord.length;i++)null!==coord[i]&&nonNull++;var newCoord=new Array(nonNull).fill(null);if(0===nonNull)return newCoord;for(var j=0,i=0;i<coord.length;i++)null!==coord[i]&&(newCoord[j++]=coord[i]);return newCoord},CoordinateArrays.copyDeep=function(){if(1===arguments.length){for(var coordinates=arguments[0],copy=new Array(coordinates.length).fill(null),i=0;i<coordinates.length;i++)copy[i]=new Coordinate(coordinates[i]);return copy}if(5===arguments.length)for(var src=arguments[0],srcStart=arguments[1],dest=arguments[2],destStart=arguments[3],length=arguments[4],i=0;i<length;i++)dest[destStart+i]=new Coordinate(src[srcStart+i])},CoordinateArrays.isEqualReversed=function(pts1,pts2){for(var i=0;i<pts1.length;i++){var p1=pts1[i],p2=pts2[pts1.length-i-1];if(0!==p1.compareTo(p2))return!1}return!0},CoordinateArrays.envelope=function(coordinates){for(var env=new Envelope,i=0;i<coordinates.length;i++)env.expandToInclude(coordinates[i]);return env},CoordinateArrays.toCoordinateArray=function(coordList){return coordList.toArray(CoordinateArrays.coordArrayType)},CoordinateArrays.atLeastNCoordinatesOrNothing=function(n,c){return c.length>=n?c:[]},CoordinateArrays.indexOf=function(coordinate,coordinates){for(var i=0;i<coordinates.length;i++)if(coordinate.equals(coordinates[i]))return i;return-1},CoordinateArrays.increasingDirection=function(pts){for(var i=0;i<Math.trunc(pts.length/2);i++){var j=pts.length-1-i,comp=pts[i].compareTo(pts[j]);if(0!==comp)return comp}return 1},CoordinateArrays.compare=function(pts1,pts2){for(var i=0;i<pts1.length&&i<pts2.length;){var compare=pts1[i].compareTo(pts2[i]);if(0!==compare)return compare;i++}return i<pts2.length?-1:i<pts1.length?1:0},CoordinateArrays.minCoordinate=function(coordinates){for(var minCoord=null,i=0;i<coordinates.length;i++)(null===minCoord||minCoord.compareTo(coordinates[i])>0)&&(minCoord=coordinates[i]);return minCoord},CoordinateArrays.extract=function(pts,start,end){start=MathUtil.clamp(start,0,pts.length);var npts=(end=MathUtil.clamp(end,-1,pts.length))-start+1;end<0&&(npts=0),start>=pts.length&&(npts=0),end<start&&(npts=0);var extractPts=new Array(npts).fill(null);if(0===npts)return extractPts;for(var iPts=0,i=start;i<=end;i++)extractPts[iPts++]=pts[i];return extractPts},extend(ForwardComparator.prototype,{compare:function(o1,o2){return CoordinateArrays.compare(o1,o2)},interfaces_:function(){return[Comparator]},getClass:function(){return ForwardComparator}}),extend(BidirectionalComparator.prototype,{compare:function(o1,o2){var pts1=o1,pts2=o2;if(pts1.length<pts2.length)return-1;if(pts1.length>pts2.length)return 1;if(0===pts1.length)return 0;var forwardComp=CoordinateArrays.compare(pts1,pts2);return CoordinateArrays.isEqualReversed(pts1,pts2)?0:forwardComp},OLDcompare:function(o1,o2){var pts1=o1,pts2=o2;if(pts1.length<pts2.length)return-1;if(pts1.length>pts2.length)return 1;if(0===pts1.length)return 0;for(var dir1=CoordinateArrays.increasingDirection(pts1),dir2=CoordinateArrays.increasingDirection(pts2),i1=dir1>0?0:pts1.length-1,i2=dir2>0?0:pts1.length-1,i=0;i<pts1.length;i++){var comparePt=pts1[i1].compareTo(pts2[i2]);if(0!==comparePt)return comparePt;i1+=dir1,i2+=dir2}return 0},interfaces_:function(){return[Comparator]},getClass:function(){return BidirectionalComparator}}),CoordinateArrays.ForwardComparator=ForwardComparator,CoordinateArrays.BidirectionalComparator=BidirectionalComparator,CoordinateArrays.coordArrayType=new Array(0).fill(null),Map$3.prototype.get=function(){},Map$3.prototype.put=function(){},Map$3.prototype.size=function(){},Map$3.prototype.values=function(){},Map$3.prototype.entrySet=function(){},SortedMap.prototype=new Map$3,(Set$2.prototype=new Collection).contains=function(){},(HashSet.prototype=new Set$2).contains=function(o){for(var i=0,len=this.array_.length;i<len;i++){if(this.array_[i]===o)return!0}return!1},HashSet.prototype.add=function(o){return!this.contains(o)&&(this.array_.push(o),!0)},HashSet.prototype.addAll=function(c){for(var i=c.iterator();i.hasNext();)this.add(i.next());return!0},HashSet.prototype.remove=function(o){throw new javascript.util.OperationNotSupported},HashSet.prototype.size=function(){return this.array_.length},HashSet.prototype.isEmpty=function(){return 0===this.array_.length},HashSet.prototype.toArray=function(){for(var array=[],i=0,len=this.array_.length;i<len;i++)array.push(this.array_[i]);return array},HashSet.prototype.iterator=function(){return new Iterator_$1(this)};var Iterator_$1=function(hashSet){this.hashSet_=hashSet,this.position_=0};Iterator_$1.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new NoSuchElementException;return this.hashSet_.array_[this.position_++]},Iterator_$1.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},Iterator_$1.prototype.remove=function(){throw new OperationNotSupported};var BLACK=0;(TreeMap.prototype=new SortedMap).get=function(key){for(var p=this.root_;null!==p;){var cmp=key.compareTo(p.key);if(cmp<0)p=p.left;else{if(!(cmp>0))return p.value;p=p.right}}return null},TreeMap.prototype.put=function(key,value){if(null===this.root_)return this.root_={key:key,value:value,left:null,right:null,parent:null,color:BLACK,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var parent,cmp,t=this.root_;do{if(parent=t,(cmp=key.compareTo(t.key))<0)t=t.left;else{if(!(cmp>0)){var oldValue=t.value;return t.value=value,oldValue}t=t.right}}while(null!==t);var e={key:key,left:null,right:null,value:value,parent:parent,color:BLACK,getValue:function(){return this.value},getKey:function(){return this.key}};return cmp<0?parent.left=e:parent.right=e,this.fixAfterInsertion(e),this.size_++,null},TreeMap.prototype.fixAfterInsertion=function(x){for(x.color=1;null!=x&&x!=this.root_&&1==x.parent.color;)if(parentOf(x)==leftOf(parentOf(parentOf(x)))){1==colorOf(y=rightOf(parentOf(parentOf(x))))?(setColor(parentOf(x),BLACK),setColor(y,BLACK),setColor(parentOf(parentOf(x)),1),x=parentOf(parentOf(x))):(x==rightOf(parentOf(x))&&(x=parentOf(x),this.rotateLeft(x)),setColor(parentOf(x),BLACK),setColor(parentOf(parentOf(x)),1),this.rotateRight(parentOf(parentOf(x))))}else{var y=leftOf(parentOf(parentOf(x)));1==colorOf(y)?(setColor(parentOf(x),BLACK),setColor(y,BLACK),setColor(parentOf(parentOf(x)),1),x=parentOf(parentOf(x))):(x==leftOf(parentOf(x))&&(x=parentOf(x),this.rotateRight(x)),setColor(parentOf(x),BLACK),setColor(parentOf(parentOf(x)),1),this.rotateLeft(parentOf(parentOf(x))))}this.root_.color=BLACK},TreeMap.prototype.values=function(){var arrayList=new ArrayList,p=this.getFirstEntry();if(null!==p)for(arrayList.add(p.value);null!==(p=TreeMap.successor(p));)arrayList.add(p.value);return arrayList},TreeMap.prototype.entrySet=function(){var hashSet=new HashSet,p=this.getFirstEntry();if(null!==p)for(hashSet.add(p);null!==(p=TreeMap.successor(p));)hashSet.add(p);return hashSet},TreeMap.prototype.rotateLeft=function(p){if(null!=p){var r=p.right;p.right=r.left,null!=r.left&&(r.left.parent=p),r.parent=p.parent,null==p.parent?this.root_=r:p.parent.left==p?p.parent.left=r:p.parent.right=r,r.left=p,p.parent=r}},TreeMap.prototype.rotateRight=function(p){if(null!=p){var l=p.left;p.left=l.right,null!=l.right&&(l.right.parent=p),l.parent=p.parent,null==p.parent?this.root_=l:p.parent.right==p?p.parent.right=l:p.parent.left=l,l.right=p,p.parent=l}},TreeMap.prototype.getFirstEntry=function(){var p=this.root_;if(null!=p)for(;null!=p.left;)p=p.left;return p},TreeMap.successor=function(t){if(null===t)return null;if(null!==t.right){for(p=t.right;null!==p.left;)p=p.left;return p}for(var p=t.parent,ch=t;null!==p&&ch===p.right;)ch=p,p=p.parent;return p},TreeMap.prototype.size=function(){return this.size_},extend(Lineal.prototype,{interfaces_:function(){return[]},getClass:function(){return Lineal}}),SortedSet.prototype=new Set$2,(TreeSet.prototype=new SortedSet).contains=function(o){for(var i=0,len=this.array_.length;i<len;i++){if(0===this.array_[i].compareTo(o))return!0}return!1},TreeSet.prototype.add=function(o){if(this.contains(o))return!1;for(var i=0,len=this.array_.length;i<len;i++){if(1===this.array_[i].compareTo(o))return this.array_.splice(i,0,o),!0}return this.array_.push(o),!0},TreeSet.prototype.addAll=function(c){for(var i=c.iterator();i.hasNext();)this.add(i.next());return!0},TreeSet.prototype.remove=function(e){throw new OperationNotSupported},TreeSet.prototype.size=function(){return this.array_.length},TreeSet.prototype.isEmpty=function(){return 0===this.array_.length},TreeSet.prototype.toArray=function(){for(var array=[],i=0,len=this.array_.length;i<len;i++)array.push(this.array_[i]);return array},TreeSet.prototype.iterator=function(){return new Iterator_$2(this)};var Iterator_$2=function(treeSet){this.treeSet_=treeSet,this.position_=0};Iterator_$2.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new NoSuchElementException;return this.treeSet_.array_[this.position_++]},Iterator_$2.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Iterator_$2.prototype.remove=function(){throw new OperationNotSupported},Arrays.sort=function(){var i,t,comparator,compare,a=arguments[0];if(1===arguments.length)return compare=function(a,b){return a.compareTo(b)},void a.sort(compare);if(2===arguments.length)comparator=arguments[1],compare=function(a,b){return comparator.compare(a,b)},a.sort(compare);else{if(3===arguments.length){(t=a.slice(arguments[1],arguments[2])).sort();var r=a.slice(0,arguments[1]).concat(t,a.slice(arguments[2],a.length));for(a.splice(0,a.length),i=0;i<r.length;i++)a.push(r[i]);return}if(4===arguments.length){for(t=a.slice(arguments[1],arguments[2]),comparator=arguments[3],compare=function(a,b){return comparator.compare(a,b)},t.sort(compare),r=a.slice(0,arguments[1]).concat(t,a.slice(arguments[2],a.length)),a.splice(0,a.length),i=0;i<r.length;i++)a.push(r[i]);return}}},Arrays.asList=function(array){for(var arrayList=new ArrayList,i=0,len=array.length;i<len;i++)arrayList.add(array[i]);return arrayList},extend(Dimension.prototype,{interfaces_:function(){return[]},getClass:function(){return Dimension}}),Dimension.toDimensionSymbol=function(dimensionValue){switch(dimensionValue){case Dimension.FALSE:return Dimension.SYM_FALSE;case Dimension.TRUE:return Dimension.SYM_TRUE;case Dimension.DONTCARE:return Dimension.SYM_DONTCARE;case Dimension.P:return Dimension.SYM_P;case Dimension.L:return Dimension.SYM_L;case Dimension.A:return Dimension.SYM_A}throw new IllegalArgumentException("Unknown dimension value: "+dimensionValue)},Dimension.toDimensionValue=function(dimensionSymbol){switch(Character.toUpperCase(dimensionSymbol)){case Dimension.SYM_FALSE:return Dimension.FALSE;case Dimension.SYM_TRUE:return Dimension.TRUE;case Dimension.SYM_DONTCARE:return Dimension.DONTCARE;case Dimension.SYM_P:return Dimension.P;case Dimension.SYM_L:return Dimension.L;case Dimension.SYM_A:return Dimension.A}throw new IllegalArgumentException("Unknown dimension symbol: "+dimensionSymbol)},Dimension.P=0,Dimension.L=1,Dimension.A=2,Dimension.FALSE=-1,Dimension.TRUE=-2,Dimension.DONTCARE=-3,Dimension.SYM_FALSE="F",Dimension.SYM_TRUE="T",Dimension.SYM_DONTCARE="*",Dimension.SYM_P="0",Dimension.SYM_L="1",Dimension.SYM_A="2",extend(GeometryFilter.prototype,{filter:function(geom){},interfaces_:function(){return[]},getClass:function(){return GeometryFilter}}),extend(CoordinateSequenceFilter.prototype,{filter:function(seq,i){},isDone:function(){},isGeometryChanged:function(){},interfaces_:function(){return[]},getClass:function(){return CoordinateSequenceFilter}}),inherits$1(GeometryCollection,Geometry),extend(GeometryCollection.prototype,{computeEnvelopeInternal:function(){for(var envelope=new Envelope,i=0;i<this._geometries.length;i++)envelope.expandToInclude(this._geometries[i].getEnvelopeInternal());return envelope},getGeometryN:function(n){return this._geometries[n]},getSortIndex:function(){return Geometry.SORTINDEX_GEOMETRYCOLLECTION},getCoordinates:function(){for(var coordinates=new Array(this.getNumPoints()).fill(null),k=-1,i=0;i<this._geometries.length;i++)for(var childCoordinates=this._geometries[i].getCoordinates(),j=0;j<childCoordinates.length;j++)coordinates[++k]=childCoordinates[j];return coordinates},getArea:function(){for(var area=0,i=0;i<this._geometries.length;i++)area+=this._geometries[i].getArea();return area},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other))return!1;var otherCollection=other;if(this._geometries.length!==otherCollection._geometries.length)return!1;for(var i=0;i<this._geometries.length;i++)if(!this._geometries[i].equalsExact(otherCollection._geometries[i],tolerance))return!1;return!0}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var i=0;i<this._geometries.length;i++)this._geometries[i].normalize();Arrays.sort(this._geometries)},getCoordinate:function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},getBoundaryDimension:function(){for(var dimension=Dimension.FALSE,i=0;i<this._geometries.length;i++)dimension=Math.max(dimension,this._geometries[i].getBoundaryDimension());return dimension},getDimension:function(){for(var dimension=Dimension.FALSE,i=0;i<this._geometries.length;i++)dimension=Math.max(dimension,this._geometries[i].getDimension());return dimension},getLength:function(){for(var sum=0,i=0;i<this._geometries.length;i++)sum+=this._geometries[i].getLength();return sum},getNumPoints:function(){for(var numPoints=0,i=0;i<this._geometries.length;i++)numPoints+=this._geometries[i].getNumPoints();return numPoints},getNumGeometries:function(){return this._geometries.length},reverse:function(){for(var n=this._geometries.length,revGeoms=new Array(n).fill(null),i=0;i<this._geometries.length;i++)revGeoms[i]=this._geometries[i].reverse();return this.getFactory().createGeometryCollection(revGeoms)},compareToSameClass:function(){if(1===arguments.length){var o=arguments[0],theseElements=new TreeSet(Arrays.asList(this._geometries)),otherElements=new TreeSet(Arrays.asList(o._geometries));return this.compare(theseElements,otherElements)}if(2===arguments.length){for(var o=arguments[0],comp=arguments[1],gc=o,n1=this.getNumGeometries(),n2=gc.getNumGeometries(),i=0;i<n1&&i<n2;){var thisGeom=this.getGeometryN(i),otherGeom=gc.getGeometryN(i),holeComp=thisGeom.compareToSameClass(otherGeom,comp);if(0!==holeComp)return holeComp;i++}return i<n1?1:i<n2?-1:0}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter))for(var filter=arguments[0],i=0;i<this._geometries.length;i++)this._geometries[i].apply(filter);else if(hasInterface(arguments[0],CoordinateSequenceFilter)){filter=arguments[0];if(0===this._geometries.length)return null;for(i=0;i<this._geometries.length&&(this._geometries[i].apply(filter),!filter.isDone());i++);filter.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){(filter=arguments[0]).filter(this);for(i=0;i<this._geometries.length;i++)this._geometries[i].apply(filter)}else if(hasInterface(arguments[0],GeometryComponentFilter)){(filter=arguments[0]).filter(this);for(i=0;i<this._geometries.length;i++)this._geometries[i].apply(filter)}},getBoundary:function(){return this.checkNotGeometryCollection(this),Assert.shouldNeverReachHere(),null},clone:function(){var gc=Geometry.prototype.clone.call(this);gc._geometries=new Array(this._geometries.length).fill(null);for(var i=0;i<this._geometries.length;i++)gc._geometries[i]=this._geometries[i].clone();return gc},getGeometryType:function(){return"GeometryCollection"},copy:function(){for(var geometries=new Array(this._geometries.length).fill(null),i=0;i<geometries.length;i++)geometries[i]=this._geometries[i].copy();return new GeometryCollection(geometries,this._factory)},isEmpty:function(){for(var i=0;i<this._geometries.length;i++)if(!this._geometries[i].isEmpty())return!1;return!0},interfaces_:function(){return[]},getClass:function(){return GeometryCollection}}),GeometryCollection.serialVersionUID=-0x4f07bcb1f857d800,inherits$1(MultiLineString,GeometryCollection),extend(MultiLineString.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_MULTILINESTRING},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];return!!this.isEquivalentClass(other)&&GeometryCollection.prototype.equalsExact.call(this,other,tolerance)}return GeometryCollection.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return this.isClosed()?Dimension.FALSE:0},isClosed:function(){if(this.isEmpty())return!1;for(var i=0;i<this._geometries.length;i++)if(!this._geometries[i].isClosed())return!1;return!0},getDimension:function(){return 1},reverse:function(){for(var nLines=this._geometries.length,revLines=new Array(nLines).fill(null),i=0;i<this._geometries.length;i++)revLines[nLines-1-i]=this._geometries[i].reverse();return this.getFactory().createMultiLineString(revLines)},getBoundary:function(){return new BoundaryOp(this).getBoundary()},getGeometryType:function(){return"MultiLineString"},copy:function(){for(var lineStrings=new Array(this._geometries.length).fill(null),i=0;i<lineStrings.length;i++)lineStrings[i]=this._geometries[i].copy();return new MultiLineString(lineStrings,this._factory)},interfaces_:function(){return[Lineal]},getClass:function(){return MultiLineString}}),MultiLineString.serialVersionUID=0x7155d2ab4afa8000,extend(BoundaryOp.prototype,{boundaryMultiLineString:function(mLine){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var bdyPts=this.computeBoundaryCoordinates(mLine);return 1===bdyPts.length?this._geomFact.createPoint(bdyPts[0]):this._geomFact.createMultiPointFromCoords(bdyPts)},getBoundary:function(){return this._geom instanceof LineString?this.boundaryLineString(this._geom):this._geom instanceof MultiLineString?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},boundaryLineString:function(line){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(line.isClosed()){return this._bnRule.isInBoundary(2)?line.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([line.getStartPoint(),line.getEndPoint()])},getEmptyMultiPoint:function(){return this._geomFact.createMultiPoint()},computeBoundaryCoordinates:function(mLine){var bdyPts=new ArrayList;this._endpointMap=new TreeMap;for(var i=0;i<mLine.getNumGeometries();i++){var line=mLine.getGeometryN(i);0!==line.getNumPoints()&&(this.addEndpoint(line.getCoordinateN(0)),this.addEndpoint(line.getCoordinateN(line.getNumPoints()-1)))}for(var it=this._endpointMap.entrySet().iterator();it.hasNext();){var entry=it.next(),valence=entry.getValue().count;this._bnRule.isInBoundary(valence)&&bdyPts.add(entry.getKey())}return CoordinateArrays.toCoordinateArray(bdyPts)},addEndpoint:function(pt){var counter=this._endpointMap.get(pt);null===counter&&(counter=new Counter,this._endpointMap.put(pt,counter)),counter.count++},interfaces_:function(){return[]},getClass:function(){return BoundaryOp}}),BoundaryOp.getBoundary=function(){if(1===arguments.length){return(bop=new BoundaryOp(g=arguments[0])).getBoundary()}if(2===arguments.length){var g=arguments[0],bop=new BoundaryOp(g,arguments[1]);return bop.getBoundary()}},extend(Counter.prototype,{interfaces_:function(){return[]},getClass:function(){return Counter}}),extend(StringUtil.prototype,{interfaces_:function(){return[]},getClass:function(){return StringUtil}}),StringUtil.chars=function(c,n){for(var ch=new Array(n).fill(null),i=0;i<n;i++)ch[i]=c;return new String(ch)},StringUtil.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],os=new function(){},ps=new function(){}(os);return t.printStackTrace(ps),os.toString()}if(2===arguments.length){for(var t=arguments[0],depth=arguments[1],stackTrace="",lineNumberReader=new function(){}(new function(){}(StringUtil.getStackTrace(t))),i=0;i<depth;i++)try{stackTrace+=lineNumberReader.readLine()+StringUtil.NEWLINE}catch(e){if(!(e instanceof IOException))throw e;Assert.shouldNeverReachHere()}return stackTrace}},StringUtil.split=function(s,separator){for(var separatorlen=separator.length,tokenList=new ArrayList,tmpString=""+s,pos=tmpString.indexOf(separator);pos>=0;){var token=tmpString.substring(0,pos);tokenList.add(token),pos=(tmpString=tmpString.substring(pos+separatorlen)).indexOf(separator)}tmpString.length>0&&tokenList.add(tmpString);for(var res=new Array(tokenList.size()).fill(null),i=0;i<res.length;i++)res[i]=tokenList.get(i);return res},StringUtil.toString=function(){if(1===arguments.length){var d=arguments[0];return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)}},StringUtil.spaces=function(n){return StringUtil.chars(" ",n)},StringUtil.NEWLINE=System.getProperty("line.separator"),StringUtil.SIMPLE_ORDINATE_FORMAT=new function(){}("0.#"),extend(CoordinateSequences.prototype,{interfaces_:function(){return[]},getClass:function(){return CoordinateSequences}}),CoordinateSequences.copyCoord=function(src,srcPos,dest,destPos){for(var minDim=Math.min(src.getDimension(),dest.getDimension()),dim=0;dim<minDim;dim++)dest.setOrdinate(destPos,dim,src.getOrdinate(srcPos,dim))},CoordinateSequences.isRing=function(seq){var n=seq.size();return 0===n||!(n<=3)&&(seq.getOrdinate(0,CoordinateSequence.X)===seq.getOrdinate(n-1,CoordinateSequence.X)&&seq.getOrdinate(0,CoordinateSequence.Y)===seq.getOrdinate(n-1,CoordinateSequence.Y))},CoordinateSequences.isEqual=function(cs1,cs2){var cs1Size=cs1.size();if(cs1Size!==cs2.size())return!1;for(var dim=Math.min(cs1.getDimension(),cs2.getDimension()),i=0;i<cs1Size;i++)for(var d=0;d<dim;d++){var v1=cs1.getOrdinate(i,d),v2=cs2.getOrdinate(i,d);if(cs1.getOrdinate(i,d)!==cs2.getOrdinate(i,d)&&(!Double.isNaN(v1)||!Double.isNaN(v2)))return!1}return!0},CoordinateSequences.extend=function(fact,seq,size){var newseq=fact.create(size,seq.getDimension()),n=seq.size();if(CoordinateSequences.copy(seq,0,newseq,0,n),n>0)for(var i=n;i<size;i++)CoordinateSequences.copy(seq,n-1,newseq,i,1);return newseq},CoordinateSequences.reverse=function(seq){for(var last=seq.size()-1,mid=Math.trunc(last/2),i=0;i<=mid;i++)CoordinateSequences.swap(seq,i,last-i)},CoordinateSequences.swap=function(seq,i,j){if(i===j)return null;for(var dim=0;dim<seq.getDimension();dim++){var tmp=seq.getOrdinate(i,dim);seq.setOrdinate(i,dim,seq.getOrdinate(j,dim)),seq.setOrdinate(j,dim,tmp)}},CoordinateSequences.copy=function(src,srcPos,dest,destPos,length){for(var i=0;i<length;i++)CoordinateSequences.copyCoord(src,srcPos+i,dest,destPos+i)},CoordinateSequences.toString=function(){if(1===arguments.length){var cs=arguments[0],size=cs.size();if(0===size)return"()";var dim=cs.getDimension(),buf=new StringBuffer;buf.append("(");for(var i=0;i<size;i++){i>0&&buf.append(" ");for(var d=0;d<dim;d++)d>0&&buf.append(","),buf.append(StringUtil.toString(cs.getOrdinate(i,d)))}return buf.append(")"),buf.toString()}},CoordinateSequences.ensureValidRing=function(fact,seq){var n=seq.size();if(0===n)return seq;if(n<=3)return CoordinateSequences.createClosedRing(fact,seq,4);return seq.getOrdinate(0,CoordinateSequence.X)===seq.getOrdinate(n-1,CoordinateSequence.X)&&seq.getOrdinate(0,CoordinateSequence.Y)===seq.getOrdinate(n-1,CoordinateSequence.Y)?seq:CoordinateSequences.createClosedRing(fact,seq,n+1)},CoordinateSequences.createClosedRing=function(fact,seq,size){var newseq=fact.create(size,seq.getDimension()),n=seq.size();CoordinateSequences.copy(seq,0,newseq,0,n);for(var i=n;i<size;i++)CoordinateSequences.copy(seq,0,newseq,i,1);return newseq},inherits$1(LineString,Geometry),extend(LineString.prototype,{computeEnvelopeInternal:function(){return this.isEmpty()?new Envelope:this._points.expandEnvelope(new Envelope)},isRing:function(){return this.isClosed()&&this.isSimple()},getSortIndex:function(){return Geometry.SORTINDEX_LINESTRING},getCoordinates:function(){return this._points.toCoordinateArray()},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other))return!1;var otherLineString=other;if(this._points.size()!==otherLineString._points.size())return!1;for(var i=0;i<this._points.size();i++)if(!this.equal(this._points.getCoordinate(i),otherLineString._points.getCoordinate(i),tolerance))return!1;return!0}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var i=0;i<Math.trunc(this._points.size()/2);i++){var j=this._points.size()-1-i;if(!this._points.getCoordinate(i).equals(this._points.getCoordinate(j)))return this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j))>0&&CoordinateSequences.reverse(this._points),null}},getCoordinate:function(){return this.isEmpty()?null:this._points.getCoordinate(0)},getBoundaryDimension:function(){return this.isClosed()?Dimension.FALSE:0},isClosed:function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},getEndPoint:function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},getDimension:function(){return 1},getLength:function(){return CGAlgorithms.computeLength(this._points)},getNumPoints:function(){return this._points.size()},reverse:function(){var seq=this._points.copy();CoordinateSequences.reverse(seq);return this.getFactory().createLineString(seq)},compareToSameClass:function(){if(1===arguments.length){for(var line=o=arguments[0],i=0,j=0;i<this._points.size()&&j<line._points.size();){var comparison=this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));if(0!==comparison)return comparison;i++,j++}return i<this._points.size()?1:j<line._points.size()?-1:0}if(2===arguments.length){var o=arguments[0],line=o;return arguments[1].compare(this._points,line._points)}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter))for(var filter=arguments[0],i=0;i<this._points.size();i++)filter.filter(this._points.getCoordinate(i));else if(hasInterface(arguments[0],CoordinateSequenceFilter)){filter=arguments[0];if(0===this._points.size())return null;for(i=0;i<this._points.size()&&(filter.filter(this._points,i),!filter.isDone());i++);filter.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){(filter=arguments[0]).filter(this)}else if(hasInterface(arguments[0],GeometryComponentFilter)){(filter=arguments[0]).filter(this)}},getBoundary:function(){return new BoundaryOp(this).getBoundary()},isEquivalentClass:function(other){return other instanceof LineString},clone:function(){var ls=Geometry.prototype.clone.call(this);return ls._points=this._points.clone(),ls},getCoordinateN:function(n){return this._points.getCoordinate(n)},getGeometryType:function(){return"LineString"},copy:function(){return new LineString(this._points.copy(),this._factory)},getCoordinateSequence:function(){return this._points},isEmpty:function(){return 0===this._points.size()},init:function(points){if(null===points&&(points=this.getFactory().getCoordinateSequenceFactory().create([])),1===points.size())throw new IllegalArgumentException("Invalid number of points in LineString (found "+points.size()+" - must be 0 or >= 2)");this._points=points},isCoordinate:function(pt){for(var i=0;i<this._points.size();i++)if(this._points.getCoordinate(i).equals(pt))return!0;return!1},getStartPoint:function(){return this.isEmpty()?null:this.getPointN(0)},getPointN:function(n){return this.getFactory().createPoint(this._points.getCoordinate(n))},interfaces_:function(){return[Lineal]},getClass:function(){return LineString}}),LineString.serialVersionUID=0x2b2b51ba435c8e00,extend(Puntal.prototype,{interfaces_:function(){return[]},getClass:function(){return Puntal}}),inherits$1(Point,Geometry),extend(Point.prototype,{computeEnvelopeInternal:function(){if(this.isEmpty())return new Envelope;var env=new Envelope;return env.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),env},getSortIndex:function(){return Geometry.SORTINDEX_POINT},getCoordinates:function(){return this.isEmpty()?[]:[this.getCoordinate()]},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];return!!this.isEquivalentClass(other)&&(!(!this.isEmpty()||!other.isEmpty())||this.isEmpty()===other.isEmpty()&&this.equal(other.getCoordinate(),this.getCoordinate(),tolerance))}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){},getCoordinate:function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},getBoundaryDimension:function(){return Dimension.FALSE},getDimension:function(){return 0},getNumPoints:function(){return this.isEmpty()?0:1},reverse:function(){return this.copy()},getX:function(){if(null===this.getCoordinate())throw new IllegalStateException("getX called on empty Point");return this.getCoordinate().x},compareToSameClass:function(){if(1===arguments.length){point=other=arguments[0];return this.getCoordinate().compareTo(point.getCoordinate())}if(2===arguments.length){var other=arguments[0],point=other;return arguments[1].compare(this._coordinates,point._coordinates)}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter)){filter=arguments[0];if(this.isEmpty())return null;filter.filter(this.getCoordinate())}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){filter=arguments[0];if(this.isEmpty())return null;filter.filter(this._coordinates,0),filter.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){(filter=arguments[0]).filter(this)}else if(hasInterface(arguments[0],GeometryComponentFilter)){var filter;(filter=arguments[0]).filter(this)}},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},clone:function(){var p=Geometry.prototype.clone.call(this);return p._coordinates=this._coordinates.clone(),p},getGeometryType:function(){return"Point"},copy:function(){return new Point(this._coordinates.copy(),this._factory)},getCoordinateSequence:function(){return this._coordinates},getY:function(){if(null===this.getCoordinate())throw new IllegalStateException("getY called on empty Point");return this.getCoordinate().y},isEmpty:function(){return 0===this._coordinates.size()},init:function(coordinates){null===coordinates&&(coordinates=this.getFactory().getCoordinateSequenceFactory().create([])),Assert.isTrue(coordinates.size()<=1),this._coordinates=coordinates},isSimple:function(){return!0},interfaces_:function(){return[Puntal]},getClass:function(){return Point}}),Point.serialVersionUID=0x44077bad161cbc00,extend(Polygonal.prototype,{interfaces_:function(){return[]},getClass:function(){return Polygonal}}),inherits$1(Polygon,Geometry),extend(Polygon.prototype,{computeEnvelopeInternal:function(){return this._shell.getEnvelopeInternal()},getSortIndex:function(){return Geometry.SORTINDEX_POLYGON},getCoordinates:function(){if(this.isEmpty())return[];for(var coordinates=new Array(this.getNumPoints()).fill(null),k=-1,shellCoordinates=this._shell.getCoordinates(),x=0;x<shellCoordinates.length;x++)coordinates[++k]=shellCoordinates[x];for(var i=0;i<this._holes.length;i++)for(var childCoordinates=this._holes[i].getCoordinates(),j=0;j<childCoordinates.length;j++)coordinates[++k]=childCoordinates[j];return coordinates},getArea:function(){var area=0;area+=Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));for(var i=0;i<this._holes.length;i++)area-=Math.abs(CGAlgorithms.signedArea(this._holes[i].getCoordinateSequence()));return area},isRectangle:function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var seq=this._shell.getCoordinateSequence(),env=this.getEnvelopeInternal(),i=0;i<5;i++){if((x=seq.getX(i))!==env.getMinX()&&x!==env.getMaxX())return!1;if((y=seq.getY(i))!==env.getMinY()&&y!==env.getMaxY())return!1}for(var prevX=seq.getX(0),prevY=seq.getY(0),i=1;i<=4;i++){var x=seq.getX(i),y=seq.getY(i);if(x!==prevX===(y!==prevY))return!1;prevX=x,prevY=y}return!0},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];if(!this.isEquivalentClass(other))return!1;var otherPolygon=other,thisShell=this._shell,otherPolygonShell=otherPolygon._shell;if(!thisShell.equalsExact(otherPolygonShell,tolerance))return!1;if(this._holes.length!==otherPolygon._holes.length)return!1;for(var i=0;i<this._holes.length;i++)if(!this._holes[i].equalsExact(otherPolygon._holes[i],tolerance))return!1;return!0}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var i=0;i<this._holes.length;i++)this.normalize(this._holes[i],!1);Arrays.sort(this._holes)}else if(2===arguments.length){var ring=arguments[0],clockwise=arguments[1];if(ring.isEmpty())return null;var uniqueCoordinates=new Array(ring.getCoordinates().length-1).fill(null);System.arraycopy(ring.getCoordinates(),0,uniqueCoordinates,0,uniqueCoordinates.length);var minCoordinate=CoordinateArrays.minCoordinate(ring.getCoordinates());CoordinateArrays.scroll(uniqueCoordinates,minCoordinate),System.arraycopy(uniqueCoordinates,0,ring.getCoordinates(),0,uniqueCoordinates.length),ring.getCoordinates()[uniqueCoordinates.length]=uniqueCoordinates[0],CGAlgorithms.isCCW(ring.getCoordinates())===clockwise&&CoordinateArrays.reverse(ring.getCoordinates())}},getCoordinate:function(){return this._shell.getCoordinate()},getNumInteriorRing:function(){return this._holes.length},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},getLength:function(){var len=0;len+=this._shell.getLength();for(var i=0;i<this._holes.length;i++)len+=this._holes[i].getLength();return len},getNumPoints:function(){for(var numPoints=this._shell.getNumPoints(),i=0;i<this._holes.length;i++)numPoints+=this._holes[i].getNumPoints();return numPoints},reverse:function(){var poly=this.copy();poly._shell=this._shell.copy().reverse(),poly._holes=new Array(this._holes.length).fill(null);for(var i=0;i<this._holes.length;i++)poly._holes[i]=this._holes[i].copy().reverse();return poly},convexHull:function(){return this.getExteriorRing().convexHull()},compareToSameClass:function(){if(1===arguments.length){var o=arguments[0],thisShell=this._shell,otherShell=o._shell;return thisShell.compareToSameClass(otherShell)}if(2===arguments.length){var o=arguments[0],comp=arguments[1],poly=o,thisShell=this._shell,otherShell=poly._shell,shellComp=thisShell.compareToSameClass(otherShell,comp);if(0!==shellComp)return shellComp;for(var nHole1=this.getNumInteriorRing(),nHole2=poly.getNumInteriorRing(),i=0;i<nHole1&&i<nHole2;){var thisHole=this.getInteriorRingN(i),otherHole=poly.getInteriorRingN(i),holeComp=thisHole.compareToSameClass(otherHole,comp);if(0!==holeComp)return holeComp;i++}return i<nHole1?1:i<nHole2?-1:0}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter)){filter=arguments[0];this._shell.apply(filter);for(i=0;i<this._holes.length;i++)this._holes[i].apply(filter)}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){filter=arguments[0];if(this._shell.apply(filter),!filter.isDone())for(i=0;i<this._holes.length&&(this._holes[i].apply(filter),!filter.isDone());i++);filter.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){(filter=arguments[0]).filter(this)}else if(hasInterface(arguments[0],GeometryComponentFilter)){var filter;(filter=arguments[0]).filter(this),this._shell.apply(filter);for(var i=0;i<this._holes.length;i++)this._holes[i].apply(filter)}},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var rings=new Array(this._holes.length+1).fill(null);rings[0]=this._shell;for(var i=0;i<this._holes.length;i++)rings[i+1]=this._holes[i];return rings.length<=1?this.getFactory().createLinearRing(rings[0].getCoordinateSequence()):this.getFactory().createMultiLineString(rings)},clone:function(){var poly=Geometry.prototype.clone.call(this);poly._shell=this._shell.clone(),poly._holes=new Array(this._holes.length).fill(null);for(var i=0;i<this._holes.length;i++)poly._holes[i]=this._holes[i].clone();return poly},getGeometryType:function(){return"Polygon"},copy:function(){for(var shell=this._shell.copy(),holes=new Array(this._holes.length).fill(null),i=0;i<holes.length;i++)holes[i]=this._holes[i].copy();return new Polygon(shell,holes,this._factory)},getExteriorRing:function(){return this._shell},isEmpty:function(){return this._shell.isEmpty()},getInteriorRingN:function(n){return this._holes[n]},interfaces_:function(){return[Polygonal]},getClass:function(){return Polygon}}),Polygon.serialVersionUID=-0x307ffefd8dc97200,inherits$1(MultiPoint,GeometryCollection),extend(MultiPoint.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_MULTIPOINT},isValid:function(){return!0},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];return!!this.isEquivalentClass(other)&&GeometryCollection.prototype.equalsExact.call(this,other,tolerance)}return GeometryCollection.prototype.equalsExact.apply(this,arguments)},getCoordinate:function(){if(1===arguments.length){var n=arguments[0];return this._geometries[n].getCoordinate()}return GeometryCollection.prototype.getCoordinate.apply(this,arguments)},getBoundaryDimension:function(){return Dimension.FALSE},getDimension:function(){return 0},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},getGeometryType:function(){return"MultiPoint"},copy:function(){for(var points=new Array(this._geometries.length).fill(null),i=0;i<points.length;i++)points[i]=this._geometries[i].copy();return new MultiPoint(points,this._factory)},interfaces_:function(){return[Puntal]},getClass:function(){return MultiPoint}}),MultiPoint.serialVersionUID=-0x6fb1ed4162e0fc00,inherits$1(LinearRing,LineString),extend(LinearRing.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_LINEARRING},getBoundaryDimension:function(){return Dimension.FALSE},isClosed:function(){return!!this.isEmpty()||LineString.prototype.isClosed.call(this)},reverse:function(){var seq=this._points.copy();CoordinateSequences.reverse(seq);return this.getFactory().createLinearRing(seq)},validateConstruction:function(){if(!this.isEmpty()&&!LineString.prototype.isClosed.call(this))throw new IllegalArgumentException("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<LinearRing.MINIMUM_VALID_SIZE)throw new IllegalArgumentException("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")},getGeometryType:function(){return"LinearRing"},copy:function(){return new LinearRing(this._points.copy(),this._factory)},interfaces_:function(){return[]},getClass:function(){return LinearRing}}),LinearRing.MINIMUM_VALID_SIZE=4,LinearRing.serialVersionUID=-0x3b229e262367a600,inherits$1(MultiPolygon,GeometryCollection),extend(MultiPolygon.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_MULTIPOLYGON},equalsExact:function(){if(2===arguments.length){var other=arguments[0],tolerance=arguments[1];return!!this.isEquivalentClass(other)&&GeometryCollection.prototype.equalsExact.call(this,other,tolerance)}return GeometryCollection.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},reverse:function(){for(var n=this._geometries.length,revGeoms=new Array(n).fill(null),i=0;i<this._geometries.length;i++)revGeoms[i]=this._geometries[i].reverse();return this.getFactory().createMultiPolygon(revGeoms)},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var allRings=new ArrayList,i=0;i<this._geometries.length;i++)for(var rings=this._geometries[i].getBoundary(),j=0;j<rings.getNumGeometries();j++)allRings.add(rings.getGeometryN(j));var allRingsArray=new Array(allRings.size()).fill(null);return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))},getGeometryType:function(){return"MultiPolygon"},copy:function(){for(var polygons=new Array(this._geometries.length).fill(null),i=0;i<polygons.length;i++)polygons[i]=this._geometries[i].copy();return new MultiPolygon(polygons,this._factory)},interfaces_:function(){return[Polygonal]},getClass:function(){return MultiPolygon}}),MultiPolygon.serialVersionUID=-0x7a5aa1369171980,extend(GeometryEditor.prototype,{setCopyUserData:function(isUserDataCopied){this._isUserDataCopied=isUserDataCopied},edit:function(geometry,operation){if(null===geometry)return null;var result=this.editInternal(geometry,operation);return this._isUserDataCopied&&result.setUserData(geometry.getUserData()),result},editInternal:function(geometry,operation){return null===this._factory&&(this._factory=geometry.getFactory()),geometry instanceof GeometryCollection?this.editGeometryCollection(geometry,operation):geometry instanceof Polygon?this.editPolygon(geometry,operation):geometry instanceof Point?operation.edit(geometry,this._factory):geometry instanceof LineString?operation.edit(geometry,this._factory):(Assert.shouldNeverReachHere("Unsupported Geometry class: "+geometry.getClass().getName()),null)},editGeometryCollection:function(collection,operation){for(var collectionForType=operation.edit(collection,this._factory),geometries=new ArrayList,i=0;i<collectionForType.getNumGeometries();i++){var geometry=this.edit(collectionForType.getGeometryN(i),operation);null===geometry||geometry.isEmpty()||geometries.add(geometry)}return collectionForType.getClass()===MultiPoint?this._factory.createMultiPoint(geometries.toArray([])):collectionForType.getClass()===MultiLineString?this._factory.createMultiLineString(geometries.toArray([])):collectionForType.getClass()===MultiPolygon?this._factory.createMultiPolygon(geometries.toArray([])):this._factory.createGeometryCollection(geometries.toArray([]))},editPolygon:function(polygon,operation){var newPolygon=operation.edit(polygon,this._factory);if(null===newPolygon&&(newPolygon=this._factory.createPolygon(null)),newPolygon.isEmpty())return newPolygon;var shell=this.edit(newPolygon.getExteriorRing(),operation);if(null===shell||shell.isEmpty())return this._factory.createPolygon();for(var holes=new ArrayList,i=0;i<newPolygon.getNumInteriorRing();i++){var hole=this.edit(newPolygon.getInteriorRingN(i),operation);null===hole||hole.isEmpty()||holes.add(hole)}return this._factory.createPolygon(shell,holes.toArray([]))},interfaces_:function(){return[]},getClass:function(){return GeometryEditor}}),GeometryEditor.GeometryEditorOperation=GeometryEditorOperation,extend(NoOpGeometryOperation.prototype,{edit:function(geometry,factory){return geometry},interfaces_:function(){return[GeometryEditorOperation]},getClass:function(){return NoOpGeometryOperation}}),extend(CoordinateOperation.prototype,{edit:function(geometry,factory){var coords=this.editCoordinates(geometry.getCoordinates(),geometry);return null===coords?geometry:geometry instanceof LinearRing?factory.createLinearRing(coords):geometry instanceof LineString?factory.createLineString(coords):geometry instanceof Point?coords.length>0?factory.createPoint(coords[0]):factory.createPoint():geometry},interfaces_:function(){return[GeometryEditorOperation]},getClass:function(){return CoordinateOperation}}),extend(CoordinateSequenceOperation.prototype,{edit:function(geometry,factory){return geometry instanceof LinearRing?factory.createLinearRing(this.edit(geometry.getCoordinateSequence(),geometry)):geometry instanceof LineString?factory.createLineString(this.edit(geometry.getCoordinateSequence(),geometry)):geometry instanceof Point?factory.createPoint(this.edit(geometry.getCoordinateSequence(),geometry)):geometry},interfaces_:function(){return[GeometryEditorOperation]},getClass:function(){return CoordinateSequenceOperation}}),GeometryEditor.NoOpGeometryOperation=NoOpGeometryOperation,GeometryEditor.CoordinateOperation=CoordinateOperation,GeometryEditor.CoordinateSequenceOperation=CoordinateSequenceOperation,extend(CoordinateArraySequence.prototype,{setOrdinate:function(index,ordinateIndex,value){switch(ordinateIndex){case CoordinateSequence.X:this._coordinates[index].x=value;break;case CoordinateSequence.Y:this._coordinates[index].y=value;break;case CoordinateSequence.Z:this._coordinates[index].z=value;break;default:throw new IllegalArgumentException("invalid ordinateIndex")}},size:function(){return this._coordinates.length},getOrdinate:function(index,ordinateIndex){switch(ordinateIndex){case CoordinateSequence.X:return this._coordinates[index].x;case CoordinateSequence.Y:return this._coordinates[index].y;case CoordinateSequence.Z:return this._coordinates[index].z}return Double.NaN},getCoordinate:function(){if(1===arguments.length){var i=arguments[0];return this._coordinates[i]}if(2===arguments.length){var index=arguments[0],coord=arguments[1];coord.x=this._coordinates[index].x,coord.y=this._coordinates[index].y,coord.z=this._coordinates[index].z}},getCoordinateCopy:function(i){return new Coordinate(this._coordinates[i])},getDimension:function(){return this._dimension},getX:function(index){return this._coordinates[index].x},clone:function(){for(var cloneCoordinates=new Array(this.size()).fill(null),i=0;i<this._coordinates.length;i++)cloneCoordinates[i]=this._coordinates[i].clone();return new CoordinateArraySequence(cloneCoordinates,this._dimension)},expandEnvelope:function(env){for(var i=0;i<this._coordinates.length;i++)env.expandToInclude(this._coordinates[i]);return env},copy:function(){for(var cloneCoordinates=new Array(this.size()).fill(null),i=0;i<this._coordinates.length;i++)cloneCoordinates[i]=this._coordinates[i].copy();return new CoordinateArraySequence(cloneCoordinates,this._dimension)},toString:function(){if(this._coordinates.length>0){var strBuf=new StringBuffer(17*this._coordinates.length);strBuf.append("("),strBuf.append(this._coordinates[0]);for(var i=1;i<this._coordinates.length;i++)strBuf.append(", "),strBuf.append(this._coordinates[i]);return strBuf.append(")"),strBuf.toString()}return"()"},getY:function(index){return this._coordinates[index].y},toCoordinateArray:function(){return this._coordinates},interfaces_:function(){return[CoordinateSequence,Serializable]},getClass:function(){return CoordinateArraySequence}}),CoordinateArraySequence.serialVersionUID=-0xcb44a778db18e00,extend(CoordinateArraySequenceFactory.prototype,{readResolve:function(){return CoordinateArraySequenceFactory.instance()},create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){return new CoordinateArraySequence(arguments[0])}if(hasInterface(arguments[0],CoordinateSequence)){return new CoordinateArraySequence(arguments[0])}}else if(2===arguments.length){var size=arguments[0],dimension=arguments[1];return dimension>3&&(dimension=3),dimension<2?new CoordinateArraySequence(size):new CoordinateArraySequence(size,dimension)}},interfaces_:function(){return[CoordinateSequenceFactory,Serializable]},getClass:function(){return CoordinateArraySequenceFactory}}),CoordinateArraySequenceFactory.instance=function(){return CoordinateArraySequenceFactory.instanceObject},CoordinateArraySequenceFactory.serialVersionUID=-0x38e49fa6cf6f2e00,CoordinateArraySequenceFactory.instanceObject=new CoordinateArraySequenceFactory;var i,defineProperty$1=Object.defineProperty,MapPolyfill=function(proto,objectOnly){function Collection(a){if(!this||this.constructor!==Collection)return new Collection(a);this._keys=[],this._values=[],this._itp=[],this.objectOnly=objectOnly,a&&function(a){this.add?a.forEach(this.add,this):a.forEach(function(a){this.set(a[0],a[1])},this)}.call(this,a)}return objectOnly||defineProperty$1(proto,"size",{get:sharedSize}),proto.constructor=Collection,Collection.prototype=proto,Collection}({delete:function(key){return this.has(key)&&(this._keys.splice(i,1),this._values.splice(i,1),this._itp.forEach(function(p){i<p[0]&&p[0]--})),i>-1},has:function(value){return function(list,key){if(this.objectOnly&&key!==Object(key))throw new TypeError("Invalid value used as weak collection key");if(key!=key||0===key)for(i=list.length;i--&&!is(list[i],key););else i=list.indexOf(key);return i>-1}.call(this,this._keys,value)},get:function(key){return this.has(key)?this._values[i]:void 0},set:function(key,value){return this.has(key)?this._values[i]=value:this._values[this._keys.push(key)-1]=value,this},keys:function(){return sharedIterator(this._itp,this._keys)},values:function(){return sharedIterator(this._itp,this._values)},entries:function(){return sharedIterator(this._itp,this._keys,this._values)},forEach:function(callback,context){for(var it=this.entries();;){var r=it.next();if(r.done)break;callback.call(context,r.value[1],r.value[0],this)}},clear:function(){(this._keys||0).length=this._values.length=0}}),MapImpl="undefined"!=typeof Map&&Map.prototype.values?Map:MapPolyfill;(HashMap.prototype=new Map$3).get=function(key){return this.map_.get(key)||null},HashMap.prototype.put=function(key,value){return this.map_.set(key,value),value},HashMap.prototype.values=function(){for(var arrayList=new ArrayList,it=this.map_.values(),o=it.next();!o.done;)arrayList.add(o.value),o=it.next();return arrayList},HashMap.prototype.entrySet=function(){var hashSet=new HashSet;return this.map_.entries().forEach(function(entry){return hashSet.add(entry)}),hashSet},HashMap.prototype.size=function(){return this.map_.size()},extend(PrecisionModel.prototype,{equals:function(other){if(!(other instanceof PrecisionModel))return!1;var otherPrecisionModel=other;return this._modelType===otherPrecisionModel._modelType&&this._scale===otherPrecisionModel._scale},compareTo:function(o){var other=o,sigDigits=this.getMaximumSignificantDigits(),otherSigDigits=other.getMaximumSignificantDigits();return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))},getScale:function(){return this._scale},isFloating:function(){return this._modelType===PrecisionModel.FLOATING||this._modelType===PrecisionModel.FLOATING_SINGLE},getType:function(){return this._modelType},toString:function(){var description="UNKNOWN";return this._modelType===PrecisionModel.FLOATING?description="Floating":this._modelType===PrecisionModel.FLOATING_SINGLE?description="Floating-Single":this._modelType===PrecisionModel.FIXED&&(description="Fixed (Scale="+this.getScale()+")"),description},makePrecise:function(){if("number"==typeof arguments[0]){var val=arguments[0];if(Double.isNaN(val))return val;if(this._modelType===PrecisionModel.FLOATING_SINGLE){return val}return this._modelType===PrecisionModel.FIXED?Math.round(val*this._scale)/this._scale:val}if(arguments[0]instanceof Coordinate){var coord=arguments[0];if(this._modelType===PrecisionModel.FLOATING)return null;coord.x=this.makePrecise(coord.x),coord.y=this.makePrecise(coord.y)}},getMaximumSignificantDigits:function(){var maxSigDigits=16;return this._modelType===PrecisionModel.FLOATING?maxSigDigits=16:this._modelType===PrecisionModel.FLOATING_SINGLE?maxSigDigits=6:this._modelType===PrecisionModel.FIXED&&(maxSigDigits=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),maxSigDigits},setScale:function(scale){this._scale=Math.abs(scale)},interfaces_:function(){return[Serializable,Comparable]},getClass:function(){return PrecisionModel}}),PrecisionModel.mostPrecise=function(pm1,pm2){return pm1.compareTo(pm2)>=0?pm1:pm2},extend(Type.prototype,{readResolve:function(){return Type.nameToTypeMap.get(this._name)},toString:function(){return this._name},interfaces_:function(){return[Serializable]},getClass:function(){return Type}}),Type.serialVersionUID=-552860263173159e4,Type.nameToTypeMap=new HashMap,PrecisionModel.Type=Type,PrecisionModel.serialVersionUID=0x6bee6404e9a25c00,PrecisionModel.FIXED=new Type("FIXED"),PrecisionModel.FLOATING=new Type("FLOATING"),PrecisionModel.FLOATING_SINGLE=new Type("FLOATING SINGLE"),PrecisionModel.maximumPreciseValue=9007199254740992,extend(GeometryFactory.prototype,{toGeometry:function(envelope){return envelope.isNull()?this.createPoint(null):envelope.getMinX()===envelope.getMaxX()&&envelope.getMinY()===envelope.getMaxY()?this.createPoint(new Coordinate(envelope.getMinX(),envelope.getMinY())):envelope.getMinX()===envelope.getMaxX()||envelope.getMinY()===envelope.getMaxY()?this.createLineString([new Coordinate(envelope.getMinX(),envelope.getMinY()),new Coordinate(envelope.getMaxX(),envelope.getMaxY())]):this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(),envelope.getMinY()),new Coordinate(envelope.getMinX(),envelope.getMaxY()),new Coordinate(envelope.getMaxX(),envelope.getMaxY()),new Coordinate(envelope.getMaxX(),envelope.getMinY()),new Coordinate(envelope.getMinX(),envelope.getMinY())]),null)},createLineString:function(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){coordinates=arguments[0];return this.createLineString(null!==coordinates?this.getCoordinateSequenceFactory().create(coordinates):null)}if(hasInterface(arguments[0],CoordinateSequence)){var coordinates;return new LineString(coordinates=arguments[0],this)}}},createMultiLineString:function(){if(0===arguments.length)return new MultiLineString(null,this);if(1===arguments.length){return new MultiLineString(arguments[0],this)}},buildGeometry:function(geomList){for(var geomClass=null,isHeterogeneous=!1,hasGeometryCollection=!1,i=geomList.iterator();i.hasNext();){var geom=i.next(),partClass=geom.getClass();null===geomClass&&(geomClass=partClass),partClass!==geomClass&&(isHeterogeneous=!0),geom.isGeometryCollectionOrDerived()&&(hasGeometryCollection=!0)}if(null===geomClass)return this.createGeometryCollection();if(isHeterogeneous||hasGeometryCollection)return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));var geom0=geomList.iterator().next();if(geomList.size()>1){if(geom0 instanceof Polygon)return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));if(geom0 instanceof LineString)return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));if(geom0 instanceof Point)return this.createMultiPoint(GeometryFactory.toPointArray(geomList));Assert.shouldNeverReachHere("Unhandled class: "+geom0.getClass().getName())}return geom0},createMultiPointFromCoords:function(coordinates){return this.createMultiPoint(null!==coordinates?this.getCoordinateSequenceFactory().create(coordinates):null)},createPoint:function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Coordinate){var coordinate=arguments[0];return this.createPoint(null!==coordinate?this.getCoordinateSequenceFactory().create([coordinate]):null)}if(hasInterface(arguments[0],CoordinateSequence)){return new Point(arguments[0],this)}}},getCoordinateSequenceFactory:function(){return this._coordinateSequenceFactory},createPolygon:function(){if(0===arguments.length)return new Polygon(null,null,this);if(1===arguments.length){if(hasInterface(arguments[0],CoordinateSequence)){coordinates=arguments[0];return this.createPolygon(this.createLinearRing(coordinates))}if(arguments[0]instanceof Array){var coordinates=arguments[0];return this.createPolygon(this.createLinearRing(coordinates))}if(arguments[0]instanceof LinearRing){shell=arguments[0];return this.createPolygon(shell,null)}}else if(2===arguments.length){var shell;return new Polygon(shell=arguments[0],arguments[1],this)}},getSRID:function(){return this._SRID},createGeometryCollection:function(){if(0===arguments.length)return new GeometryCollection(null,this);if(1===arguments.length){return new GeometryCollection(arguments[0],this)}},createGeometry:function(g){return new GeometryEditor(this).edit(g,{edit:function(){if(2===arguments.length){var coordSeq=arguments[0];return this._coordinateSequenceFactory.create(coordSeq)}}})},getPrecisionModel:function(){return this._precisionModel},createLinearRing:function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){coordinates=arguments[0];return this.createLinearRing(null!==coordinates?this.getCoordinateSequenceFactory().create(coordinates):null)}if(hasInterface(arguments[0],CoordinateSequence)){var coordinates;return new LinearRing(coordinates=arguments[0],this)}}},createMultiPolygon:function(){if(0===arguments.length)return new MultiPolygon(null,this);if(1===arguments.length){return new MultiPolygon(arguments[0],this)}},createMultiPoint:function(){if(0===arguments.length)return new MultiPoint(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){return new MultiPoint(arguments[0],this)}if(arguments[0]instanceof Array){coordinates=arguments[0];return this.createMultiPoint(null!==coordinates?this.getCoordinateSequenceFactory().create(coordinates):null)}if(hasInterface(arguments[0],CoordinateSequence)){var coordinates;if(null===(coordinates=arguments[0]))return this.createMultiPoint(new Array(0).fill(null));for(var points=new Array(coordinates.size()).fill(null),i=0;i<coordinates.size();i++){var ptSeq=this.getCoordinateSequenceFactory().create(1,coordinates.getDimension());CoordinateSequences.copy(coordinates,i,ptSeq,0,1),points[i]=this.createPoint(ptSeq)}return this.createMultiPoint(points)}}},interfaces_:function(){return[Serializable]},getClass:function(){return GeometryFactory}}),GeometryFactory.toMultiPolygonArray=function(multiPolygons){var multiPolygonArray=new Array(multiPolygons.size()).fill(null);return multiPolygons.toArray(multiPolygonArray)},GeometryFactory.toGeometryArray=function(geometries){if(null===geometries)return null;var geometryArray=new Array(geometries.size()).fill(null);return geometries.toArray(geometryArray)},GeometryFactory.getDefaultCoordinateSequenceFactory=function(){return CoordinateArraySequenceFactory.instance()},GeometryFactory.toMultiLineStringArray=function(multiLineStrings){var multiLineStringArray=new Array(multiLineStrings.size()).fill(null);return multiLineStrings.toArray(multiLineStringArray)},GeometryFactory.toLineStringArray=function(lineStrings){var lineStringArray=new Array(lineStrings.size()).fill(null);return lineStrings.toArray(lineStringArray)},GeometryFactory.toMultiPointArray=function(multiPoints){var multiPointArray=new Array(multiPoints.size()).fill(null);return multiPoints.toArray(multiPointArray)},GeometryFactory.toLinearRingArray=function(linearRings){var linearRingArray=new Array(linearRings.size()).fill(null);return linearRings.toArray(linearRingArray)},GeometryFactory.toPointArray=function(points){var pointArray=new Array(points.size()).fill(null);return points.toArray(pointArray)},GeometryFactory.toPolygonArray=function(polygons){var polygonArray=new Array(polygons.size()).fill(null);return polygons.toArray(polygonArray)},GeometryFactory.createPointFromInternalCoord=function(coord,exemplar){return exemplar.getPrecisionModel().makePrecise(coord),exemplar.getFactory().createPoint(coord)},GeometryFactory.serialVersionUID=-0x5ea75f2051eeb400;var regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/};extend(WKTParser.prototype,{read:function(wkt){var geometry,type,str;wkt=wkt.replace(/[\n\r]/g," ");var matches=regExes.typeStr.exec(wkt);if(-1!==wkt.search("EMPTY")&&((matches=regExes.emptyTypeStr.exec(wkt))[2]=void 0),matches&&(type=matches[1].toLowerCase(),str=matches[2],parse[type]&&(geometry=parse[type].apply(this,[str]))),void 0===geometry)throw new Error("Could not parse WKT "+wkt);return geometry},write:function(geometry){return this.extractGeometry(geometry)},extractGeometry:function(geometry){var type=geometry.getGeometryType().toLowerCase();if(!extract$1[type])return null;var wktType=type.toUpperCase();return geometry.isEmpty()?wktType+" EMPTY":wktType+"("+extract$1[type].apply(this,[geometry])+")"}});var extract$1={coordinate:function(_coordinate){return _coordinate.x+" "+_coordinate.y},point:function(_point){return extract$1.coordinate.call(this,_point._coordinates._coordinates[0])},multipoint:function(_multipoint){for(var array=[],i=0,len=_multipoint._geometries.length;i<len;++i)array.push("("+extract$1.point.apply(this,[_multipoint._geometries[i]])+")");return array.join(",")},linestring:function(_linestring){for(var array=[],i=0,len=_linestring._points._coordinates.length;i<len;++i)array.push(extract$1.coordinate.apply(this,[_linestring._points._coordinates[i]]));return array.join(",")},linearring:function(_linearring){for(var array=[],i=0,len=_linearring._points._coordinates.length;i<len;++i)array.push(extract$1.coordinate.apply(this,[_linearring._points._coordinates[i]]));return array.join(",")},multilinestring:function(_multilinestring){for(var array=[],i=0,len=_multilinestring._geometries.length;i<len;++i)array.push("("+extract$1.linestring.apply(this,[_multilinestring._geometries[i]])+")");return array.join(",")},polygon:function(_polygon){var array=[];array.push("("+extract$1.linestring.apply(this,[_polygon._shell])+")");for(var i=0,len=_polygon._holes.length;i<len;++i)array.push("("+extract$1.linestring.apply(this,[_polygon._holes[i]])+")");return array.join(",")},multipolygon:function(_multipolygon){for(var array=[],i=0,len=_multipolygon._geometries.length;i<len;++i)array.push("("+extract$1.polygon.apply(this,[_multipolygon._geometries[i]])+")");return array.join(",")},geometrycollection:function(collection){for(var array=[],i=0,len=collection._geometries.length;i<len;++i)array.push(this.extractGeometry(collection._geometries[i]));return array.join(",")}},parse={point:function(str){if(void 0===str)return this.geometryFactory.createPoint();var coords=str.trim().split(regExes.spaces);return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),Number.parseFloat(coords[1])))},multipoint:function(str){if(void 0===str)return this.geometryFactory.createMultiPoint();for(var point,points=str.trim().split(","),components=[],i=0,len=points.length;i<len;++i)point=points[i].replace(regExes.trimParens,"$1"),components.push(parse.point.apply(this,[point]));return this.geometryFactory.createMultiPoint(components)},linestring:function(str){if(void 0===str)return this.geometryFactory.createLineString();for(var coords,points=str.trim().split(","),components=[],i=0,len=points.length;i<len;++i)coords=points[i].trim().split(regExes.spaces),components.push(new Coordinate(Number.parseFloat(coords[0]),Number.parseFloat(coords[1])));return this.geometryFactory.createLineString(components)},linearring:function(str){if(void 0===str)return this.geometryFactory.createLinearRing();for(var coords,points=str.trim().split(","),components=[],i=0,len=points.length;i<len;++i)coords=points[i].trim().split(regExes.spaces),components.push(new Coordinate(Number.parseFloat(coords[0]),Number.parseFloat(coords[1])));return this.geometryFactory.createLinearRing(components)},multilinestring:function(str){if(void 0===str)return this.geometryFactory.createMultiLineString();for(var line,lines=str.trim().split(regExes.parenComma),components=[],i=0,len=lines.length;i<len;++i)line=lines[i].replace(regExes.trimParens,"$1"),components.push(parse.linestring.apply(this,[line]));return this.geometryFactory.createMultiLineString(components)},polygon:function(str){if(void 0===str)return this.geometryFactory.createPolygon();for(var ring,linestring,linearring,shell,rings=str.trim().split(regExes.parenComma),holes=[],i=0,len=rings.length;i<len;++i)ring=rings[i].replace(regExes.trimParens,"$1"),linestring=parse.linestring.apply(this,[ring]),linearring=this.geometryFactory.createLinearRing(linestring._points),0===i?shell=linearring:holes.push(linearring);return this.geometryFactory.createPolygon(shell,holes)},multipolygon:function(str){if(void 0===str)return this.geometryFactory.createMultiPolygon();for(var polygon,polygons=str.trim().split(regExes.doubleParenComma),components=[],i=0,len=polygons.length;i<len;++i)polygon=polygons[i].replace(regExes.trimParens,"$1"),components.push(parse.polygon.apply(this,[polygon]));return this.geometryFactory.createMultiPolygon(components)},geometrycollection:function(str){if(void 0===str)return this.geometryFactory.createGeometryCollection();for(var wktArray=(str=str.replace(/,\s*([A-Za-z])/g,"|$1")).trim().split("|"),components=[],i=0,len=wktArray.length;i<len;++i)components.push(this.read(wktArray[i]));return this.geometryFactory.createGeometryCollection(components)}};extend(WKTWriter.prototype,{write:function(geometry){return this.parser.write(geometry)}}),extend(WKTWriter,{toLineString:function(p0,p1){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+p0.x+" "+p0.y+", "+p1.x+" "+p1.y+" )"}}),extend(LineIntersector.prototype,{getIndexAlongSegment:function(segmentIndex,intIndex){return this.computeIntLineIndex(),this._intLineIndex[segmentIndex][intIndex]},getTopologySummary:function(){var catBuf=new StringBuffer;return this.isEndPoint()&&catBuf.append(" endpoint"),this._isProper&&catBuf.append(" proper"),this.isCollinear()&&catBuf.append(" collinear"),catBuf.toString()},computeIntersection:function(p1,p2,p3,p4){this._inputLines[0][0]=p1,this._inputLines[0][1]=p2,this._inputLines[1][0]=p3,this._inputLines[1][1]=p4,this._result=this.computeIntersect(p1,p2,p3,p4)},getIntersectionNum:function(){return this._result},computeIntLineIndex:function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var segmentIndex=arguments[0];this.getEdgeDistance(segmentIndex,0)>this.getEdgeDistance(segmentIndex,1)?(this._intLineIndex[segmentIndex][0]=0,this._intLineIndex[segmentIndex][1]=1):(this._intLineIndex[segmentIndex][0]=1,this._intLineIndex[segmentIndex][1]=0)}},isProper:function(){return this.hasIntersection()&&this._isProper},setPrecisionModel:function(precisionModel){this._precisionModel=precisionModel},isInteriorIntersection:function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var inputLineIndex=arguments[0],i=0;i<this._result;i++)if(!this._intPt[i].equals2D(this._inputLines[inputLineIndex][0])&&!this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))return!0;return!1}},getIntersection:function(intIndex){return this._intPt[intIndex]},isEndPoint:function(){return this.hasIntersection()&&!this._isProper},hasIntersection:function(){return this._result!==LineIntersector.NO_INTERSECTION},getEdgeDistance:function(segmentIndex,intIndex){return LineIntersector.computeEdgeDistance(this._intPt[intIndex],this._inputLines[segmentIndex][0],this._inputLines[segmentIndex][1])},isCollinear:function(){return this._result===LineIntersector.COLLINEAR_INTERSECTION},toString:function(){return WKTWriter.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+WKTWriter.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},getEndpoint:function(segmentIndex,ptIndex){return this._inputLines[segmentIndex][ptIndex]},isIntersection:function(pt){for(var i=0;i<this._result;i++)if(this._intPt[i].equals2D(pt))return!0;return!1},getIntersectionAlongSegment:function(segmentIndex,intIndex){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[segmentIndex][intIndex]]},interfaces_:function(){return[]},getClass:function(){return LineIntersector}}),LineIntersector.computeEdgeDistance=function(p,p0,p1){var dx=Math.abs(p1.x-p0.x),dy=Math.abs(p1.y-p0.y),dist=-1;if(p.equals(p0))dist=0;else if(p.equals(p1))dist=dx>dy?dx:dy;else{var pdx=Math.abs(p.x-p0.x),pdy=Math.abs(p.y-p0.y);0!==(dist=dx>dy?pdx:pdy)||p.equals(p0)||(dist=Math.max(pdx,pdy))}return Assert.isTrue(!(0===dist&&!p.equals(p0)),"Bad distance calculation"),dist},LineIntersector.nonRobustComputeEdgeDistance=function(p,p1,p2){var dx=p.x-p1.x,dy=p.y-p1.y,dist=Math.sqrt(dx*dx+dy*dy);return Assert.isTrue(!(0===dist&&!p.equals(p1)),"Invalid distance calculation"),dist},LineIntersector.DONT_INTERSECT=0,LineIntersector.DO_INTERSECT=1,LineIntersector.COLLINEAR=2,LineIntersector.NO_INTERSECTION=0,LineIntersector.POINT_INTERSECTION=1,LineIntersector.COLLINEAR_INTERSECTION=2,inherits$1(RobustLineIntersector,LineIntersector),extend(RobustLineIntersector.prototype,{isInSegmentEnvelopes:function(intPt){var env0=new Envelope(this._inputLines[0][0],this._inputLines[0][1]),env1=new Envelope(this._inputLines[1][0],this._inputLines[1][1]);return env0.contains(intPt)&&env1.contains(intPt)},computeIntersection:function(){if(3!==arguments.length)return LineIntersector.prototype.computeIntersection.apply(this,arguments);var p=arguments[0],p1=arguments[1],p2=arguments[2];if(this._isProper=!1,Envelope.intersects(p1,p2,p)&&0===CGAlgorithms.orientationIndex(p1,p2,p)&&0===CGAlgorithms.orientationIndex(p2,p1,p))return this._isProper=!0,(p.equals(p1)||p.equals(p2))&&(this._isProper=!1),this._result=LineIntersector.POINT_INTERSECTION,null;this._result=LineIntersector.NO_INTERSECTION},normalizeToMinimum:function(n1,n2,n3,n4,normPt){normPt.x=this.smallestInAbsValue(n1.x,n2.x,n3.x,n4.x),normPt.y=this.smallestInAbsValue(n1.y,n2.y,n3.y,n4.y),n1.x-=normPt.x,n1.y-=normPt.y,n2.x-=normPt.x,n2.y-=normPt.y,n3.x-=normPt.x,n3.y-=normPt.y,n4.x-=normPt.x,n4.y-=normPt.y},safeHCoordinateIntersection:function(p1,p2,q1,q2){var intPt=null;try{intPt=HCoordinate.intersection(p1,p2,q1,q2)}catch(e){if(!(e instanceof NotRepresentableException))throw e;intPt=RobustLineIntersector.nearestEndpoint(p1,p2,q1,q2)}return intPt},intersection:function(p1,p2,q1,q2){var intPt=this.intersectionWithNormalization(p1,p2,q1,q2);return this.isInSegmentEnvelopes(intPt)||(intPt=new Coordinate(RobustLineIntersector.nearestEndpoint(p1,p2,q1,q2))),null!==this._precisionModel&&this._precisionModel.makePrecise(intPt),intPt},smallestInAbsValue:function(x1,x2,x3,x4){var x=x1,xabs=Math.abs(x);return Math.abs(x2)<xabs&&(x=x2,xabs=Math.abs(x2)),Math.abs(x3)<xabs&&(x=x3,xabs=Math.abs(x3)),Math.abs(x4)<xabs&&(x=x4),x},checkDD:function(p1,p2,q1,q2,intPt){var intPtDD=CGAlgorithmsDD.intersection(p1,p2,q1,q2),isIn=this.isInSegmentEnvelopes(intPtDD);System.out.println("DD in env = "+isIn+"  --------------------- "+intPtDD),intPt.distance(intPtDD)>1e-4&&System.out.println("Distance = "+intPt.distance(intPtDD))},intersectionWithNormalization:function(p1,p2,q1,q2){var n1=new Coordinate(p1),n2=new Coordinate(p2),n3=new Coordinate(q1),n4=new Coordinate(q2),normPt=new Coordinate;this.normalizeToEnvCentre(n1,n2,n3,n4,normPt);var intPt=this.safeHCoordinateIntersection(n1,n2,n3,n4);return intPt.x+=normPt.x,intPt.y+=normPt.y,intPt},computeCollinearIntersection:function(p1,p2,q1,q2){var p1q1p2=Envelope.intersects(p1,p2,q1),p1q2p2=Envelope.intersects(p1,p2,q2),q1p1q2=Envelope.intersects(q1,q2,p1),q1p2q2=Envelope.intersects(q1,q2,p2);return p1q1p2&&p1q2p2?(this._intPt[0]=q1,this._intPt[1]=q2,LineIntersector.COLLINEAR_INTERSECTION):q1p1q2&&q1p2q2?(this._intPt[0]=p1,this._intPt[1]=p2,LineIntersector.COLLINEAR_INTERSECTION):p1q1p2&&q1p1q2?(this._intPt[0]=q1,this._intPt[1]=p1,!q1.equals(p1)||p1q2p2||q1p2q2?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):p1q1p2&&q1p2q2?(this._intPt[0]=q1,this._intPt[1]=p2,!q1.equals(p2)||p1q2p2||q1p1q2?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):p1q2p2&&q1p1q2?(this._intPt[0]=q2,this._intPt[1]=p1,!q2.equals(p1)||p1q1p2||q1p2q2?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):p1q2p2&&q1p2q2?(this._intPt[0]=q2,this._intPt[1]=p2,!q2.equals(p2)||p1q1p2||q1p1q2?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):LineIntersector.NO_INTERSECTION},normalizeToEnvCentre:function(n00,n01,n10,n11,normPt){var minX0=n00.x<n01.x?n00.x:n01.x,minY0=n00.y<n01.y?n00.y:n01.y,maxX0=n00.x>n01.x?n00.x:n01.x,maxY0=n00.y>n01.y?n00.y:n01.y,minX1=n10.x<n11.x?n10.x:n11.x,minY1=n10.y<n11.y?n10.y:n11.y,maxX1=n10.x>n11.x?n10.x:n11.x,maxY1=n10.y>n11.y?n10.y:n11.y,intMidX=((minX0>minX1?minX0:minX1)+(maxX0<maxX1?maxX0:maxX1))/2,intMidY=((minY0>minY1?minY0:minY1)+(maxY0<maxY1?maxY0:maxY1))/2;normPt.x=intMidX,normPt.y=intMidY,n00.x-=normPt.x,n00.y-=normPt.y,n01.x-=normPt.x,n01.y-=normPt.y,n10.x-=normPt.x,n10.y-=normPt.y,n11.x-=normPt.x,n11.y-=normPt.y},computeIntersect:function(p1,p2,q1,q2){if(this._isProper=!1,!Envelope.intersects(p1,p2,q1,q2))return LineIntersector.NO_INTERSECTION;var Pq1=CGAlgorithms.orientationIndex(p1,p2,q1),Pq2=CGAlgorithms.orientationIndex(p1,p2,q2);if(Pq1>0&&Pq2>0||Pq1<0&&Pq2<0)return LineIntersector.NO_INTERSECTION;var Qp1=CGAlgorithms.orientationIndex(q1,q2,p1),Qp2=CGAlgorithms.orientationIndex(q1,q2,p2);if(Qp1>0&&Qp2>0||Qp1<0&&Qp2<0)return LineIntersector.NO_INTERSECTION;return 0===Pq1&&0===Pq2&&0===Qp1&&0===Qp2?this.computeCollinearIntersection(p1,p2,q1,q2):(0===Pq1||0===Pq2||0===Qp1||0===Qp2?(this._isProper=!1,p1.equals2D(q1)||p1.equals2D(q2)?this._intPt[0]=p1:p2.equals2D(q1)||p2.equals2D(q2)?this._intPt[0]=p2:0===Pq1?this._intPt[0]=new Coordinate(q1):0===Pq2?this._intPt[0]=new Coordinate(q2):0===Qp1?this._intPt[0]=new Coordinate(p1):0===Qp2&&(this._intPt[0]=new Coordinate(p2))):(this._isProper=!0,this._intPt[0]=this.intersection(p1,p2,q1,q2)),LineIntersector.POINT_INTERSECTION)},interfaces_:function(){return[]},getClass:function(){return RobustLineIntersector}}),RobustLineIntersector.nearestEndpoint=function(p1,p2,q1,q2){var nearestPt=p1,minDist=CGAlgorithms.distancePointLine(p1,q1,q2),dist=CGAlgorithms.distancePointLine(p2,q1,q2);return dist<minDist&&(minDist=dist,nearestPt=p2),(dist=CGAlgorithms.distancePointLine(q1,p1,p2))<minDist&&(minDist=dist,nearestPt=q1),(dist=CGAlgorithms.distancePointLine(q2,p1,p2))<minDist&&(minDist=dist,nearestPt=q2),nearestPt},extend(RobustDeterminant.prototype,{interfaces_:function(){return[]},getClass:function(){return RobustDeterminant}}),RobustDeterminant.orientationIndex=function(p1,p2,q){var dx1=p2.x-p1.x,dy1=p2.y-p1.y,dx2=q.x-p2.x,dy2=q.y-p2.y;return RobustDeterminant.signOfDet2x2(dx1,dy1,dx2,dy2)},RobustDeterminant.signOfDet2x2=function(x1,y1,x2,y2){var sign=null,swap=null,k=null;if(sign=1,0===x1||0===y2)return 0===y1||0===x2?0:y1>0?x2>0?-sign:sign:x2>0?sign:-sign;if(0===y1||0===x2)return y2>0?x1>0?sign:-sign:x1>0?-sign:sign;if(0<y1?0<y2?y1<=y2||(sign=-sign,swap=x1,x1=x2,x2=swap,swap=y1,y1=y2,y2=swap):y1<=-y2?(sign=-sign,x2=-x2,y2=-y2):(swap=x1,x1=-x2,x2=swap,swap=y1,y1=-y2,y2=swap):0<y2?-y1<=y2?(sign=-sign,x1=-x1,y1=-y1):(swap=-x1,x1=x2,x2=swap,swap=-y1,y1=y2,y2=swap):y1>=y2?(x1=-x1,y1=-y1,x2=-x2,y2=-y2):(sign=-sign,swap=-x1,x1=-x2,x2=swap,swap=-y1,y1=-y2,y2=swap),0<x1){if(!(0<x2))return sign;if(!(x1<=x2))return sign}else{if(0<x2)return-sign;if(!(x1>=x2))return-sign;sign=-sign,x1=-x1,x2=-x2}for(;;){if(k=Math.floor(x2/x1),x2-=k*x1,(y2-=k*y1)<0)return-sign;if(y2>y1)return sign;if(x1>x2+x2){if(y1<y2+y2)return sign}else{if(y1>y2+y2)return-sign;x2=x1-x2,y2=y1-y2,sign=-sign}if(0===y2)return 0===x2?0:-sign;if(0===x2)return sign;if(k=Math.floor(x1/x2),x1-=k*x2,(y1-=k*y2)<0)return sign;if(y1>y2)return-sign;if(x2>x1+x1){if(y2<y1+y1)return-sign}else{if(y2>y1+y1)return sign;x1=x2-x1,y1=y2-y1,sign=-sign}if(0===y1)return 0===x1?0:sign;if(0===x1)return-sign}},extend(RayCrossingCounter.prototype,{countSegment:function(p1,p2){if(p1.x<this._p.x&&p2.x<this._p.x)return null;if(this._p.x===p2.x&&this._p.y===p2.y)return this._isPointOnSegment=!0,null;if(p1.y===this._p.y&&p2.y===this._p.y){var minx=p1.x,maxx=p2.x;return minx>maxx&&(minx=p2.x,maxx=p1.x),this._p.x>=minx&&this._p.x<=maxx&&(this._isPointOnSegment=!0),null}if(p1.y>this._p.y&&p2.y<=this._p.y||p2.y>this._p.y&&p1.y<=this._p.y){var x1=p1.x-this._p.x,y1=p1.y-this._p.y,x2=p2.x-this._p.x,y2=p2.y-this._p.y,xIntSign=RobustDeterminant.signOfDet2x2(x1,y1,x2,y2);if(0===xIntSign)return this._isPointOnSegment=!0,null;y2<y1&&(xIntSign=-xIntSign),xIntSign>0&&this._crossingCount++}},isPointInPolygon:function(){return this.getLocation()!==Location.EXTERIOR},getLocation:function(){return this._isPointOnSegment?Location.BOUNDARY:this._crossingCount%2==1?Location.INTERIOR:Location.EXTERIOR},isOnSegment:function(){return this._isPointOnSegment},interfaces_:function(){return[]},getClass:function(){return RayCrossingCounter}}),RayCrossingCounter.locatePointInRing=function(){if(arguments[0]instanceof Coordinate&&hasInterface(arguments[1],CoordinateSequence)){for(var p=arguments[0],ring=arguments[1],counter=new RayCrossingCounter(p),p1=new Coordinate,p2=new Coordinate,i=1;i<ring.size();i++)if(ring.getCoordinate(i,p1),ring.getCoordinate(i-1,p2),counter.countSegment(p1,p2),counter.isOnSegment())return counter.getLocation();return counter.getLocation()}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Array){for(var p=arguments[0],ring=arguments[1],counter=new RayCrossingCounter(p),i=1;i<ring.length;i++){var p1=ring[i],p2=ring[i-1];if(counter.countSegment(p1,p2),counter.isOnSegment())return counter.getLocation()}return counter.getLocation()}},extend(CGAlgorithms.prototype,{interfaces_:function(){return[]},getClass:function(){return CGAlgorithms}}),CGAlgorithms.orientationIndex=function(p1,p2,q){return CGAlgorithmsDD.orientationIndex(p1,p2,q)},CGAlgorithms.signedArea=function(){if(arguments[0]instanceof Array){if((ring=arguments[0]).length<3)return 0;for(var sum=0,x0=ring[0].x,i=1;i<ring.length-1;i++){var x=ring[i].x-x0,y1=ring[i+1].y;sum+=x*(ring[i-1].y-y1)}return sum/2}if(hasInterface(arguments[0],CoordinateSequence)){var ring=arguments[0],n=ring.size();if(n<3)return 0;var p0=new Coordinate,p1=new Coordinate,p2=new Coordinate;ring.getCoordinate(0,p1),ring.getCoordinate(1,p2);x0=p1.x;p2.x-=x0;for(var sum=0,i=1;i<n-1;i++)p0.y=p1.y,p1.x=p2.x,p1.y=p2.y,ring.getCoordinate(i+1,p2),p2.x-=x0,sum+=p1.x*(p0.y-p2.y);return sum/2}},CGAlgorithms.distanceLineLine=function(A,B,C,D){if(A.equals(B))return CGAlgorithms.distancePointLine(A,C,D);if(C.equals(D))return CGAlgorithms.distancePointLine(D,A,B);var noIntersection=!1;if(Envelope.intersects(A,B,C,D)){var denom=(B.x-A.x)*(D.y-C.y)-(B.y-A.y)*(D.x-C.x);if(0===denom)noIntersection=!0;else{var r_num=(A.y-C.y)*(D.x-C.x)-(A.x-C.x)*(D.y-C.y),s=((A.y-C.y)*(B.x-A.x)-(A.x-C.x)*(B.y-A.y))/denom,r=r_num/denom;(r<0||r>1||s<0||s>1)&&(noIntersection=!0)}}else noIntersection=!0;return noIntersection?MathUtil.min(CGAlgorithms.distancePointLine(A,C,D),CGAlgorithms.distancePointLine(B,C,D),CGAlgorithms.distancePointLine(C,A,B),CGAlgorithms.distancePointLine(D,A,B)):0},CGAlgorithms.isPointInRing=function(p,ring){return CGAlgorithms.locatePointInRing(p,ring)!==Location.EXTERIOR},CGAlgorithms.computeLength=function(pts){var n=pts.size();if(n<=1)return 0;var len=0,p=new Coordinate;pts.getCoordinate(0,p);for(var x0=p.x,y0=p.y,i=1;i<n;i++){pts.getCoordinate(i,p);var x1=p.x,y1=p.y,dx=x1-x0,dy=y1-y0;len+=Math.sqrt(dx*dx+dy*dy),x0=x1,y0=y1}return len},CGAlgorithms.isCCW=function(ring){var nPts=ring.length-1;if(nPts<3)throw new IllegalArgumentException("Ring has fewer than 4 points, so orientation cannot be determined");for(var hiPt=ring[0],hiIndex=0,i=1;i<=nPts;i++){var p=ring[i];p.y>hiPt.y&&(hiPt=p,hiIndex=i)}var iPrev=hiIndex;do{(iPrev-=1)<0&&(iPrev=nPts)}while(ring[iPrev].equals2D(hiPt)&&iPrev!==hiIndex);var iNext=hiIndex;do{iNext=(iNext+1)%nPts}while(ring[iNext].equals2D(hiPt)&&iNext!==hiIndex);var prev=ring[iPrev],next=ring[iNext];if(prev.equals2D(hiPt)||next.equals2D(hiPt)||prev.equals2D(next))return!1;var disc=CGAlgorithms.computeOrientation(prev,hiPt,next);return 0===disc?prev.x>next.x:disc>0},CGAlgorithms.locatePointInRing=function(p,ring){return RayCrossingCounter.locatePointInRing(p,ring)},CGAlgorithms.distancePointLinePerpendicular=function(p,A,B){var len2=(B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y),s=((A.y-p.y)*(B.x-A.x)-(A.x-p.x)*(B.y-A.y))/len2;return Math.abs(s)*Math.sqrt(len2)},CGAlgorithms.computeOrientation=function(p1,p2,q){return CGAlgorithms.orientationIndex(p1,p2,q)},CGAlgorithms.distancePointLine=function(){if(2===arguments.length){var p=arguments[0],line=arguments[1];if(0===line.length)throw new IllegalArgumentException("Line array must contain at least one vertex");for(var minDistance=p.distance(line[0]),i=0;i<line.length-1;i++){var dist=CGAlgorithms.distancePointLine(p,line[i],line[i+1]);dist<minDistance&&(minDistance=dist)}return minDistance}if(3===arguments.length){var p=arguments[0],A=arguments[1],B=arguments[2];if(A.x===B.x&&A.y===B.y)return p.distance(A);var len2=(B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y),r=((p.x-A.x)*(B.x-A.x)+(p.y-A.y)*(B.y-A.y))/len2;if(r<=0)return p.distance(A);if(r>=1)return p.distance(B);var s=((A.y-p.y)*(B.x-A.x)-(A.x-p.x)*(B.y-A.y))/len2;return Math.abs(s)*Math.sqrt(len2)}},CGAlgorithms.isOnLine=function(p,pt){for(var lineIntersector=new RobustLineIntersector,i=1;i<pt.length;i++){var p0=pt[i-1],p1=pt[i];if(lineIntersector.computeIntersection(p,p0,p1),lineIntersector.hasIntersection())return!0}return!1},CGAlgorithms.RIGHT=CGAlgorithms.CLOCKWISE=-1,CGAlgorithms.LEFT=CGAlgorithms.COUNTERCLOCKWISE=1,CGAlgorithms.STRAIGHT=CGAlgorithms.COLLINEAR=0,extend(LineSegment.prototype,{minX:function(){return Math.min(this.p0.x,this.p1.x)},orientationIndex:function(){if(arguments[0]instanceof LineSegment){var seg=arguments[0],orient0=CGAlgorithms.orientationIndex(this.p0,this.p1,seg.p0),orient1=CGAlgorithms.orientationIndex(this.p0,this.p1,seg.p1);return orient0>=0&&orient1>=0?Math.max(orient0,orient1):orient0<=0&&orient1<=0?Math.max(orient0,orient1):0}if(arguments[0]instanceof Coordinate){var p=arguments[0];return CGAlgorithms.orientationIndex(this.p0,this.p1,p)}},toGeometry:function(geomFactory){return geomFactory.createLineString([this.p0,this.p1])},isVertical:function(){return this.p0.x===this.p1.x},equals:function(o){if(!(o instanceof LineSegment))return!1;var other=o;return this.p0.equals(other.p0)&&this.p1.equals(other.p1)},intersection:function(line){var li=new RobustLineIntersector;return li.computeIntersection(this.p0,this.p1,line.p0,line.p1),li.hasIntersection()?li.getIntersection(0):null},project:function(){if(arguments[0]instanceof Coordinate){var p=arguments[0];if(p.equals(this.p0)||p.equals(this.p1))return new Coordinate(p);var r=this.projectionFactor(p),coord=new Coordinate;return coord.x=this.p0.x+r*(this.p1.x-this.p0.x),coord.y=this.p0.y+r*(this.p1.y-this.p0.y),coord}if(arguments[0]instanceof LineSegment){var seg=arguments[0],pf0=this.projectionFactor(seg.p0),pf1=this.projectionFactor(seg.p1);if(pf0>=1&&pf1>=1)return null;if(pf0<=0&&pf1<=0)return null;var newp0=this.project(seg.p0);pf0<0&&(newp0=this.p0),pf0>1&&(newp0=this.p1);var newp1=this.project(seg.p1);return pf1<0&&(newp1=this.p0),pf1>1&&(newp1=this.p1),new LineSegment(newp0,newp1)}},normalize:function(){this.p1.compareTo(this.p0)<0&&this.reverse()},angle:function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},getCoordinate:function(i){return 0===i?this.p0:this.p1},distancePerpendicular:function(p){return CGAlgorithms.distancePointLinePerpendicular(p,this.p0,this.p1)},minY:function(){return Math.min(this.p0.y,this.p1.y)},midPoint:function(){return LineSegment.midPoint(this.p0,this.p1)},projectionFactor:function(p){if(p.equals(this.p0))return 0;if(p.equals(this.p1))return 1;var dx=this.p1.x-this.p0.x,dy=this.p1.y-this.p0.y,len=dx*dx+dy*dy;if(len<=0)return Double.NaN;return((p.x-this.p0.x)*dx+(p.y-this.p0.y)*dy)/len},closestPoints:function(line){var intPt=this.intersection(line);if(null!==intPt)return[intPt,intPt];var closestPt=new Array(2).fill(null),minDistance=Double.MAX_VALUE,dist=null,close00=this.closestPoint(line.p0);minDistance=close00.distance(line.p0),closestPt[0]=close00,closestPt[1]=line.p0;var close01=this.closestPoint(line.p1);(dist=close01.distance(line.p1))<minDistance&&(minDistance=dist,closestPt[0]=close01,closestPt[1]=line.p1);var close10=line.closestPoint(this.p0);(dist=close10.distance(this.p0))<minDistance&&(minDistance=dist,closestPt[0]=this.p0,closestPt[1]=close10);var close11=line.closestPoint(this.p1);return(dist=close11.distance(this.p1))<minDistance&&(minDistance=dist,closestPt[0]=this.p1,closestPt[1]=close11),closestPt},closestPoint:function(p){var factor=this.projectionFactor(p);if(factor>0&&factor<1)return this.project(p);return this.p0.distance(p)<this.p1.distance(p)?this.p0:this.p1},maxX:function(){return Math.max(this.p0.x,this.p1.x)},getLength:function(){return this.p0.distance(this.p1)},compareTo:function(o){var other=o,comp0=this.p0.compareTo(other.p0);return 0!==comp0?comp0:this.p1.compareTo(other.p1)},reverse:function(){var temp=this.p0;this.p0=this.p1,this.p1=temp},equalsTopo:function(other){return this.p0.equals(other.p0)&&this.p1.equals(other.p1)||this.p0.equals(other.p1)&&this.p1.equals(other.p0)},lineIntersection:function(line){try{return HCoordinate.intersection(this.p0,this.p1,line.p0,line.p1)}catch(ex){if(!(ex instanceof NotRepresentableException))throw ex}return null},maxY:function(){return Math.max(this.p0.y,this.p1.y)},pointAlongOffset:function(segmentLengthFraction,offsetDistance){var segx=this.p0.x+segmentLengthFraction*(this.p1.x-this.p0.x),segy=this.p0.y+segmentLengthFraction*(this.p1.y-this.p0.y),dx=this.p1.x-this.p0.x,dy=this.p1.y-this.p0.y,len=Math.sqrt(dx*dx+dy*dy),ux=0,uy=0;if(0!==offsetDistance){if(len<=0)throw new IllegalStateException("Cannot compute offset from zero-length line segment");ux=offsetDistance*dx/len,uy=offsetDistance*dy/len}return new Coordinate(segx-uy,segy+ux)},setCoordinates:function(){if(1===arguments.length){var ls=arguments[0];this.setCoordinates(ls.p0,ls.p1)}else if(2===arguments.length){var p0=arguments[0],p1=arguments[1];this.p0.x=p0.x,this.p0.y=p0.y,this.p1.x=p1.x,this.p1.y=p1.y}},segmentFraction:function(inputPt){var segFrac=this.projectionFactor(inputPt);return segFrac<0?segFrac=0:(segFrac>1||Double.isNaN(segFrac))&&(segFrac=1),segFrac},toString:function(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"},isHorizontal:function(){return this.p0.y===this.p1.y},distance:function(){if(arguments[0]instanceof LineSegment){var ls=arguments[0];return CGAlgorithms.distanceLineLine(this.p0,this.p1,ls.p0,ls.p1)}if(arguments[0]instanceof Coordinate){var p=arguments[0];return CGAlgorithms.distancePointLine(p,this.p0,this.p1)}},pointAlong:function(segmentLengthFraction){var coord=new Coordinate;return coord.x=this.p0.x+segmentLengthFraction*(this.p1.x-this.p0.x),coord.y=this.p0.y+segmentLengthFraction*(this.p1.y-this.p0.y),coord},hashCode:function(){var bits0=java.lang.Double.doubleToLongBits(this.p0.x);bits0^=31*java.lang.Double.doubleToLongBits(this.p0.y);var hash0=Math.trunc(bits0)^Math.trunc(bits0>>32),bits1=java.lang.Double.doubleToLongBits(this.p1.x);bits1^=31*java.lang.Double.doubleToLongBits(this.p1.y);return hash0^(Math.trunc(bits1)^Math.trunc(bits1>>32))},interfaces_:function(){return[Comparable,Serializable]},getClass:function(){return LineSegment}}),LineSegment.midPoint=function(p0,p1){return new Coordinate((p0.x+p1.x)/2,(p0.y+p1.y)/2)},LineSegment.serialVersionUID=0x2d2172135f411c00,extend(IntersectionMatrix.prototype,{isIntersects:function(){return!this.isDisjoint()},isCovers:function(){return(IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])||IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]))&&this._matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this._matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE},isCoveredBy:function(){return(IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])||IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]))&&this._matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this._matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE},set:function(){if(1===arguments.length)for(var dimensionSymbols=arguments[0],i=0;i<dimensionSymbols.length;i++){var row=Math.trunc(i/3),col=i%3;this._matrix[row][col]=Dimension.toDimensionValue(dimensionSymbols.charAt(i))}else if(3===arguments.length){var row=arguments[0],column=arguments[1],dimensionValue=arguments[2];this._matrix[row][column]=dimensionValue}},isContains:function(){return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])&&this._matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this._matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE},setAtLeast:function(){if(1===arguments.length)for(var minimumDimensionSymbols=arguments[0],i=0;i<minimumDimensionSymbols.length;i++){var row=Math.trunc(i/3),col=i%3;this.setAtLeast(row,col,Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)))}else if(3===arguments.length){var row=arguments[0],column=arguments[1],minimumDimensionValue=arguments[2];this._matrix[row][column]<minimumDimensionValue&&(this._matrix[row][column]=minimumDimensionValue)}},setAtLeastIfValid:function(row,column,minimumDimensionValue){row>=0&&column>=0&&this.setAtLeast(row,column,minimumDimensionValue)},isWithin:function(){return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])&&this._matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this._matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE},isTouches:function(dimensionOfGeometryA,dimensionOfGeometryB){return dimensionOfGeometryA>dimensionOfGeometryB?this.isTouches(dimensionOfGeometryB,dimensionOfGeometryA):(dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L||dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.L)&&(this._matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&(IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])))},isOverlaps:function(dimensionOfGeometryA,dimensionOfGeometryB){return dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.P||dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.A?IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR])&&IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]):dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L&&(1===this._matrix[Location.INTERIOR][Location.INTERIOR]&&IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR])&&IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]))},isEquals:function(dimensionOfGeometryA,dimensionOfGeometryB){return dimensionOfGeometryA===dimensionOfGeometryB&&(IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])&&this._matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this._matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE&&this._matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this._matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE)},toString:function(){for(var buf=new StringBuffer("123456789"),ai=0;ai<3;ai++)for(var bi=0;bi<3;bi++)buf.setCharAt(3*ai+bi,Dimension.toDimensionSymbol(this._matrix[ai][bi]));return buf.toString()},setAll:function(dimensionValue){for(var ai=0;ai<3;ai++)for(var bi=0;bi<3;bi++)this._matrix[ai][bi]=dimensionValue},get:function(row,column){return this._matrix[row][column]},transpose:function(){var temp=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=temp,temp=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=temp,temp=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=temp,this},matches:function(requiredDimensionSymbols){if(9!==requiredDimensionSymbols.length)throw new IllegalArgumentException("Should be length 9: "+requiredDimensionSymbols);for(var ai=0;ai<3;ai++)for(var bi=0;bi<3;bi++)if(!IntersectionMatrix.matches(this._matrix[ai][bi],requiredDimensionSymbols.charAt(3*ai+bi)))return!1;return!0},add:function(im){for(var i=0;i<3;i++)for(var j=0;j<3;j++)this.setAtLeast(i,j,im.get(i,j))},isDisjoint:function(){return this._matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&this._matrix[Location.INTERIOR][Location.BOUNDARY]===Dimension.FALSE&&this._matrix[Location.BOUNDARY][Location.INTERIOR]===Dimension.FALSE&&this._matrix[Location.BOUNDARY][Location.BOUNDARY]===Dimension.FALSE},isCrosses:function(dimensionOfGeometryA,dimensionOfGeometryB){return dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.L||dimensionOfGeometryA===Dimension.P&&dimensionOfGeometryB===Dimension.A||dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.A?IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]):dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.P||dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.P||dimensionOfGeometryA===Dimension.A&&dimensionOfGeometryB===Dimension.L?IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]):dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L&&0===this._matrix[Location.INTERIOR][Location.INTERIOR]},interfaces_:function(){return[Clonable]},getClass:function(){return IntersectionMatrix}}),IntersectionMatrix.matches=function(){if(Number.isInteger(arguments[0])&&"string"==typeof arguments[1]){var actualDimensionValue=arguments[0],requiredDimensionSymbol=arguments[1];return requiredDimensionSymbol===Dimension.SYM_DONTCARE||(requiredDimensionSymbol===Dimension.SYM_TRUE&&(actualDimensionValue>=0||actualDimensionValue===Dimension.TRUE)||(requiredDimensionSymbol===Dimension.SYM_FALSE&&actualDimensionValue===Dimension.FALSE||(requiredDimensionSymbol===Dimension.SYM_P&&actualDimensionValue===Dimension.P||(requiredDimensionSymbol===Dimension.SYM_L&&actualDimensionValue===Dimension.L||requiredDimensionSymbol===Dimension.SYM_A&&actualDimensionValue===Dimension.A))))}if("string"==typeof arguments[0]&&"string"==typeof arguments[1]){var actualDimensionSymbols=arguments[0],requiredDimensionSymbols=arguments[1];return new IntersectionMatrix(actualDimensionSymbols).matches(requiredDimensionSymbols)}},IntersectionMatrix.isTrue=function(actualDimensionValue){return actualDimensionValue>=0||actualDimensionValue===Dimension.TRUE},extend(Centroid.prototype,{addPoint:function(pt){this._ptCount+=1,this._ptCentSum.x+=pt.x,this._ptCentSum.y+=pt.y},setBasePoint:function(basePt){null===this._areaBasePt&&(this._areaBasePt=basePt)},addLineSegments:function(pts){for(var lineLen=0,i=0;i<pts.length-1;i++){var segmentLen=pts[i].distance(pts[i+1]);if(0!==segmentLen){lineLen+=segmentLen;var midx=(pts[i].x+pts[i+1].x)/2;this._lineCentSum.x+=segmentLen*midx;var midy=(pts[i].y+pts[i+1].y)/2;this._lineCentSum.y+=segmentLen*midy}}this._totalLength+=lineLen,0===lineLen&&pts.length>0&&this.addPoint(pts[0])},addHole:function(pts){for(var isPositiveArea=CGAlgorithms.isCCW(pts),i=0;i<pts.length-1;i++)this.addTriangle(this._areaBasePt,pts[i],pts[i+1],isPositiveArea);this.addLineSegments(pts)},getCentroid:function(){var cent=new Coordinate;if(Math.abs(this._areasum2)>0)cent.x=this._cg3.x/3/this._areasum2,cent.y=this._cg3.y/3/this._areasum2;else if(this._totalLength>0)cent.x=this._lineCentSum.x/this._totalLength,cent.y=this._lineCentSum.y/this._totalLength;else{if(!(this._ptCount>0))return null;cent.x=this._ptCentSum.x/this._ptCount,cent.y=this._ptCentSum.y/this._ptCount}return cent},addShell:function(pts){pts.length>0&&this.setBasePoint(pts[0]);for(var isPositiveArea=!CGAlgorithms.isCCW(pts),i=0;i<pts.length-1;i++)this.addTriangle(this._areaBasePt,pts[i],pts[i+1],isPositiveArea);this.addLineSegments(pts)},addTriangle:function(p0,p1,p2,isPositiveArea){var sign=isPositiveArea?1:-1;Centroid.centroid3(p0,p1,p2,this._triangleCent3);var area2=Centroid.area2(p0,p1,p2);this._cg3.x+=sign*area2*this._triangleCent3.x,this._cg3.y+=sign*area2*this._triangleCent3.y,this._areasum2+=sign*area2},add:function(){if(arguments[0]instanceof Polygon){poly=arguments[0];this.addShell(poly.getExteriorRing().getCoordinates());for(i=0;i<poly.getNumInteriorRing();i++)this.addHole(poly.getInteriorRingN(i).getCoordinates())}else if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom.isEmpty())return null;if(geom instanceof Point)this.addPoint(geom.getCoordinate());else if(geom instanceof LineString)this.addLineSegments(geom.getCoordinates());else if(geom instanceof Polygon){var poly=geom;this.add(poly)}else if(geom instanceof GeometryCollection)for(var gc=geom,i=0;i<gc.getNumGeometries();i++)this.add(gc.getGeometryN(i))}},interfaces_:function(){return[]},getClass:function(){return Centroid}}),Centroid.area2=function(p1,p2,p3){return(p2.x-p1.x)*(p3.y-p1.y)-(p3.x-p1.x)*(p2.y-p1.y)},Centroid.centroid3=function(p1,p2,p3,c){return c.x=p1.x+p2.x+p3.x,c.y=p1.y+p2.y+p3.y,null},Centroid.getCentroid=function(geom){return new Centroid(geom).getCentroid()},(EmptyStackException.prototype=new Error).name="EmptyStackException",(Stack$2.prototype=new List).add=function(e){return this.array_.push(e),!0},Stack$2.prototype.get=function(index){if(index<0||index>=this.size())throw new IndexOutOfBoundsException;return this.array_[index]},Stack$2.prototype.push=function(e){return this.array_.push(e),e},Stack$2.prototype.pop=function(e){if(0===this.array_.length)throw new EmptyStackException;return this.array_.pop()},Stack$2.prototype.peek=function(){if(0===this.array_.length)throw new EmptyStackException;return this.array_[this.array_.length-1]},Stack$2.prototype.empty=function(){return 0===this.array_.length},Stack$2.prototype.isEmpty=function(){return this.empty()},Stack$2.prototype.search=function(o){return this.array_.indexOf(o)},Stack$2.prototype.size=function(){return this.array_.length},Stack$2.prototype.toArray=function(){for(var array=[],i=0,len=this.array_.length;i<len;i++)array.push(this.array_[i]);return array},extend(UniqueCoordinateArrayFilter.prototype,{filter:function(coord){this.treeSet.contains(coord)||(this.list.add(coord),this.treeSet.add(coord))},getCoordinates:function(){var coordinates=new Array(this.list.size()).fill(null);return this.list.toArray(coordinates)},interfaces_:function(){return[CoordinateFilter]},getClass:function(){return UniqueCoordinateArrayFilter}}),UniqueCoordinateArrayFilter.filterCoordinates=function(coords){for(var filter=new UniqueCoordinateArrayFilter,i=0;i<coords.length;i++)filter.filter(coords[i]);return filter.getCoordinates()},extend(ConvexHull.prototype,{preSort:function(pts){for(var t=null,i=1;i<pts.length;i++)(pts[i].y<pts[0].y||pts[i].y===pts[0].y&&pts[i].x<pts[0].x)&&(t=pts[0],pts[0]=pts[i],pts[i]=t);return Arrays.sort(pts,1,pts.length,new RadialComparator(pts[0])),pts},computeOctRing:function(inputPts){var octPts=this.computeOctPts(inputPts),coordList=new CoordinateList;return coordList.add(octPts,!1),coordList.size()<3?null:(coordList.closeRing(),coordList.toCoordinateArray())},lineOrPolygon:function(coordinates){if(3===(coordinates=this.cleanRing(coordinates)).length)return this._geomFactory.createLineString([coordinates[0],coordinates[1]]);var linearRing=this._geomFactory.createLinearRing(coordinates);return this._geomFactory.createPolygon(linearRing,null)},cleanRing:function(original){Assert.equals(original[0],original[original.length-1]);for(var cleanedRing=new ArrayList,previousDistinctCoordinate=null,i=0;i<=original.length-2;i++){var currentCoordinate=original[i],nextCoordinate=original[i+1];currentCoordinate.equals(nextCoordinate)||(null!==previousDistinctCoordinate&&this.isBetween(previousDistinctCoordinate,currentCoordinate,nextCoordinate)||(cleanedRing.add(currentCoordinate),previousDistinctCoordinate=currentCoordinate))}cleanedRing.add(original[original.length-1]);var cleanedRingCoordinates=new Array(cleanedRing.size()).fill(null);return cleanedRing.toArray(cleanedRingCoordinates)},isBetween:function(c1,c2,c3){if(0!==CGAlgorithms.computeOrientation(c1,c2,c3))return!1;if(c1.x!==c3.x){if(c1.x<=c2.x&&c2.x<=c3.x)return!0;if(c3.x<=c2.x&&c2.x<=c1.x)return!0}if(c1.y!==c3.y){if(c1.y<=c2.y&&c2.y<=c3.y)return!0;if(c3.y<=c2.y&&c2.y<=c1.y)return!0}return!1},reduce:function(inputPts){var polyPts=this.computeOctRing(inputPts);if(null===polyPts)return inputPts;for(var reducedSet=new TreeSet,i=0;i<polyPts.length;i++)reducedSet.add(polyPts[i]);for(i=0;i<inputPts.length;i++)CGAlgorithms.isPointInRing(inputPts[i],polyPts)||reducedSet.add(inputPts[i]);var reducedPts=CoordinateArrays.toCoordinateArray(reducedSet);return reducedPts.length<3?this.padArray3(reducedPts):reducedPts},getConvexHull:function(){if(0===this._inputPts.length)return this._geomFactory.createGeometryCollection(null);if(1===this._inputPts.length)return this._geomFactory.createPoint(this._inputPts[0]);if(2===this._inputPts.length)return this._geomFactory.createLineString(this._inputPts);var reducedPts=this._inputPts;this._inputPts.length>50&&(reducedPts=this.reduce(this._inputPts));var sortedPts=this.preSort(reducedPts),cHS=this.grahamScan(sortedPts),cH=this.toCoordinateArray(cHS);return this.lineOrPolygon(cH)},padArray3:function(pts){for(var pad=new Array(3).fill(null),i=0;i<pad.length;i++)i<pts.length?pad[i]=pts[i]:pad[i]=pts[0];return pad},computeOctPts:function(inputPts){for(var pts=new Array(8).fill(null),j=0;j<pts.length;j++)pts[j]=inputPts[0];for(var i=1;i<inputPts.length;i++)inputPts[i].x<pts[0].x&&(pts[0]=inputPts[i]),inputPts[i].x-inputPts[i].y<pts[1].x-pts[1].y&&(pts[1]=inputPts[i]),inputPts[i].y>pts[2].y&&(pts[2]=inputPts[i]),inputPts[i].x+inputPts[i].y>pts[3].x+pts[3].y&&(pts[3]=inputPts[i]),inputPts[i].x>pts[4].x&&(pts[4]=inputPts[i]),inputPts[i].x-inputPts[i].y>pts[5].x-pts[5].y&&(pts[5]=inputPts[i]),inputPts[i].y<pts[6].y&&(pts[6]=inputPts[i]),inputPts[i].x+inputPts[i].y<pts[7].x+pts[7].y&&(pts[7]=inputPts[i]);return pts},toCoordinateArray:function(stack){for(var coordinates=new Array(stack.size()).fill(null),i=0;i<stack.size();i++){var coordinate=stack.get(i);coordinates[i]=coordinate}return coordinates},grahamScan:function(c){var p=null,ps=new Stack$2;p=ps.push(c[0]),p=ps.push(c[1]),p=ps.push(c[2]);for(var i=3;i<c.length;i++){for(p=ps.pop();!ps.empty()&&CGAlgorithms.computeOrientation(ps.peek(),p,c[i])>0;)p=ps.pop();p=ps.push(p),p=ps.push(c[i])}return p=ps.push(c[0]),ps},interfaces_:function(){return[]},getClass:function(){return ConvexHull}}),ConvexHull.extractCoordinates=function(geom){var filter=new UniqueCoordinateArrayFilter;return geom.apply(filter),filter.getCoordinates()},extend(RadialComparator.prototype,{compare:function(o1,o2){var p1=o1,p2=o2;return RadialComparator.polarCompare(this._origin,p1,p2)},interfaces_:function(){return[Comparator]},getClass:function(){return RadialComparator}}),RadialComparator.polarCompare=function(o,p,q){var dxp=p.x-o.x,dyp=p.y-o.y,dxq=q.x-o.x,dyq=q.y-o.y,orient=CGAlgorithms.computeOrientation(o,p,q);if(orient===CGAlgorithms.COUNTERCLOCKWISE)return 1;if(orient===CGAlgorithms.CLOCKWISE)return-1;var op=dxp*dxp+dyp*dyp,oq=dxq*dxq+dyq*dyq;return op<oq?-1:op>oq?1:0},ConvexHull.RadialComparator=RadialComparator,extend(GeometryTransformer.prototype,{transformPoint:function(geom,parent){return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(),geom))},transformPolygon:function(geom,parent){var isAllValidLinearRings=!0,shell=this.transformLinearRing(geom.getExteriorRing(),geom);null!==shell&&shell instanceof LinearRing&&!shell.isEmpty()||(isAllValidLinearRings=!1);for(var holes=new ArrayList,i=0;i<geom.getNumInteriorRing();i++){var hole=this.transformLinearRing(geom.getInteriorRingN(i),geom);null===hole||hole.isEmpty()||(hole instanceof LinearRing||(isAllValidLinearRings=!1),holes.add(hole))}if(isAllValidLinearRings)return this._factory.createPolygon(shell,holes.toArray([]));var components=new ArrayList;return null!==shell&&components.add(shell),components.addAll(holes),this._factory.buildGeometry(components)},createCoordinateSequence:function(coords){return this._factory.getCoordinateSequenceFactory().create(coords)},getInputGeometry:function(){return this._inputGeom},transformMultiLineString:function(geom,parent){for(var transGeomList=new ArrayList,i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transformLineString(geom.getGeometryN(i),geom);null!==transformGeom&&(transformGeom.isEmpty()||transGeomList.add(transformGeom))}return this._factory.buildGeometry(transGeomList)},transformCoordinates:function(coords,parent){return this.copy(coords)},transformLineString:function(geom,parent){return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(),geom))},transformMultiPoint:function(geom,parent){for(var transGeomList=new ArrayList,i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transformPoint(geom.getGeometryN(i),geom);null!==transformGeom&&(transformGeom.isEmpty()||transGeomList.add(transformGeom))}return this._factory.buildGeometry(transGeomList)},transformMultiPolygon:function(geom,parent){for(var transGeomList=new ArrayList,i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transformPolygon(geom.getGeometryN(i),geom);null!==transformGeom&&(transformGeom.isEmpty()||transGeomList.add(transformGeom))}return this._factory.buildGeometry(transGeomList)},copy:function(seq){return seq.copy()},transformGeometryCollection:function(geom,parent){for(var transGeomList=new ArrayList,i=0;i<geom.getNumGeometries();i++){var transformGeom=this.transform(geom.getGeometryN(i));null!==transformGeom&&(this._pruneEmptyGeometry&&transformGeom.isEmpty()||transGeomList.add(transformGeom))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)):this._factory.buildGeometry(transGeomList)},transform:function(inputGeom){if(this._inputGeom=inputGeom,this._factory=inputGeom.getFactory(),inputGeom instanceof Point)return this.transformPoint(inputGeom,null);if(inputGeom instanceof MultiPoint)return this.transformMultiPoint(inputGeom,null);if(inputGeom instanceof LinearRing)return this.transformLinearRing(inputGeom,null);if(inputGeom instanceof LineString)return this.transformLineString(inputGeom,null);if(inputGeom instanceof MultiLineString)return this.transformMultiLineString(inputGeom,null);if(inputGeom instanceof Polygon)return this.transformPolygon(inputGeom,null);if(inputGeom instanceof MultiPolygon)return this.transformMultiPolygon(inputGeom,null);if(inputGeom instanceof GeometryCollection)return this.transformGeometryCollection(inputGeom,null);throw new IllegalArgumentException("Unknown Geometry subtype: "+inputGeom.getClass().getName())},transformLinearRing:function(geom,parent){var seq=this.transformCoordinates(geom.getCoordinateSequence(),geom);if(null===seq)return this._factory.createLinearRing(null);var seqSize=seq.size();return seqSize>0&&seqSize<4&&!this._preserveType?this._factory.createLineString(seq):this._factory.createLinearRing(seq)},interfaces_:function(){return[]},getClass:function(){return GeometryTransformer}}),extend(LineStringSnapper.prototype,{snapVertices:function(srcCoords,snapPts){for(var end=this._isClosed?srcCoords.size()-1:srcCoords.size(),i=0;i<end;i++){var srcPt=srcCoords.get(i),snapVert=this.findSnapForVertex(srcPt,snapPts);null!==snapVert&&(srcCoords.set(i,new Coordinate(snapVert)),0===i&&this._isClosed&&srcCoords.set(srcCoords.size()-1,new Coordinate(snapVert)))}},findSnapForVertex:function(pt,snapPts){for(var i=0;i<snapPts.length;i++){if(pt.equals2D(snapPts[i]))return null;if(pt.distance(snapPts[i])<this._snapTolerance)return snapPts[i]}return null},snapTo:function(snapPts){var coordList=new CoordinateList(this._srcPts);this.snapVertices(coordList,snapPts),this.snapSegments(coordList,snapPts);return coordList.toCoordinateArray()},snapSegments:function(srcCoords,snapPts){if(0===snapPts.length)return null;var distinctPtCount=snapPts.length;snapPts[0].equals2D(snapPts[snapPts.length-1])&&(distinctPtCount=snapPts.length-1);for(var i=0;i<distinctPtCount;i++){var snapPt=snapPts[i],index=this.findSegmentIndexToSnap(snapPt,srcCoords);index>=0&&srcCoords.add(index+1,new Coordinate(snapPt),!1)}},findSegmentIndexToSnap:function(snapPt,srcCoords){for(var minDist=Double.MAX_VALUE,snapIndex=-1,i=0;i<srcCoords.size()-1;i++){if(this._seg.p0=srcCoords.get(i),this._seg.p1=srcCoords.get(i+1),this._seg.p0.equals2D(snapPt)||this._seg.p1.equals2D(snapPt)){if(this._allowSnappingToSourceVertices)continue;return-1}var dist=this._seg.distance(snapPt);dist<this._snapTolerance&&dist<minDist&&(minDist=dist,snapIndex=i)}return snapIndex},setAllowSnappingToSourceVertices:function(allowSnappingToSourceVertices){this._allowSnappingToSourceVertices=allowSnappingToSourceVertices},interfaces_:function(){return[]},getClass:function(){return LineStringSnapper}}),LineStringSnapper.isClosed=function(pts){return!(pts.length<=1)&&pts[0].equals2D(pts[pts.length-1])},extend(GeometrySnapper.prototype,{snapTo:function(snapGeom,snapTolerance){return new SnapTransformer(snapTolerance,this.extractTargetCoordinates(snapGeom)).transform(this._srcGeom)},snapToSelf:function(snapTolerance,cleanResult){var snappedGeom=new SnapTransformer(snapTolerance,this.extractTargetCoordinates(this._srcGeom),!0).transform(this._srcGeom),result=snappedGeom;return cleanResult&&hasInterface(result,Polygonal)&&(result=snappedGeom.buffer(0)),result},computeSnapTolerance:function(ringPts){return this.computeMinimumSegmentLength(ringPts)/10},extractTargetCoordinates:function(g){for(var ptSet=new TreeSet,pts=g.getCoordinates(),i=0;i<pts.length;i++)ptSet.add(pts[i]);return ptSet.toArray(new Array(0).fill(null))},computeMinimumSegmentLength:function(pts){for(var minSegLen=Double.MAX_VALUE,i=0;i<pts.length-1;i++){var segLen=pts[i].distance(pts[i+1]);segLen<minSegLen&&(minSegLen=segLen)}return minSegLen},interfaces_:function(){return[]},getClass:function(){return GeometrySnapper}}),GeometrySnapper.snap=function(g0,g1,snapTolerance){var snapGeom=new Array(2).fill(null),snapper0=new GeometrySnapper(g0);snapGeom[0]=snapper0.snapTo(g1,snapTolerance);var snapper1=new GeometrySnapper(g1);return snapGeom[1]=snapper1.snapTo(snapGeom[0],snapTolerance),snapGeom},GeometrySnapper.computeOverlaySnapTolerance=function(){if(1===arguments.length){var g=arguments[0],snapTolerance=GeometrySnapper.computeSizeBasedSnapTolerance(g),pm=g.getPrecisionModel();if(pm.getType()===PrecisionModel.FIXED){var fixedSnapTol=1/pm.getScale()*2/1.415;fixedSnapTol>snapTolerance&&(snapTolerance=fixedSnapTol)}return snapTolerance}if(2===arguments.length){var g0=arguments[0],g1=arguments[1];return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0),GeometrySnapper.computeOverlaySnapTolerance(g1))}},GeometrySnapper.computeSizeBasedSnapTolerance=function(g){var env=g.getEnvelopeInternal();return Math.min(env.getHeight(),env.getWidth())*GeometrySnapper.SNAP_PRECISION_FACTOR},GeometrySnapper.snapToSelf=function(geom,snapTolerance,cleanResult){return new GeometrySnapper(geom).snapToSelf(snapTolerance,cleanResult)},GeometrySnapper.SNAP_PRECISION_FACTOR=1e-9,inherits$1(SnapTransformer,GeometryTransformer),extend(SnapTransformer.prototype,{snapLine:function(srcPts,snapPts){var snapper=new LineStringSnapper(srcPts,this._snapTolerance);return snapper.setAllowSnappingToSourceVertices(this._isSelfSnap),snapper.snapTo(snapPts)},transformCoordinates:function(coords,parent){var srcPts=coords.toCoordinateArray(),newPts=this.snapLine(srcPts,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(newPts)},interfaces_:function(){return[]},getClass:function(){return SnapTransformer}}),extend(CommonBits.prototype,{getCommon:function(){return Double.longBitsToDouble(this._commonBits)},add:function(num){var numBits=Double.doubleToLongBits(num);if(this._isFirst)return this._commonBits=numBits,this._commonSignExp=CommonBits.signExpBits(this._commonBits),this._isFirst=!1,null;if(CommonBits.signExpBits(numBits)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=CommonBits.numCommonMostSigMantissaBits(this._commonBits,numBits),this._commonBits=CommonBits.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},toString:function(){if(1===arguments.length){var bits=arguments[0],x=Double.longBitsToDouble(bits),padStr="0000000000000000000000000000000000000000000000000000000000000000"+Long.toBinaryString(bits),bitStr=padStr.substring(padStr.length-64);return bitStr.substring(0,1)+"  "+bitStr.substring(1,12)+"(exp) "+bitStr.substring(12)+" [ "+x+" ]"}},interfaces_:function(){return[]},getClass:function(){return CommonBits}}),CommonBits.getBit=function(bits,i){return 0!=(bits&1<<i)?1:0},CommonBits.signExpBits=function(num){return num>>52},CommonBits.zeroLowerBits=function(bits,nBits){return bits&~((1<<nBits)-1)},CommonBits.numCommonMostSigMantissaBits=function(num1,num2){for(var count=0,i=52;i>=0;i--){if(CommonBits.getBit(num1,i)!==CommonBits.getBit(num2,i))return count;count++}return 52},extend(CommonBitsRemover.prototype,{addCommonBits:function(geom){var trans=new Translater(this._commonCoord);geom.apply(trans),geom.geometryChanged()},removeCommonBits:function(geom){if(0===this._commonCoord.x&&0===this._commonCoord.y)return geom;var invCoord=new Coordinate(this._commonCoord);invCoord.x=-invCoord.x,invCoord.y=-invCoord.y;var trans=new Translater(invCoord);return geom.apply(trans),geom.geometryChanged(),geom},getCommonCoordinate:function(){return this._commonCoord},add:function(geom){geom.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},interfaces_:function(){return[]},getClass:function(){return CommonBitsRemover}}),extend(CommonCoordinateFilter.prototype,{filter:function(coord){this._commonBitsX.add(coord.x),this._commonBitsY.add(coord.y)},getCommonCoordinate:function(){return new Coordinate(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},interfaces_:function(){return[CoordinateFilter]},getClass:function(){return CommonCoordinateFilter}}),extend(Translater.prototype,{filter:function(seq,i){var xp=seq.getOrdinate(i,0)+this.trans.x,yp=seq.getOrdinate(i,1)+this.trans.y;seq.setOrdinate(i,0,xp),seq.setOrdinate(i,1,yp)},isDone:function(){return!1},isGeometryChanged:function(){return!0},interfaces_:function(){return[CoordinateSequenceFilter]},getClass:function(){return Translater}}),CommonBitsRemover.CommonCoordinateFilter=CommonCoordinateFilter,CommonBitsRemover.Translater=Translater,extend(GeometryCollectionIterator.prototype,{next:function(){if(this._atStart)return this._atStart=!1,GeometryCollectionIterator.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new NoSuchElementException;var obj=this._parent.getGeometryN(this._index++);return obj instanceof GeometryCollection?(this._subcollectionIterator=new GeometryCollectionIterator(obj),this._subcollectionIterator.next()):obj},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},interfaces_:function(){return[Iterator]},getClass:function(){return GeometryCollectionIterator}}),GeometryCollectionIterator.isAtomic=function(geom){return!(geom instanceof GeometryCollection)},extend(PointLocator.prototype,{locateInternal:function(){if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Polygon){var p=arguments[0],poly=arguments[1];if(poly.isEmpty())return Location.EXTERIOR;var shell=poly.getExteriorRing(),shellLoc=this.locateInPolygonRing(p,shell);if(shellLoc===Location.EXTERIOR)return Location.EXTERIOR;if(shellLoc===Location.BOUNDARY)return Location.BOUNDARY;for(var i=0;i<poly.getNumInteriorRing();i++){var hole=poly.getInteriorRingN(i),holeLoc=this.locateInPolygonRing(p,hole);if(holeLoc===Location.INTERIOR)return Location.EXTERIOR;if(holeLoc===Location.BOUNDARY)return Location.BOUNDARY}return Location.INTERIOR}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof LineString){var p=arguments[0],l=arguments[1];if(!l.getEnvelopeInternal().intersects(p))return Location.EXTERIOR;pt=l.getCoordinates();return l.isClosed()||!p.equals(pt[0])&&!p.equals(pt[pt.length-1])?CGAlgorithms.isOnLine(p,pt)?Location.INTERIOR:Location.EXTERIOR:Location.BOUNDARY}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Point){var pt,p=arguments[0];return(pt=arguments[1]).getCoordinate().equals2D(p)?Location.INTERIOR:Location.EXTERIOR}},locateInPolygonRing:function(p,ring){return ring.getEnvelopeInternal().intersects(p)?CGAlgorithms.locatePointInRing(p,ring.getCoordinates()):Location.EXTERIOR},intersects:function(p,geom){return this.locate(p,geom)!==Location.EXTERIOR},updateLocationInfo:function(loc){loc===Location.INTERIOR&&(this._isIn=!0),loc===Location.BOUNDARY&&this._numBoundaries++},computeLocation:function(p,geom){if(geom instanceof Point&&this.updateLocationInfo(this.locateInternal(p,geom)),geom instanceof LineString)this.updateLocationInfo(this.locateInternal(p,geom));else if(geom instanceof Polygon)this.updateLocationInfo(this.locateInternal(p,geom));else if(geom instanceof MultiLineString)for(var ml=geom,i=0;i<ml.getNumGeometries();i++){var l=ml.getGeometryN(i);this.updateLocationInfo(this.locateInternal(p,l))}else if(geom instanceof MultiPolygon)for(var mpoly=geom,i=0;i<mpoly.getNumGeometries();i++){var poly=mpoly.getGeometryN(i);this.updateLocationInfo(this.locateInternal(p,poly))}else if(geom instanceof GeometryCollection)for(var geomi=new GeometryCollectionIterator(geom);geomi.hasNext();){var g2=geomi.next();g2!==geom&&this.computeLocation(p,g2)}},locate:function(p,geom){return geom.isEmpty()?Location.EXTERIOR:geom instanceof LineString?this.locateInternal(p,geom):geom instanceof Polygon?this.locateInternal(p,geom):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(p,geom),this._boundaryRule.isInBoundary(this._numBoundaries)?Location.BOUNDARY:this._numBoundaries>0||this._isIn?Location.INTERIOR:Location.EXTERIOR)},interfaces_:function(){return[]},getClass:function(){return PointLocator}}),extend(Octant.prototype,{interfaces_:function(){return[]},getClass:function(){return Octant}}),Octant.octant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var dx=arguments[0],dy=arguments[1];if(0===dx&&0===dy)throw new IllegalArgumentException("Cannot compute the octant for point ( "+dx+", "+dy+" )");var adx=Math.abs(dx),ady=Math.abs(dy);return dx>=0?dy>=0?adx>=ady?0:1:adx>=ady?7:6:dy>=0?adx>=ady?3:2:adx>=ady?4:5}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var p0=arguments[0],p1=arguments[1],dx=p1.x-p0.x,dy=p1.y-p0.y;if(0===dx&&0===dy)throw new IllegalArgumentException("Cannot compute the octant for two identical points "+p0);return Octant.octant(dx,dy)}},extend(SegmentString.prototype,{getCoordinates:function(){},size:function(){},getCoordinate:function(i){},isClosed:function(){},setData:function(data){},getData:function(){},interfaces_:function(){return[]},getClass:function(){return SegmentString}}),extend(BasicSegmentString.prototype,{getCoordinates:function(){return this._pts},size:function(){return this._pts.length},getCoordinate:function(i){return this._pts[i]},isClosed:function(){return this._pts[0].equals(this._pts[this._pts.length-1])},getSegmentOctant:function(index){return index===this._pts.length-1?-1:Octant.octant(this.getCoordinate(index),this.getCoordinate(index+1))},setData:function(data){this._data=data},getData:function(){return this._data},toString:function(){return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))},interfaces_:function(){return[SegmentString]},getClass:function(){return BasicSegmentString}}),extend(Boundable.prototype,{getBounds:function(){},interfaces_:function(){return[]},getClass:function(){return Boundable}}),extend(ItemBoundable.prototype,{getItem:function(){return this._item},getBounds:function(){return this._bounds},interfaces_:function(){return[Boundable,Serializable]},getClass:function(){return ItemBoundable}}),extend(PriorityQueue.prototype,{poll:function(){if(this.isEmpty())return null;var minItem=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),minItem},size:function(){return this._size},reorder:function(hole){for(var child=null,tmp=this._items.get(hole);2*hole<=this._size&&((child=2*hole)!==this._size&&this._items.get(child+1).compareTo(this._items.get(child))<0&&child++,this._items.get(child).compareTo(tmp)<0);hole=child)this._items.set(hole,this._items.get(child));this._items.set(hole,tmp)},clear:function(){this._size=0,this._items.clear()},isEmpty:function(){return 0===this._size},add:function(x){this._items.add(null),this._size+=1;var hole=this._size;for(this._items.set(0,x);x.compareTo(this._items.get(Math.trunc(hole/2)))<0;hole/=2)this._items.set(hole,this._items.get(Math.trunc(hole/2)));this._items.set(hole,x)},interfaces_:function(){return[]},getClass:function(){return PriorityQueue}}),extend(ItemVisitor.prototype,{visitItem:function(item){},interfaces_:function(){return[]},getClass:function(){return ItemVisitor}}),extend(SpatialIndex.prototype,{insert:function(itemEnv,item){},remove:function(itemEnv,item){},query:function(){},interfaces_:function(){return[]},getClass:function(){return SpatialIndex}}),extend(AbstractNode.prototype,{getLevel:function(){return this._level},size:function(){return this._childBoundables.size()},getChildBoundables:function(){return this._childBoundables},addChildBoundable:function(childBoundable){Assert.isTrue(null===this._bounds),this._childBoundables.add(childBoundable)},isEmpty:function(){return this._childBoundables.isEmpty()},getBounds:function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},interfaces_:function(){return[Boundable,Serializable]},getClass:function(){return AbstractNode}}),AbstractNode.serialVersionUID=0x5a1e55ec41369800;var Collections={reverseOrder:function(){return{compare:function(a,b){return b.compareTo(a)}}},min:function(l){return Collections.sort(l),l.get(0)},sort:function(l,c){var a=l.toArray();c?Arrays.sort(a,c):Arrays.sort(a);for(var i=l.iterator(),pos=0,alen=a.length;pos<alen;pos++)i.next(),i.set(a[pos])},singletonList:function(o){var arrayList=new ArrayList;return arrayList.add(o),arrayList}};extend(BoundablePair.prototype,{expandToQueue:function(priQ,minDistance){var isComp1=BoundablePair.isComposite(this._boundable1),isComp2=BoundablePair.isComposite(this._boundable2);if(isComp1&&isComp2)return BoundablePair.area(this._boundable1)>BoundablePair.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,priQ,minDistance),null):(this.expand(this._boundable2,this._boundable1,priQ,minDistance),null);if(isComp1)return this.expand(this._boundable1,this._boundable2,priQ,minDistance),null;if(isComp2)return this.expand(this._boundable2,this._boundable1,priQ,minDistance),null;throw new IllegalArgumentException("neither boundable is composite")},isLeaves:function(){return!(BoundablePair.isComposite(this._boundable1)||BoundablePair.isComposite(this._boundable2))},compareTo:function(o){var nd=o;return this._distance<nd._distance?-1:this._distance>nd._distance?1:0},expand:function(bndComposite,bndOther,priQ,minDistance){for(var i=bndComposite.getChildBoundables().iterator();i.hasNext();){var bp=new BoundablePair(i.next(),bndOther,this._itemDistance);bp.getDistance()<minDistance&&priQ.add(bp)}},getBoundable:function(i){return 0===i?this._boundable1:this._boundable2},getDistance:function(){return this._distance},distance:function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},interfaces_:function(){return[Comparable]},getClass:function(){return BoundablePair}}),BoundablePair.area=function(b){return b.getBounds().getArea()},BoundablePair.isComposite=function(item){return item instanceof AbstractNode},extend(AbstractSTRtree.prototype,{getNodeCapacity:function(){return this._nodeCapacity},lastNode:function(nodes){return nodes.get(nodes.size()-1)},size:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var size=0,i=arguments[0].getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();childBoundable instanceof AbstractNode?size+=this.size(childBoundable):childBoundable instanceof ItemBoundable&&(size+=1)}return size}},removeItem:function(node,item){for(var childToRemove=null,i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();childBoundable instanceof ItemBoundable&&childBoundable.getItem()===item&&(childToRemove=childBoundable)}return null!==childToRemove&&(node.getChildBoundables().remove(childToRemove),!0)},itemsTree:function(){if(0===arguments.length){this.build();var valuesTree=this.itemsTree(this._root);return null===valuesTree?new ArrayList:valuesTree}if(1===arguments.length){for(var node=arguments[0],valuesTreeForNode=new ArrayList,i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(childBoundable instanceof AbstractNode){var valuesTreeForChild=this.itemsTree(childBoundable);null!==valuesTreeForChild&&valuesTreeForNode.add(valuesTreeForChild)}else childBoundable instanceof ItemBoundable?valuesTreeForNode.add(childBoundable.getItem()):Assert.shouldNeverReachHere()}return valuesTreeForNode.size()<=0?null:valuesTreeForNode}},insert:function(bounds,item){Assert.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new ItemBoundable(bounds,item))},boundablesAtLevel:function(){if(1===arguments.length){var level=arguments[0],boundables=new ArrayList;return this.boundablesAtLevel(level,this._root,boundables),boundables}if(3===arguments.length){var level=arguments[0],top=arguments[1],boundables=arguments[2];if(Assert.isTrue(level>-2),top.getLevel()===level)return boundables.add(top),null;for(var i=top.getChildBoundables().iterator();i.hasNext();){var boundable=i.next();boundable instanceof AbstractNode?this.boundablesAtLevel(level,boundable,boundables):(Assert.isTrue(boundable instanceof ItemBoundable),-1===level&&boundables.add(boundable))}return null}},query:function(){if(1===arguments.length){searchBounds=arguments[0];this.build();matches=new ArrayList;return this.isEmpty()?matches:(this.getIntersectsOp().intersects(this._root.getBounds(),searchBounds)&&this.query(searchBounds,this._root,matches),matches)}if(2===arguments.length){var searchBounds=arguments[0],visitor=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),searchBounds)&&this.query(searchBounds,this._root,visitor)}else if(3===arguments.length)if(hasInterface(arguments[2],ItemVisitor)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode)for(var searchBounds=arguments[0],node=arguments[1],visitor=arguments[2],childBoundables=node.getChildBoundables(),i=0;i<childBoundables.size();i++){childBoundable=childBoundables.get(i);this.getIntersectsOp().intersects(childBoundable.getBounds(),searchBounds)&&(childBoundable instanceof AbstractNode?this.query(searchBounds,childBoundable,visitor):childBoundable instanceof ItemBoundable?visitor.visitItem(childBoundable.getItem()):Assert.shouldNeverReachHere())}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode)for(var searchBounds=arguments[0],node=arguments[1],matches=arguments[2],childBoundables=node.getChildBoundables(),i=0;i<childBoundables.size();i++){var childBoundable=childBoundables.get(i);this.getIntersectsOp().intersects(childBoundable.getBounds(),searchBounds)&&(childBoundable instanceof AbstractNode?this.query(searchBounds,childBoundable,matches):childBoundable instanceof ItemBoundable?matches.add(childBoundable.getItem()):Assert.shouldNeverReachHere())}},build:function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},getRoot:function(){return this.build(),this._root},remove:function(){if(2===arguments.length){var searchBounds=arguments[0],item=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),searchBounds)&&this.remove(searchBounds,this._root,item)}if(3===arguments.length){var searchBounds=arguments[0],node=arguments[1],item=arguments[2],found=this.removeItem(node,item);if(found)return!0;for(var childToPrune=null,i=node.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(this.getIntersectsOp().intersects(childBoundable.getBounds(),searchBounds)&&(childBoundable instanceof AbstractNode&&(found=this.remove(searchBounds,childBoundable,item)))){childToPrune=childBoundable;break}}return null!==childToPrune&&childToPrune.getChildBoundables().isEmpty()&&node.getChildBoundables().remove(childToPrune),found}},createHigherLevels:function(boundablesOfALevel,level){Assert.isTrue(!boundablesOfALevel.isEmpty());var parentBoundables=this.createParentBoundables(boundablesOfALevel,level+1);return 1===parentBoundables.size()?parentBoundables.get(0):this.createHigherLevels(parentBoundables,level+1)},depth:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var maxChildDepth=0,i=arguments[0].getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();if(childBoundable instanceof AbstractNode){var childDepth=this.depth(childBoundable);childDepth>maxChildDepth&&(maxChildDepth=childDepth)}}return maxChildDepth+1}},createParentBoundables:function(childBoundables,newLevel){Assert.isTrue(!childBoundables.isEmpty());var parentBoundables=new ArrayList;parentBoundables.add(this.createNode(newLevel));var sortedChildBoundables=new ArrayList(childBoundables);Collections.sort(sortedChildBoundables,this.getComparator());for(var i=sortedChildBoundables.iterator();i.hasNext();){var childBoundable=i.next();this.lastNode(parentBoundables).getChildBoundables().size()===this.getNodeCapacity()&&parentBoundables.add(this.createNode(newLevel)),this.lastNode(parentBoundables).addChildBoundable(childBoundable)}return parentBoundables},isEmpty:function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},interfaces_:function(){return[Serializable]},getClass:function(){return AbstractSTRtree}}),AbstractSTRtree.compareDoubles=function(a,b){return a>b?1:a<b?-1:0},AbstractSTRtree.IntersectsOp=function(){},AbstractSTRtree.serialVersionUID=-0x35ef64c82d4c5400,AbstractSTRtree.DEFAULT_NODE_CAPACITY=10,extend(ItemDistance.prototype,{distance:function(item1,item2){},interfaces_:function(){return[]},getClass:function(){return ItemDistance}}),inherits$1(STRtree,AbstractSTRtree),extend(STRtree.prototype,{createParentBoundablesFromVerticalSlices:function(verticalSlices,newLevel){Assert.isTrue(verticalSlices.length>0);for(var parentBoundables=new ArrayList,i=0;i<verticalSlices.length;i++)parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i],newLevel));return parentBoundables},createNode:function(level){return new STRtreeNode(level)},size:function(){return 0===arguments.length?AbstractSTRtree.prototype.size.call(this):AbstractSTRtree.prototype.size.apply(this,arguments)},insert:function(){if(2!==arguments.length)return AbstractSTRtree.prototype.insert.apply(this,arguments);var itemEnv=arguments[0],item=arguments[1];if(itemEnv.isNull())return null;AbstractSTRtree.prototype.insert.call(this,itemEnv,item)},getIntersectsOp:function(){return STRtree.intersectsOp},verticalSlices:function(childBoundables,sliceCount){for(var sliceCapacity=Math.trunc(Math.ceil(childBoundables.size()/sliceCount)),slices=new Array(sliceCount).fill(null),i=childBoundables.iterator(),j=0;j<sliceCount;j++){slices[j]=new ArrayList;for(var boundablesAddedToSlice=0;i.hasNext()&&boundablesAddedToSlice<sliceCapacity;){var childBoundable=i.next();slices[j].add(childBoundable),boundablesAddedToSlice++}}return slices},query:function(){if(1===arguments.length){searchEnv=arguments[0];return AbstractSTRtree.prototype.query.call(this,searchEnv)}if(2===arguments.length){var searchEnv=arguments[0],visitor=arguments[1];AbstractSTRtree.prototype.query.call(this,searchEnv,visitor)}else if(3===arguments.length)if(hasInterface(arguments[2],ItemVisitor)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var searchBounds=arguments[0],node=arguments[1],visitor=arguments[2];AbstractSTRtree.prototype.query.call(this,searchBounds,node,visitor)}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var searchBounds=arguments[0],node=arguments[1],matches=arguments[2];AbstractSTRtree.prototype.query.call(this,searchBounds,node,matches)}},getComparator:function(){return STRtree.yComparator},createParentBoundablesFromVerticalSlice:function(childBoundables,newLevel){return AbstractSTRtree.prototype.createParentBoundables.call(this,childBoundables,newLevel)},remove:function(){if(2===arguments.length){var itemEnv=arguments[0],item=arguments[1];return AbstractSTRtree.prototype.remove.call(this,itemEnv,item)}return AbstractSTRtree.prototype.remove.apply(this,arguments)},depth:function(){return 0===arguments.length?AbstractSTRtree.prototype.depth.call(this):AbstractSTRtree.prototype.depth.apply(this,arguments)},createParentBoundables:function(childBoundables,newLevel){Assert.isTrue(!childBoundables.isEmpty());var minLeafCount=Math.trunc(Math.ceil(childBoundables.size()/this.getNodeCapacity())),sortedChildBoundables=new ArrayList(childBoundables);Collections.sort(sortedChildBoundables,STRtree.xComparator);var verticalSlices=this.verticalSlices(sortedChildBoundables,Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));return this.createParentBoundablesFromVerticalSlices(verticalSlices,newLevel)},nearestNeighbour:function(){if(1===arguments.length){if(hasInterface(arguments[0],ItemDistance)){var itemDist=arguments[0],bp=new BoundablePair(this.getRoot(),this.getRoot(),itemDist);return this.nearestNeighbour(bp)}if(arguments[0]instanceof BoundablePair){initBndPair=arguments[0];return this.nearestNeighbour(initBndPair,Double.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof STRtree&&hasInterface(arguments[1],ItemDistance)){var tree=arguments[0],itemDist=arguments[1],bp=new BoundablePair(this.getRoot(),tree.getRoot(),itemDist);return this.nearestNeighbour(bp)}if(arguments[0]instanceof BoundablePair&&"number"==typeof arguments[1]){var initBndPair=arguments[0],distanceLowerBound=arguments[1],minPair=null,priQ=new PriorityQueue;for(priQ.add(initBndPair);!priQ.isEmpty()&&distanceLowerBound>0;){var bndPair=priQ.poll(),currentDistance=bndPair.getDistance();if(currentDistance>=distanceLowerBound)break;bndPair.isLeaves()?(distanceLowerBound=currentDistance,minPair=bndPair):bndPair.expandToQueue(priQ,distanceLowerBound)}return[minPair.getBoundable(0).getItem(),minPair.getBoundable(1).getItem()]}}else if(3===arguments.length){var env=arguments[0],item=arguments[1],itemDist=arguments[2],bnd=new ItemBoundable(env,item),bp=new BoundablePair(this.getRoot(),bnd,itemDist);return this.nearestNeighbour(bp)[0]}},interfaces_:function(){return[SpatialIndex,Serializable]},getClass:function(){return STRtree}}),STRtree.centreX=function(e){return STRtree.avg(e.getMinX(),e.getMaxX())},STRtree.avg=function(a,b){return(a+b)/2},STRtree.centreY=function(e){return STRtree.avg(e.getMinY(),e.getMaxY())},inherits$1(STRtreeNode,AbstractNode),extend(STRtreeNode.prototype,{computeBounds:function(){for(var bounds=null,i=this.getChildBoundables().iterator();i.hasNext();){var childBoundable=i.next();null===bounds?bounds=new Envelope(childBoundable.getBounds()):bounds.expandToInclude(childBoundable.getBounds())}return bounds},interfaces_:function(){return[]},getClass:function(){return STRtreeNode}}),STRtree.STRtreeNode=STRtreeNode,STRtree.serialVersionUID=0x39920f7d5f261e0,STRtree.xComparator={interfaces_:function(){return[Comparator]},compare:function(o1,o2){return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()),STRtree.centreX(o2.getBounds()))}},STRtree.yComparator={interfaces_:function(){return[Comparator]},compare:function(o1,o2){return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()),STRtree.centreY(o2.getBounds()))}},STRtree.intersectsOp={interfaces_:function(){return[IntersectsOp]},intersects:function(aBounds,bBounds){return aBounds.intersects(bBounds)}},STRtree.DEFAULT_NODE_CAPACITY=10,extend(SegmentPointComparator.prototype,{interfaces_:function(){return[]},getClass:function(){return SegmentPointComparator}}),SegmentPointComparator.relativeSign=function(x0,x1){return x0<x1?-1:x0>x1?1:0},SegmentPointComparator.compare=function(octant,p0,p1){if(p0.equals2D(p1))return 0;var xSign=SegmentPointComparator.relativeSign(p0.x,p1.x),ySign=SegmentPointComparator.relativeSign(p0.y,p1.y);switch(octant){case 0:return SegmentPointComparator.compareValue(xSign,ySign);case 1:return SegmentPointComparator.compareValue(ySign,xSign);case 2:return SegmentPointComparator.compareValue(ySign,-xSign);case 3:return SegmentPointComparator.compareValue(-xSign,ySign);case 4:return SegmentPointComparator.compareValue(-xSign,-ySign);case 5:return SegmentPointComparator.compareValue(-ySign,-xSign);case 6:return SegmentPointComparator.compareValue(-ySign,xSign);case 7:return SegmentPointComparator.compareValue(xSign,-ySign)}return Assert.shouldNeverReachHere("invalid octant value"),0},SegmentPointComparator.compareValue=function(compareSign0,compareSign1){return compareSign0<0?-1:compareSign0>0?1:compareSign1<0?-1:compareSign1>0?1:0},extend(SegmentNode.prototype,{getCoordinate:function(){return this.coord},print:function(out){out.print(this.coord),out.print(" seg # = "+this.segmentIndex)},compareTo:function(obj){var other=obj;return this.segmentIndex<other.segmentIndex?-1:this.segmentIndex>other.segmentIndex?1:this.coord.equals2D(other.coord)?0:SegmentPointComparator.compare(this._segmentOctant,this.coord,other.coord)},isEndPoint:function(maxSegmentIndex){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===maxSegmentIndex},isInterior:function(){return this._isInterior},interfaces_:function(){return[Comparable]},getClass:function(){return SegmentNode}}),extend(SegmentNodeList.prototype,{getSplitCoordinates:function(){var coordList=new CoordinateList;this.addEndpoints();for(var it=this.iterator(),eiPrev=it.next();it.hasNext();){var ei=it.next();this.addEdgeCoordinates(eiPrev,ei,coordList),eiPrev=ei}return coordList.toCoordinateArray()},addCollapsedNodes:function(){var collapsedVertexIndexes=new ArrayList;this.findCollapsesFromInsertedNodes(collapsedVertexIndexes),this.findCollapsesFromExistingVertices(collapsedVertexIndexes);for(var it=collapsedVertexIndexes.iterator();it.hasNext();){var vertexIndex=it.next().intValue();this.add(this._edge.getCoordinate(vertexIndex),vertexIndex)}},print:function(out){out.println("Intersections:");for(var it=this.iterator();it.hasNext();){it.next().print(out)}},findCollapsesFromExistingVertices:function(collapsedVertexIndexes){for(var i=0;i<this._edge.size()-2;i++){var p0=this._edge.getCoordinate(i),p2=(this._edge.getCoordinate(i+1),this._edge.getCoordinate(i+2));p0.equals2D(p2)&&collapsedVertexIndexes.add(new Integer(i+1))}},addEdgeCoordinates:function(ei0,ei1,coordList){ei1.segmentIndex,ei0.segmentIndex;var lastSegStartPt=this._edge.getCoordinate(ei1.segmentIndex),useIntPt1=ei1.isInterior()||!ei1.coord.equals2D(lastSegStartPt);coordList.add(new Coordinate(ei0.coord),!1);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++)coordList.add(this._edge.getCoordinate(i));useIntPt1&&coordList.add(new Coordinate(ei1.coord))},iterator:function(){return this._nodeMap.values().iterator()},addSplitEdges:function(edgeList){this.addEndpoints(),this.addCollapsedNodes();for(var it=this.iterator(),eiPrev=it.next();it.hasNext();){var ei=it.next(),newEdge=this.createSplitEdge(eiPrev,ei);edgeList.add(newEdge),eiPrev=ei}},findCollapseIndex:function(ei0,ei1,collapsedVertexIndex){if(!ei0.coord.equals2D(ei1.coord))return!1;var numVerticesBetween=ei1.segmentIndex-ei0.segmentIndex;return ei1.isInterior()||numVerticesBetween--,1===numVerticesBetween&&(collapsedVertexIndex[0]=ei0.segmentIndex+1,!0)},findCollapsesFromInsertedNodes:function(collapsedVertexIndexes){for(var collapsedVertexIndex=new Array(1).fill(null),it=this.iterator(),eiPrev=it.next();it.hasNext();){var ei=it.next();this.findCollapseIndex(eiPrev,ei,collapsedVertexIndex)&&collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])),eiPrev=ei}},getEdge:function(){return this._edge},addEndpoints:function(){var maxSegIndex=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(maxSegIndex),maxSegIndex)},createSplitEdge:function(ei0,ei1){var npts=ei1.segmentIndex-ei0.segmentIndex+2,lastSegStartPt=this._edge.getCoordinate(ei1.segmentIndex),useIntPt1=ei1.isInterior()||!ei1.coord.equals2D(lastSegStartPt);useIntPt1||npts--;var pts=new Array(npts).fill(null),ipt=0;pts[ipt++]=new Coordinate(ei0.coord);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++)pts[ipt++]=this._edge.getCoordinate(i);return useIntPt1&&(pts[ipt]=new Coordinate(ei1.coord)),new NodedSegmentString(pts,this._edge.getData())},add:function(intPt,segmentIndex){var eiNew=new SegmentNode(this._edge,intPt,segmentIndex,this._edge.getSegmentOctant(segmentIndex)),ei=this._nodeMap.get(eiNew);return null!==ei?(Assert.isTrue(ei.coord.equals2D(intPt),"Found equal nodes with different coordinates"),ei):(this._nodeMap.put(eiNew,eiNew),eiNew)},checkSplitEdgesCorrectness:function(splitEdges){var edgePts=this._edge.getCoordinates(),pt0=splitEdges.get(0).getCoordinate(0);if(!pt0.equals2D(edgePts[0]))throw new RuntimeException("bad split edge start point at "+pt0);var splitnPts=splitEdges.get(splitEdges.size()-1).getCoordinates(),ptn=splitnPts[splitnPts.length-1];if(!ptn.equals2D(edgePts[edgePts.length-1]))throw new RuntimeException("bad split edge end point at "+ptn)},interfaces_:function(){return[]},getClass:function(){return SegmentNodeList}}),extend(NodeVertexIterator.prototype,{next:function(){return null===this._currNode?(this._currNode=this._nextNode,this._currSegIndex=this._currNode.segmentIndex,this.readNextNode(),this._currNode):null===this._nextNode?null:this._nextNode.segmentIndex===this._currNode.segmentIndex?(this._currNode=this._nextNode,this._currSegIndex=this._currNode.segmentIndex,this.readNextNode(),this._currNode):(this._nextNode.segmentIndex,this._currNode.segmentIndex,null)},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){return null!==this._nextNode},readNextNode:function(){this._nodeIt.hasNext()?this._nextNode=this._nodeIt.next():this._nextNode=null},interfaces_:function(){return[Iterator]},getClass:function(){return NodeVertexIterator}}),extend(NodableSegmentString.prototype,{addIntersection:function(intPt,segmentIndex){},interfaces_:function(){return[SegmentString]},getClass:function(){return NodableSegmentString}}),extend(NodedSegmentString.prototype,{getCoordinates:function(){return this._pts},size:function(){return this._pts.length},getCoordinate:function(i){return this._pts[i]},isClosed:function(){return this._pts[0].equals(this._pts[this._pts.length-1])},getSegmentOctant:function(index){return index===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(index),this.getCoordinate(index+1))},setData:function(data){this._data=data},safeOctant:function(p0,p1){return p0.equals2D(p1)?0:Octant.octant(p0,p1)},getData:function(){return this._data},addIntersection:function(){if(2===arguments.length){var intPt=arguments[0],segmentIndex=arguments[1];this.addIntersectionNode(intPt,segmentIndex)}else if(4===arguments.length){var li=arguments[0],segmentIndex=arguments[1],intIndex=(arguments[2],arguments[3]),intPt=new Coordinate(li.getIntersection(intIndex));this.addIntersection(intPt,segmentIndex)}},toString:function(){return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))},getNodeList:function(){return this._nodeList},addIntersectionNode:function(intPt,segmentIndex){var normalizedSegmentIndex=segmentIndex,nextSegIndex=normalizedSegmentIndex+1;if(nextSegIndex<this._pts.length){var nextPt=this._pts[nextSegIndex];intPt.equals2D(nextPt)&&(normalizedSegmentIndex=nextSegIndex)}return this._nodeList.add(intPt,normalizedSegmentIndex)},addIntersections:function(li,segmentIndex,geomIndex){for(var i=0;i<li.getIntersectionNum();i++)this.addIntersection(li,segmentIndex,geomIndex,i)},interfaces_:function(){return[NodableSegmentString]},getClass:function(){return NodedSegmentString}}),NodedSegmentString.getNodedSubstrings=function(){if(1===arguments.length){var segStrings=arguments[0],resultEdgelist=new ArrayList;return NodedSegmentString.getNodedSubstrings(segStrings,resultEdgelist),resultEdgelist}if(2===arguments.length)for(var segStrings=arguments[0],resultEdgelist=arguments[1],i=segStrings.iterator();i.hasNext();){i.next().getNodeList().addSplitEdges(resultEdgelist)}},extend(MonotoneChainOverlapAction.prototype,{overlap:function(){if(2===arguments.length);else if(4===arguments.length){var mc1=arguments[0],start1=arguments[1],mc2=arguments[2],start2=arguments[3];mc1.getLineSegment(start1,this._overlapSeg1),mc2.getLineSegment(start2,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},interfaces_:function(){return[]},getClass:function(){return MonotoneChainOverlapAction}}),extend(MonotoneChain.prototype,{getLineSegment:function(index,ls){ls.p0=this._pts[index],ls.p1=this._pts[index+1]},computeSelect:function(searchEnv,start0,end0,mcs){var p0=this._pts[start0],p1=this._pts[end0];if(mcs.tempEnv1.init(p0,p1),end0-start0==1)return mcs.select(this,start0),null;if(!searchEnv.intersects(mcs.tempEnv1))return null;var mid=Math.trunc((start0+end0)/2);start0<mid&&this.computeSelect(searchEnv,start0,mid,mcs),mid<end0&&this.computeSelect(searchEnv,mid,end0,mcs)},getCoordinates:function(){for(var coord=new Array(this._end-this._start+1).fill(null),index=0,i=this._start;i<=this._end;i++)coord[index++]=this._pts[i];return coord},computeOverlaps:function(mc,mco){this.computeOverlapsInternal(this._start,this._end,mc,mc._start,mc._end,mco)},setId:function(id){this._id=id},select:function(searchEnv,mcs){this.computeSelect(searchEnv,this._start,this._end,mcs)},getEnvelope:function(){if(null===this._env){var p0=this._pts[this._start],p1=this._pts[this._end];this._env=new Envelope(p0,p1)}return this._env},getEndIndex:function(){return this._end},getStartIndex:function(){return this._start},getContext:function(){return this._context},getId:function(){return this._id},computeOverlapsInternal:function(start0,end0,mc,start1,end1,mco){var p00=this._pts[start0],p01=this._pts[end0],p10=mc._pts[start1],p11=mc._pts[end1];if(end0-start0==1&&end1-start1==1)return mco.overlap(this,start0,mc,start1),null;if(mco.tempEnv1.init(p00,p01),mco.tempEnv2.init(p10,p11),!mco.tempEnv1.intersects(mco.tempEnv2))return null;var mid0=Math.trunc((start0+end0)/2),mid1=Math.trunc((start1+end1)/2);start0<mid0&&(start1<mid1&&this.computeOverlapsInternal(start0,mid0,mc,start1,mid1,mco),mid1<end1&&this.computeOverlapsInternal(start0,mid0,mc,mid1,end1,mco)),mid0<end0&&(start1<mid1&&this.computeOverlapsInternal(mid0,end0,mc,start1,mid1,mco),mid1<end1&&this.computeOverlapsInternal(mid0,end0,mc,mid1,end1,mco))},interfaces_:function(){return[]},getClass:function(){return MonotoneChain}}),extend(Quadrant.prototype,{interfaces_:function(){return[]},getClass:function(){return Quadrant}}),Quadrant.isNorthern=function(quad){return quad===Quadrant.NE||quad===Quadrant.NW},Quadrant.isOpposite=function(quad1,quad2){if(quad1===quad2)return!1;return 2===(quad1-quad2+4)%4},Quadrant.commonHalfPlane=function(quad1,quad2){if(quad1===quad2)return quad1;if(2===(quad1-quad2+4)%4)return-1;var min=quad1<quad2?quad1:quad2;return 0===min&&3===(quad1>quad2?quad1:quad2)?3:min},Quadrant.isInHalfPlane=function(quad,halfPlane){return halfPlane===Quadrant.SE?quad===Quadrant.SE||quad===Quadrant.SW:quad===halfPlane||quad===halfPlane+1},Quadrant.quadrant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var dx=arguments[0],dy=arguments[1];if(0===dx&&0===dy)throw new IllegalArgumentException("Cannot compute the quadrant for point ( "+dx+", "+dy+" )");return dx>=0?dy>=0?Quadrant.NE:Quadrant.SE:dy>=0?Quadrant.NW:Quadrant.SW}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var p0=arguments[0],p1=arguments[1];if(p1.x===p0.x&&p1.y===p0.y)throw new IllegalArgumentException("Cannot compute the quadrant for two identical points "+p0);return p1.x>=p0.x?p1.y>=p0.y?Quadrant.NE:Quadrant.SE:p1.y>=p0.y?Quadrant.NW:Quadrant.SW}},Quadrant.NE=0,Quadrant.NW=1,Quadrant.SW=2,Quadrant.SE=3,extend(MonotoneChainBuilder.prototype,{interfaces_:function(){return[]},getClass:function(){return MonotoneChainBuilder}}),MonotoneChainBuilder.getChainStartIndices=function(pts){var start=0,startIndexList=new ArrayList;startIndexList.add(new Integer(start));do{var last=MonotoneChainBuilder.findChainEnd(pts,start);startIndexList.add(new Integer(last)),start=last}while(start<pts.length-1);return MonotoneChainBuilder.toIntArray(startIndexList)},MonotoneChainBuilder.findChainEnd=function(pts,start){for(var safeStart=start;safeStart<pts.length-1&&pts[safeStart].equals2D(pts[safeStart+1]);)safeStart++;if(safeStart>=pts.length-1)return pts.length-1;for(var chainQuad=Quadrant.quadrant(pts[safeStart],pts[safeStart+1]),last=start+1;last<pts.length;){if(!pts[last-1].equals2D(pts[last])){if(Quadrant.quadrant(pts[last-1],pts[last])!==chainQuad)break}last++}return last-1},MonotoneChainBuilder.getChains=function(){if(1===arguments.length){pts=arguments[0];return MonotoneChainBuilder.getChains(pts,null)}if(2===arguments.length){for(var pts=arguments[0],context=arguments[1],mcList=new ArrayList,startIndex=MonotoneChainBuilder.getChainStartIndices(pts),i=0;i<startIndex.length-1;i++){var mc=new MonotoneChain(pts,startIndex[i],startIndex[i+1],context);mcList.add(mc)}return mcList}},MonotoneChainBuilder.toIntArray=function(list){for(var array=new Array(list.size()).fill(null),i=0;i<array.length;i++)array[i]=list.get(i).intValue();return array},extend(Noder.prototype,{computeNodes:function(segStrings){},getNodedSubstrings:function(){},interfaces_:function(){return[]},getClass:function(){return Noder}}),extend(SinglePassNoder.prototype,{setSegmentIntersector:function(segInt){this._segInt=segInt},interfaces_:function(){return[Noder]},getClass:function(){return SinglePassNoder}}),inherits$1(MCIndexNoder,SinglePassNoder),extend(MCIndexNoder.prototype,{getMonotoneChains:function(){return this._monoChains},getNodedSubstrings:function(){return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)},getIndex:function(){return this._index},add:function(segStr){for(var i=MonotoneChainBuilder.getChains(segStr.getCoordinates(),segStr).iterator();i.hasNext();){var mc=i.next();mc.setId(this._idCounter++),this._index.insert(mc.getEnvelope(),mc),this._monoChains.add(mc)}},computeNodes:function(inputSegStrings){this._nodedSegStrings=inputSegStrings;for(var i=inputSegStrings.iterator();i.hasNext();)this.add(i.next());this.intersectChains()},intersectChains:function(){for(var overlapAction=new SegmentOverlapAction(this._segInt),i=this._monoChains.iterator();i.hasNext();)for(var queryChain=i.next(),j=this._index.query(queryChain.getEnvelope()).iterator();j.hasNext();){var testChain=j.next();if(testChain.getId()>queryChain.getId()&&(queryChain.computeOverlaps(testChain,overlapAction),this._nOverlaps++),this._segInt.isDone())return null}},interfaces_:function(){return[]},getClass:function(){return MCIndexNoder}}),inherits$1(SegmentOverlapAction,MonotoneChainOverlapAction),extend(SegmentOverlapAction.prototype,{overlap:function(){if(4!==arguments.length)return MonotoneChainOverlapAction.prototype.overlap.apply(this,arguments);var mc1=arguments[0],start1=arguments[1],mc2=arguments[2],start2=arguments[3],ss1=mc1.getContext(),ss2=mc2.getContext();this._si.processIntersections(ss1,start1,ss2,start2)},interfaces_:function(){return[]},getClass:function(){return SegmentOverlapAction}}),MCIndexNoder.SegmentOverlapAction=SegmentOverlapAction,inherits$1(TopologyException,RuntimeException),extend(TopologyException.prototype,{getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return TopologyException}}),TopologyException.msgWithCoord=function(msg,pt){return null!==pt?msg+" [ "+pt+" ]":msg},extend(SegmentIntersector.prototype,{processIntersections:function(e0,segIndex0,e1,segIndex1){},isDone:function(){},interfaces_:function(){return[]},getClass:function(){return SegmentIntersector}}),extend(InteriorIntersectionFinder.prototype,{getInteriorIntersection:function(){return this._interiorIntersection},setCheckEndSegmentsOnly:function(isCheckEndSegmentsOnly){this._isCheckEndSegmentsOnly=isCheckEndSegmentsOnly},getIntersectionSegments:function(){return this._intSegments},count:function(){return this._intersectionCount},getIntersections:function(){return this._intersections},setFindAllIntersections:function(findAllIntersections){this._findAllIntersections=findAllIntersections},setKeepIntersections:function(keepIntersections){this._keepIntersections=keepIntersections},processIntersections:function(e0,segIndex0,e1,segIndex1){if(!this._findAllIntersections&&this.hasIntersection())return null;if(e0===e1&&segIndex0===segIndex1)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(e0,segIndex0)||this.isEndSegment(e1,segIndex1)))return null}var p00=e0.getCoordinates()[segIndex0],p01=e0.getCoordinates()[segIndex0+1],p10=e1.getCoordinates()[segIndex1],p11=e1.getCoordinates()[segIndex1+1];this._li.computeIntersection(p00,p01,p10,p11),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=p00,this._intSegments[1]=p01,this._intSegments[2]=p10,this._intSegments[3]=p11,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},isEndSegment:function(segStr,index){return 0===index||index>=segStr.size()-2},hasIntersection:function(){return null!==this._interiorIntersection},isDone:function(){return!this._findAllIntersections&&null!==this._interiorIntersection},interfaces_:function(){return[SegmentIntersector]},getClass:function(){return InteriorIntersectionFinder}}),InteriorIntersectionFinder.createAllIntersectionsFinder=function(li){var finder=new InteriorIntersectionFinder(li);return finder.setFindAllIntersections(!0),finder},InteriorIntersectionFinder.createAnyIntersectionFinder=function(li){return new InteriorIntersectionFinder(li)},InteriorIntersectionFinder.createIntersectionCounter=function(li){var finder=new InteriorIntersectionFinder(li);return finder.setFindAllIntersections(!0),finder.setKeepIntersections(!1),finder},extend(FastNodingValidator.prototype,{execute:function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},getIntersections:function(){return this._segInt.getIntersections()},isValid:function(){return this.execute(),this._isValid},setFindAllIntersections:function(findAllIntersections){this._findAllIntersections=findAllIntersections},checkInteriorIntersections:function(){this._isValid=!0,this._segInt=new InteriorIntersectionFinder(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var noder=new MCIndexNoder;if(noder.setSegmentIntersector(this._segInt),noder.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},checkValid:function(){if(this.execute(),!this._isValid)throw new TopologyException(this.getErrorMessage(),this._segInt.getInteriorIntersection())},getErrorMessage:function(){if(this._isValid)return"no intersections found";var intSegs=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+WKTWriter.toLineString(intSegs[0],intSegs[1])+" and "+WKTWriter.toLineString(intSegs[2],intSegs[3])},interfaces_:function(){return[]},getClass:function(){return FastNodingValidator}}),FastNodingValidator.computeIntersections=function(segStrings){var nv=new FastNodingValidator(segStrings);return nv.setFindAllIntersections(!0),nv.isValid(),nv.getIntersections()},extend(EdgeNodingValidator.prototype,{checkValid:function(){this._nv.checkValid()},interfaces_:function(){return[]},getClass:function(){return EdgeNodingValidator}}),EdgeNodingValidator.toSegmentStrings=function(edges){for(var segStrings=new ArrayList,i=edges.iterator();i.hasNext();){var e=i.next();segStrings.add(new BasicSegmentString(e.getCoordinates(),e))}return segStrings},EdgeNodingValidator.checkValid=function(edges){new EdgeNodingValidator(edges).checkValid()},extend(GeometryCollectionMapper.prototype,{map:function(gc){for(var mapped=new ArrayList,i=0;i<gc.getNumGeometries();i++){var g=this._mapOp.map(gc.getGeometryN(i));g.isEmpty()||mapped.add(g)}return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))},interfaces_:function(){return[]},getClass:function(){return GeometryCollectionMapper}}),GeometryCollectionMapper.map=function(gc,op){return new GeometryCollectionMapper(op).map(gc)},extend(Position.prototype,{interfaces_:function(){return[]},getClass:function(){return Position}}),Position.opposite=function(position){return position===Position.LEFT?Position.RIGHT:position===Position.RIGHT?Position.LEFT:position},Position.ON=0,Position.LEFT=1,Position.RIGHT=2,extend(TopologyLocation.prototype,{setAllLocations:function(locValue){for(var i=0;i<this.location.length;i++)this.location[i]=locValue},isNull:function(){for(var i=0;i<this.location.length;i++)if(this.location[i]!==Location.NONE)return!1;return!0},setAllLocationsIfNull:function(locValue){for(var i=0;i<this.location.length;i++)this.location[i]===Location.NONE&&(this.location[i]=locValue)},isLine:function(){return 1===this.location.length},merge:function(gl){if(gl.location.length>this.location.length){var newLoc=new Array(3).fill(null);newLoc[Position.ON]=this.location[Position.ON],newLoc[Position.LEFT]=Location.NONE,newLoc[Position.RIGHT]=Location.NONE,this.location=newLoc}for(var i=0;i<this.location.length;i++)this.location[i]===Location.NONE&&i<gl.location.length&&(this.location[i]=gl.location[i])},getLocations:function(){return this.location},flip:function(){if(this.location.length<=1)return null;var temp=this.location[Position.LEFT];this.location[Position.LEFT]=this.location[Position.RIGHT],this.location[Position.RIGHT]=temp},toString:function(){var buf=new StringBuffer;return this.location.length>1&&buf.append(Location.toLocationSymbol(this.location[Position.LEFT])),buf.append(Location.toLocationSymbol(this.location[Position.ON])),this.location.length>1&&buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])),buf.toString()},setLocations:function(on,left,right){this.location[Position.ON]=on,this.location[Position.LEFT]=left,this.location[Position.RIGHT]=right},get:function(posIndex){return posIndex<this.location.length?this.location[posIndex]:Location.NONE},isArea:function(){return this.location.length>1},isAnyNull:function(){for(var i=0;i<this.location.length;i++)if(this.location[i]===Location.NONE)return!0;return!1},setLocation:function(){if(1===arguments.length){locValue=arguments[0];this.setLocation(Position.ON,locValue)}else if(2===arguments.length){var locIndex=arguments[0],locValue=arguments[1];this.location[locIndex]=locValue}},init:function(size){this.location=new Array(size).fill(null),this.setAllLocations(Location.NONE)},isEqualOnSide:function(le,locIndex){return this.location[locIndex]===le.location[locIndex]},allPositionsEqual:function(loc){for(var i=0;i<this.location.length;i++)if(this.location[i]!==loc)return!1;return!0},interfaces_:function(){return[]},getClass:function(){return TopologyLocation}}),extend(Label.prototype,{getGeometryCount:function(){var count=0;return this.elt[0].isNull()||count++,this.elt[1].isNull()||count++,count},setAllLocations:function(geomIndex,location){this.elt[geomIndex].setAllLocations(location)},isNull:function(geomIndex){return this.elt[geomIndex].isNull()},setAllLocationsIfNull:function(){if(1===arguments.length){location=arguments[0];this.setAllLocationsIfNull(0,location),this.setAllLocationsIfNull(1,location)}else if(2===arguments.length){var geomIndex=arguments[0],location=arguments[1];this.elt[geomIndex].setAllLocationsIfNull(location)}},isLine:function(geomIndex){return this.elt[geomIndex].isLine()},merge:function(lbl){for(var i=0;i<2;i++)null===this.elt[i]&&null!==lbl.elt[i]?this.elt[i]=new TopologyLocation(lbl.elt[i]):this.elt[i].merge(lbl.elt[i])},flip:function(){this.elt[0].flip(),this.elt[1].flip()},getLocation:function(){if(1===arguments.length){geomIndex=arguments[0];return this.elt[geomIndex].get(Position.ON)}if(2===arguments.length){var geomIndex=arguments[0],posIndex=arguments[1];return this.elt[geomIndex].get(posIndex)}},toString:function(){var buf=new StringBuffer;return null!==this.elt[0]&&(buf.append("A:"),buf.append(this.elt[0].toString())),null!==this.elt[1]&&(buf.append(" B:"),buf.append(this.elt[1].toString())),buf.toString()},isArea:function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var geomIndex=arguments[0];return this.elt[geomIndex].isArea()}},isAnyNull:function(geomIndex){return this.elt[geomIndex].isAnyNull()},setLocation:function(){if(2===arguments.length){var geomIndex=arguments[0],location=arguments[1];this.elt[geomIndex].setLocation(Position.ON,location)}else if(3===arguments.length){var geomIndex=arguments[0],posIndex=arguments[1],location=arguments[2];this.elt[geomIndex].setLocation(posIndex,location)}},isEqualOnSide:function(lbl,side){return this.elt[0].isEqualOnSide(lbl.elt[0],side)&&this.elt[1].isEqualOnSide(lbl.elt[1],side)},allPositionsEqual:function(geomIndex,loc){return this.elt[geomIndex].allPositionsEqual(loc)},toLine:function(geomIndex){this.elt[geomIndex].isArea()&&(this.elt[geomIndex]=new TopologyLocation(this.elt[geomIndex].location[0]))},interfaces_:function(){return[]},getClass:function(){return Label}}),Label.toLineLabel=function(label){for(var lineLabel=new Label(Location.NONE),i=0;i<2;i++)lineLabel.setLocation(i,label.getLocation(i));return lineLabel},extend(EdgeRing.prototype,{computeRing:function(){if(null!==this._ring)return null;for(var coord=new Array(this._pts.size()).fill(null),i=0;i<this._pts.size();i++)coord[i]=this._pts.get(i);this._ring=this._geometryFactory.createLinearRing(coord),this._isHole=CGAlgorithms.isCCW(this._ring.getCoordinates())},isIsolated:function(){return 1===this._label.getGeometryCount()},computePoints:function(start){this._startDe=start;var de=start,isFirstEdge=!0;do{if(null===de)throw new TopologyException("Found null DirectedEdge");if(de.getEdgeRing()===this)throw new TopologyException("Directed Edge visited twice during ring-building at "+de.getCoordinate());this._edges.add(de);var label=de.getLabel();Assert.isTrue(label.isArea()),this.mergeLabel(label),this.addPoints(de.getEdge(),de.isForward(),isFirstEdge),isFirstEdge=!1,this.setEdgeRing(de,this),de=this.getNext(de)}while(de!==this._startDe)},getLinearRing:function(){return this._ring},getCoordinate:function(i){return this._pts.get(i)},computeMaxNodeDegree:function(){this._maxNodeDegree=0;var de=this._startDe;do{var degree=de.getNode().getEdges().getOutgoingDegree(this);degree>this._maxNodeDegree&&(this._maxNodeDegree=degree),de=this.getNext(de)}while(de!==this._startDe);this._maxNodeDegree*=2},addPoints:function(edge,isForward,isFirstEdge){var edgePts=edge.getCoordinates();if(isForward){startIndex=1;isFirstEdge&&(startIndex=0);for(i=startIndex;i<edgePts.length;i++)this._pts.add(edgePts[i])}else{var startIndex=edgePts.length-2;isFirstEdge&&(startIndex=edgePts.length-1);for(var i=startIndex;i>=0;i--)this._pts.add(edgePts[i])}},isHole:function(){return this._isHole},setInResult:function(){var de=this._startDe;do{de.getEdge().setInResult(!0),de=de.getNext()}while(de!==this._startDe)},containsPoint:function(p){var shell=this.getLinearRing();if(!shell.getEnvelopeInternal().contains(p))return!1;if(!CGAlgorithms.isPointInRing(p,shell.getCoordinates()))return!1;for(var i=this._holes.iterator();i.hasNext();){if(i.next().containsPoint(p))return!1}return!0},addHole:function(ring){this._holes.add(ring)},isShell:function(){return null===this._shell},getLabel:function(){return this._label},getEdges:function(){return this._edges},getMaxNodeDegree:function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},getShell:function(){return this._shell},mergeLabel:function(){if(1===arguments.length){deLabel=arguments[0];this.mergeLabel(deLabel,0),this.mergeLabel(deLabel,1)}else if(2===arguments.length){var deLabel=arguments[0],geomIndex=arguments[1],loc=deLabel.getLocation(geomIndex,Position.RIGHT);if(loc===Location.NONE)return null;if(this._label.getLocation(geomIndex)===Location.NONE)return this._label.setLocation(geomIndex,loc),null}},setShell:function(shell){this._shell=shell,null!==shell&&shell.addHole(this)},toPolygon:function(geometryFactory){for(var holeLR=new Array(this._holes.size()).fill(null),i=0;i<this._holes.size();i++)holeLR[i]=this._holes.get(i).getLinearRing();return geometryFactory.createPolygon(this.getLinearRing(),holeLR)},interfaces_:function(){return[]},getClass:function(){return EdgeRing}}),inherits$1(MinimalEdgeRing,EdgeRing),extend(MinimalEdgeRing.prototype,{setEdgeRing:function(de,er){de.setMinEdgeRing(er)},getNext:function(de){return de.getNextMin()},interfaces_:function(){return[]},getClass:function(){return MinimalEdgeRing}}),inherits$1(MaximalEdgeRing,EdgeRing),extend(MaximalEdgeRing.prototype,{buildMinimalRings:function(){var minEdgeRings=new ArrayList,de=this._startDe;do{if(null===de.getMinEdgeRing()){var minEr=new MinimalEdgeRing(de,this._geometryFactory);minEdgeRings.add(minEr)}de=de.getNext()}while(de!==this._startDe);return minEdgeRings},setEdgeRing:function(de,er){de.setEdgeRing(er)},linkDirectedEdgesForMinimalEdgeRings:function(){var de=this._startDe;do{de.getNode().getEdges().linkMinimalDirectedEdges(this),de=de.getNext()}while(de!==this._startDe)},getNext:function(de){return de.getNext()},interfaces_:function(){return[]},getClass:function(){return MaximalEdgeRing}}),extend(GraphComponent.prototype,{setVisited:function(isVisited){this._isVisited=isVisited},setInResult:function(isInResult){this._isInResult=isInResult},isCovered:function(){return this._isCovered},isCoveredSet:function(){return this._isCoveredSet},setLabel:function(label){this._label=label},getLabel:function(){return this._label},setCovered:function(isCovered){this._isCovered=isCovered,this._isCoveredSet=!0},updateIM:function(im){Assert.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(im)},isInResult:function(){return this._isInResult},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return GraphComponent}}),inherits$1(Node,GraphComponent),extend(Node.prototype,{isIncidentEdgeInResult:function(){for(var it=this.getEdges().getEdges().iterator();it.hasNext();){if(it.next().getEdge().isInResult())return!0}return!1},isIsolated:function(){return 1===this._label.getGeometryCount()},getCoordinate:function(){return this._coord},print:function(out){out.println("node "+this._coord+" lbl: "+this._label)},computeIM:function(im){},computeMergedLocation:function(label2,eltIndex){var loc=Location.NONE;if(loc=this._label.getLocation(eltIndex),!label2.isNull(eltIndex)){var nLoc=label2.getLocation(eltIndex);loc!==Location.BOUNDARY&&(loc=nLoc)}return loc},setLabel:function(){if(2!==arguments.length)return GraphComponent.prototype.setLabel.apply(this,arguments);var argIndex=arguments[0],onLocation=arguments[1];null===this._label?this._label=new Label(argIndex,onLocation):this._label.setLocation(argIndex,onLocation)},getEdges:function(){return this._edges},mergeLabel:function(){if(arguments[0]instanceof Node){var n=arguments[0];this.mergeLabel(n._label)}else if(arguments[0]instanceof Label)for(var label2=arguments[0],i=0;i<2;i++){var loc=this.computeMergedLocation(label2,i);this._label.getLocation(i)===Location.NONE&&this._label.setLocation(i,loc)}},add:function(e){this._edges.insert(e),e.setNode(this)},setLabelBoundary:function(argIndex){if(null===this._label)return null;var loc=Location.NONE;null!==this._label&&(loc=this._label.getLocation(argIndex));var newLoc=null;switch(loc){case Location.BOUNDARY:newLoc=Location.INTERIOR;break;case Location.INTERIOR:default:newLoc=Location.BOUNDARY}this._label.setLocation(argIndex,newLoc)},interfaces_:function(){return[]},getClass:function(){return Node}}),extend(NodeMap.prototype,{find:function(coord){return this.nodeMap.get(coord)},addNode:function(){if(arguments[0]instanceof Coordinate){var coord=arguments[0];return null===(node=this.nodeMap.get(coord))&&(node=this.nodeFact.createNode(coord),this.nodeMap.put(coord,node)),node}if(arguments[0]instanceof Node){var n=arguments[0],node=this.nodeMap.get(n.getCoordinate());return null===node?(this.nodeMap.put(n.getCoordinate(),n),n):(node.mergeLabel(n),node)}},print:function(out){for(var it=this.iterator();it.hasNext();){it.next().print(out)}},iterator:function(){return this.nodeMap.values().iterator()},values:function(){return this.nodeMap.values()},getBoundaryNodes:function(geomIndex){for(var bdyNodes=new ArrayList,i=this.iterator();i.hasNext();){var node=i.next();node.getLabel().getLocation(geomIndex)===Location.BOUNDARY&&bdyNodes.add(node)}return bdyNodes},add:function(e){var p=e.getCoordinate();this.addNode(p).add(e)},interfaces_:function(){return[]},getClass:function(){return NodeMap}}),extend(EdgeEnd.prototype,{compareDirection:function(e){return this._dx===e._dx&&this._dy===e._dy?0:this._quadrant>e._quadrant?1:this._quadrant<e._quadrant?-1:CGAlgorithms.computeOrientation(e._p0,e._p1,this._p1)},getDy:function(){return this._dy},getCoordinate:function(){return this._p0},setNode:function(node){this._node=node},print:function(out){var angle=Math.atan2(this._dy,this._dx),className=this.getClass().getName(),lastDotPos=className.lastIndexOf("."),name=className.substring(lastDotPos+1);out.print("  "+name+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+angle+"   "+this._label)},compareTo:function(obj){var e=obj;return this.compareDirection(e)},getDirectedCoordinate:function(){return this._p1},getDx:function(){return this._dx},getLabel:function(){return this._label},getEdge:function(){return this._edge},getQuadrant:function(){return this._quadrant},getNode:function(){return this._node},toString:function(){var angle=Math.atan2(this._dy,this._dx),className=this.getClass().getName(),lastDotPos=className.lastIndexOf(".");return"  "+className.substring(lastDotPos+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+angle+"   "+this._label},computeLabel:function(boundaryNodeRule){},init:function(p0,p1){this._p0=p0,this._p1=p1,this._dx=p1.x-p0.x,this._dy=p1.y-p0.y,this._quadrant=Quadrant.quadrant(this._dx,this._dy),Assert.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")},interfaces_:function(){return[Comparable]},getClass:function(){return EdgeEnd}}),inherits$1(DirectedEdge,EdgeEnd),extend(DirectedEdge.prototype,{getNextMin:function(){return this._nextMin},getDepth:function(position){return this._depth[position]},setVisited:function(isVisited){this._isVisited=isVisited},computeDirectedLabel:function(){this._label=new Label(this._edge.getLabel()),this._isForward||this._label.flip()},getNext:function(){return this._next},setDepth:function(position,depthVal){if(-999!==this._depth[position]&&this._depth[position]!==depthVal)throw new TopologyException("assigned depths do not match",this.getCoordinate());this._depth[position]=depthVal},isInteriorAreaEdge:function(){for(var isInteriorAreaEdge=!0,i=0;i<2;i++)this._label.isArea(i)&&this._label.getLocation(i,Position.LEFT)===Location.INTERIOR&&this._label.getLocation(i,Position.RIGHT)===Location.INTERIOR||(isInteriorAreaEdge=!1);return isInteriorAreaEdge},setNextMin:function(nextMin){this._nextMin=nextMin},print:function(out){EdgeEnd.prototype.print.call(this,out),out.print(" "+this._depth[Position.LEFT]+"/"+this._depth[Position.RIGHT]),out.print(" ("+this.getDepthDelta()+")"),this._isInResult&&out.print(" inResult")},setMinEdgeRing:function(minEdgeRing){this._minEdgeRing=minEdgeRing},isLineEdge:function(){var isLine=this._label.isLine(0)||this._label.isLine(1),isExteriorIfArea0=!this._label.isArea(0)||this._label.allPositionsEqual(0,Location.EXTERIOR),isExteriorIfArea1=!this._label.isArea(1)||this._label.allPositionsEqual(1,Location.EXTERIOR);return isLine&&isExteriorIfArea0&&isExteriorIfArea1},setEdgeRing:function(edgeRing){this._edgeRing=edgeRing},getMinEdgeRing:function(){return this._minEdgeRing},getDepthDelta:function(){var depthDelta=this._edge.getDepthDelta();return this._isForward||(depthDelta=-depthDelta),depthDelta},setInResult:function(isInResult){this._isInResult=isInResult},getSym:function(){return this._sym},isForward:function(){return this._isForward},getEdge:function(){return this._edge},printEdge:function(out){this.print(out),out.print(" "),this._isForward?this._edge.print(out):this._edge.printReverse(out)},setSym:function(de){this._sym=de},setVisitedEdge:function(isVisited){this.setVisited(isVisited),this._sym.setVisited(isVisited)},setEdgeDepths:function(position,depth){var depthDelta=this.getEdge().getDepthDelta();this._isForward||(depthDelta=-depthDelta);var directionFactor=1;position===Position.LEFT&&(directionFactor=-1);var oppositePos=Position.opposite(position),oppositeDepth=depth+depthDelta*directionFactor;this.setDepth(position,depth),this.setDepth(oppositePos,oppositeDepth)},getEdgeRing:function(){return this._edgeRing},isInResult:function(){return this._isInResult},setNext:function(next){this._next=next},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return DirectedEdge}}),DirectedEdge.depthFactor=function(currLocation,nextLocation){return currLocation===Location.EXTERIOR&&nextLocation===Location.INTERIOR?1:currLocation===Location.INTERIOR&&nextLocation===Location.EXTERIOR?-1:0},extend(NodeFactory.prototype,{createNode:function(coord){return new Node(coord,null)},interfaces_:function(){return[]},getClass:function(){return NodeFactory}}),extend(PlanarGraph.prototype,{printEdges:function(out){out.println("Edges:");for(var i=0;i<this._edges.size();i++){out.println("edge "+i+":");var e=this._edges.get(i);e.print(out),e.eiList.print(out)}},find:function(coord){return this._nodes.find(coord)},addNode:function(){if(arguments[0]instanceof Node){var node=arguments[0];return this._nodes.addNode(node)}if(arguments[0]instanceof Coordinate){var coord=arguments[0];return this._nodes.addNode(coord)}},getNodeIterator:function(){return this._nodes.iterator()},linkResultDirectedEdges:function(){for(var nodeit=this._nodes.iterator();nodeit.hasNext();){nodeit.next().getEdges().linkResultDirectedEdges()}},debugPrintln:function(o){System.out.println(o)},isBoundaryNode:function(geomIndex,coord){var node=this._nodes.find(coord);if(null===node)return!1;var label=node.getLabel();return null!==label&&label.getLocation(geomIndex)===Location.BOUNDARY},linkAllDirectedEdges:function(){for(var nodeit=this._nodes.iterator();nodeit.hasNext();){nodeit.next().getEdges().linkAllDirectedEdges()}},matchInSameDirection:function(p0,p1,ep0,ep1){return!!p0.equals(ep0)&&(CGAlgorithms.computeOrientation(p0,p1,ep1)===CGAlgorithms.COLLINEAR&&Quadrant.quadrant(p0,p1)===Quadrant.quadrant(ep0,ep1))},getEdgeEnds:function(){return this._edgeEndList},debugPrint:function(o){System.out.print(o)},getEdgeIterator:function(){return this._edges.iterator()},findEdgeInSameDirection:function(p0,p1){for(var i=0;i<this._edges.size();i++){var e=this._edges.get(i),eCoord=e.getCoordinates();if(this.matchInSameDirection(p0,p1,eCoord[0],eCoord[1]))return e;if(this.matchInSameDirection(p0,p1,eCoord[eCoord.length-1],eCoord[eCoord.length-2]))return e}return null},insertEdge:function(e){this._edges.add(e)},findEdgeEnd:function(e){for(var i=this.getEdgeEnds().iterator();i.hasNext();){var ee=i.next();if(ee.getEdge()===e)return ee}return null},addEdges:function(edgesToAdd){for(var it=edgesToAdd.iterator();it.hasNext();){var e=it.next();this._edges.add(e);var de1=new DirectedEdge(e,!0),de2=new DirectedEdge(e,!1);de1.setSym(de2),de2.setSym(de1),this.add(de1),this.add(de2)}},add:function(e){this._nodes.add(e),this._edgeEndList.add(e)},getNodes:function(){return this._nodes.values()},findEdge:function(p0,p1){for(var i=0;i<this._edges.size();i++){var e=this._edges.get(i),eCoord=e.getCoordinates();if(p0.equals(eCoord[0])&&p1.equals(eCoord[1]))return e}return null},interfaces_:function(){return[]},getClass:function(){return PlanarGraph}}),PlanarGraph.linkResultDirectedEdges=function(nodes){for(var nodeit=nodes.iterator();nodeit.hasNext();){nodeit.next().getEdges().linkResultDirectedEdges()}},extend(PolygonBuilder.prototype,{sortShellsAndHoles:function(edgeRings,shellList,freeHoleList){for(var it=edgeRings.iterator();it.hasNext();){var er=it.next();er.isHole()?freeHoleList.add(er):shellList.add(er)}},computePolygons:function(shellList){for(var resultPolyList=new ArrayList,it=shellList.iterator();it.hasNext();){var poly=it.next().toPolygon(this._geometryFactory);resultPolyList.add(poly)}return resultPolyList},placeFreeHoles:function(shellList,freeHoleList){for(var it=freeHoleList.iterator();it.hasNext();){var hole=it.next();if(null===hole.getShell()){var shell=this.findEdgeRingContaining(hole,shellList);if(null===shell)throw new TopologyException("unable to assign hole to a shell",hole.getCoordinate(0));hole.setShell(shell)}}},buildMinimalEdgeRings:function(maxEdgeRings,shellList,freeHoleList){for(var edgeRings=new ArrayList,it=maxEdgeRings.iterator();it.hasNext();){var er=it.next();if(er.getMaxNodeDegree()>2){er.linkDirectedEdgesForMinimalEdgeRings();var minEdgeRings=er.buildMinimalRings(),shell=this.findShell(minEdgeRings);null!==shell?(this.placePolygonHoles(shell,minEdgeRings),shellList.add(shell)):freeHoleList.addAll(minEdgeRings)}else edgeRings.add(er)}return edgeRings},containsPoint:function(p){for(var it=this._shellList.iterator();it.hasNext();){if(it.next().containsPoint(p))return!0}return!1},buildMaximalEdgeRings:function(dirEdges){for(var maxEdgeRings=new ArrayList,it=dirEdges.iterator();it.hasNext();){var de=it.next();if(de.isInResult()&&de.getLabel().isArea()&&null===de.getEdgeRing()){var er=new MaximalEdgeRing(de,this._geometryFactory);maxEdgeRings.add(er),er.setInResult()}}return maxEdgeRings},placePolygonHoles:function(shell,minEdgeRings){for(var it=minEdgeRings.iterator();it.hasNext();){var er=it.next();er.isHole()&&er.setShell(shell)}},getPolygons:function(){return this.computePolygons(this._shellList)},findEdgeRingContaining:function(testEr,shellList){for(var testRing=testEr.getLinearRing(),testEnv=testRing.getEnvelopeInternal(),testPt=testRing.getCoordinateN(0),minShell=null,minEnv=null,it=shellList.iterator();it.hasNext();){var tryShell=it.next(),tryRing=tryShell.getLinearRing(),tryEnv=tryRing.getEnvelopeInternal();null!==minShell&&(minEnv=minShell.getLinearRing().getEnvelopeInternal());var isContained=!1;tryEnv.contains(testEnv)&&CGAlgorithms.isPointInRing(testPt,tryRing.getCoordinates())&&(isContained=!0),isContained&&(null===minShell||minEnv.contains(tryEnv))&&(minShell=tryShell)}return minShell},findShell:function(minEdgeRings){for(var shellCount=0,shell=null,it=minEdgeRings.iterator();it.hasNext();){var er=it.next();er.isHole()||(shell=er,shellCount++)}return Assert.isTrue(shellCount<=1,"found two shells in MinimalEdgeRing list"),shell},add:function(){if(1===arguments.length){var graph=arguments[0];this.add(graph.getEdgeEnds(),graph.getNodes())}else if(2===arguments.length){var dirEdges=arguments[0],nodes=arguments[1];PlanarGraph.linkResultDirectedEdges(nodes);var maxEdgeRings=this.buildMaximalEdgeRings(dirEdges),freeHoleList=new ArrayList,edgeRings=this.buildMinimalEdgeRings(maxEdgeRings,this._shellList,freeHoleList);this.sortShellsAndHoles(edgeRings,this._shellList,freeHoleList),this.placeFreeHoles(this._shellList,freeHoleList)}},interfaces_:function(){return[]},getClass:function(){return PolygonBuilder}}),extend(LineBuilder.prototype,{collectLines:function(opCode){for(var it=this._op.getGraph().getEdgeEnds().iterator();it.hasNext();){var de=it.next();this.collectLineEdge(de,opCode,this._lineEdgesList),this.collectBoundaryTouchEdge(de,opCode,this._lineEdgesList)}},labelIsolatedLine:function(e,targetIndex){var loc=this._ptLocator.locate(e.getCoordinate(),this._op.getArgGeometry(targetIndex));e.getLabel().setLocation(targetIndex,loc)},build:function(opCode){return this.findCoveredLineEdges(),this.collectLines(opCode),this.buildLines(opCode),this._resultLineList},collectLineEdge:function(de,opCode,edges){var label=de.getLabel(),e=de.getEdge();de.isLineEdge()&&(de.isVisited()||!OverlayOp.isResultOfOp(label,opCode)||e.isCovered()||(edges.add(e),de.setVisitedEdge(!0)))},findCoveredLineEdges:function(){for(var nodeit=this._op.getGraph().getNodes().iterator();nodeit.hasNext();){nodeit.next().getEdges().findCoveredLineEdges()}for(var it=this._op.getGraph().getEdgeEnds().iterator();it.hasNext();){var de=it.next(),e=de.getEdge();if(de.isLineEdge()&&!e.isCoveredSet()){var isCovered=this._op.isCoveredByA(de.getCoordinate());e.setCovered(isCovered)}}},labelIsolatedLines:function(edgesList){for(var it=edgesList.iterator();it.hasNext();){var e=it.next(),label=e.getLabel();e.isIsolated()&&(label.isNull(0)?this.labelIsolatedLine(e,0):this.labelIsolatedLine(e,1))}},buildLines:function(opCode){for(var it=this._lineEdgesList.iterator();it.hasNext();){var e=it.next(),line=(e.getLabel(),this._geometryFactory.createLineString(e.getCoordinates()));this._resultLineList.add(line),e.setInResult(!0)}},collectBoundaryTouchEdge:function(de,opCode,edges){var label=de.getLabel();return de.isLineEdge()?null:de.isVisited()?null:de.isInteriorAreaEdge()?null:de.getEdge().isInResult()?null:(Assert.isTrue(!(de.isInResult()||de.getSym().isInResult())||!de.getEdge().isInResult()),void(OverlayOp.isResultOfOp(label,opCode)&&opCode===OverlayOp.INTERSECTION&&(edges.add(de.getEdge()),de.setVisitedEdge(!0))))},interfaces_:function(){return[]},getClass:function(){return LineBuilder}}),extend(PointBuilder.prototype,{filterCoveredNodeToPoint:function(n){var coord=n.getCoordinate();if(!this._op.isCoveredByLA(coord)){var pt=this._geometryFactory.createPoint(coord);this._resultPointList.add(pt)}},extractNonCoveredResultNodes:function(opCode){for(var nodeit=this._op.getGraph().getNodes().iterator();nodeit.hasNext();){var n=nodeit.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||opCode===OverlayOp.INTERSECTION))){var label=n.getLabel();OverlayOp.isResultOfOp(label,opCode)&&this.filterCoveredNodeToPoint(n)}}},build:function(opCode){return this.extractNonCoveredResultNodes(opCode),this._resultPointList},interfaces_:function(){return[]},getClass:function(){return PointBuilder}}),extend(PointOnGeometryLocator.prototype,{locate:function(p){},interfaces_:function(){return[]},getClass:function(){return PointOnGeometryLocator}}),extend(SimplePointInAreaLocator.prototype,{locate:function(p){return SimplePointInAreaLocator.locate(p,this._geom)},interfaces_:function(){return[PointOnGeometryLocator]},getClass:function(){return SimplePointInAreaLocator}}),SimplePointInAreaLocator.isPointInRing=function(p,ring){return!!ring.getEnvelopeInternal().intersects(p)&&CGAlgorithms.isPointInRing(p,ring.getCoordinates())},SimplePointInAreaLocator.containsPointInPolygon=function(p,poly){if(poly.isEmpty())return!1;var shell=poly.getExteriorRing();if(!SimplePointInAreaLocator.isPointInRing(p,shell))return!1;for(var i=0;i<poly.getNumInteriorRing();i++){var hole=poly.getInteriorRingN(i);if(SimplePointInAreaLocator.isPointInRing(p,hole))return!1}return!0},SimplePointInAreaLocator.containsPoint=function(p,geom){if(geom instanceof Polygon)return SimplePointInAreaLocator.containsPointInPolygon(p,geom);if(geom instanceof GeometryCollection)for(var geomi=new GeometryCollectionIterator(geom);geomi.hasNext();){var g2=geomi.next();if(g2!==geom&&SimplePointInAreaLocator.containsPoint(p,g2))return!0}return!1},SimplePointInAreaLocator.locate=function(p,geom){return geom.isEmpty()?Location.EXTERIOR:SimplePointInAreaLocator.containsPoint(p,geom)?Location.INTERIOR:Location.EXTERIOR},extend(EdgeEndStar.prototype,{getNextCW:function(ee){this.getEdges();var i=this._edgeList.indexOf(ee),iNextCW=i-1;return 0===i&&(iNextCW=this._edgeList.size()-1),this._edgeList.get(iNextCW)},propagateSideLabels:function(geomIndex){for(var startLoc=Location.NONE,it=this.iterator();it.hasNext();){(label=(e=it.next()).getLabel()).isArea(geomIndex)&&label.getLocation(geomIndex,Position.LEFT)!==Location.NONE&&(startLoc=label.getLocation(geomIndex,Position.LEFT))}if(startLoc===Location.NONE)return null;for(var currLoc=startLoc,it=this.iterator();it.hasNext();){var e=it.next(),label=e.getLabel();if(label.getLocation(geomIndex,Position.ON)===Location.NONE&&label.setLocation(geomIndex,Position.ON,currLoc),label.isArea(geomIndex)){var leftLoc=label.getLocation(geomIndex,Position.LEFT),rightLoc=label.getLocation(geomIndex,Position.RIGHT);if(rightLoc!==Location.NONE){if(rightLoc!==currLoc)throw new TopologyException("side location conflict",e.getCoordinate());leftLoc===Location.NONE&&Assert.shouldNeverReachHere("found single null side (at "+e.getCoordinate()+")"),currLoc=leftLoc}else Assert.isTrue(label.getLocation(geomIndex,Position.LEFT)===Location.NONE,"found single null side"),label.setLocation(geomIndex,Position.RIGHT,currLoc),label.setLocation(geomIndex,Position.LEFT,currLoc)}}},getCoordinate:function(){var it=this.iterator();if(!it.hasNext())return null;return it.next().getCoordinate()},print:function(out){System.out.println("EdgeEndStar:   "+this.getCoordinate());for(var it=this.iterator();it.hasNext();){it.next().print(out)}},isAreaLabelsConsistent:function(geomGraph){return this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},checkAreaLabelsConsistent:function(geomIndex){var edges=this.getEdges();if(edges.size()<=0)return!0;var lastEdgeIndex=edges.size()-1,startLoc=edges.get(lastEdgeIndex).getLabel().getLocation(geomIndex,Position.LEFT);Assert.isTrue(startLoc!==Location.NONE,"Found unlabelled area edge");for(var currLoc=startLoc,it=this.iterator();it.hasNext();){var label=it.next().getLabel();Assert.isTrue(label.isArea(geomIndex),"Found non-area edge");var leftLoc=label.getLocation(geomIndex,Position.LEFT),rightLoc=label.getLocation(geomIndex,Position.RIGHT);if(leftLoc===rightLoc)return!1;if(rightLoc!==currLoc)return!1;currLoc=leftLoc}return!0},findIndex:function(eSearch){this.iterator();for(var i=0;i<this._edgeList.size();i++){if(this._edgeList.get(i)===eSearch)return i}return-1},iterator:function(){return this.getEdges().iterator()},getEdges:function(){return null===this._edgeList&&(this._edgeList=new ArrayList(this._edgeMap.values())),this._edgeList},getLocation:function(geomIndex,p,geom){return this._ptInAreaLocation[geomIndex]===Location.NONE&&(this._ptInAreaLocation[geomIndex]=SimplePointInAreaLocator.locate(p,geom[geomIndex].getGeometry())),this._ptInAreaLocation[geomIndex]},toString:function(){var buf=new StringBuffer;buf.append("EdgeEndStar:   "+this.getCoordinate()),buf.append("\n");for(var it=this.iterator();it.hasNext();){var e=it.next();buf.append(e),buf.append("\n")}return buf.toString()},computeEdgeEndLabels:function(boundaryNodeRule){for(var it=this.iterator();it.hasNext();){it.next().computeLabel(boundaryNodeRule)}},computeLabelling:function(geomGraph){this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var hasDimensionalCollapseEdge=[!1,!1],it=this.iterator();it.hasNext();)for(var label=(e=it.next()).getLabel(),geomi=0;geomi<2;geomi++)label.isLine(geomi)&&label.getLocation(geomi)===Location.BOUNDARY&&(hasDimensionalCollapseEdge[geomi]=!0);for(it=this.iterator();it.hasNext();)for(var e=it.next(),label=e.getLabel(),geomi=0;geomi<2;geomi++)if(label.isAnyNull(geomi)){var loc=Location.NONE;if(hasDimensionalCollapseEdge[geomi])loc=Location.EXTERIOR;else{var p=e.getCoordinate();loc=this.getLocation(geomi,p,geomGraph)}label.setAllLocationsIfNull(geomi,loc)}},getDegree:function(){return this._edgeMap.size()},insertEdgeEnd:function(e,obj){this._edgeMap.put(e,obj),this._edgeList=null},interfaces_:function(){return[]},getClass:function(){return EdgeEndStar}}),inherits$1(DirectedEdgeStar,EdgeEndStar),extend(DirectedEdgeStar.prototype,{linkResultDirectedEdges:function(){this.getResultAreaEdges();for(var firstOut=null,incoming=null,state=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var nextOut=this._resultAreaEdgeList.get(i),nextIn=nextOut.getSym();if(nextOut.getLabel().isArea())switch(null===firstOut&&nextOut.isInResult()&&(firstOut=nextOut),state){case this._SCANNING_FOR_INCOMING:if(!nextIn.isInResult())continue;incoming=nextIn,state=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!nextOut.isInResult())continue;incoming.setNext(nextOut),state=this._SCANNING_FOR_INCOMING}}if(state===this._LINKING_TO_OUTGOING){if(null===firstOut)throw new TopologyException("no outgoing dirEdge found",this.getCoordinate());Assert.isTrue(firstOut.isInResult(),"unable to link last incoming dirEdge"),incoming.setNext(firstOut)}},insert:function(ee){var de=ee;this.insertEdgeEnd(de,de)},getRightmostEdge:function(){var edges=this.getEdges(),size=edges.size();if(size<1)return null;var de0=edges.get(0);if(1===size)return de0;var deLast=edges.get(size-1),quad0=de0.getQuadrant(),quad1=deLast.getQuadrant();return Quadrant.isNorthern(quad0)&&Quadrant.isNorthern(quad1)?de0:Quadrant.isNorthern(quad0)||Quadrant.isNorthern(quad1)?0!==de0.getDy()?de0:0!==deLast.getDy()?deLast:(Assert.shouldNeverReachHere("found two horizontal edges incident on node"),null):deLast},print:function(out){System.out.println("DirectedEdgeStar: "+this.getCoordinate());for(var it=this.iterator();it.hasNext();){var de=it.next();out.print("out "),de.print(out),out.println(),out.print("in "),de.getSym().print(out),out.println()}},getResultAreaEdges:function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new ArrayList;for(var it=this.iterator();it.hasNext();){var de=it.next();(de.isInResult()||de.getSym().isInResult())&&this._resultAreaEdgeList.add(de)}return this._resultAreaEdgeList},updateLabelling:function(nodeLabel){for(var it=this.iterator();it.hasNext();){var label=it.next().getLabel();label.setAllLocationsIfNull(0,nodeLabel.getLocation(0)),label.setAllLocationsIfNull(1,nodeLabel.getLocation(1))}},linkAllDirectedEdges:function(){this.getEdges();for(var prevOut=null,firstIn=null,i=this._edgeList.size()-1;i>=0;i--){var nextOut=this._edgeList.get(i),nextIn=nextOut.getSym();null===firstIn&&(firstIn=nextIn),null!==prevOut&&nextIn.setNext(prevOut),prevOut=nextOut}firstIn.setNext(prevOut)},computeDepths:function(){if(1===arguments.length){var de=arguments[0],edgeIndex=this.findIndex(de),startDepth=(de.getLabel(),de.getDepth(Position.LEFT)),targetLastDepth=de.getDepth(Position.RIGHT),nextDepth=this.computeDepths(edgeIndex+1,this._edgeList.size(),startDepth);if(this.computeDepths(0,edgeIndex,nextDepth)!==targetLastDepth)throw new TopologyException("depth mismatch at "+de.getCoordinate())}else if(3===arguments.length){for(var startIndex=arguments[0],endIndex=arguments[1],currDepth=startDepth=arguments[2],i=startIndex;i<endIndex;i++){var nextDe=this._edgeList.get(i);nextDe.getLabel();nextDe.setEdgeDepths(Position.RIGHT,currDepth),currDepth=nextDe.getDepth(Position.LEFT)}return currDepth}},mergeSymLabels:function(){for(var it=this.iterator();it.hasNext();){var de=it.next();de.getLabel().merge(de.getSym().getLabel())}},linkMinimalDirectedEdges:function(er){for(var firstOut=null,incoming=null,state=this._SCANNING_FOR_INCOMING,i=this._resultAreaEdgeList.size()-1;i>=0;i--){var nextOut=this._resultAreaEdgeList.get(i),nextIn=nextOut.getSym();switch(null===firstOut&&nextOut.getEdgeRing()===er&&(firstOut=nextOut),state){case this._SCANNING_FOR_INCOMING:if(nextIn.getEdgeRing()!==er)continue;incoming=nextIn,state=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(nextOut.getEdgeRing()!==er)continue;incoming.setNextMin(nextOut),state=this._SCANNING_FOR_INCOMING}}state===this._LINKING_TO_OUTGOING&&(Assert.isTrue(null!==firstOut,"found null for first outgoing dirEdge"),Assert.isTrue(firstOut.getEdgeRing()===er,"unable to link last incoming dirEdge"),incoming.setNextMin(firstOut))},getOutgoingDegree:function(){if(0===arguments.length){for(var degree=0,it=this.iterator();it.hasNext();){(de=it.next()).isInResult()&&degree++}return degree}if(1===arguments.length){for(var er=arguments[0],degree=0,it=this.iterator();it.hasNext();){var de=it.next();de.getEdgeRing()===er&&degree++}return degree}},getLabel:function(){return this._label},findCoveredLineEdges:function(){for(var startLoc=Location.NONE,it=this.iterator();it.hasNext();){nextIn=(nextOut=it.next()).getSym();if(!nextOut.isLineEdge()){if(nextOut.isInResult()){startLoc=Location.INTERIOR;break}if(nextIn.isInResult()){startLoc=Location.EXTERIOR;break}}}if(startLoc===Location.NONE)return null;for(var currLoc=startLoc,it=this.iterator();it.hasNext();){var nextOut=it.next(),nextIn=nextOut.getSym();nextOut.isLineEdge()?nextOut.getEdge().setCovered(currLoc===Location.INTERIOR):(nextOut.isInResult()&&(currLoc=Location.EXTERIOR),nextIn.isInResult()&&(currLoc=Location.INTERIOR))}},computeLabelling:function(geom){EdgeEndStar.prototype.computeLabelling.call(this,geom),this._label=new Label(Location.NONE);for(var it=this.iterator();it.hasNext();)for(var eLabel=it.next().getEdge().getLabel(),i=0;i<2;i++){var eLoc=eLabel.getLocation(i);eLoc!==Location.INTERIOR&&eLoc!==Location.BOUNDARY||this._label.setLocation(i,Location.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return DirectedEdgeStar}}),inherits$1(OverlayNodeFactory,NodeFactory),extend(OverlayNodeFactory.prototype,{createNode:function(coord){return new Node(coord,new DirectedEdgeStar)},interfaces_:function(){return[]},getClass:function(){return OverlayNodeFactory}}),extend(MonotoneChain$1.prototype,{computeIntersections:function(mc,si){this.mce.computeIntersectsForChain(this.chainIndex,mc.mce,mc.chainIndex,si)},interfaces_:function(){return[]},getClass:function(){return MonotoneChain$1}}),extend(SweepLineEvent.prototype,{isDelete:function(){return this._eventType===SweepLineEvent.DELETE},setDeleteEventIndex:function(deleteEventIndex){this._deleteEventIndex=deleteEventIndex},getObject:function(){return this._obj},compareTo:function(o){var pe=o;return this._xValue<pe._xValue?-1:this._xValue>pe._xValue?1:this._eventType<pe._eventType?-1:this._eventType>pe._eventType?1:0},getInsertEvent:function(){return this._insertEvent},isInsert:function(){return this._eventType===SweepLineEvent.INSERT},isSameLabel:function(ev){return null!==this._label&&this._label===ev._label},getDeleteEventIndex:function(){return this._deleteEventIndex},interfaces_:function(){return[Comparable]},getClass:function(){return SweepLineEvent}}),SweepLineEvent.INSERT=1,SweepLineEvent.DELETE=2,extend(EdgeSetIntersector.prototype,{interfaces_:function(){return[]},getClass:function(){return EdgeSetIntersector}}),extend(SegmentIntersector$1.prototype,{isTrivialIntersection:function(e0,segIndex0,e1,segIndex1){if(e0===e1&&1===this._li.getIntersectionNum()){if(SegmentIntersector$1.isAdjacentSegments(segIndex0,segIndex1))return!0;if(e0.isClosed()){var maxSegIndex=e0.getNumPoints()-1;if(0===segIndex0&&segIndex1===maxSegIndex||0===segIndex1&&segIndex0===maxSegIndex)return!0}}return!1},getProperIntersectionPoint:function(){return this._properIntersectionPoint},setIsDoneIfProperInt:function(isDoneWhenProperInt){this._isDoneWhenProperInt=isDoneWhenProperInt},hasProperInteriorIntersection:function(){return this._hasProperInterior},isBoundaryPointInternal:function(li,bdyNodes){for(var i=bdyNodes.iterator();i.hasNext();){var pt=i.next().getCoordinate();if(li.isIntersection(pt))return!0}return!1},hasProperIntersection:function(){return this._hasProper},hasIntersection:function(){return this._hasIntersection},isDone:function(){return this._isDone},isBoundaryPoint:function(li,bdyNodes){return null!==bdyNodes&&(!!this.isBoundaryPointInternal(li,bdyNodes[0])||!!this.isBoundaryPointInternal(li,bdyNodes[1]))},setBoundaryNodes:function(bdyNodes0,bdyNodes1){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=bdyNodes0,this._bdyNodes[1]=bdyNodes1},addIntersections:function(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)return null;this.numTests++;var p00=e0.getCoordinates()[segIndex0],p01=e0.getCoordinates()[segIndex0+1],p10=e1.getCoordinates()[segIndex1],p11=e1.getCoordinates()[segIndex1+1];this._li.computeIntersection(p00,p01,p10,p11),this._li.hasIntersection()&&(this._recordIsolated&&(e0.setIsolated(!1),e1.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(e0,segIndex0,e1,segIndex1)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(e0.addIntersections(this._li,segIndex0,0),e1.addIntersections(this._li,segIndex1,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},interfaces_:function(){return[]},getClass:function(){return SegmentIntersector$1}}),SegmentIntersector$1.isAdjacentSegments=function(i1,i2){return 1===Math.abs(i1-i2)},inherits$1(SimpleMCSweepLineIntersector,EdgeSetIntersector),extend(SimpleMCSweepLineIntersector.prototype,{prepareEvents:function(){Collections.sort(this.events);for(var i=0;i<this.events.size();i++){var ev=this.events.get(i);ev.isDelete()&&ev.getInsertEvent().setDeleteEventIndex(i)}},computeIntersections:function(){if(1===arguments.length){si=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var i=0;i<this.events.size();i++){var ev=this.events.get(i);if(ev.isInsert()&&this.processOverlaps(i,ev.getDeleteEventIndex(),ev,si),si.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof SegmentIntersector$1&&hasInterface(arguments[0],List)&&hasInterface(arguments[1],List)){var edges0=arguments[0],edges1=arguments[1],si=arguments[2];this.addEdges(edges0,edges0),this.addEdges(edges1,edges1),this.computeIntersections(si)}else if("boolean"==typeof arguments[2]&&hasInterface(arguments[0],List)&&arguments[1]instanceof SegmentIntersector$1){var edges=arguments[0],si=arguments[1];arguments[2]?this.addEdges(edges,null):this.addEdges(edges),this.computeIntersections(si)}},addEdge:function(edge,edgeSet){for(var mce=edge.getMonotoneChainEdge(),startIndex=mce.getStartIndexes(),i=0;i<startIndex.length-1;i++){var mc=new MonotoneChain$1(mce,i),insertEvent=new SweepLineEvent(edgeSet,mce.getMinX(i),mc);this.events.add(insertEvent),this.events.add(new SweepLineEvent(mce.getMaxX(i),insertEvent))}},processOverlaps:function(start,end,ev0,si){for(var mc0=ev0.getObject(),i=start;i<end;i++){var ev1=this.events.get(i);if(ev1.isInsert()){var mc1=ev1.getObject();ev0.isSameLabel(ev1)||(mc0.computeIntersections(mc1,si),this.nOverlaps++)}}},addEdges:function(){if(1===arguments.length)for(i=(edges=arguments[0]).iterator();i.hasNext();){edge=i.next();this.addEdge(edge,edge)}else if(2===arguments.length)for(var edges=arguments[0],edgeSet=arguments[1],i=edges.iterator();i.hasNext();){var edge=i.next();this.addEdge(edge,edgeSet)}},interfaces_:function(){return[]},getClass:function(){return SimpleMCSweepLineIntersector}}),extend(IntervalRTreeNode$1.prototype,{getMin:function(){return this._min},intersects:function(queryMin,queryMax){return!(this._min>queryMax||this._max<queryMin)},getMax:function(){return this._max},toString:function(){return WKTWriter.toLineString(new Coordinate(this._min,0),new Coordinate(this._max,0))},interfaces_:function(){return[]},getClass:function(){return IntervalRTreeNode$1}}),extend(NodeComparator.prototype,{compare:function(o1,o2){var n1=o1,n2=o2,mid1=(n1._min+n1._max)/2,mid2=(n2._min+n2._max)/2;return mid1<mid2?-1:mid1>mid2?1:0},interfaces_:function(){return[Comparator]},getClass:function(){return NodeComparator}}),IntervalRTreeNode$1.NodeComparator=NodeComparator,inherits$1(IntervalRTreeLeafNode,IntervalRTreeNode$1),extend(IntervalRTreeLeafNode.prototype,{query:function(queryMin,queryMax,visitor){if(!this.intersects(queryMin,queryMax))return null;visitor.visitItem(this._item)},interfaces_:function(){return[]},getClass:function(){return IntervalRTreeLeafNode}}),inherits$1(IntervalRTreeBranchNode,IntervalRTreeNode$1),extend(IntervalRTreeBranchNode.prototype,{buildExtent:function(n1,n2){this._min=Math.min(n1._min,n2._min),this._max=Math.max(n1._max,n2._max)},query:function(queryMin,queryMax,visitor){if(!this.intersects(queryMin,queryMax))return null;null!==this._node1&&this._node1.query(queryMin,queryMax,visitor),null!==this._node2&&this._node2.query(queryMin,queryMax,visitor)},interfaces_:function(){return[]},getClass:function(){return IntervalRTreeBranchNode}}),extend(SortedPackedIntervalRTree.prototype,{buildTree:function(){Collections.sort(this._leaves,new IntervalRTreeNode.NodeComparator);for(var src=this._leaves,temp=null,dest=new ArrayList;;){if(this.buildLevel(src,dest),1===dest.size())return dest.get(0);temp=src,src=dest,dest=temp}},insert:function(min,max,item){if(null!==this._root)throw new IllegalStateException("Index cannot be added to once it has been queried");this._leaves.add(new IntervalRTreeLeafNode(min,max,item))},query:function(min,max,visitor){this.init(),this._root.query(min,max,visitor)},buildRoot:function(){if(null!==this._root)return null;this._root=this.buildTree()},printNode:function(node){System.out.println(WKTWriter.toLineString(new Coordinate(node._min,this._level),new Coordinate(node._max,this._level)))},init:function(){if(null!==this._root)return null;this.buildRoot()},buildLevel:function(src,dest){this._level++,dest.clear();for(var i=0;i<src.size();i+=2){var n1=src.get(i);if(null===(i+1<src.size()?src.get(i):null))dest.add(n1);else{var node=new IntervalRTreeBranchNode(src.get(i),src.get(i+1));dest.add(node)}}},interfaces_:function(){return[]},getClass:function(){return SortedPackedIntervalRTree}}),extend(LinearComponentExtracter.prototype,{filter:function(geom){if(this._isForcedToLineString&&geom instanceof LinearRing){var line=geom.getFactory().createLineString(geom.getCoordinateSequence());return this._lines.add(line),null}geom instanceof LineString&&this._lines.add(geom)},setForceToLineString:function(isForcedToLineString){this._isForcedToLineString=isForcedToLineString},interfaces_:function(){return[GeometryComponentFilter]},getClass:function(){return LinearComponentExtracter}}),LinearComponentExtracter.getGeometry=function(){if(1===arguments.length){return(geom=arguments[0]).getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))}if(2===arguments.length){var geom=arguments[0],forceToLineString=arguments[1];return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom,forceToLineString))}},LinearComponentExtracter.getLines=function(){if(1===arguments.length){geom=arguments[0];return LinearComponentExtracter.getLines(geom,!1)}if(2===arguments.length){if(hasInterface(arguments[0],Collection)&&hasInterface(arguments[1],Collection)){for(var geoms=arguments[0],lines=arguments[1],i=geoms.iterator();i.hasNext();){g=i.next();LinearComponentExtracter.getLines(g,lines)}return lines}if(arguments[0]instanceof Geometry&&"boolean"==typeof arguments[1]){var geom=arguments[0],forceToLineString=arguments[1],lines=new ArrayList;return geom.apply(new LinearComponentExtracter(lines,forceToLineString)),lines}if(arguments[0]instanceof Geometry&&hasInterface(arguments[1],Collection)){var geom=arguments[0],lines=arguments[1];return geom instanceof LineString?lines.add(geom):geom.apply(new LinearComponentExtracter(lines)),lines}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&hasInterface(arguments[0],Collection)&&hasInterface(arguments[1],Collection)){for(var geoms=arguments[0],lines=arguments[1],forceToLineString=arguments[2],i=geoms.iterator();i.hasNext();){var g=i.next();LinearComponentExtracter.getLines(g,lines,forceToLineString)}return lines}if("boolean"==typeof arguments[2]&&arguments[0]instanceof Geometry&&hasInterface(arguments[1],Collection)){var geom=arguments[0],lines=arguments[1],forceToLineString=arguments[2];return geom.apply(new LinearComponentExtracter(lines,forceToLineString)),lines}}},extend(ArrayListVisitor.prototype,{visitItem:function(item){this._items.add(item)},getItems:function(){return this._items},interfaces_:function(){return[ItemVisitor]},getClass:function(){return ArrayListVisitor}}),extend(IndexedPointInAreaLocator.prototype,{locate:function(p){var rcc=new RayCrossingCounter(p),visitor=new SegmentVisitor(rcc);return this._index.query(p.y,p.y,visitor),rcc.getLocation()},interfaces_:function(){return[PointOnGeometryLocator]},getClass:function(){return IndexedPointInAreaLocator}}),extend(SegmentVisitor.prototype,{visitItem:function(item){var seg=item;this._counter.countSegment(seg.getCoordinate(0),seg.getCoordinate(1))},interfaces_:function(){return[ItemVisitor]},getClass:function(){return SegmentVisitor}}),extend(IntervalIndexedGeometry.prototype,{init:function(geom){for(var i=LinearComponentExtracter.getLines(geom).iterator();i.hasNext();){var pts=i.next().getCoordinates();this.addLine(pts)}},addLine:function(pts){for(var i=1;i<pts.length;i++){var seg=new LineSegment(pts[i-1],pts[i]),min=Math.min(seg.p0.y,seg.p1.y),max=Math.max(seg.p0.y,seg.p1.y);this._index.insert(min,max,seg)}},query:function(){if(2===arguments.length){var min=arguments[0],max=arguments[1],visitor=new ArrayListVisitor;return this._index.query(min,max,visitor),visitor.getItems()}if(3===arguments.length){var min=arguments[0],max=arguments[1],visitor=arguments[2];this._index.query(min,max,visitor)}},interfaces_:function(){return[]},getClass:function(){return IntervalIndexedGeometry}}),IndexedPointInAreaLocator.SegmentVisitor=SegmentVisitor,IndexedPointInAreaLocator.IntervalIndexedGeometry=IntervalIndexedGeometry,extend(EdgeIntersection.prototype,{getSegmentIndex:function(){return this.segmentIndex},getCoordinate:function(){return this.coord},print:function(out){out.print(this.coord),out.print(" seg # = "+this.segmentIndex),out.println(" dist = "+this.dist)},compareTo:function(obj){var other=obj;return this.compare(other.segmentIndex,other.dist)},isEndPoint:function(maxSegmentIndex){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===maxSegmentIndex},toString:function(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist},getDistance:function(){return this.dist},compare:function(segmentIndex,dist){return this.segmentIndex<segmentIndex?-1:this.segmentIndex>segmentIndex?1:this.dist<dist?-1:this.dist>dist?1:0},interfaces_:function(){return[Comparable]},getClass:function(){return EdgeIntersection}}),extend(EdgeIntersectionList.prototype,{print:function(out){out.println("Intersections:");for(var it=this.iterator();it.hasNext();){it.next().print(out)}},iterator:function(){return this._nodeMap.values().iterator()},addSplitEdges:function(edgeList){this.addEndpoints();for(var it=this.iterator(),eiPrev=it.next();it.hasNext();){var ei=it.next(),newEdge=this.createSplitEdge(eiPrev,ei);edgeList.add(newEdge),eiPrev=ei}},addEndpoints:function(){var maxSegIndex=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[maxSegIndex],maxSegIndex,0)},createSplitEdge:function(ei0,ei1){var npts=ei1.segmentIndex-ei0.segmentIndex+2,lastSegStartPt=this.edge.pts[ei1.segmentIndex],useIntPt1=ei1.dist>0||!ei1.coord.equals2D(lastSegStartPt);useIntPt1||npts--;var pts=new Array(npts).fill(null),ipt=0;pts[ipt++]=new Coordinate(ei0.coord);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++)pts[ipt++]=this.edge.pts[i];return useIntPt1&&(pts[ipt]=ei1.coord),new Edge(pts,new Label(this.edge._label))},add:function(intPt,segmentIndex,dist){var eiNew=new EdgeIntersection(intPt,segmentIndex,dist),ei=this._nodeMap.get(eiNew);return null!==ei?ei:(this._nodeMap.put(eiNew,eiNew),eiNew)},isIntersection:function(pt){for(var it=this.iterator();it.hasNext();){if(it.next().coord.equals(pt))return!0}return!1},interfaces_:function(){return[]},getClass:function(){return EdgeIntersectionList}}),extend(MonotoneChainIndexer.prototype,{getChainStartIndices:function(pts){var start=0,startIndexList=new ArrayList;startIndexList.add(new Integer(start));do{var last=this.findChainEnd(pts,start);startIndexList.add(new Integer(last)),start=last}while(start<pts.length-1);return MonotoneChainIndexer.toIntArray(startIndexList)},findChainEnd:function(pts,start){for(var chainQuad=Quadrant.quadrant(pts[start],pts[start+1]),last=start+1;last<pts.length;){if(Quadrant.quadrant(pts[last-1],pts[last])!==chainQuad)break;last++}return last-1},interfaces_:function(){return[]},getClass:function(){return MonotoneChainIndexer}}),MonotoneChainIndexer.toIntArray=function(list){for(var array=new Array(list.size()).fill(null),i=0;i<array.length;i++)array[i]=list.get(i).intValue();return array},extend(MonotoneChainEdge.prototype,{getCoordinates:function(){return this.pts},getMaxX:function(chainIndex){var x1=this.pts[this.startIndex[chainIndex]].x,x2=this.pts[this.startIndex[chainIndex+1]].x;return x1>x2?x1:x2},getMinX:function(chainIndex){var x1=this.pts[this.startIndex[chainIndex]].x,x2=this.pts[this.startIndex[chainIndex+1]].x;return x1<x2?x1:x2},computeIntersectsForChain:function(){if(4===arguments.length){var chainIndex0=arguments[0],mce=arguments[1],chainIndex1=arguments[2],si=arguments[3];this.computeIntersectsForChain(this.startIndex[chainIndex0],this.startIndex[chainIndex0+1],mce,mce.startIndex[chainIndex1],mce.startIndex[chainIndex1+1],si)}else if(6===arguments.length){var start0=arguments[0],end0=arguments[1],mce=arguments[2],start1=arguments[3],end1=arguments[4],ei=arguments[5],p00=this.pts[start0],p01=this.pts[end0],p10=mce.pts[start1],p11=mce.pts[end1];if(end0-start0==1&&end1-start1==1)return ei.addIntersections(this.e,start0,mce.e,start1),null;if(this.env1.init(p00,p01),this.env2.init(p10,p11),!this.env1.intersects(this.env2))return null;var mid0=Math.trunc((start0+end0)/2),mid1=Math.trunc((start1+end1)/2);start0<mid0&&(start1<mid1&&this.computeIntersectsForChain(start0,mid0,mce,start1,mid1,ei),mid1<end1&&this.computeIntersectsForChain(start0,mid0,mce,mid1,end1,ei)),mid0<end0&&(start1<mid1&&this.computeIntersectsForChain(mid0,end0,mce,start1,mid1,ei),mid1<end1&&this.computeIntersectsForChain(mid0,end0,mce,mid1,end1,ei))}},getStartIndexes:function(){return this.startIndex},computeIntersects:function(mce,si){for(var i=0;i<this.startIndex.length-1;i++)for(var j=0;j<mce.startIndex.length-1;j++)this.computeIntersectsForChain(i,mce,j,si)},interfaces_:function(){return[]},getClass:function(){return MonotoneChainEdge}}),extend(Depth.prototype,{getDepth:function(geomIndex,posIndex){return this._depth[geomIndex][posIndex]},setDepth:function(geomIndex,posIndex,depthValue){this._depth[geomIndex][posIndex]=depthValue},isNull:function(){if(0===arguments.length){for(var i=0;i<2;i++)for(var j=0;j<3;j++)if(this._depth[i][j]!==Depth.NULL_VALUE)return!1;return!0}if(1===arguments.length){geomIndex=arguments[0];return this._depth[geomIndex][1]===Depth.NULL_VALUE}if(2===arguments.length){var geomIndex=arguments[0],posIndex=arguments[1];return this._depth[geomIndex][posIndex]===Depth.NULL_VALUE}},normalize:function(){for(var i=0;i<2;i++)if(!this.isNull(i)){var minDepth=this._depth[i][1];this._depth[i][2]<minDepth&&(minDepth=this._depth[i][2]),minDepth<0&&(minDepth=0);for(var j=1;j<3;j++){var newValue=0;this._depth[i][j]>minDepth&&(newValue=1),this._depth[i][j]=newValue}}},getDelta:function(geomIndex){return this._depth[geomIndex][Position.RIGHT]-this._depth[geomIndex][Position.LEFT]},getLocation:function(geomIndex,posIndex){return this._depth[geomIndex][posIndex]<=0?Location.EXTERIOR:Location.INTERIOR},toString:function(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]},add:function(){if(1===arguments.length)for(var lbl=arguments[0],i=0;i<2;i++)for(var j=1;j<3;j++){var loc=lbl.getLocation(i,j);loc!==Location.EXTERIOR&&loc!==Location.INTERIOR||(this.isNull(i,j)?this._depth[i][j]=Depth.depthAtLocation(loc):this._depth[i][j]+=Depth.depthAtLocation(loc))}else if(3===arguments.length){var geomIndex=arguments[0],posIndex=arguments[1];arguments[2]===Location.INTERIOR&&this._depth[geomIndex][posIndex]++}},interfaces_:function(){return[]},getClass:function(){return Depth}}),Depth.depthAtLocation=function(location){return location===Location.EXTERIOR?0:location===Location.INTERIOR?1:Depth.NULL_VALUE},Depth.NULL_VALUE=-1,inherits$1(Edge,GraphComponent),extend(Edge.prototype,{getDepth:function(){return this._depth},getCollapsedEdge:function(){var newPts=new Array(2).fill(null);newPts[0]=this.pts[0],newPts[1]=this.pts[1];return new Edge(newPts,Label.toLineLabel(this._label))},isIsolated:function(){return this._isIsolated},getCoordinates:function(){return this.pts},setIsolated:function(isIsolated){this._isIsolated=isIsolated},setName:function(name){this._name=name},equals:function(o){if(!(o instanceof Edge))return!1;var e=o;if(this.pts.length!==e.pts.length)return!1;for(var isEqualForward=!0,isEqualReverse=!0,iRev=this.pts.length,i=0;i<this.pts.length;i++)if(this.pts[i].equals2D(e.pts[i])||(isEqualForward=!1),this.pts[i].equals2D(e.pts[--iRev])||(isEqualReverse=!1),!isEqualForward&&!isEqualReverse)return!1;return!0},getCoordinate:function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var i=arguments[0];return this.pts[i]}},print:function(out){out.print("edge "+this._name+": "),out.print("LINESTRING (");for(var i=0;i<this.pts.length;i++)i>0&&out.print(","),out.print(this.pts[i].x+" "+this.pts[i].y);out.print(")  "+this._label+" "+this._depthDelta)},computeIM:function(im){Edge.updateIM(this._label,im)},isCollapsed:function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getMaximumSegmentIndex:function(){return this.pts.length-1},getDepthDelta:function(){return this._depthDelta},getNumPoints:function(){return this.pts.length},printReverse:function(out){out.print("edge "+this._name+": ");for(var i=this.pts.length-1;i>=0;i--)out.print(this.pts[i]+" ");out.println("")},getMonotoneChainEdge:function(){return null===this._mce&&(this._mce=new MonotoneChainEdge(this)),this._mce},getEnvelope:function(){if(null===this._env){this._env=new Envelope;for(var i=0;i<this.pts.length;i++)this._env.expandToInclude(this.pts[i])}return this._env},addIntersection:function(li,segmentIndex,geomIndex,intIndex){var intPt=new Coordinate(li.getIntersection(intIndex)),normalizedSegmentIndex=segmentIndex,dist=li.getEdgeDistance(geomIndex,intIndex),nextSegIndex=normalizedSegmentIndex+1;if(nextSegIndex<this.pts.length){var nextPt=this.pts[nextSegIndex];intPt.equals2D(nextPt)&&(normalizedSegmentIndex=nextSegIndex,dist=0)}this.eiList.add(intPt,normalizedSegmentIndex,dist)},toString:function(){var buf=new StringBuffer;buf.append("edge "+this._name+": "),buf.append("LINESTRING (");for(var i=0;i<this.pts.length;i++)i>0&&buf.append(","),buf.append(this.pts[i].x+" "+this.pts[i].y);return buf.append(")  "+this._label+" "+this._depthDelta),buf.toString()},isPointwiseEqual:function(e){if(this.pts.length!==e.pts.length)return!1;for(var i=0;i<this.pts.length;i++)if(!this.pts[i].equals2D(e.pts[i]))return!1;return!0},setDepthDelta:function(depthDelta){this._depthDelta=depthDelta},getEdgeIntersectionList:function(){return this.eiList},addIntersections:function(li,segmentIndex,geomIndex){for(var i=0;i<li.getIntersectionNum();i++)this.addIntersection(li,segmentIndex,geomIndex,i)},interfaces_:function(){return[]},getClass:function(){return Edge}}),Edge.updateIM=function(){if(2!==arguments.length)return GraphComponent.prototype.updateIM.apply(this,arguments);var label=arguments[0],im=arguments[1];im.setAtLeastIfValid(label.getLocation(0,Position.ON),label.getLocation(1,Position.ON),1),label.isArea()&&(im.setAtLeastIfValid(label.getLocation(0,Position.LEFT),label.getLocation(1,Position.LEFT),2),im.setAtLeastIfValid(label.getLocation(0,Position.RIGHT),label.getLocation(1,Position.RIGHT),2))},inherits$1(GeometryGraph,PlanarGraph),extend(GeometryGraph.prototype,{insertBoundaryPoint:function(argIndex,coord){var lbl=this._nodes.addNode(coord).getLabel(),boundaryCount=1;lbl.getLocation(argIndex,Position.ON)===Location.BOUNDARY&&boundaryCount++;var newLoc=GeometryGraph.determineBoundary(this._boundaryNodeRule,boundaryCount);lbl.setLocation(argIndex,newLoc)},computeSelfNodes:function(){if(2===arguments.length){var li=arguments[0],computeRingSelfNodes=arguments[1];return this.computeSelfNodes(li,computeRingSelfNodes,!1)}if(3===arguments.length){var li=arguments[0],computeRingSelfNodes=arguments[1],isDoneIfProperInt=arguments[2],si=new SegmentIntersector$1(li,!0,!1);si.setIsDoneIfProperInt(isDoneIfProperInt);var esi=this.createEdgeSetIntersector(),isRings=this._parentGeom instanceof LinearRing||this._parentGeom instanceof Polygon||this._parentGeom instanceof MultiPolygon,computeAllSegments=computeRingSelfNodes||!isRings;return esi.computeIntersections(this._edges,si,computeAllSegments),this.addSelfIntersectionNodes(this._argIndex),si}},computeSplitEdges:function(edgelist){for(var i=this._edges.iterator();i.hasNext();){i.next().eiList.addSplitEdges(edgelist)}},computeEdgeIntersections:function(g,li,includeProper){var si=new SegmentIntersector$1(li,includeProper,!0);si.setBoundaryNodes(this.getBoundaryNodes(),g.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,g._edges,si),si},getGeometry:function(){return this._parentGeom},getBoundaryNodeRule:function(){return this._boundaryNodeRule},hasTooFewPoints:function(){return this._hasTooFewPoints},addPoint:function(){if(arguments[0]instanceof Point){var coord=arguments[0].getCoordinate();this.insertPoint(this._argIndex,coord,Location.INTERIOR)}else if(arguments[0]instanceof Coordinate){var pt=arguments[0];this.insertPoint(this._argIndex,pt,Location.INTERIOR)}},addPolygon:function(p){this.addPolygonRing(p.getExteriorRing(),Location.EXTERIOR,Location.INTERIOR);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);this.addPolygonRing(hole,Location.INTERIOR,Location.EXTERIOR)}},addEdge:function(e){this.insertEdge(e);var coord=e.getCoordinates();this.insertPoint(this._argIndex,coord[0],Location.BOUNDARY),this.insertPoint(this._argIndex,coord[coord.length-1],Location.BOUNDARY)},addLineString:function(line){var coord=CoordinateArrays.removeRepeatedPoints(line.getCoordinates());if(coord.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=coord[0],null;var e=new Edge(coord,new Label(this._argIndex,Location.INTERIOR));this._lineEdgeMap.put(line,e),this.insertEdge(e),Assert.isTrue(coord.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,coord[0]),this.insertBoundaryPoint(this._argIndex,coord[coord.length-1])},getInvalidPoint:function(){return this._invalidPoint},getBoundaryPoints:function(){for(var coll=this.getBoundaryNodes(),pts=new Array(coll.size()).fill(null),i=0,it=coll.iterator();it.hasNext();){var node=it.next();pts[i++]=node.getCoordinate().copy()}return pts},getBoundaryNodes:function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},addSelfIntersectionNode:function(argIndex,coord,loc){if(this.isBoundaryNode(argIndex,coord))return null;loc===Location.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(argIndex,coord):this.insertPoint(argIndex,coord,loc)},addPolygonRing:function(lr,cwLeft,cwRight){if(lr.isEmpty())return null;var coord=CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());if(coord.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=coord[0],null;var left=cwLeft,right=cwRight;CGAlgorithms.isCCW(coord)&&(left=cwRight,right=cwLeft);var e=new Edge(coord,new Label(this._argIndex,Location.BOUNDARY,left,right));this._lineEdgeMap.put(lr,e),this.insertEdge(e),this.insertPoint(this._argIndex,coord[0],Location.BOUNDARY)},insertPoint:function(argIndex,coord,onLocation){var n=this._nodes.addNode(coord),lbl=n.getLabel();null===lbl?n._label=new Label(argIndex,onLocation):lbl.setLocation(argIndex,onLocation)},createEdgeSetIntersector:function(){return new SimpleMCSweepLineIntersector},addSelfIntersectionNodes:function(argIndex){for(var i=this._edges.iterator();i.hasNext();)for(var e=i.next(),eLoc=e.getLabel().getLocation(argIndex),eiIt=e.eiList.iterator();eiIt.hasNext();){var ei=eiIt.next();this.addSelfIntersectionNode(argIndex,ei.coord,eLoc)}},add:function(){if(1!==arguments.length)return PlanarGraph.prototype.add.apply(this,arguments);var g=arguments[0];if(g.isEmpty())return null;if(g instanceof MultiPolygon&&(this._useBoundaryDeterminationRule=!1),g instanceof Polygon)this.addPolygon(g);else if(g instanceof LineString)this.addLineString(g);else if(g instanceof Point)this.addPoint(g);else if(g instanceof MultiPoint)this.addCollection(g);else if(g instanceof MultiLineString)this.addCollection(g);else if(g instanceof MultiPolygon)this.addCollection(g);else{if(!(g instanceof GeometryCollection))throw new UnsupportedOperationException(g.getClass().getName());this.addCollection(g)}},addCollection:function(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.add(g)}},locate:function(pt){return hasInterface(this._parentGeom,Polygonal)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new IndexedPointInAreaLocator(this._parentGeom)),this._areaPtLocator.locate(pt)):this._ptLocator.locate(pt,this._parentGeom)},findEdge:function(){if(1===arguments.length){var line=arguments[0];return this._lineEdgeMap.get(line)}return PlanarGraph.prototype.findEdge.apply(this,arguments)},interfaces_:function(){return[]},getClass:function(){return GeometryGraph}}),GeometryGraph.determineBoundary=function(boundaryNodeRule,boundaryCount){return boundaryNodeRule.isInBoundary(boundaryCount)?Location.BOUNDARY:Location.INTERIOR},extend(GeometryGraphOperation.prototype,{getArgGeometry:function(i){return this._arg[i].getGeometry()},setComputationPrecision:function(pm){this._resultPrecisionModel=pm,this._li.setPrecisionModel(this._resultPrecisionModel)},interfaces_:function(){return[]},getClass:function(){return GeometryGraphOperation}}),extend(OrientedCoordinateArray.prototype,{compareTo:function(o1){var oca=o1;return OrientedCoordinateArray.compareOriented(this._pts,this._orientation,oca._pts,oca._orientation)},interfaces_:function(){return[Comparable]},getClass:function(){return OrientedCoordinateArray}}),OrientedCoordinateArray.orientation=function(pts){return 1===CoordinateArrays.increasingDirection(pts)},OrientedCoordinateArray.compareOriented=function(pts1,orientation1,pts2,orientation2){for(var dir1=orientation1?1:-1,dir2=orientation2?1:-1,limit1=orientation1?pts1.length:-1,limit2=orientation2?pts2.length:-1,i1=orientation1?0:pts1.length-1,i2=orientation2?0:pts2.length-1;;){var compPt=pts1[i1].compareTo(pts2[i2]);if(0!==compPt)return compPt;var done1=(i1+=dir1)===limit1,done2=(i2+=dir2)===limit2;if(done1&&!done2)return-1;if(!done1&&done2)return 1;if(done1&&done2)return 0}},extend(EdgeList.prototype,{print:function(out){out.print("MULTILINESTRING ( ");for(var j=0;j<this._edges.size();j++){var e=this._edges.get(j);j>0&&out.print(","),out.print("(");for(var pts=e.getCoordinates(),i=0;i<pts.length;i++)i>0&&out.print(","),out.print(pts[i].x+" "+pts[i].y);out.println(")")}out.print(")  ")},addAll:function(edgeColl){for(var i=edgeColl.iterator();i.hasNext();)this.add(i.next())},findEdgeIndex:function(e){for(var i=0;i<this._edges.size();i++)if(this._edges.get(i).equals(e))return i;return-1},iterator:function(){return this._edges.iterator()},getEdges:function(){return this._edges},get:function(i){return this._edges.get(i)},findEqualEdge:function(e){var oca=new OrientedCoordinateArray(e.getCoordinates());return this._ocaMap.get(oca)},add:function(e){this._edges.add(e);var oca=new OrientedCoordinateArray(e.getCoordinates());this._ocaMap.put(oca,e)},interfaces_:function(){return[]},getClass:function(){return EdgeList}}),inherits$1(OverlayOp,GeometryGraphOperation),extend(OverlayOp.prototype,{insertUniqueEdge:function(e){var existingEdge=this._edgeList.findEqualEdge(e);if(null!==existingEdge){var existingLabel=existingEdge.getLabel(),labelToMerge=e.getLabel();existingEdge.isPointwiseEqual(e)||(labelToMerge=new Label(e.getLabel())).flip();var depth=existingEdge.getDepth();depth.isNull()&&depth.add(existingLabel),depth.add(labelToMerge),existingLabel.merge(labelToMerge)}else this._edgeList.add(e)},getGraph:function(){return this._graph},cancelDuplicateResultEdges:function(){for(var it=this._graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next(),sym=de.getSym();de.isInResult()&&sym.isInResult()&&(de.setInResult(!1),sym.setInResult(!1))}},isCoveredByLA:function(coord){return!!this.isCovered(coord,this._resultLineList)||!!this.isCovered(coord,this._resultPolyList)},computeGeometry:function(resultPointList,resultLineList,resultPolyList,opcode){var geomList=new ArrayList;return geomList.addAll(resultPointList),geomList.addAll(resultLineList),geomList.addAll(resultPolyList),geomList.isEmpty()?OverlayOp.createEmptyResult(opcode,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(geomList)},mergeSymLabels:function(){for(var nodeit=this._graph.getNodes().iterator();nodeit.hasNext();){nodeit.next().getEdges().mergeSymLabels()}},isCovered:function(coord,geomList){for(var it=geomList.iterator();it.hasNext();){var geom=it.next();if(this._ptLocator.locate(coord,geom)!==Location.EXTERIOR)return!0}return!1},replaceCollapsedEdges:function(){for(var newEdges=new ArrayList,it=this._edgeList.iterator();it.hasNext();){var e=it.next();e.isCollapsed()&&(it.remove(),newEdges.add(e.getCollapsedEdge()))}this._edgeList.addAll(newEdges)},updateNodeLabelling:function(){for(var nodeit=this._graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next(),lbl=node.getEdges().getLabel();node.getLabel().merge(lbl)}},getResultGeometry:function(overlayOpCode){return this.computeOverlay(overlayOpCode),this._resultGeom},insertUniqueEdges:function(edges){for(var i=edges.iterator();i.hasNext();){var e=i.next();this.insertUniqueEdge(e)}},computeOverlay:function(opCode){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var baseSplitEdges=new ArrayList;this._arg[0].computeSplitEdges(baseSplitEdges),this._arg[1].computeSplitEdges(baseSplitEdges),this.insertUniqueEdges(baseSplitEdges),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),EdgeNodingValidator.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(opCode),this.cancelDuplicateResultEdges();var polyBuilder=new PolygonBuilder(this._geomFact);polyBuilder.add(this._graph),this._resultPolyList=polyBuilder.getPolygons();var lineBuilder=new LineBuilder(this,this._geomFact,this._ptLocator);this._resultLineList=lineBuilder.build(opCode);var pointBuilder=new PointBuilder(this,this._geomFact,this._ptLocator);this._resultPointList=pointBuilder.build(opCode),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,opCode)},labelIncompleteNode:function(n,targetIndex){var loc=this._ptLocator.locate(n.getCoordinate(),this._arg[targetIndex].getGeometry());n.getLabel().setLocation(targetIndex,loc)},copyPoints:function(argIndex){for(var i=this._arg[argIndex].getNodeIterator();i.hasNext();){var graphNode=i.next();this._graph.addNode(graphNode.getCoordinate()).setLabel(argIndex,graphNode.getLabel().getLocation(argIndex))}},findResultAreaEdges:function(opCode){for(var it=this._graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next(),label=de.getLabel();label.isArea()&&!de.isInteriorAreaEdge()&&OverlayOp.isResultOfOp(label.getLocation(0,Position.RIGHT),label.getLocation(1,Position.RIGHT),opCode)&&de.setInResult(!0)}},computeLabelsFromDepths:function(){for(var it=this._edgeList.iterator();it.hasNext();){var e=it.next(),lbl=e.getLabel(),depth=e.getDepth();if(!depth.isNull()){depth.normalize();for(var i=0;i<2;i++)lbl.isNull(i)||!lbl.isArea()||depth.isNull(i)||(0===depth.getDelta(i)?lbl.toLine(i):(Assert.isTrue(!depth.isNull(i,Position.LEFT),"depth of LEFT side has not been initialized"),lbl.setLocation(i,Position.LEFT,depth.getLocation(i,Position.LEFT)),Assert.isTrue(!depth.isNull(i,Position.RIGHT),"depth of RIGHT side has not been initialized"),lbl.setLocation(i,Position.RIGHT,depth.getLocation(i,Position.RIGHT))))}}},computeLabelling:function(){for(var nodeit=this._graph.getNodes().iterator();nodeit.hasNext();){nodeit.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},labelIncompleteNodes:function(){for(var ni=this._graph.getNodes().iterator();ni.hasNext();){var n=ni.next(),label=n.getLabel();n.isIsolated()&&(label.isNull(0)?this.labelIncompleteNode(n,0):this.labelIncompleteNode(n,1)),n.getEdges().updateLabelling(label)}},isCoveredByA:function(coord){return!!this.isCovered(coord,this._resultPolyList)},interfaces_:function(){return[]},getClass:function(){return OverlayOp}}),OverlayOp.overlayOp=function(geom0,geom1,opCode){return new OverlayOp(geom0,geom1).getResultGeometry(opCode)},OverlayOp.intersection=function(g,other){if(g.isEmpty()||other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION,g,other,g.getFactory());if(g.isGeometryCollection()){var g2=other;return GeometryCollectionMapper.map(g,{interfaces_:function(){return[MapOp]},map:function(g){return g.intersection(g2)}})}return g.checkNotGeometryCollection(g),g.checkNotGeometryCollection(other),SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.INTERSECTION)},OverlayOp.symDifference=function(g,other){if(g.isEmpty()||other.isEmpty()){if(g.isEmpty()&&other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE,g,other,g.getFactory());if(g.isEmpty())return other.copy();if(other.isEmpty())return g.copy()}return g.checkNotGeometryCollection(g),g.checkNotGeometryCollection(other),SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.SYMDIFFERENCE)},OverlayOp.resultDimension=function(opCode,g0,g1){var dim0=g0.getDimension(),dim1=g1.getDimension(),resultDimension=-1;switch(opCode){case OverlayOp.INTERSECTION:resultDimension=Math.min(dim0,dim1);break;case OverlayOp.UNION:resultDimension=Math.max(dim0,dim1);break;case OverlayOp.DIFFERENCE:resultDimension=dim0;break;case OverlayOp.SYMDIFFERENCE:resultDimension=Math.max(dim0,dim1)}return resultDimension},OverlayOp.createEmptyResult=function(overlayOpCode,a,b,geomFact){var result=null;switch(OverlayOp.resultDimension(overlayOpCode,a,b)){case-1:result=geomFact.createGeometryCollection(new Array(0).fill(null));break;case 0:result=geomFact.createPoint();break;case 1:result=geomFact.createLineString();break;case 2:result=geomFact.createPolygon()}return result},OverlayOp.difference=function(g,other){return g.isEmpty()?OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE,g,other,g.getFactory()):other.isEmpty()?g.copy():(g.checkNotGeometryCollection(g),g.checkNotGeometryCollection(other),SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.DIFFERENCE))},OverlayOp.isResultOfOp=function(){if(2===arguments.length){var label=arguments[0],opCode=arguments[1],loc0=label.getLocation(0),loc1=label.getLocation(1);return OverlayOp.isResultOfOp(loc0,loc1,opCode)}if(3===arguments.length){var loc0=arguments[0],loc1=arguments[1],overlayOpCode=arguments[2];switch(loc0===Location.BOUNDARY&&(loc0=Location.INTERIOR),loc1===Location.BOUNDARY&&(loc1=Location.INTERIOR),overlayOpCode){case OverlayOp.INTERSECTION:return loc0===Location.INTERIOR&&loc1===Location.INTERIOR;case OverlayOp.UNION:return loc0===Location.INTERIOR||loc1===Location.INTERIOR;case OverlayOp.DIFFERENCE:return loc0===Location.INTERIOR&&loc1!==Location.INTERIOR;case OverlayOp.SYMDIFFERENCE:return loc0===Location.INTERIOR&&loc1!==Location.INTERIOR||loc0!==Location.INTERIOR&&loc1===Location.INTERIOR}return!1}},OverlayOp.INTERSECTION=1,OverlayOp.UNION=2,OverlayOp.DIFFERENCE=3,OverlayOp.SYMDIFFERENCE=4,extend(SnapOverlayOp.prototype,{selfSnap:function(geom){return new GeometrySnapper(geom).snapTo(geom,this._snapTolerance)},removeCommonBits:function(geom){this._cbr=new CommonBitsRemover,this._cbr.add(geom[0]),this._cbr.add(geom[1]);var remGeom=new Array(2).fill(null);return remGeom[0]=this._cbr.removeCommonBits(geom[0].copy()),remGeom[1]=this._cbr.removeCommonBits(geom[1].copy()),remGeom},prepareResult:function(geom){return this._cbr.addCommonBits(geom),geom},getResultGeometry:function(opCode){var prepGeom=this.snap(this._geom),result=OverlayOp.overlayOp(prepGeom[0],prepGeom[1],opCode);return this.prepareResult(result)},checkValid:function(g){g.isValid()||System.out.println("Snapped geometry is invalid")},computeSnapTolerance:function(){this._snapTolerance=GeometrySnapper.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},snap:function(geom){var remGeom=this.removeCommonBits(geom);return GeometrySnapper.snap(remGeom[0],remGeom[1],this._snapTolerance)},interfaces_:function(){return[]},getClass:function(){return SnapOverlayOp}}),SnapOverlayOp.overlayOp=function(g0,g1,opCode){return new SnapOverlayOp(g0,g1).getResultGeometry(opCode)},SnapOverlayOp.union=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.UNION)},SnapOverlayOp.intersection=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.INTERSECTION)},SnapOverlayOp.symDifference=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.SYMDIFFERENCE)},SnapOverlayOp.difference=function(g0,g1){return SnapOverlayOp.overlayOp(g0,g1,OverlayOp.DIFFERENCE)},extend(SnapIfNeededOverlayOp.prototype,{getResultGeometry:function(opCode){var result=null,isSuccess=!1,savedException=null;try{result=OverlayOp.overlayOp(this._geom[0],this._geom[1],opCode);isSuccess=!0}catch(ex){if(!(ex instanceof RuntimeException))throw ex;savedException=ex}if(!isSuccess)try{result=SnapOverlayOp.overlayOp(this._geom[0],this._geom[1],opCode)}catch(ex){throw ex instanceof RuntimeException?savedException:ex}return result},interfaces_:function(){return[]},getClass:function(){return SnapIfNeededOverlayOp}}),SnapIfNeededOverlayOp.overlayOp=function(g0,g1,opCode){return new SnapIfNeededOverlayOp(g0,g1).getResultGeometry(opCode)},SnapIfNeededOverlayOp.union=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.UNION)},SnapIfNeededOverlayOp.intersection=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.INTERSECTION)},SnapIfNeededOverlayOp.symDifference=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.SYMDIFFERENCE)},SnapIfNeededOverlayOp.difference=function(g0,g1){return SnapIfNeededOverlayOp.overlayOp(g0,g1,OverlayOp.DIFFERENCE)},extend(InteriorPointArea.prototype,{addPolygon:function(geometry){if(geometry.isEmpty())return null;var intPt=null,width=0,bisector=this.horizontalBisector(geometry);if(0===bisector.getLength())width=0,intPt=bisector.getCoordinate();else{var intersections=SnapIfNeededOverlayOp.overlayOp(bisector,geometry,OverlayOp.INTERSECTION),widestIntersection=this.widestGeometry(intersections);width=widestIntersection.getEnvelopeInternal().getWidth(),intPt=InteriorPointArea.centre(widestIntersection.getEnvelopeInternal())}(null===this._interiorPoint||width>this._maxWidth)&&(this._interiorPoint=intPt,this._maxWidth=width)},getInteriorPoint:function(){return this._interiorPoint},widestGeometry:function(){if(arguments[0]instanceof GeometryCollection){var gc=arguments[0];if(gc.isEmpty())return gc;for(var widestGeometry=gc.getGeometryN(0),i=1;i<gc.getNumGeometries();i++)gc.getGeometryN(i).getEnvelopeInternal().getWidth()>widestGeometry.getEnvelopeInternal().getWidth()&&(widestGeometry=gc.getGeometryN(i));return widestGeometry}if(arguments[0]instanceof Geometry){var geometry=arguments[0];return geometry instanceof GeometryCollection?this.widestGeometry(geometry):geometry}},horizontalBisector:function(geometry){var envelope=geometry.getEnvelopeInternal(),bisectY=SafeBisectorFinder.getBisectorY(geometry);return this._factory.createLineString([new Coordinate(envelope.getMinX(),bisectY),new Coordinate(envelope.getMaxX(),bisectY)])},add:function(geom){if(geom instanceof Polygon)this.addPolygon(geom);else if(geom instanceof GeometryCollection)for(var gc=geom,i=0;i<gc.getNumGeometries();i++)this.add(gc.getGeometryN(i))},interfaces_:function(){return[]},getClass:function(){return InteriorPointArea}}),InteriorPointArea.centre=function(envelope){return new Coordinate(InteriorPointArea.avg(envelope.getMinX(),envelope.getMaxX()),InteriorPointArea.avg(envelope.getMinY(),envelope.getMaxY()))},InteriorPointArea.avg=function(a,b){return(a+b)/2},extend(SafeBisectorFinder.prototype,{updateInterval:function(y){y<=this._centreY?y>this._loY&&(this._loY=y):y>this._centreY&&y<this._hiY&&(this._hiY=y)},getBisectorY:function(){this.process(this._poly.getExteriorRing());for(var i=0;i<this._poly.getNumInteriorRing();i++)this.process(this._poly.getInteriorRingN(i));return InteriorPointArea.avg(this._hiY,this._loY)},process:function(line){for(var seq=line.getCoordinateSequence(),i=0;i<seq.size();i++){var y=seq.getY(i);this.updateInterval(y)}},interfaces_:function(){return[]},getClass:function(){return SafeBisectorFinder}}),SafeBisectorFinder.getBisectorY=function(poly){return new SafeBisectorFinder(poly).getBisectorY()},InteriorPointArea.SafeBisectorFinder=SafeBisectorFinder,extend(InteriorPointLine.prototype,{addEndpoints:function(){if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom instanceof LineString)this.addEndpoints(geom.getCoordinates());else if(geom instanceof GeometryCollection)for(var gc=geom,i=0;i<gc.getNumGeometries();i++)this.addEndpoints(gc.getGeometryN(i))}else if(arguments[0]instanceof Array){var pts=arguments[0];this.add(pts[0]),this.add(pts[pts.length-1])}},getInteriorPoint:function(){return this._interiorPoint},addInterior:function(){if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom instanceof LineString)this.addInterior(geom.getCoordinates());else if(geom instanceof GeometryCollection)for(var gc=geom,i=0;i<gc.getNumGeometries();i++)this.addInterior(gc.getGeometryN(i))}else if(arguments[0]instanceof Array)for(var pts=arguments[0],i=1;i<pts.length-1;i++)this.add(pts[i])},add:function(point){var dist=point.distance(this._centroid);dist<this._minDistance&&(this._interiorPoint=new Coordinate(point),this._minDistance=dist)},interfaces_:function(){return[]},getClass:function(){return InteriorPointLine}}),extend(InteriorPointPoint.prototype,{getInteriorPoint:function(){return this._interiorPoint},add:function(){if(arguments[0]instanceof Geometry){var geom=arguments[0];if(geom instanceof Point)this.add(geom.getCoordinate());else if(geom instanceof GeometryCollection)for(var gc=geom,i=0;i<gc.getNumGeometries();i++)this.add(gc.getGeometryN(i))}else if(arguments[0]instanceof Coordinate){var point=arguments[0],dist=point.distance(this._centroid);dist<this._minDistance&&(this._interiorPoint=new Coordinate(point),this._minDistance=dist)}},interfaces_:function(){return[]},getClass:function(){return InteriorPointPoint}}),extend(MonotoneChainSelectAction.prototype,{select:function(){if(1===arguments.length);else if(2===arguments.length){var mc=arguments[0],startIndex=arguments[1];mc.getLineSegment(startIndex,this.selectedSegment),this.select(this.selectedSegment)}},interfaces_:function(){return[]},getClass:function(){return MonotoneChainSelectAction}}),extend(NodeBase.prototype,{hasChildren:function(){for(var i=0;i<2;i++)if(null!==this._subnode[i])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(items){items.addAll(this._items);for(var i=0;i<2;i++)null!==this._subnode[i]&&this._subnode[i].addAllItems(items);return items},size:function(){for(var subSize=0,i=0;i<2;i++)null!==this._subnode[i]&&(subSize+=this._subnode[i].size());return subSize+this._items.size()},addAllItemsFromOverlapping:function(interval,resultItems){if(null!==interval&&!this.isSearchMatch(interval))return null;resultItems.addAll(this._items),null!==this._subnode[0]&&this._subnode[0].addAllItemsFromOverlapping(interval,resultItems),null!==this._subnode[1]&&this._subnode[1].addAllItemsFromOverlapping(interval,resultItems)},hasItems:function(){return!this._items.isEmpty()},remove:function(itemInterval,item){if(!this.isSearchMatch(itemInterval))return!1;for(var found=!1,i=0;i<2;i++)if(null!==this._subnode[i]&&(found=this._subnode[i].remove(itemInterval,item))){this._subnode[i].isPrunable()&&(this._subnode[i]=null);break}return found||(found=this._items.remove(item))},getItems:function(){return this._items},depth:function(){for(var maxSubDepth=0,i=0;i<2;i++)if(null!==this._subnode[i]){var sqd=this._subnode[i].depth();sqd>maxSubDepth&&(maxSubDepth=sqd)}return maxSubDepth+1},nodeSize:function(){for(var subSize=0,i=0;i<2;i++)null!==this._subnode[i]&&(subSize+=this._subnode[i].nodeSize());return subSize+1},add:function(item){this._items.add(item)},interfaces_:function(){return[]},getClass:function(){return NodeBase}}),NodeBase.getSubnodeIndex=function(interval,centre){var subnodeIndex=-1;return interval.min>=centre&&(subnodeIndex=1),interval.max<=centre&&(subnodeIndex=0),subnodeIndex},extend(Interval.prototype,{expandToInclude:function(interval){interval.max>this.max&&(this.max=interval.max),interval.min<this.min&&(this.min=interval.min)},getWidth:function(){return this.max-this.min},overlaps:function(){if(1===arguments.length){var interval=arguments[0];return this.overlaps(interval.min,interval.max)}if(2===arguments.length){var min=arguments[0],max=arguments[1];return!(this.min>max||this.max<min)}},getMin:function(){return this.min},toString:function(){return"["+this.min+", "+this.max+"]"},contains:function(){if(1===arguments.length){if(arguments[0]instanceof Interval){var interval=arguments[0];return this.contains(interval.min,interval.max)}if("number"==typeof arguments[0]){var p=arguments[0];return p>=this.min&&p<=this.max}}else if(2===arguments.length){var min=arguments[0],max=arguments[1];return min>=this.min&&max<=this.max}},init:function(min,max){this.min=min,this.max=max,min>max&&(this.min=max,this.max=min)},getMax:function(){return this.max},interfaces_:function(){return[]},getClass:function(){return Interval}}),DoubleBits.exponent=function(d){return function(NumW,Qty){var Sign,Expo,Mant,Bin,ExW={32:8,64:11}[NumW];if(Bin||(Sign=Qty<0||1/Qty<0,isFinite(Qty)||(Bin={32:{d:127,c:128,b:0,a:0},64:{d:32752,c:0,b:0,a:0}}[NumW],Sign&&(Bin.d+=1<<NumW/4-1),Expo=Math.pow(2,ExW)-1,Mant=0)),!Bin){for(Expo={32:127,64:1023}[NumW],Mant=Math.abs(Qty);Mant>=2;)Expo++,Mant/=2;for(;Mant<1&&Expo>0;)Expo--,Mant*=2;Expo<=0&&(Mant/=2),32===NumW&&Expo>254&&(Bin={d:Sign?255:127,c:128,b:0,a:0},Expo=Math.pow(2,ExW)-1,Mant=0)}return Expo}(64,d)-1023},DoubleBits.powerOf2=function(exp){return Math.pow(2,exp)},extend(Key.prototype,{getInterval:function(){return this._interval},getLevel:function(){return this._level},computeKey:function(itemInterval){for(this._level=Key.computeLevel(itemInterval),this._interval=new Interval,this.computeInterval(this._level,itemInterval);!this._interval.contains(itemInterval);)this._level+=1,this.computeInterval(this._level,itemInterval)},computeInterval:function(level,itemInterval){var size=DoubleBits.powerOf2(level);this._pt=Math.floor(itemInterval.getMin()/size)*size,this._interval.init(this._pt,this._pt+size)},getPoint:function(){return this._pt},interfaces_:function(){return[]},getClass:function(){return Key}}),Key.computeLevel=function(interval){var dx=interval.getWidth();return DoubleBits.exponent(dx)+1},inherits$1(Node$1,NodeBase),extend(Node$1.prototype,{getInterval:function(){return this._interval},find:function(searchInterval){var subnodeIndex=NodeBase.getSubnodeIndex(searchInterval,this._centre);if(-1===subnodeIndex)return this;if(null!==this._subnode[subnodeIndex]){return this._subnode[subnodeIndex].find(searchInterval)}return this},insert:function(node){Assert.isTrue(null===this._interval||this._interval.contains(node._interval));var index=NodeBase.getSubnodeIndex(node._interval,this._centre);if(node._level===this._level-1)this._subnode[index]=node;else{var childNode=this.createSubnode(index);childNode.insert(node),this._subnode[index]=childNode}},isSearchMatch:function(itemInterval){return itemInterval.overlaps(this._interval)},getSubnode:function(index){return null===this._subnode[index]&&(this._subnode[index]=this.createSubnode(index)),this._subnode[index]},getNode:function(searchInterval){var subnodeIndex=NodeBase.getSubnodeIndex(searchInterval,this._centre);if(-1!==subnodeIndex){return this.getSubnode(subnodeIndex).getNode(searchInterval)}return this},createSubnode:function(index){var min=0,max=0;switch(index){case 0:min=this._interval.getMin(),max=this._centre;break;case 1:min=this._centre,max=this._interval.getMax()}return new Node$1(new Interval(min,max),this._level-1)},interfaces_:function(){return[]},getClass:function(){return Node$1}}),Node$1.createNode=function(itemInterval){var key=new Key(itemInterval);return new Node$1(key.getInterval(),key.getLevel())},Node$1.createExpanded=function(node,addInterval){var expandInt=new Interval(addInterval);null!==node&&expandInt.expandToInclude(node._interval);var largerNode=Node$1.createNode(expandInt);return null!==node&&largerNode.insert(node),largerNode},extend(IntervalSize.prototype,{interfaces_:function(){return[]},getClass:function(){return IntervalSize}}),IntervalSize.isZeroWidth=function(min,max){var width=max-min;if(0===width)return!0;var maxAbs=Math.max(Math.abs(min),Math.abs(max));return DoubleBits.exponent(width/maxAbs)<=IntervalSize.MIN_BINARY_EXPONENT},IntervalSize.MIN_BINARY_EXPONENT=-50,inherits$1(Root,NodeBase),extend(Root.prototype,{insert:function(itemInterval,item){var index=NodeBase.getSubnodeIndex(itemInterval,Root.origin);if(-1===index)return this.add(item),null;var node=this._subnode[index];if(null===node||!node.getInterval().contains(itemInterval)){var largerNode=Node$1.createExpanded(node,itemInterval);this._subnode[index]=largerNode}this.insertContained(this._subnode[index],itemInterval,item)},isSearchMatch:function(interval){return!0},insertContained:function(tree,itemInterval,item){Assert.isTrue(tree.getInterval().contains(itemInterval));(IntervalSize.isZeroWidth(itemInterval.getMin(),itemInterval.getMax())?tree.find(itemInterval):tree.getNode(itemInterval)).add(item)},interfaces_:function(){return[]},getClass:function(){return Root}}),Root.origin=0,extend(Bintree.prototype,{size:function(){return null!==this._root?this._root.size():0},insert:function(itemInterval,item){this.collectStats(itemInterval);var insertInterval=Bintree.ensureExtent(itemInterval,this._minExtent);this._root.insert(insertInterval,item)},query:function(){if(1===arguments.length){if("number"==typeof arguments[0]){var x=arguments[0];return this.query(new Interval(x,x))}if(arguments[0]instanceof Interval){var interval=arguments[0],foundItems=new ArrayList;return this.query(interval,foundItems),foundItems}}else if(2===arguments.length){var interval=arguments[0],foundItems=arguments[1];this._root.addAllItemsFromOverlapping(interval,foundItems)}},iterator:function(){var foundItems=new ArrayList;return this._root.addAllItems(foundItems),foundItems.iterator()},remove:function(itemInterval,item){var insertInterval=Bintree.ensureExtent(itemInterval,this._minExtent);return this._root.remove(insertInterval,item)},collectStats:function(interval){var del=interval.getWidth();del<this._minExtent&&del>0&&(this._minExtent=del)},depth:function(){return null!==this._root?this._root.depth():0},nodeSize:function(){return null!==this._root?this._root.nodeSize():0},interfaces_:function(){return[]},getClass:function(){return Bintree}}),Bintree.ensureExtent=function(itemInterval,minExtent){var min=itemInterval.getMin(),max=itemInterval.getMax();return min!==max?itemInterval:(min===max&&(max=(min-=minExtent/2)+minExtent/2),new Interval(min,max))},extend(PointInRing.prototype,{isInside:function(pt){},interfaces_:function(){return[]},getClass:function(){return PointInRing}}),extend(MCPointInRing.prototype,{testLineSegment:function(p,seg){var x1=null,y1=null,x2=null,y2=null,p1=seg.p0,p2=seg.p1;x1=p1.x-p.x,y1=p1.y-p.y,x2=p2.x-p.x,y2=p2.y-p.y,(y1>0&&y2<=0||y2>0&&y1<=0)&&0<RobustDeterminant.signOfDet2x2(x1,y1,x2,y2)/(y2-y1)&&this._crossings++},buildIndex:function(){this._tree=new Bintree;for(var pts=CoordinateArrays.removeRepeatedPoints(this._ring.getCoordinates()),mcList=MonotoneChainBuilder.getChains(pts),i=0;i<mcList.size();i++){var mc=mcList.get(i),mcEnv=mc.getEnvelope();this._interval.min=mcEnv.getMinY(),this._interval.max=mcEnv.getMaxY(),this._tree.insert(this._interval,mc)}},testMonotoneChain:function(rayEnv,mcSelecter,mc){mc.select(rayEnv,mcSelecter)},isInside:function(pt){this._crossings=0;var rayEnv=new Envelope(Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY,pt.y,pt.y);this._interval.min=pt.y,this._interval.max=pt.y;for(var segs=this._tree.query(this._interval),mcSelecter=new MCSelecter(this,pt),i=segs.iterator();i.hasNext();){var mc=i.next();this.testMonotoneChain(rayEnv,mcSelecter,mc)}return this._crossings%2==1},interfaces_:function(){return[PointInRing]},getClass:function(){return MCPointInRing}}),inherits$1(MCSelecter,MonotoneChainSelectAction),extend(MCSelecter.prototype,{select:function(){if(1!==arguments.length)return MonotoneChainSelectAction.prototype.select.apply(this,arguments);var ls=arguments[0];this.mcp.testLineSegment(this.p,ls)},interfaces_:function(){return[]},getClass:function(){return MCSelecter}}),MCPointInRing.MCSelecter=MCSelecter,extend(Angle.prototype,{interfaces_:function(){return[]},getClass:function(){return Angle}}),Angle.toDegrees=function(radians){return 180*radians/Math.PI},Angle.normalize=function(angle){for(;angle>Math.PI;)angle-=Angle.PI_TIMES_2;for(;angle<=-Math.PI;)angle+=Angle.PI_TIMES_2;return angle},Angle.angle=function(){if(1===arguments.length){var p=arguments[0];return Math.atan2(p.y,p.x)}if(2===arguments.length){var p0=arguments[0],p1=arguments[1],dx=p1.x-p0.x,dy=p1.y-p0.y;return Math.atan2(dy,dx)}},Angle.isAcute=function(p0,p1,p2){var dx0=p0.x-p1.x,dy0=p0.y-p1.y;return dx0*(p2.x-p1.x)+dy0*(p2.y-p1.y)>0},Angle.isObtuse=function(p0,p1,p2){var dx0=p0.x-p1.x,dy0=p0.y-p1.y;return dx0*(p2.x-p1.x)+dy0*(p2.y-p1.y)<0},Angle.interiorAngle=function(p0,p1,p2){var anglePrev=Angle.angle(p1,p0),angleNext=Angle.angle(p1,p2);return Math.abs(angleNext-anglePrev)},Angle.normalizePositive=function(angle){if(angle<0){for(;angle<0;)angle+=Angle.PI_TIMES_2;angle>=Angle.PI_TIMES_2&&(angle=0)}else{for(;angle>=Angle.PI_TIMES_2;)angle-=Angle.PI_TIMES_2;angle<0&&(angle=0)}return angle},Angle.angleBetween=function(tip1,tail,tip2){var a1=Angle.angle(tail,tip1),a2=Angle.angle(tail,tip2);return Angle.diff(a1,a2)},Angle.diff=function(ang1,ang2){var delAngle=null;return(delAngle=ang1<ang2?ang2-ang1:ang1-ang2)>Math.PI&&(delAngle=2*Math.PI-delAngle),delAngle},Angle.toRadians=function(angleDegrees){return angleDegrees*Math.PI/180},Angle.getTurn=function(ang1,ang2){var crossproduct=Math.sin(ang2-ang1);return crossproduct>0?Angle.COUNTERCLOCKWISE:crossproduct<0?Angle.CLOCKWISE:Angle.NONE},Angle.angleBetweenOriented=function(tip1,tail,tip2){var a1=Angle.angle(tail,tip1),angDel=Angle.angle(tail,tip2)-a1;return angDel<=-Math.PI?angDel+Angle.PI_TIMES_2:angDel>Math.PI?angDel-Angle.PI_TIMES_2:angDel},Angle.PI_TIMES_2=2*Math.PI,Angle.PI_OVER_2=Math.PI/2,Angle.PI_OVER_4=Math.PI/4,Angle.COUNTERCLOCKWISE=CGAlgorithms.COUNTERCLOCKWISE,Angle.CLOCKWISE=CGAlgorithms.CLOCKWISE,Angle.NONE=CGAlgorithms.COLLINEAR,extend(Triangle$1.prototype,{area:function(){return Triangle$1.area(this.p0,this.p1,this.p2)},signedArea:function(){return Triangle$1.signedArea(this.p0,this.p1,this.p2)},interpolateZ:function(p){if(null===p)throw new IllegalArgumentException("Supplied point is null.");return Triangle$1.interpolateZ(p,this.p0,this.p1,this.p2)},longestSideLength:function(){return Triangle$1.longestSideLength(this.p0,this.p1,this.p2)},isAcute:function(){return Triangle$1.isAcute(this.p0,this.p1,this.p2)},circumcentre:function(){return Triangle$1.circumcentre(this.p0,this.p1,this.p2)},area3D:function(){return Triangle$1.area3D(this.p0,this.p1,this.p2)},centroid:function(){return Triangle$1.centroid(this.p0,this.p1,this.p2)},inCentre:function(){return Triangle$1.inCentre(this.p0,this.p1,this.p2)},interfaces_:function(){return[]},getClass:function(){return Triangle$1}}),Triangle$1.area=function(a,b,c){return Math.abs(((c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y))/2)},Triangle$1.signedArea=function(a,b,c){return((c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y))/2},Triangle$1.det=function(m00,m01,m10,m11){return m00*m11-m01*m10},Triangle$1.interpolateZ=function(p,v0,v1,v2){var x0=v0.x,y0=v0.y,a=v1.x-x0,b=v2.x-x0,c=v1.y-y0,d=v2.y-y0,det=a*d-b*c,dx=p.x-x0,dy=p.y-y0,t=(d*dx-b*dy)/det,u=(-c*dx+a*dy)/det;return v0.z+t*(v1.z-v0.z)+u*(v2.z-v0.z)},Triangle$1.longestSideLength=function(a,b,c){var lenAB=a.distance(b),lenBC=b.distance(c),lenCA=c.distance(a),maxLen=lenAB;return lenBC>maxLen&&(maxLen=lenBC),lenCA>maxLen&&(maxLen=lenCA),maxLen},Triangle$1.isAcute=function(a,b,c){return!!Angle.isAcute(a,b,c)&&(!!Angle.isAcute(b,c,a)&&!!Angle.isAcute(c,a,b))},Triangle$1.circumcentre=function(a,b,c){var cx=c.x,cy=c.y,ax=a.x-cx,ay=a.y-cy,bx=b.x-cx,by=b.y-cy,denom=2*Triangle$1.det(ax,ay,bx,by);return new Coordinate(cx-Triangle$1.det(ay,ax*ax+ay*ay,by,bx*bx+by*by)/denom,cy+Triangle$1.det(ax,ax*ax+ay*ay,bx,bx*bx+by*by)/denom)},Triangle$1.perpendicularBisector=function(a,b){var dx=b.x-a.x,dy=b.y-a.y;return new HCoordinate(new HCoordinate(a.x+dx/2,a.y+dy/2,1),new HCoordinate(a.x-dy+dx/2,a.y+dx+dy/2,1))},Triangle$1.angleBisector=function(a,b,c){var len0=b.distance(a),frac=len0/(len0+b.distance(c)),dx=c.x-a.x,dy=c.y-a.y;return new Coordinate(a.x+frac*dx,a.y+frac*dy)},Triangle$1.area3D=function(a,b,c){var ux=b.x-a.x,uy=b.y-a.y,uz=b.z-a.z,vx=c.x-a.x,vy=c.y-a.y,vz=c.z-a.z,crossx=uy*vz-uz*vy,crossy=uz*vx-ux*vz,crossz=ux*vy-uy*vx,absSq=crossx*crossx+crossy*crossy+crossz*crossz;return Math.sqrt(absSq)/2},Triangle$1.centroid=function(a,b,c){return new Coordinate((a.x+b.x+c.x)/3,(a.y+b.y+c.y)/3)},Triangle$1.inCentre=function(a,b,c){var len0=b.distance(c),len1=a.distance(c),len2=a.distance(b),circum=len0+len1+len2;return new Coordinate((len0*a.x+len1*b.x+len2*c.x)/circum,(len0*a.y+len1*b.y+len2*c.y)/circum)},extend(MinimumBoundingCircle.prototype,{getRadius:function(){return this.compute(),this._radius},getDiameter:function(){switch(this.compute(),this._extremalPts.length){case 0:return this._input.getFactory().createLineString();case 1:return this._input.getFactory().createPoint(this._centre)}var p0=this._extremalPts[0],p1=this._extremalPts[1];return this._input.getFactory().createLineString([p0,p1])},getExtremalPoints:function(){return this.compute(),this._extremalPts},computeCirclePoints:function(){if(this._input.isEmpty())return this._extremalPts=new Array(0).fill(null),null;if(1===this._input.getNumPoints()){pts=this._input.getCoordinates();return this._extremalPts=[new Coordinate(pts[0])],null}var hullPts=this._input.convexHull().getCoordinates(),pts=hullPts;if(hullPts[0].equals2D(hullPts[hullPts.length-1])&&(pts=new Array(hullPts.length-1).fill(null),CoordinateArrays.copyDeep(hullPts,0,pts,0,hullPts.length-1)),pts.length<=2)return this._extremalPts=CoordinateArrays.copyDeep(pts),null;for(var P=MinimumBoundingCircle.lowestPoint(pts),Q=MinimumBoundingCircle.pointWitMinAngleWithX(pts,P),i=0;i<pts.length;i++){var R=MinimumBoundingCircle.pointWithMinAngleWithSegment(pts,P,Q);if(Angle.isObtuse(P,R,Q))return this._extremalPts=[new Coordinate(P),new Coordinate(Q)],null;if(Angle.isObtuse(R,P,Q))P=R;else{if(!Angle.isObtuse(R,Q,P))return this._extremalPts=[new Coordinate(P),new Coordinate(Q),new Coordinate(R)],null;Q=R}}Assert.shouldNeverReachHere("Logic failure in Minimum Bounding Circle algorithm!")},compute:function(){if(null!==this._extremalPts)return null;this.computeCirclePoints(),this.computeCentre(),null!==this._centre&&(this._radius=this._centre.distance(this._extremalPts[0]))},getFarthestPoints:function(){switch(this.compute(),this._extremalPts.length){case 0:return this._input.getFactory().createLineString();case 1:return this._input.getFactory().createPoint(this._centre)}var p0=this._extremalPts[0],p1=this._extremalPts[this._extremalPts.length-1];return this._input.getFactory().createLineString([p0,p1])},getCircle:function(){if(this.compute(),null===this._centre)return this._input.getFactory().createPolygon();var centrePoint=this._input.getFactory().createPoint(this._centre);return 0===this._radius?centrePoint:centrePoint.buffer(this._radius)},getCentre:function(){return this.compute(),this._centre},computeCentre:function(){switch(this._extremalPts.length){case 0:this._centre=null;break;case 1:this._centre=this._extremalPts[0];break;case 2:this._centre=new Coordinate((this._extremalPts[0].x+this._extremalPts[1].x)/2,(this._extremalPts[0].y+this._extremalPts[1].y)/2);break;case 3:this._centre=Triangle$1.circumcentre(this._extremalPts[0],this._extremalPts[1],this._extremalPts[2])}},interfaces_:function(){return[]},getClass:function(){return MinimumBoundingCircle}}),MinimumBoundingCircle.pointWitMinAngleWithX=function(pts,P){for(var minSin=Double.MAX_VALUE,minAngPt=null,i=0;i<pts.length;i++){var p=pts[i];if(p!==P){var dx=p.x-P.x,dy=p.y-P.y;dy<0&&(dy=-dy);var sin=dy/Math.sqrt(dx*dx+dy*dy);sin<minSin&&(minSin=sin,minAngPt=p)}}return minAngPt},MinimumBoundingCircle.lowestPoint=function(pts){for(var min=pts[0],i=1;i<pts.length;i++)pts[i].y<min.y&&(min=pts[i]);return min},MinimumBoundingCircle.pointWithMinAngleWithSegment=function(pts,P,Q){for(var minAng=Double.MAX_VALUE,minAngPt=null,i=0;i<pts.length;i++){var p=pts[i];if(p!==P&&p!==Q){var ang=Angle.angleBetween(P,p,Q);ang<minAng&&(minAng=ang,minAngPt=p)}}return minAngPt},extend(MinimumDiameter.prototype,{getWidthCoordinate:function(){return this.computeMinimumDiameter(),this._minWidthPt},getSupportingSegment:function(){return this.computeMinimumDiameter(),this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0,this._minBaseSeg.p1])},getDiameter:function(){if(this.computeMinimumDiameter(),null===this._minWidthPt)return this._inputGeom.getFactory().createLineString(null);var basePt=this._minBaseSeg.project(this._minWidthPt);return this._inputGeom.getFactory().createLineString([basePt,this._minWidthPt])},computeWidthConvex:function(convexGeom){this._convexHullPts=convexGeom instanceof Polygon?convexGeom.getExteriorRing().getCoordinates():convexGeom.getCoordinates(),0===this._convexHullPts.length?(this._minWidth=0,this._minWidthPt=null,this._minBaseSeg=null):1===this._convexHullPts.length?(this._minWidth=0,this._minWidthPt=this._convexHullPts[0],this._minBaseSeg.p0=this._convexHullPts[0],this._minBaseSeg.p1=this._convexHullPts[0]):2===this._convexHullPts.length||3===this._convexHullPts.length?(this._minWidth=0,this._minWidthPt=this._convexHullPts[0],this._minBaseSeg.p0=this._convexHullPts[0],this._minBaseSeg.p1=this._convexHullPts[1]):this.computeConvexRingMinDiameter(this._convexHullPts)},computeConvexRingMinDiameter:function(pts){this._minWidth=Double.MAX_VALUE;for(var currMaxIndex=1,seg=new LineSegment,i=0;i<pts.length-1;i++)seg.p0=pts[i],seg.p1=pts[i+1],currMaxIndex=this.findMaxPerpDistance(pts,seg,currMaxIndex)},computeMinimumDiameter:function(){if(null!==this._minWidthPt)return null;if(this._isConvex)this.computeWidthConvex(this._inputGeom);else{var convexGeom=new ConvexHull(this._inputGeom).getConvexHull();this.computeWidthConvex(convexGeom)}},getLength:function(){return this.computeMinimumDiameter(),this._minWidth},findMaxPerpDistance:function(pts,seg,startIndex){for(var maxPerpDistance=seg.distancePerpendicular(pts[startIndex]),nextPerpDistance=maxPerpDistance,maxIndex=startIndex,nextIndex=maxIndex;nextPerpDistance>=maxPerpDistance;)maxPerpDistance=nextPerpDistance,nextIndex=MinimumDiameter.nextIndex(pts,maxIndex=nextIndex),nextPerpDistance=seg.distancePerpendicular(pts[nextIndex]);return maxPerpDistance<this._minWidth&&(this._minPtIndex=maxIndex,this._minWidth=maxPerpDistance,this._minWidthPt=pts[this._minPtIndex],this._minBaseSeg=new LineSegment(seg)),maxIndex},getMinimumRectangle:function(){if(this.computeMinimumDiameter(),0===this._minWidth)return this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)?this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0):this._minBaseSeg.toGeometry(this._inputGeom.getFactory());for(var dx=this._minBaseSeg.p1.x-this._minBaseSeg.p0.x,dy=this._minBaseSeg.p1.y-this._minBaseSeg.p0.y,minPara=Double.MAX_VALUE,maxPara=-Double.MAX_VALUE,minPerp=Double.MAX_VALUE,maxPerp=-Double.MAX_VALUE,i=0;i<this._convexHullPts.length;i++){var paraC=MinimumDiameter.computeC(dx,dy,this._convexHullPts[i]);paraC>maxPara&&(maxPara=paraC),paraC<minPara&&(minPara=paraC);var perpC=MinimumDiameter.computeC(-dy,dx,this._convexHullPts[i]);perpC>maxPerp&&(maxPerp=perpC),perpC<minPerp&&(minPerp=perpC)}var maxPerpLine=MinimumDiameter.computeSegmentForLine(-dx,-dy,maxPerp),minPerpLine=MinimumDiameter.computeSegmentForLine(-dx,-dy,minPerp),maxParaLine=MinimumDiameter.computeSegmentForLine(-dy,dx,maxPara),minParaLine=MinimumDiameter.computeSegmentForLine(-dy,dx,minPara),p0=maxParaLine.lineIntersection(maxPerpLine),p1=minParaLine.lineIntersection(maxPerpLine),p2=minParaLine.lineIntersection(minPerpLine),p3=maxParaLine.lineIntersection(minPerpLine),shell=this._inputGeom.getFactory().createLinearRing([p0,p1,p2,p3,p0]);return this._inputGeom.getFactory().createPolygon(shell,null)},interfaces_:function(){return[]},getClass:function(){return MinimumDiameter}}),MinimumDiameter.nextIndex=function(pts,index){return++index>=pts.length&&(index=0),index},MinimumDiameter.computeC=function(a,b,p){return a*p.y-b*p.x},MinimumDiameter.getMinimumDiameter=function(geom){return new MinimumDiameter(geom).getDiameter()},MinimumDiameter.getMinimumRectangle=function(geom){return new MinimumDiameter(geom).getMinimumRectangle()},MinimumDiameter.computeSegmentForLine=function(a,b,c){var p0=null,p1=null;return Math.abs(b)>Math.abs(a)?(p0=new Coordinate(0,c/b),p1=new Coordinate(1,c/b-a/b)):(p0=new Coordinate(c/a,0),p1=new Coordinate(c/a-b/a,1)),new LineSegment(p0,p1)},extend(Densifier.prototype,{getResultGeometry:function(){return new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom)},setDistanceTolerance:function(distanceTolerance){if(distanceTolerance<=0)throw new IllegalArgumentException("Tolerance must be positive");this._distanceTolerance=distanceTolerance},interfaces_:function(){return[]},getClass:function(){return Densifier}}),Densifier.densifyPoints=function(pts,distanceTolerance,precModel){for(var seg=new LineSegment,coordList=new CoordinateList,i=0;i<pts.length-1;i++){seg.p0=pts[i],seg.p1=pts[i+1],coordList.add(seg.p0,!1);var len=seg.getLength(),densifiedSegCount=Math.trunc(len/distanceTolerance)+1;if(densifiedSegCount>1)for(var densifiedSegLen=len/densifiedSegCount,j=1;j<densifiedSegCount;j++){var segFract=j*densifiedSegLen/len,p=seg.pointAlong(segFract);precModel.makePrecise(p),coordList.add(p,!1)}}return coordList.add(pts[pts.length-1],!1),coordList.toCoordinateArray()},Densifier.densify=function(geom,distanceTolerance){var densifier=new Densifier(geom);return densifier.setDistanceTolerance(distanceTolerance),densifier.getResultGeometry()},inherits$1(DensifyTransformer,GeometryTransformer),extend(DensifyTransformer.prototype,{transformMultiPolygon:function(geom,parent){var roughGeom=GeometryTransformer.prototype.transformMultiPolygon.call(this,geom,parent);return this.createValidArea(roughGeom)},transformPolygon:function(geom,parent){var roughGeom=GeometryTransformer.prototype.transformPolygon.call(this,geom,parent);return parent instanceof MultiPolygon?roughGeom:this.createValidArea(roughGeom)},transformCoordinates:function(coords,parent){var inputPts=coords.toCoordinateArray(),newPts=Densifier.densifyPoints(inputPts,this.distanceTolerance,parent.getPrecisionModel());return parent instanceof LineString&&1===newPts.length&&(newPts=new Array(0).fill(null)),this._factory.getCoordinateSequenceFactory().create(newPts)},createValidArea:function(roughAreaGeom){return roughAreaGeom.buffer(0)},interfaces_:function(){return[]},getClass:function(){return DensifyTransformer}}),Densifier.DensifyTransformer=DensifyTransformer,extend(HalfEdge.prototype,{find:function(dest){var oNext=this;do{if(null===oNext)return null;if(oNext.dest().equals2D(dest))return oNext;oNext=oNext.oNext()}while(oNext!==this);return null},dest:function(){return this._sym._orig},oNext:function(){return this._sym._next},insert:function(e){if(this.oNext()===this)return this.insertAfter(e),null;var ecmp=this.compareTo(e),ePrev=this;do{var oNext=ePrev.oNext();if(oNext.compareTo(e)!==ecmp||oNext===this)return ePrev.insertAfter(e),null;ePrev=oNext}while(ePrev!==this);Assert.shouldNeverReachHere()},insertAfter:function(e){Assert.equals(this._orig,e.orig());var save=this.oNext();this._sym.setNext(e),e.sym().setNext(save)},degree:function(){var degree=0,e=this;do{degree++,e=e.oNext()}while(e!==this);return degree},equals:function(){if(2===arguments.length){var p0=arguments[0],p1=arguments[1];return this._orig.equals2D(p0)&&this._sym._orig.equals(p1)}},deltaY:function(){return this._sym._orig.y-this._orig.y},sym:function(){return this._sym},prev:function(){return this._sym.next()._sym},compareAngularDirection:function(e){var dx=this.deltaX(),dy=this.deltaY(),dx2=e.deltaX(),dy2=e.deltaY();if(dx===dx2&&dy===dy2)return 0;var quadrant=Quadrant.quadrant(dx,dy),quadrant2=Quadrant.quadrant(dx2,dy2);return quadrant>quadrant2?1:quadrant<quadrant2?-1:CGAlgorithms.computeOrientation(e._orig,e.dest(),this.dest())},prevNode:function(){for(var e=this;2===e.degree();)if((e=e.prev())===this)return null;return e},compareTo:function(obj){var e=obj;return this.compareAngularDirection(e)},next:function(){return this._next},setSym:function(e){this._sym=e},orig:function(){return this._orig},toString:function(){return"HE("+this._orig.x+" "+this._orig.y+", "+this._sym._orig.x+" "+this._sym._orig.y+")"},setNext:function(e){this._next=e},init:function(e){this.setSym(e),e.setSym(this),this.setNext(e),e.setNext(this)},deltaX:function(){return this._sym._orig.x-this._orig.x},interfaces_:function(){return[]},getClass:function(){return HalfEdge}}),HalfEdge.init=function(e0,e1){if(null!==e0._sym||null!==e1._sym||null!==e0._next||null!==e1._next)throw new IllegalStateException("Edges are already initialized");return e0.init(e1),e0},HalfEdge.create=function(p0,p1){var e0=new HalfEdge(p0),e1=new HalfEdge(p1);return e0.init(e1),e0},inherits$1(MarkHalfEdge,HalfEdge),extend(MarkHalfEdge.prototype,{mark:function(){this._isMarked=!0},setMark:function(isMarked){this._isMarked=isMarked},isMarked:function(){return this._isMarked},interfaces_:function(){return[]},getClass:function(){return MarkHalfEdge}}),MarkHalfEdge.setMarkBoth=function(e,isMarked){e.setMark(isMarked),e.sym().setMark(isMarked)},MarkHalfEdge.isMarked=function(e){return e.isMarked()},MarkHalfEdge.setMark=function(e,isMarked){e.setMark(isMarked)},MarkHalfEdge.markBoth=function(e){e.mark(),e.sym().mark()},MarkHalfEdge.mark=function(e){e.mark()},extend(EdgeGraph.prototype,{insert:function(orig,dest,eAdj){var e=this.create(orig,dest);null!==eAdj?eAdj.insert(e):this._vertexMap.put(orig,e);var eAdjDest=this._vertexMap.get(dest);return null!==eAdjDest?eAdjDest.insert(e.sym()):this._vertexMap.put(dest,e.sym()),e},create:function(p0,p1){var e0=this.createEdge(p0),e1=this.createEdge(p1);return HalfEdge.init(e0,e1),e0},createEdge:function(orig){return new HalfEdge(orig)},addEdge:function(orig,dest){if(!EdgeGraph.isValidEdge(orig,dest))return null;var eAdj=this._vertexMap.get(orig),eSame=null;if(null!==eAdj&&(eSame=eAdj.find(dest)),null!==eSame)return eSame;return this.insert(orig,dest,eAdj)},getVertexEdges:function(){return this._vertexMap.values()},findEdge:function(orig,dest){var e=this._vertexMap.get(orig);return null===e?null:e.find(dest)},interfaces_:function(){return[]},getClass:function(){return EdgeGraph}}),EdgeGraph.isValidEdge=function(orig,dest){return 0!==dest.compareTo(orig)},inherits$1(DissolveHalfEdge,MarkHalfEdge),extend(DissolveHalfEdge.prototype,{setStart:function(){this._isStart=!0},isStart:function(){return this._isStart},interfaces_:function(){return[]},getClass:function(){return DissolveHalfEdge}}),inherits$1(DissolveEdgeGraph,EdgeGraph),extend(DissolveEdgeGraph.prototype,{createEdge:function(p0){return new DissolveHalfEdge(p0)},interfaces_:function(){return[]},getClass:function(){return DissolveEdgeGraph}}),extend(LineDissolver.prototype,{addLine:function(line){this._lines.add(this._factory.createLineString(line.toCoordinateArray()))},updateRingStartEdge:function(e){return e.isStart()||(e=e.sym()).isStart()?null===this._ringStartEdge?(this._ringStartEdge=e,null):void(e.orig().compareTo(this._ringStartEdge.orig())<0&&(this._ringStartEdge=e)):null},getResult:function(){return null===this._result&&this.computeResult(),this._result},process:function(e){var eNode=e.prevNode();null===eNode&&(eNode=e),this.stackEdges(eNode),this.buildLines()},buildRing:function(eStartRing){var line=new CoordinateList,e=eStartRing;for(line.add(e.orig().copy(),!1);2===e.sym().degree();){var eNext=e.next();if(eNext===eStartRing)break;line.add(eNext.orig().copy(),!1),e=eNext}line.add(e.dest().copy(),!1),this.addLine(line)},buildLine:function(eStart){var line=new CoordinateList,e=eStart;for(this._ringStartEdge=null,MarkHalfEdge.markBoth(e),line.add(e.orig().copy(),!1);2===e.sym().degree();){this.updateRingStartEdge(e);var eNext=e.next();if(eNext===eStart)return this.buildRing(this._ringStartEdge),null;line.add(eNext.orig().copy(),!1),MarkHalfEdge.markBoth(e=eNext)}line.add(e.dest().copy(),!1),this.stackEdges(e.sym()),this.addLine(line)},stackEdges:function(node){var e=node;do{MarkHalfEdge.isMarked(e)||this._nodeEdgeStack.add(e),e=e.oNext()}while(e!==node)},computeResult:function(){for(var i=this._graph.getVertexEdges().iterator();i.hasNext();){var e=i.next();MarkHalfEdge.isMarked(e)||this.process(e)}this._result=this._factory.buildGeometry(this._lines)},buildLines:function(){for(;!this._nodeEdgeStack.empty();){var e=this._nodeEdgeStack.pop();MarkHalfEdge.isMarked(e)||this.buildLine(e)}},add:function(){if(arguments[0]instanceof Geometry){(geometry=arguments[0]).apply({interfaces_:function(){return[GeometryComponentFilter]},filter:function(component){component instanceof LineString&&this.add(component)}})}else if(hasInterface(arguments[0],Collection))for(i=arguments[0].iterator();i.hasNext();){var geometry=i.next();this.add(geometry)}else if(arguments[0]instanceof LineString){var lineString=arguments[0];null===this._factory&&(this._factory=lineString.getFactory());for(var seq=lineString.getCoordinateSequence(),doneStart=!1,i=1;i<seq.size();i++){var e=this._graph.addEdge(seq.getCoordinate(i-1),seq.getCoordinate(i));null!==e&&(doneStart||(e.setStart(),doneStart=!0))}}},interfaces_:function(){return[]},getClass:function(){return LineDissolver}}),LineDissolver.dissolve=function(g){var d=new LineDissolver;return d.add(g),d.getResult()},extend(NodeBase$1.prototype,{hasChildren:function(){for(var i=0;i<4;i++)if(null!==this._subnode[i])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(resultItems){resultItems.addAll(this._items);for(var i=0;i<4;i++)null!==this._subnode[i]&&this._subnode[i].addAllItems(resultItems);return resultItems},getNodeCount:function(){for(var subSize=0,i=0;i<4;i++)null!==this._subnode[i]&&(subSize+=this._subnode[i].size());return subSize+1},size:function(){for(var subSize=0,i=0;i<4;i++)null!==this._subnode[i]&&(subSize+=this._subnode[i].size());return subSize+this._items.size()},addAllItemsFromOverlapping:function(searchEnv,resultItems){if(!this.isSearchMatch(searchEnv))return null;resultItems.addAll(this._items);for(var i=0;i<4;i++)null!==this._subnode[i]&&this._subnode[i].addAllItemsFromOverlapping(searchEnv,resultItems)},visitItems:function(searchEnv,visitor){for(var i=this._items.iterator();i.hasNext();)visitor.visitItem(i.next())},hasItems:function(){return!this._items.isEmpty()},remove:function(itemEnv,item){if(!this.isSearchMatch(itemEnv))return!1;for(var found=!1,i=0;i<4;i++)if(null!==this._subnode[i]&&(found=this._subnode[i].remove(itemEnv,item))){this._subnode[i].isPrunable()&&(this._subnode[i]=null);break}return found||(found=this._items.remove(item))},visit:function(searchEnv,visitor){if(!this.isSearchMatch(searchEnv))return null;this.visitItems(searchEnv,visitor);for(var i=0;i<4;i++)null!==this._subnode[i]&&this._subnode[i].visit(searchEnv,visitor)},getItems:function(){return this._items},depth:function(){for(var maxSubDepth=0,i=0;i<4;i++)if(null!==this._subnode[i]){var sqd=this._subnode[i].depth();sqd>maxSubDepth&&(maxSubDepth=sqd)}return maxSubDepth+1},isEmpty:function(){var isEmpty=!0;this._items.isEmpty()||(isEmpty=!1);for(var i=0;i<4;i++)null!==this._subnode[i]&&(this._subnode[i].isEmpty()||(isEmpty=!1));return isEmpty},add:function(item){this._items.add(item)},interfaces_:function(){return[Serializable]},getClass:function(){return NodeBase$1}}),NodeBase$1.getSubnodeIndex=function(env,centrex,centrey){var subnodeIndex=-1;return env.getMinX()>=centrex&&(env.getMinY()>=centrey&&(subnodeIndex=3),env.getMaxY()<=centrey&&(subnodeIndex=1)),env.getMaxX()<=centrex&&(env.getMinY()>=centrey&&(subnodeIndex=2),env.getMaxY()<=centrey&&(subnodeIndex=0)),subnodeIndex},extend(Key$1.prototype,{getLevel:function(){return this._level},computeKey:function(){if(1===arguments.length){itemEnv=arguments[0];for(this._level=Key$1.computeQuadLevel(itemEnv),this._env=new Envelope,this.computeKey(this._level,itemEnv);!this._env.contains(itemEnv);)this._level+=1,this.computeKey(this._level,itemEnv)}else if(2===arguments.length){var level=arguments[0],itemEnv=arguments[1],quadSize=DoubleBits.powerOf2(level);this._pt.x=Math.floor(itemEnv.getMinX()/quadSize)*quadSize,this._pt.y=Math.floor(itemEnv.getMinY()/quadSize)*quadSize,this._env.init(this._pt.x,this._pt.x+quadSize,this._pt.y,this._pt.y+quadSize)}},getEnvelope:function(){return this._env},getCentre:function(){return new Coordinate((this._env.getMinX()+this._env.getMaxX())/2,(this._env.getMinY()+this._env.getMaxY())/2)},getPoint:function(){return this._pt},interfaces_:function(){return[]},getClass:function(){return Key$1}}),Key$1.computeQuadLevel=function(env){var dx=env.getWidth(),dy=env.getHeight();return DoubleBits.exponent(dx>dy?dx:dy)+1},inherits$1(Node$2,NodeBase$1),extend(Node$2.prototype,{find:function(searchEnv){var subnodeIndex=NodeBase$1.getSubnodeIndex(searchEnv,this._centrex,this._centrey);if(-1===subnodeIndex)return this;if(null!==this._subnode[subnodeIndex]){return this._subnode[subnodeIndex].find(searchEnv)}return this},isSearchMatch:function(searchEnv){return this._env.intersects(searchEnv)},getSubnode:function(index){return null===this._subnode[index]&&(this._subnode[index]=this.createSubnode(index)),this._subnode[index]},getEnvelope:function(){return this._env},getNode:function(searchEnv){var subnodeIndex=NodeBase$1.getSubnodeIndex(searchEnv,this._centrex,this._centrey);if(-1!==subnodeIndex){return this.getSubnode(subnodeIndex).getNode(searchEnv)}return this},createSubnode:function(index){var minx=0,maxx=0,miny=0,maxy=0;switch(index){case 0:minx=this._env.getMinX(),maxx=this._centrex,miny=this._env.getMinY(),maxy=this._centrey;break;case 1:minx=this._centrex,maxx=this._env.getMaxX(),miny=this._env.getMinY(),maxy=this._centrey;break;case 2:minx=this._env.getMinX(),maxx=this._centrex,miny=this._centrey,maxy=this._env.getMaxY();break;case 3:minx=this._centrex,maxx=this._env.getMaxX(),miny=this._centrey,maxy=this._env.getMaxY()}return new Node$2(new Envelope(minx,maxx,miny,maxy),this._level-1)},insertNode:function(node){Assert.isTrue(null===this._env||this._env.contains(node._env));var index=NodeBase$1.getSubnodeIndex(node._env,this._centrex,this._centrey);if(node._level===this._level-1)this._subnode[index]=node;else{var childNode=this.createSubnode(index);childNode.insertNode(node),this._subnode[index]=childNode}},interfaces_:function(){return[]},getClass:function(){return Node$2}}),Node$2.createNode=function(env){var key=new Key$1(env);return new Node$2(key.getEnvelope(),key.getLevel())},Node$2.createExpanded=function(node,addEnv){var expandEnv=new Envelope(addEnv);null!==node&&expandEnv.expandToInclude(node._env);var largerNode=Node$2.createNode(expandEnv);return null!==node&&largerNode.insertNode(node),largerNode},inherits$1(Root$1,NodeBase$1),extend(Root$1.prototype,{insert:function(itemEnv,item){var index=NodeBase$1.getSubnodeIndex(itemEnv,Root$1.origin.x,Root$1.origin.y);if(-1===index)return this.add(item),null;var node=this._subnode[index];if(null===node||!node.getEnvelope().contains(itemEnv)){var largerNode=Node$2.createExpanded(node,itemEnv);this._subnode[index]=largerNode}this.insertContained(this._subnode[index],itemEnv,item)},isSearchMatch:function(searchEnv){return!0},insertContained:function(tree,itemEnv,item){Assert.isTrue(tree.getEnvelope().contains(itemEnv));var isZeroX=IntervalSize.isZeroWidth(itemEnv.getMinX(),itemEnv.getMaxX()),isZeroY=IntervalSize.isZeroWidth(itemEnv.getMinY(),itemEnv.getMaxY());(isZeroX||isZeroY?tree.find(itemEnv):tree.getNode(itemEnv)).add(item)},interfaces_:function(){return[]},getClass:function(){return Root$1}}),Root$1.origin=new Coordinate(0,0),extend(Quadtree.prototype,{size:function(){return null!==this._root?this._root.size():0},insert:function(itemEnv,item){this.collectStats(itemEnv);var insertEnv=Quadtree.ensureExtent(itemEnv,this._minExtent);this._root.insert(insertEnv,item)},query:function(){if(1===arguments.length){var searchEnv=arguments[0],visitor=new ArrayListVisitor;return this.query(searchEnv,visitor),visitor.getItems()}if(2===arguments.length){var searchEnv=arguments[0],visitor=arguments[1];this._root.visit(searchEnv,visitor)}},queryAll:function(){var foundItems=new ArrayList;return this._root.addAllItems(foundItems),foundItems},remove:function(itemEnv,item){var posEnv=Quadtree.ensureExtent(itemEnv,this._minExtent);return this._root.remove(posEnv,item)},collectStats:function(itemEnv){var delX=itemEnv.getWidth();delX<this._minExtent&&delX>0&&(this._minExtent=delX);var delY=itemEnv.getHeight();delY<this._minExtent&&delY>0&&(this._minExtent=delY)},depth:function(){return null!==this._root?this._root.depth():0},isEmpty:function(){return null===this._root},interfaces_:function(){return[SpatialIndex,Serializable]},getClass:function(){return Quadtree}}),Quadtree.ensureExtent=function(itemEnv,minExtent){var minx=itemEnv.getMinX(),maxx=itemEnv.getMaxX(),miny=itemEnv.getMinY(),maxy=itemEnv.getMaxY();return minx!==maxx&&miny!==maxy?itemEnv:(minx===maxx&&(maxx=(minx-=minExtent/2)+minExtent/2),miny===maxy&&(maxy=(miny-=minExtent/2)+minExtent/2),new Envelope(minx,maxx,miny,maxy))},Quadtree.serialVersionUID=-0x678b60c967a25400;var geometryTypes=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"];extend(GeoJSONParser.prototype,{read:function(json){var obj,type=(obj="string"==typeof json?JSON.parse(json):json).type;if(!parse$1[type])throw new Error("Unknown GeoJSON type: "+obj.type);return-1!==geometryTypes.indexOf(type)?parse$1[type].apply(this,[obj.coordinates]):"GeometryCollection"===type?parse$1[type].apply(this,[obj.geometries]):parse$1[type].apply(this,[obj])},write:function(geometry){var type=geometry.getGeometryType();if(!extract$2[type])throw new Error("Geometry is not supported");return extract$2[type].apply(this,[geometry])}});var parse$1={Feature:function(obj){var feature={};for(var key in obj)feature[key]=obj[key];if(obj.geometry){var type=obj.geometry.type;if(!parse$1[type])throw new Error("Unknown GeoJSON type: "+obj.type);feature.geometry=this.read(obj.geometry)}return obj.bbox&&(feature.bbox=parse$1.bbox.apply(this,[obj.bbox])),feature},FeatureCollection:function(obj){var featureCollection={};if(obj.features){featureCollection.features=[];for(var i=0;i<obj.features.length;++i)featureCollection.features.push(this.read(obj.features[i]))}return obj.bbox&&(featureCollection.bbox=this.parse.bbox.apply(this,[obj.bbox])),featureCollection},coordinates:function(array){for(var coordinates=[],i=0;i<array.length;++i){var sub=array[i];coordinates.push(new Coordinate(sub[0],sub[1]))}return coordinates},bbox:function(array){return this.geometryFactory.createLinearRing([new Coordinate(array[0],array[1]),new Coordinate(array[2],array[1]),new Coordinate(array[2],array[3]),new Coordinate(array[0],array[3]),new Coordinate(array[0],array[1])])},Point:function(array){var coordinate=new Coordinate(array[0],array[1]);return this.geometryFactory.createPoint(coordinate)},MultiPoint:function(array){for(var points=[],i=0;i<array.length;++i)points.push(parse$1.Point.apply(this,[array[i]]));return this.geometryFactory.createMultiPoint(points)},LineString:function(array){var coordinates=parse$1.coordinates.apply(this,[array]);return this.geometryFactory.createLineString(coordinates)},MultiLineString:function(array){for(var lineStrings=[],i=0;i<array.length;++i)lineStrings.push(parse$1.LineString.apply(this,[array[i]]));return this.geometryFactory.createMultiLineString(lineStrings)},Polygon:function(array){for(var shellCoordinates=parse$1.coordinates.apply(this,[array[0]]),shell=this.geometryFactory.createLinearRing(shellCoordinates),holes=[],i=1;i<array.length;++i){var hole=array[i],coordinates=parse$1.coordinates.apply(this,[hole]),linearRing=this.geometryFactory.createLinearRing(coordinates);holes.push(linearRing)}return this.geometryFactory.createPolygon(shell,holes)},MultiPolygon:function(array){for(var polygons=[],i=0;i<array.length;++i){var polygon=array[i];polygons.push(parse$1.Polygon.apply(this,[polygon]))}return this.geometryFactory.createMultiPolygon(polygons)},GeometryCollection:function(array){for(var geometries=[],i=0;i<array.length;++i){var geometry=array[i];geometries.push(this.read(geometry))}return this.geometryFactory.createGeometryCollection(geometries)}},extract$2={coordinate:function(_coordinate){return[_coordinate.x,_coordinate.y]},Point:function(point){return{type:"Point",coordinates:extract$2.coordinate.apply(this,[point.getCoordinate()])}},MultiPoint:function(multipoint){for(var array=[],i=0;i<multipoint._geometries.length;++i){var point=multipoint._geometries[i],geoJson=extract$2.Point.apply(this,[point]);array.push(geoJson.coordinates)}return{type:"MultiPoint",coordinates:array}},LineString:function(linestring){for(var array=[],coordinates=linestring.getCoordinates(),i=0;i<coordinates.length;++i){var coordinate=coordinates[i];array.push(extract$2.coordinate.apply(this,[coordinate]))}return{type:"LineString",coordinates:array}},MultiLineString:function(multilinestring){for(var array=[],i=0;i<multilinestring._geometries.length;++i){var linestring=multilinestring._geometries[i],geoJson=extract$2.LineString.apply(this,[linestring]);array.push(geoJson.coordinates)}return{type:"MultiLineString",coordinates:array}},Polygon:function(polygon){var array=[],shellGeoJson=extract$2.LineString.apply(this,[polygon._shell]);array.push(shellGeoJson.coordinates);for(var i=0;i<polygon._holes.length;++i){var hole=polygon._holes[i],holeGeoJson=extract$2.LineString.apply(this,[hole]);array.push(holeGeoJson.coordinates)}return{type:"Polygon",coordinates:array}},MultiPolygon:function(multipolygon){for(var array=[],i=0;i<multipolygon._geometries.length;++i){var polygon=multipolygon._geometries[i],geoJson=extract$2.Polygon.apply(this,[polygon]);array.push(geoJson.coordinates)}return{type:"MultiPolygon",coordinates:array}},GeometryCollection:function(collection){for(var array=[],i=0;i<collection._geometries.length;++i){var geometry=collection._geometries[i],type=geometry.getGeometryType();array.push(extract$2[type].apply(this,[geometry]))}return{type:"GeometryCollection",geometries:array}}};extend(GeoJSONReader.prototype,{read:function(geoJson){var geometry=this.parser.read(geoJson);return this.precisionModel.getType()===PrecisionModel.FIXED&&this.reducePrecision(geometry),geometry},reducePrecision:function(geometry){var i,len;if(geometry.coordinate)this.precisionModel.makePrecise(geometry.coordinate);else if(geometry.points)for(i=0,len=geometry.points.length;i<len;i++)this.precisionModel.makePrecise(geometry.points[i]);else if(geometry.geometries)for(i=0,len=geometry.geometries.length;i<len;i++)this.reducePrecision(geometry.geometries[i])}}),extend(GeoJSONWriter.prototype,{write:function(geometry){return this.parser.write(geometry)}}),extend(function(geometryFactory){this.geometryFactory=geometryFactory||new GeometryFactory,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new WKTParser(this.geometryFactory)}.prototype,{read:function(wkt){var geometry=this.parser.read(wkt);return this.precisionModel.getType()===PrecisionModel.FIXED&&this.reducePrecision(geometry),geometry},reducePrecision:function(geometry){if(geometry.coordinate)this.precisionModel.makePrecise(geometry.coordinate);else if(geometry._points)for(var i=0,len=geometry._points._coordinates.length;i<len;i++)this.precisionModel.makePrecise(geometry._points._coordinates[i]);else if(geometry._geometries)for(var i=0,len=geometry._geometries.length;i<len;i++)this.reducePrecision(geometry._geometries[i])}}),extend(function(geometryFactory,olReference){this.geometryFactory=geometryFactory||new GeometryFactory,this.ol=olReference||"undefined"!=typeof ol&&ol}.prototype,{read:function(geometry){var ol=this.ol;return geometry instanceof ol.geom.Point?this.convertFromPoint(geometry):geometry instanceof ol.geom.LineString?this.convertFromLineString(geometry):geometry instanceof ol.geom.LinearRing?this.convertFromLinearRing(geometry):geometry instanceof ol.geom.Polygon?this.convertFromPolygon(geometry):geometry instanceof ol.geom.MultiPoint?this.convertFromMultiPoint(geometry):geometry instanceof ol.geom.MultiLineString?this.convertFromMultiLineString(geometry):geometry instanceof ol.geom.MultiPolygon?this.convertFromMultiPolygon(geometry):geometry instanceof ol.geom.GeometryCollection?this.convertFromCollection(geometry):void 0},convertFromPoint:function(point){var coordinates=point.getCoordinates();return this.geometryFactory.createPoint(new Coordinate(coordinates[0],coordinates[1]))},convertFromLineString:function(lineString){return this.geometryFactory.createLineString(lineString.getCoordinates().map(function(coordinates){return new Coordinate(coordinates[0],coordinates[1])}))},convertFromLinearRing:function(linearRing){return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function(coordinates){return new Coordinate(coordinates[0],coordinates[1])}))},convertFromPolygon:function(polygon){for(var linearRings=polygon.getLinearRings(),shell=null,holes=[],i=0;i<linearRings.length;i++){var linearRing=this.convertFromLinearRing(linearRings[i]);0===i?shell=linearRing:holes.push(linearRing)}return this.geometryFactory.createPolygon(shell,holes)},convertFromMultiPoint:function(multiPoint){var points=multiPoint.getPoints().map(function(point){return this.convertFromPoint(point)},this);return this.geometryFactory.createMultiPoint(points)},convertFromMultiLineString:function(multiLineString){var lineStrings=multiLineString.getLineStrings().map(function(lineString){return this.convertFromLineString(lineString)},this);return this.geometryFactory.createMultiLineString(lineStrings)},convertFromMultiPolygon:function(multiPolygon){var polygons=multiPolygon.getPolygons().map(function(polygon){return this.convertFromPolygon(polygon)},this);return this.geometryFactory.createMultiPolygon(polygons)},convertFromCollection:function(collection){var geometries=collection.getGeometries().map(function(geometry){return this.read(geometry)},this);return this.geometryFactory.createGeometryCollection(geometries)},write:function(geometry){return"Point"===geometry.getGeometryType()?this.convertToPoint(geometry.getCoordinate()):"LineString"===geometry.getGeometryType()?this.convertToLineString(geometry):"LinearRing"===geometry.getGeometryType()?this.convertToLinearRing(geometry):"Polygon"===geometry.getGeometryType()?this.convertToPolygon(geometry):"MultiPoint"===geometry.getGeometryType()?this.convertToMultiPoint(geometry):"MultiLineString"===geometry.getGeometryType()?this.convertToMultiLineString(geometry):"MultiPolygon"===geometry.getGeometryType()?this.convertToMultiPolygon(geometry):"GeometryCollection"===geometry.getGeometryType()?this.convertToCollection(geometry):void 0},convertToPoint:function(coordinate){return new this.ol.geom.Point([coordinate.x,coordinate.y])},convertToLineString:function(lineString){var points=lineString.points.coordinates.map(p2c);return new this.ol.geom.LineString(points)},convertToLinearRing:function(linearRing){var points=linearRing.points.coordinates.map(p2c);return new this.ol.geom.LinearRing(points)},convertToPolygon:function(polygon){for(var rings=[polygon.shell.points.coordinates.map(p2c)],i=0;i<polygon.holes.length;i++)rings.push(polygon.holes[i].points.coordinates.map(p2c));return new this.ol.geom.Polygon(rings)},convertToMultiPoint:function(multiPoint){return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))},convertToMultiLineString:function(multiLineString){for(var lineStrings=[],i=0;i<multiLineString.geometries.length;i++)lineStrings.push(this.convertToLineString(multiLineString.geometries[i]).getCoordinates());return new this.ol.geom.MultiLineString(lineStrings)},convertToMultiPolygon:function(multiPolygon){for(var polygons=[],i=0;i<multiPolygon.geometries.length;i++)polygons.push(this.convertToPolygon(multiPolygon.geometries[i]).getCoordinates());return new this.ol.geom.MultiPolygon(polygons)},convertToCollection:function(geometryCollection){for(var geometries=[],i=0;i<geometryCollection.geometries.length;i++){var geometry=geometryCollection.geometries[i];geometries.push(this.write(geometry))}return new this.ol.geom.GeometryCollection(geometries)}}),extend(ScaledNoder.prototype,{rescale:function(){if(hasInterface(arguments[0],Collection))for(i=arguments[0].iterator();i.hasNext();){var ss=i.next();this.rescale(ss.getCoordinates())}else if(arguments[0]instanceof Array){var pts=arguments[0];2===pts.length&&(new Coordinate(pts[0]),new Coordinate(pts[1]));for(var i=0;i<pts.length;i++)pts[i].x=pts[i].x/this._scaleFactor+this._offsetX,pts[i].y=pts[i].y/this._scaleFactor+this._offsetY;2===pts.length&&pts[0].equals2D(pts[1])&&System.out.println(pts)}},scale:function(){if(hasInterface(arguments[0],Collection)){for(var segStrings=arguments[0],nodedSegmentStrings=new ArrayList,i=segStrings.iterator();i.hasNext();){var ss=i.next();nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()),ss.getData()))}return nodedSegmentStrings}if(arguments[0]instanceof Array){for(var pts=arguments[0],roundPts=new Array(pts.length).fill(null),i=0;i<pts.length;i++)roundPts[i]=new Coordinate(Math.round((pts[i].x-this._offsetX)*this._scaleFactor),Math.round((pts[i].y-this._offsetY)*this._scaleFactor),pts[i].z);return CoordinateArrays.removeRepeatedPoints(roundPts)}},isIntegerPrecision:function(){return 1===this._scaleFactor},getNodedSubstrings:function(){var splitSS=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(splitSS),splitSS},computeNodes:function(inputSegStrings){var intSegStrings=inputSegStrings;this._isScaled&&(intSegStrings=this.scale(inputSegStrings)),this._noder.computeNodes(intSegStrings)},interfaces_:function(){return[Noder]},getClass:function(){return ScaledNoder}}),extend(IsSimpleOp.prototype,{isSimpleMultiPoint:function(mp){if(mp.isEmpty())return!0;for(var points=new TreeSet,i=0;i<mp.getNumGeometries();i++){var p=mp.getGeometryN(i).getCoordinate();if(points.contains(p))return this._nonSimpleLocation=p,!1;points.add(p)}return!0},isSimplePolygonal:function(geom){for(var i=LinearComponentExtracter.getLines(geom).iterator();i.hasNext();){var ring=i.next();if(!this.isSimpleLinearGeometry(ring))return!1}return!0},hasClosedEndpointIntersection:function(graph){for(var endPoints=new TreeMap,i=graph.getEdgeIterator();i.hasNext();){var e=i.next(),isClosed=(e.getMaximumSegmentIndex(),e.isClosed()),p0=e.getCoordinate(0);this.addEndpoint(endPoints,p0,isClosed);var p1=e.getCoordinate(e.getNumPoints()-1);this.addEndpoint(endPoints,p1,isClosed)}for(i=endPoints.values().iterator();i.hasNext();){var eiInfo=i.next();if(eiInfo.isClosed&&2!==eiInfo.degree)return this._nonSimpleLocation=eiInfo.getCoordinate(),!0}return!1},getNonSimpleLocation:function(){return this._nonSimpleLocation},isSimpleLinearGeometry:function(geom){if(geom.isEmpty())return!0;var graph=new GeometryGraph(0,geom),li=new RobustLineIntersector,si=graph.computeSelfNodes(li,!0);return!si.hasIntersection()||(si.hasProperIntersection()?(this._nonSimpleLocation=si.getProperIntersectionPoint(),!1):!this.hasNonEndpointIntersection(graph)&&(!this._isClosedEndpointsInInterior||!this.hasClosedEndpointIntersection(graph)))},hasNonEndpointIntersection:function(graph){for(var i=graph.getEdgeIterator();i.hasNext();)for(var e=i.next(),maxSegmentIndex=e.getMaximumSegmentIndex(),eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();if(!ei.isEndPoint(maxSegmentIndex))return this._nonSimpleLocation=ei.getCoordinate(),!0}return!1},addEndpoint:function(endPoints,p,isClosed){var eiInfo=endPoints.get(p);null===eiInfo&&(eiInfo=new EndpointInfo(p),endPoints.put(p,eiInfo)),eiInfo.addEndpoint(isClosed)},computeSimple:function(geom){return this._nonSimpleLocation=null,!!geom.isEmpty()||(geom instanceof LineString?this.isSimpleLinearGeometry(geom):geom instanceof MultiLineString?this.isSimpleLinearGeometry(geom):geom instanceof MultiPoint?this.isSimpleMultiPoint(geom):hasInterface(geom,Polygonal)?this.isSimplePolygonal(geom):!(geom instanceof GeometryCollection)||this.isSimpleGeometryCollection(geom))},isSimple:function(){return this._nonSimpleLocation=null,this.computeSimple(this._inputGeom)},isSimpleGeometryCollection:function(geom){for(var i=0;i<geom.getNumGeometries();i++){var comp=geom.getGeometryN(i);if(!this.computeSimple(comp))return!1}return!0},interfaces_:function(){return[]},getClass:function(){return IsSimpleOp}}),extend(EndpointInfo.prototype,{addEndpoint:function(isClosed){this.degree++,this.isClosed|=isClosed},getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return EndpointInfo}}),IsSimpleOp.EndpointInfo=EndpointInfo,extend(BufferParameters.prototype,{getEndCapStyle:function(){return this._endCapStyle},isSingleSided:function(){return this._isSingleSided},setQuadrantSegments:function(quadSegs){this._quadrantSegments=quadSegs,0===this._quadrantSegments&&(this._joinStyle=BufferParameters.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=BufferParameters.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),quadSegs<=0&&(this._quadrantSegments=1),this._joinStyle!==BufferParameters.JOIN_ROUND&&(this._quadrantSegments=BufferParameters.DEFAULT_QUADRANT_SEGMENTS)},getJoinStyle:function(){return this._joinStyle},setJoinStyle:function(joinStyle){this._joinStyle=joinStyle},setSimplifyFactor:function(simplifyFactor){this._simplifyFactor=simplifyFactor<0?0:simplifyFactor},getSimplifyFactor:function(){return this._simplifyFactor},getQuadrantSegments:function(){return this._quadrantSegments},setEndCapStyle:function(endCapStyle){this._endCapStyle=endCapStyle},getMitreLimit:function(){return this._mitreLimit},setMitreLimit:function(mitreLimit){this._mitreLimit=mitreLimit},setSingleSided:function(isSingleSided){this._isSingleSided=isSingleSided},interfaces_:function(){return[]},getClass:function(){return BufferParameters}}),BufferParameters.bufferDistanceError=function(quadSegs){var alpha=Math.PI/2/quadSegs;return 1-Math.cos(alpha/2)},BufferParameters.CAP_ROUND=1,BufferParameters.CAP_FLAT=2,BufferParameters.CAP_SQUARE=3,BufferParameters.JOIN_ROUND=1,BufferParameters.JOIN_MITRE=2,BufferParameters.JOIN_BEVEL=3,BufferParameters.DEFAULT_QUADRANT_SEGMENTS=8,BufferParameters.DEFAULT_MITRE_LIMIT=5,BufferParameters.DEFAULT_SIMPLIFY_FACTOR=.01,extend(RightmostEdgeFinder.prototype,{getCoordinate:function(){return this._minCoord},getRightmostSide:function(de,index){var side=this.getRightmostSideOfSegment(de,index);return side<0&&(side=this.getRightmostSideOfSegment(de,index-1)),side<0&&(this._minCoord=null,this.checkForRightmostCoordinate(de)),side},findRightmostEdgeAtVertex:function(){var pts=this._minDe.getEdge().getCoordinates();Assert.isTrue(this._minIndex>0&&this._minIndex<pts.length,"rightmost point expected to be interior vertex of edge");var pPrev=pts[this._minIndex-1],pNext=pts[this._minIndex+1],orientation=CGAlgorithms.computeOrientation(this._minCoord,pNext,pPrev),usePrev=!1;pPrev.y<this._minCoord.y&&pNext.y<this._minCoord.y&&orientation===CGAlgorithms.COUNTERCLOCKWISE?usePrev=!0:pPrev.y>this._minCoord.y&&pNext.y>this._minCoord.y&&orientation===CGAlgorithms.CLOCKWISE&&(usePrev=!0),usePrev&&(this._minIndex=this._minIndex-1)},getRightmostSideOfSegment:function(de,i){var coord=de.getEdge().getCoordinates();if(i<0||i+1>=coord.length)return-1;if(coord[i].y===coord[i+1].y)return-1;var pos=Position.LEFT;return coord[i].y<coord[i+1].y&&(pos=Position.RIGHT),pos},getEdge:function(){return this._orientedDe},checkForRightmostCoordinate:function(de){for(var coord=de.getEdge().getCoordinates(),i=0;i<coord.length-1;i++)(null===this._minCoord||coord[i].x>this._minCoord.x)&&(this._minDe=de,this._minIndex=i,this._minCoord=coord[i])},findRightmostEdgeAtNode:function(){var star=this._minDe.getNode().getEdges();this._minDe=star.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},findEdge:function(dirEdgeList){for(var i=dirEdgeList.iterator();i.hasNext();){var de=i.next();de.isForward()&&this.checkForRightmostCoordinate(de)}Assert.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Position.LEFT&&(this._orientedDe=this._minDe.getSym())},interfaces_:function(){return[]},getClass:function(){return RightmostEdgeFinder}}),LinkedList.prototype.addLast=function(e){this.array_.push(e)},LinkedList.prototype.removeFirst=function(){return this.array_.shift()},LinkedList.prototype.isEmpty=function(){return 0===this.array_.length},extend(BufferSubgraph.prototype,{clearVisitedEdges:function(){for(var it=this._dirEdgeList.iterator();it.hasNext();){it.next().setVisited(!1)}},getRightmostCoordinate:function(){return this._rightMostCoord},computeNodeDepth:function(n){for(var startEdge=null,i=n.getEdges().iterator();i.hasNext();){if((de=i.next()).isVisited()||de.getSym().isVisited()){startEdge=de;break}}if(null===startEdge)throw new TopologyException("unable to find edge to compute depths at "+n.getCoordinate());n.getEdges().computeDepths(startEdge);for(i=n.getEdges().iterator();i.hasNext();){var de=i.next();de.setVisited(!0),this.copySymDepths(de)}},computeDepth:function(outsideDepth){this.clearVisitedEdges();var de=this._finder.getEdge();de.getNode(),de.getLabel();de.setEdgeDepths(Position.RIGHT,outsideDepth),this.copySymDepths(de),this.computeDepths(de)},create:function(node){this.addReachable(node),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},findResultEdges:function(){for(var it=this._dirEdgeList.iterator();it.hasNext();){var de=it.next();de.getDepth(Position.RIGHT)>=1&&de.getDepth(Position.LEFT)<=0&&!de.isInteriorAreaEdge()&&de.setInResult(!0)}},computeDepths:function(startEdge){var nodesVisited=new HashSet,nodeQueue=new LinkedList,startNode=startEdge.getNode();for(nodeQueue.addLast(startNode),nodesVisited.add(startNode),startEdge.setVisited(!0);!nodeQueue.isEmpty();){var n=nodeQueue.removeFirst();nodesVisited.add(n),this.computeNodeDepth(n);for(var i=n.getEdges().iterator();i.hasNext();){var sym=i.next().getSym();if(!sym.isVisited()){var adjNode=sym.getNode();nodesVisited.contains(adjNode)||(nodeQueue.addLast(adjNode),nodesVisited.add(adjNode))}}}},compareTo:function(o){var graph=o;return this._rightMostCoord.x<graph._rightMostCoord.x?-1:this._rightMostCoord.x>graph._rightMostCoord.x?1:0},getEnvelope:function(){if(null===this._env){for(var edgeEnv=new Envelope,it=this._dirEdgeList.iterator();it.hasNext();)for(var pts=it.next().getEdge().getCoordinates(),i=0;i<pts.length-1;i++)edgeEnv.expandToInclude(pts[i]);this._env=edgeEnv}return this._env},addReachable:function(startNode){var nodeStack=new Stack$2;for(nodeStack.add(startNode);!nodeStack.empty();){var node=nodeStack.pop();this.add(node,nodeStack)}},copySymDepths:function(de){var sym=de.getSym();sym.setDepth(Position.LEFT,de.getDepth(Position.RIGHT)),sym.setDepth(Position.RIGHT,de.getDepth(Position.LEFT))},add:function(node,nodeStack){node.setVisited(!0),this._nodes.add(node);for(var i=node.getEdges().iterator();i.hasNext();){var de=i.next();this._dirEdgeList.add(de);var symNode=de.getSym().getNode();symNode.isVisited()||nodeStack.push(symNode)}},getNodes:function(){return this._nodes},getDirectedEdges:function(){return this._dirEdgeList},interfaces_:function(){return[Comparable]},getClass:function(){return BufferSubgraph}}),extend(BufferInputLineSimplifier.prototype,{isDeletable:function(i0,i1,i2,distanceTol){var p0=this._inputLine[i0],p1=this._inputLine[i1],p2=this._inputLine[i2];return!!this.isConcave(p0,p1,p2)&&(!!this.isShallow(p0,p1,p2,distanceTol)&&this.isShallowSampled(p0,p1,i0,i2,distanceTol))},deleteShallowConcavities:function(){for(var index=1,midIndex=(this._inputLine.length,this.findNextNonDeletedIndex(index)),lastIndex=this.findNextNonDeletedIndex(midIndex),isChanged=!1;lastIndex<this._inputLine.length;){var isMiddleVertexDeleted=!1;this.isDeletable(index,midIndex,lastIndex,this._distanceTol)&&(this._isDeleted[midIndex]=BufferInputLineSimplifier.DELETE,isMiddleVertexDeleted=!0,isChanged=!0),index=isMiddleVertexDeleted?lastIndex:midIndex,midIndex=this.findNextNonDeletedIndex(index),lastIndex=this.findNextNonDeletedIndex(midIndex)}return isChanged},isShallowConcavity:function(p0,p1,p2,distanceTol){if(!(CGAlgorithms.computeOrientation(p0,p1,p2)===this._angleOrientation))return!1;return CGAlgorithms.distancePointLine(p1,p0,p2)<distanceTol},isShallowSampled:function(p0,p2,i0,i2,distanceTol){var inc=Math.trunc((i2-i0)/BufferInputLineSimplifier.NUM_PTS_TO_CHECK);inc<=0&&(inc=1);for(var i=i0;i<i2;i+=inc)if(!this.isShallow(p0,p2,this._inputLine[i],distanceTol))return!1;return!0},isConcave:function(p0,p1,p2){var isConcave=CGAlgorithms.computeOrientation(p0,p1,p2)===this._angleOrientation;return isConcave},simplify:function(distanceTol){this._distanceTol=Math.abs(distanceTol),distanceTol<0&&(this._angleOrientation=CGAlgorithms.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var isChanged=!1;do{isChanged=this.deleteShallowConcavities()}while(isChanged);return this.collapseLine()},findNextNonDeletedIndex:function(index){for(var next=index+1;next<this._inputLine.length&&this._isDeleted[next]===BufferInputLineSimplifier.DELETE;)next++;return next},isShallow:function(p0,p1,p2,distanceTol){return CGAlgorithms.distancePointLine(p1,p0,p2)<distanceTol},collapseLine:function(){for(var coordList=new CoordinateList,i=0;i<this._inputLine.length;i++)this._isDeleted[i]!==BufferInputLineSimplifier.DELETE&&coordList.add(this._inputLine[i]);return coordList.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return BufferInputLineSimplifier}}),BufferInputLineSimplifier.simplify=function(inputLine,distanceTol){return new BufferInputLineSimplifier(inputLine).simplify(distanceTol)},BufferInputLineSimplifier.INIT=0,BufferInputLineSimplifier.DELETE=1,BufferInputLineSimplifier.KEEP=1,BufferInputLineSimplifier.NUM_PTS_TO_CHECK=10,extend(OffsetSegmentString.prototype,{getCoordinates:function(){return this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE)},setPrecisionModel:function(precisionModel){this._precisionModel=precisionModel},addPt:function(pt){var bufPt=new Coordinate(pt);if(this._precisionModel.makePrecise(bufPt),this.isRedundant(bufPt))return null;this._ptList.add(bufPt)},reverse:function(){},addPts:function(pt,isForward){if(isForward)for(i=0;i<pt.length;i++)this.addPt(pt[i]);else for(var i=pt.length-1;i>=0;i--)this.addPt(pt[i])},isRedundant:function(pt){if(this._ptList.size()<1)return!1;var lastPt=this._ptList.get(this._ptList.size()-1);return pt.distance(lastPt)<this._minimimVertexDistance},toString:function(){return(new GeometryFactory).createLineString(this.getCoordinates()).toString()},closeRing:function(){if(this._ptList.size()<1)return null;var startPt=new Coordinate(this._ptList.get(0)),lastPt=this._ptList.get(this._ptList.size()-1);if(this._ptList.size()>=2&&this._ptList.get(this._ptList.size()-2),startPt.equals(lastPt))return null;this._ptList.add(startPt)},setMinimumVertexDistance:function(minimimVertexDistance){this._minimimVertexDistance=minimimVertexDistance},interfaces_:function(){return[]},getClass:function(){return OffsetSegmentString}}),OffsetSegmentString.COORDINATE_ARRAY_TYPE=new Array(0).fill(null),extend(OffsetSegmentGenerator.prototype,{addNextSegment:function(p,addStartPoint){if(this._s0=this._s1,this._s1=this._s2,this._s2=p,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var orientation=CGAlgorithms.computeOrientation(this._s0,this._s1,this._s2),outsideTurn=orientation===CGAlgorithms.CLOCKWISE&&this._side===Position.LEFT||orientation===CGAlgorithms.COUNTERCLOCKWISE&&this._side===Position.RIGHT;0===orientation?this.addCollinear(addStartPoint):outsideTurn?this.addOutsideTurn(orientation,addStartPoint):this.addInsideTurn(orientation,addStartPoint)},addLineEndCap:function(p0,p1){var seg=new LineSegment(p0,p1),offsetL=new LineSegment;this.computeOffsetSegment(seg,Position.LEFT,this._distance,offsetL);var offsetR=new LineSegment;this.computeOffsetSegment(seg,Position.RIGHT,this._distance,offsetR);var dx=p1.x-p0.x,dy=p1.y-p0.y,angle=Math.atan2(dy,dx);switch(this._bufParams.getEndCapStyle()){case BufferParameters.CAP_ROUND:this._segList.addPt(offsetL.p1),this.addFilletArc(p1,angle+Math.PI/2,angle-Math.PI/2,CGAlgorithms.CLOCKWISE,this._distance),this._segList.addPt(offsetR.p1);break;case BufferParameters.CAP_FLAT:this._segList.addPt(offsetL.p1),this._segList.addPt(offsetR.p1);break;case BufferParameters.CAP_SQUARE:var squareCapSideOffset=new Coordinate;squareCapSideOffset.x=Math.abs(this._distance)*Math.cos(angle),squareCapSideOffset.y=Math.abs(this._distance)*Math.sin(angle);var squareCapLOffset=new Coordinate(offsetL.p1.x+squareCapSideOffset.x,offsetL.p1.y+squareCapSideOffset.y),squareCapROffset=new Coordinate(offsetR.p1.x+squareCapSideOffset.x,offsetR.p1.y+squareCapSideOffset.y);this._segList.addPt(squareCapLOffset),this._segList.addPt(squareCapROffset)}},getCoordinates:function(){return this._segList.getCoordinates()},addMitreJoin:function(p,offset0,offset1,distance){var isMitreWithinLimit=!0,intPt=null;try{intPt=HCoordinate.intersection(offset0.p0,offset0.p1,offset1.p0,offset1.p1);(distance<=0?1:intPt.distance(p)/Math.abs(distance))>this._bufParams.getMitreLimit()&&(isMitreWithinLimit=!1)}catch(ex){if(!(ex instanceof NotRepresentableException))throw ex;intPt=new Coordinate(0,0),isMitreWithinLimit=!1}isMitreWithinLimit?this._segList.addPt(intPt):this.addLimitedMitreJoin(offset0,offset1,distance,this._bufParams.getMitreLimit())},addFilletCorner:function(p,p0,p1,direction,radius){var dx0=p0.x-p.x,dy0=p0.y-p.y,startAngle=Math.atan2(dy0,dx0),dx1=p1.x-p.x,dy1=p1.y-p.y,endAngle=Math.atan2(dy1,dx1);direction===CGAlgorithms.CLOCKWISE?startAngle<=endAngle&&(startAngle+=2*Math.PI):startAngle>=endAngle&&(startAngle-=2*Math.PI),this._segList.addPt(p0),this.addFilletArc(p,startAngle,endAngle,direction,radius),this._segList.addPt(p1)},addOutsideTurn:function(orientation,addStartPoint){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===BufferParameters.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===BufferParameters.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(addStartPoint&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,orientation,this._distance),this._segList.addPt(this._offset1.p0))},createSquare:function(p){this._segList.addPt(new Coordinate(p.x+this._distance,p.y+this._distance)),this._segList.addPt(new Coordinate(p.x+this._distance,p.y-this._distance)),this._segList.addPt(new Coordinate(p.x-this._distance,p.y-this._distance)),this._segList.addPt(new Coordinate(p.x-this._distance,p.y+this._distance)),this._segList.closeRing()},addSegments:function(pt,isForward){this._segList.addPts(pt,isForward)},addFirstSegment:function(){this._segList.addPt(this._offset1.p0)},addLastSegment:function(){this._segList.addPt(this._offset1.p1)},initSideSegments:function(s1,s2,side){this._s1=s1,this._s2=s2,this._side=side,this._seg1.setCoordinates(s1,s2),this.computeOffsetSegment(this._seg1,side,this._distance,this._offset1)},addLimitedMitreJoin:function(offset0,offset1,distance,mitreLimit){var basePt=this._seg0.p1,ang0=Angle.angle(basePt,this._seg0.p0),angDiffHalf=(Angle.angle(basePt,this._seg1.p1),Angle.angleBetweenOriented(this._seg0.p0,basePt,this._seg1.p1)/2),midAng=Angle.normalize(ang0+angDiffHalf),mitreMidAng=Angle.normalize(midAng+Math.PI),mitreDist=mitreLimit*distance,bevelHalfLen=distance-mitreDist*Math.abs(Math.sin(angDiffHalf)),mitreMidLine=new LineSegment(basePt,new Coordinate(basePt.x+mitreDist*Math.cos(mitreMidAng),basePt.y+mitreDist*Math.sin(mitreMidAng))),bevelEndLeft=mitreMidLine.pointAlongOffset(1,bevelHalfLen),bevelEndRight=mitreMidLine.pointAlongOffset(1,-bevelHalfLen);this._side===Position.LEFT?(this._segList.addPt(bevelEndLeft),this._segList.addPt(bevelEndRight)):(this._segList.addPt(bevelEndRight),this._segList.addPt(bevelEndLeft))},computeOffsetSegment:function(seg,side,distance,offset){var sideSign=side===Position.LEFT?1:-1,dx=seg.p1.x-seg.p0.x,dy=seg.p1.y-seg.p0.y,len=Math.sqrt(dx*dx+dy*dy),ux=sideSign*distance*dx/len,uy=sideSign*distance*dy/len;offset.p0.x=seg.p0.x-uy,offset.p0.y=seg.p0.y+ux,offset.p1.x=seg.p1.x-uy,offset.p1.y=seg.p1.y+ux},addFilletArc:function(p,startAngle,endAngle,direction,radius){var directionFactor=direction===CGAlgorithms.CLOCKWISE?-1:1,totalAngle=Math.abs(startAngle-endAngle),nSegs=Math.trunc(totalAngle/this._filletAngleQuantum+.5);if(nSegs<1)return null;var currAngleInc=null;currAngleInc=totalAngle/nSegs;for(var currAngle=0,pt=new Coordinate;currAngle<totalAngle;){var angle=startAngle+directionFactor*currAngle;pt.x=p.x+radius*Math.cos(angle),pt.y=p.y+radius*Math.sin(angle),this._segList.addPt(pt),currAngle+=currAngleInc}},addInsideTurn:function(orientation,addStartPoint){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var mid0=new Coordinate((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(mid0);var mid1=new Coordinate((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(mid1)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},createCircle:function(p){var pt=new Coordinate(p.x+this._distance,p.y);this._segList.addPt(pt),this.addFilletArc(p,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},addBevelJoin:function(offset0,offset1){this._segList.addPt(offset0.p1),this._segList.addPt(offset1.p0)},init:function(distance){this._distance=distance,this._maxCurveSegmentError=distance*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new OffsetSegmentString,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(distance*OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},addCollinear:function(addStartPoint){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===BufferParameters.JOIN_BEVEL||this._bufParams.getJoinStyle()===BufferParameters.JOIN_MITRE?(addStartPoint&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,CGAlgorithms.CLOCKWISE,this._distance))},closeRing:function(){this._segList.closeRing()},hasNarrowConcaveAngle:function(){return this._hasNarrowConcaveAngle},interfaces_:function(){return[]},getClass:function(){return OffsetSegmentGenerator}}),OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR=80,extend(OffsetCurveBuilder.prototype,{getOffsetCurve:function(inputPts,distance){if(this._distance=distance,0===distance)return null;var isRightSide=distance<0,posDistance=Math.abs(distance),segGen=this.getSegGen(posDistance);inputPts.length<=1?this.computePointCurve(inputPts[0],segGen):this.computeOffsetCurve(inputPts,isRightSide,segGen);var curvePts=segGen.getCoordinates();return isRightSide&&CoordinateArrays.reverse(curvePts),curvePts},computeSingleSidedBufferCurve:function(inputPts,isRightSide,segGen){var distTol=this.simplifyTolerance(this._distance);if(isRightSide){segGen.addSegments(inputPts,!0);var simp2=BufferInputLineSimplifier.simplify(inputPts,-distTol),n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],Position.LEFT),segGen.addFirstSegment();for(i=n2-2;i>=0;i--)segGen.addNextSegment(simp2[i],!0)}else{segGen.addSegments(inputPts,!1);var simp1=BufferInputLineSimplifier.simplify(inputPts,distTol),n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],Position.LEFT),segGen.addFirstSegment();for(var i=2;i<=n1;i++)segGen.addNextSegment(simp1[i],!0)}segGen.addLastSegment(),segGen.closeRing()},computeRingBufferCurve:function(inputPts,side,segGen){var distTol=this.simplifyTolerance(this._distance);side===Position.RIGHT&&(distTol=-distTol);var simp=BufferInputLineSimplifier.simplify(inputPts,distTol),n=simp.length-1;segGen.initSideSegments(simp[n-1],simp[0],side);for(var i=1;i<=n;i++){var addStartPoint=1!==i;segGen.addNextSegment(simp[i],addStartPoint)}segGen.closeRing()},computeLineBufferCurve:function(inputPts,segGen){var distTol=this.simplifyTolerance(this._distance),simp1=BufferInputLineSimplifier.simplify(inputPts,distTol),n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],Position.LEFT);for(i=2;i<=n1;i++)segGen.addNextSegment(simp1[i],!0);segGen.addLastSegment(),segGen.addLineEndCap(simp1[n1-1],simp1[n1]);var simp2=BufferInputLineSimplifier.simplify(inputPts,-distTol),n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],Position.LEFT);for(var i=n2-2;i>=0;i--)segGen.addNextSegment(simp2[i],!0);segGen.addLastSegment(),segGen.addLineEndCap(simp2[1],simp2[0]),segGen.closeRing()},computePointCurve:function(pt,segGen){switch(this._bufParams.getEndCapStyle()){case BufferParameters.CAP_ROUND:segGen.createCircle(pt);break;case BufferParameters.CAP_SQUARE:segGen.createSquare(pt)}},getLineCurve:function(inputPts,distance){if(this._distance=distance,distance<0&&!this._bufParams.isSingleSided())return null;if(0===distance)return null;var posDistance=Math.abs(distance),segGen=this.getSegGen(posDistance);if(inputPts.length<=1)this.computePointCurve(inputPts[0],segGen);else if(this._bufParams.isSingleSided()){var isRightSide=distance<0;this.computeSingleSidedBufferCurve(inputPts,isRightSide,segGen)}else this.computeLineBufferCurve(inputPts,segGen);return segGen.getCoordinates()},getBufferParameters:function(){return this._bufParams},simplifyTolerance:function(bufDistance){return bufDistance*this._bufParams.getSimplifyFactor()},getRingCurve:function(inputPts,side,distance){if(this._distance=distance,inputPts.length<=2)return this.getLineCurve(inputPts,distance);if(0===distance)return OffsetCurveBuilder.copyCoordinates(inputPts);var segGen=this.getSegGen(distance);return this.computeRingBufferCurve(inputPts,side,segGen),segGen.getCoordinates()},computeOffsetCurve:function(inputPts,isRightSide,segGen){var distTol=this.simplifyTolerance(this._distance);if(isRightSide){var simp2=BufferInputLineSimplifier.simplify(inputPts,-distTol),n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],Position.LEFT),segGen.addFirstSegment();for(i=n2-2;i>=0;i--)segGen.addNextSegment(simp2[i],!0)}else{var simp1=BufferInputLineSimplifier.simplify(inputPts,distTol),n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],Position.LEFT),segGen.addFirstSegment();for(var i=2;i<=n1;i++)segGen.addNextSegment(simp1[i],!0)}segGen.addLastSegment()},getSegGen:function(distance){return new OffsetSegmentGenerator(this._precisionModel,this._bufParams,distance)},interfaces_:function(){return[]},getClass:function(){return OffsetCurveBuilder}}),OffsetCurveBuilder.copyCoordinates=function(pts){for(var copy=new Array(pts.length).fill(null),i=0;i<copy.length;i++)copy[i]=new Coordinate(pts[i]);return copy},extend(SubgraphDepthLocater.prototype,{findStabbedSegments:function(){if(1===arguments.length){for(var stabbingRayLeftPt=arguments[0],stabbedSegments=new ArrayList,i=this._subgraphs.iterator();i.hasNext();){var bsg=i.next(),env=bsg.getEnvelope();stabbingRayLeftPt.y<env.getMinY()||stabbingRayLeftPt.y>env.getMaxY()||this.findStabbedSegments(stabbingRayLeftPt,bsg.getDirectedEdges(),stabbedSegments)}return stabbedSegments}if(3===arguments.length)if(hasInterface(arguments[2],List)&&arguments[0]instanceof Coordinate&&arguments[1]instanceof DirectedEdge)for(var stabbingRayLeftPt=arguments[0],dirEdge=arguments[1],stabbedSegments=arguments[2],pts=dirEdge.getEdge().getCoordinates(),i=0;i<pts.length-1;i++){this._seg.p0=pts[i],this._seg.p1=pts[i+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<stabbingRayLeftPt.x)&&!(this._seg.isHorizontal()||stabbingRayLeftPt.y<this._seg.p0.y||stabbingRayLeftPt.y>this._seg.p1.y||CGAlgorithms.computeOrientation(this._seg.p0,this._seg.p1,stabbingRayLeftPt)===CGAlgorithms.RIGHT)){var depth=dirEdge.getDepth(Position.LEFT);this._seg.p0.equals(pts[i])||(depth=dirEdge.getDepth(Position.RIGHT));var ds=new DepthSegment(this._seg,depth);stabbedSegments.add(ds)}}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Coordinate&&hasInterface(arguments[1],List))for(var stabbingRayLeftPt=arguments[0],dirEdges=arguments[1],stabbedSegments=arguments[2],i=dirEdges.iterator();i.hasNext();){var de=i.next();de.isForward()&&this.findStabbedSegments(stabbingRayLeftPt,de,stabbedSegments)}},getDepth:function(p){var stabbedSegments=this.findStabbedSegments(p);if(0===stabbedSegments.size())return 0;return Collections.min(stabbedSegments)._leftDepth},interfaces_:function(){return[]},getClass:function(){return SubgraphDepthLocater}}),extend(DepthSegment.prototype,{compareTo:function(obj){var other=obj;if(this._upwardSeg.minX()>=other._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=other._upwardSeg.minX())return-1;var orientIndex=this._upwardSeg.orientationIndex(other._upwardSeg);return 0!==orientIndex?orientIndex:0!=(orientIndex=-1*other._upwardSeg.orientationIndex(this._upwardSeg))?orientIndex:this._upwardSeg.compareTo(other._upwardSeg)},compareX:function(seg0,seg1){var compare0=seg0.p0.compareTo(seg1.p0);return 0!==compare0?compare0:seg0.p1.compareTo(seg1.p1)},toString:function(){return this._upwardSeg.toString()},interfaces_:function(){return[Comparable]},getClass:function(){return DepthSegment}}),SubgraphDepthLocater.DepthSegment=DepthSegment,extend(OffsetCurveSetBuilder.prototype,{addPoint:function(p){if(this._distance<=0)return null;var coord=p.getCoordinates(),curve=this._curveBuilder.getLineCurve(coord,this._distance);this.addCurve(curve,Location.EXTERIOR,Location.INTERIOR)},addPolygon:function(p){var offsetDistance=this._distance,offsetSide=Position.LEFT;this._distance<0&&(offsetDistance=-this._distance,offsetSide=Position.RIGHT);var shell=p.getExteriorRing(),shellCoord=CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());if(this._distance<0&&this.isErodedCompletely(shell,this._distance))return null;if(this._distance<=0&&shellCoord.length<3)return null;this.addPolygonRing(shellCoord,offsetDistance,offsetSide,Location.EXTERIOR,Location.INTERIOR);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i),holeCoord=CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());this._distance>0&&this.isErodedCompletely(hole,-this._distance)||this.addPolygonRing(holeCoord,offsetDistance,Position.opposite(offsetSide),Location.INTERIOR,Location.EXTERIOR)}},isTriangleErodedCompletely:function(triangleCoord,bufferDistance){var tri=new Triangle$1(triangleCoord[0],triangleCoord[1],triangleCoord[2]),inCentre=tri.inCentre();return CGAlgorithms.distancePointLine(inCentre,tri.p0,tri.p1)<Math.abs(bufferDistance)},addLineString:function(line){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var coord=CoordinateArrays.removeRepeatedPoints(line.getCoordinates()),curve=this._curveBuilder.getLineCurve(coord,this._distance);this.addCurve(curve,Location.EXTERIOR,Location.INTERIOR)},addCurve:function(coord,leftLoc,rightLoc){if(null===coord||coord.length<2)return null;var e=new NodedSegmentString(coord,new Label(0,Location.BOUNDARY,leftLoc,rightLoc));this._curveList.add(e)},getCurves:function(){return this.add(this._inputGeom),this._curveList},addPolygonRing:function(coord,offsetDistance,side,cwLeftLoc,cwRightLoc){if(0===offsetDistance&&coord.length<LinearRing.MINIMUM_VALID_SIZE)return null;var leftLoc=cwLeftLoc,rightLoc=cwRightLoc;coord.length>=LinearRing.MINIMUM_VALID_SIZE&&CGAlgorithms.isCCW(coord)&&(leftLoc=cwRightLoc,rightLoc=cwLeftLoc,side=Position.opposite(side));var curve=this._curveBuilder.getRingCurve(coord,side,offsetDistance);this.addCurve(curve,leftLoc,rightLoc)},add:function(g){if(g.isEmpty())return null;if(g instanceof Polygon)this.addPolygon(g);else if(g instanceof LineString)this.addLineString(g);else if(g instanceof Point)this.addPoint(g);else if(g instanceof MultiPoint)this.addCollection(g);else if(g instanceof MultiLineString)this.addCollection(g);else if(g instanceof MultiPolygon)this.addCollection(g);else{if(!(g instanceof GeometryCollection))throw new UnsupportedOperationException(g.getClass().getName());this.addCollection(g)}},isErodedCompletely:function(ring,bufferDistance){var ringCoord=ring.getCoordinates();if(ringCoord.length<4)return bufferDistance<0;if(4===ringCoord.length)return this.isTriangleErodedCompletely(ringCoord,bufferDistance);var env=ring.getEnvelopeInternal(),envMinDimension=Math.min(env.getHeight(),env.getWidth());return bufferDistance<0&&2*Math.abs(bufferDistance)>envMinDimension},addCollection:function(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.add(g)}},interfaces_:function(){return[]},getClass:function(){return OffsetCurveSetBuilder}}),extend(IntersectionAdder.prototype,{isTrivialIntersection:function(e0,segIndex0,e1,segIndex1){if(e0===e1&&1===this._li.getIntersectionNum()){if(IntersectionAdder.isAdjacentSegments(segIndex0,segIndex1))return!0;if(e0.isClosed()){var maxSegIndex=e0.size()-1;if(0===segIndex0&&segIndex1===maxSegIndex||0===segIndex1&&segIndex0===maxSegIndex)return!0}}return!1},getProperIntersectionPoint:function(){return this._properIntersectionPoint},hasProperInteriorIntersection:function(){return this._hasProperInterior},getLineIntersector:function(){return this._li},hasProperIntersection:function(){return this._hasProper},processIntersections:function(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)return null;this.numTests++;var p00=e0.getCoordinates()[segIndex0],p01=e0.getCoordinates()[segIndex0+1],p10=e1.getCoordinates()[segIndex1],p11=e1.getCoordinates()[segIndex1+1];this._li.computeIntersection(p00,p01,p10,p11),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(e0,segIndex0,e1,segIndex1)||(this._hasIntersection=!0,e0.addIntersections(this._li,segIndex0,0),e1.addIntersections(this._li,segIndex1,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},hasIntersection:function(){return this._hasIntersection},isDone:function(){return!1},hasInteriorIntersection:function(){return this._hasInterior},interfaces_:function(){return[SegmentIntersector]},getClass:function(){return IntersectionAdder}}),IntersectionAdder.isAdjacentSegments=function(i1,i2){return 1===Math.abs(i1-i2)},extend(BufferBuilder.prototype,{setWorkingPrecisionModel:function(pm){this._workingPrecisionModel=pm},insertUniqueEdge:function(e){var existingEdge=this._edgeList.findEqualEdge(e);if(null!==existingEdge){var existingLabel=existingEdge.getLabel(),labelToMerge=e.getLabel();existingEdge.isPointwiseEqual(e)||(labelToMerge=new Label(e.getLabel())).flip(),existingLabel.merge(labelToMerge);var mergeDelta=BufferBuilder.depthDelta(labelToMerge),newDelta=existingEdge.getDepthDelta()+mergeDelta;existingEdge.setDepthDelta(newDelta)}else this._edgeList.add(e),e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()))},buildSubgraphs:function(subgraphList,polyBuilder){for(var processedGraphs=new ArrayList,i=subgraphList.iterator();i.hasNext();){var subgraph=i.next(),p=subgraph.getRightmostCoordinate(),outsideDepth=new SubgraphDepthLocater(processedGraphs).getDepth(p);subgraph.computeDepth(outsideDepth),subgraph.findResultEdges(),processedGraphs.add(subgraph),polyBuilder.add(subgraph.getDirectedEdges(),subgraph.getNodes())}},createSubgraphs:function(graph){for(var subgraphList=new ArrayList,i=graph.getNodes().iterator();i.hasNext();){var node=i.next();if(!node.isVisited()){var subgraph=new BufferSubgraph;subgraph.create(node),subgraphList.add(subgraph)}}return Collections.sort(subgraphList,Collections.reverseOrder()),subgraphList},createEmptyResultGeometry:function(){return this._geomFact.createPolygon()},getNoder:function(precisionModel){if(null!==this._workingNoder)return this._workingNoder;var noder=new MCIndexNoder,li=new RobustLineIntersector;return li.setPrecisionModel(precisionModel),noder.setSegmentIntersector(new IntersectionAdder(li)),noder},buffer:function(g,distance){var precisionModel=this._workingPrecisionModel;null===precisionModel&&(precisionModel=g.getPrecisionModel()),this._geomFact=g.getFactory();var bufferSegStrList=new OffsetCurveSetBuilder(g,distance,new OffsetCurveBuilder(precisionModel,this._bufParams)).getCurves();if(bufferSegStrList.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(bufferSegStrList,precisionModel),this._graph=new PlanarGraph(new OverlayNodeFactory),this._graph.addEdges(this._edgeList.getEdges());var subgraphList=this.createSubgraphs(this._graph),polyBuilder=new PolygonBuilder(this._geomFact);this.buildSubgraphs(subgraphList,polyBuilder);var resultPolyList=polyBuilder.getPolygons();if(resultPolyList.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(resultPolyList)},computeNodedEdges:function(bufferSegStrList,precisionModel){var noder=this.getNoder(precisionModel);noder.computeNodes(bufferSegStrList);for(var i=noder.getNodedSubstrings().iterator();i.hasNext();){var segStr=i.next(),pts=segStr.getCoordinates();if(2!==pts.length||!pts[0].equals2D(pts[1])){var oldLabel=segStr.getData(),edge=new Edge(segStr.getCoordinates(),new Label(oldLabel));this.insertUniqueEdge(edge)}}},setNoder:function(noder){this._workingNoder=noder},interfaces_:function(){return[]},getClass:function(){return BufferBuilder}}),BufferBuilder.depthDelta=function(label){var lLoc=label.getLocation(0,Position.LEFT),rLoc=label.getLocation(0,Position.RIGHT);return lLoc===Location.INTERIOR&&rLoc===Location.EXTERIOR?1:lLoc===Location.EXTERIOR&&rLoc===Location.INTERIOR?-1:0},BufferBuilder.convertSegStrings=function(it){for(var fact=new GeometryFactory,lines=new ArrayList;it.hasNext();){var ss=it.next(),line=fact.createLineString(ss.getCoordinates());lines.add(line)}return fact.buildGeometry(lines)},extend(NodingValidator.prototype,{checkEndPtVertexIntersections:function(){if(0===arguments.length)for(i=this._segStrings.iterator();i.hasNext();){pts=(ss=i.next()).getCoordinates();this.checkEndPtVertexIntersections(pts[0],this._segStrings),this.checkEndPtVertexIntersections(pts[pts.length-1],this._segStrings)}else if(2===arguments.length)for(var testPt=arguments[0],i=arguments[1].iterator();i.hasNext();)for(var ss=i.next(),pts=ss.getCoordinates(),j=1;j<pts.length-1;j++)if(pts[j].equals(testPt))throw new RuntimeException("found endpt/interior pt intersection at index "+j+" :pt "+testPt)},checkInteriorIntersections:function(){if(0===arguments.length)for(var i=this._segStrings.iterator();i.hasNext();)for(var ss0=i.next(),j=this._segStrings.iterator();j.hasNext();){ss1=j.next();this.checkInteriorIntersections(ss0,ss1)}else if(2===arguments.length)for(var ss0=arguments[0],ss1=arguments[1],pts0=ss0.getCoordinates(),pts1=ss1.getCoordinates(),i0=0;i0<pts0.length-1;i0++)for(var i1=0;i1<pts1.length-1;i1++)this.checkInteriorIntersections(ss0,i0,ss1,i1);else if(4===arguments.length){var e0=arguments[0],segIndex0=arguments[1],e1=arguments[2],segIndex1=arguments[3];if(e0===e1&&segIndex0===segIndex1)return null;var p00=e0.getCoordinates()[segIndex0],p01=e0.getCoordinates()[segIndex0+1],p10=e1.getCoordinates()[segIndex1],p11=e1.getCoordinates()[segIndex1+1];if(this._li.computeIntersection(p00,p01,p10,p11),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,p00,p01)||this.hasInteriorIntersection(this._li,p10,p11)))throw new RuntimeException("found non-noded intersection at "+p00+"-"+p01+" and "+p10+"-"+p11)}},checkValid:function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},checkCollapses:function(){if(0===arguments.length)for(i=this._segStrings.iterator();i.hasNext();){ss=i.next();this.checkCollapses(ss)}else if(1===arguments.length)for(var ss,pts=(ss=arguments[0]).getCoordinates(),i=0;i<pts.length-2;i++)this.checkCollapse(pts[i],pts[i+1],pts[i+2])},hasInteriorIntersection:function(li,p0,p1){for(var i=0;i<li.getIntersectionNum();i++){var intPt=li.getIntersection(i);if(!intPt.equals(p0)&&!intPt.equals(p1))return!0}return!1},checkCollapse:function(p0,p1,p2){if(p0.equals(p2))throw new RuntimeException("found non-noded collapse at "+NodingValidator.fact.createLineString([p0,p1,p2]))},interfaces_:function(){return[]},getClass:function(){return NodingValidator}}),NodingValidator.fact=new GeometryFactory,extend(HotPixel.prototype,{intersectsScaled:function(p0,p1){var segMinx=Math.min(p0.x,p1.x),segMaxx=Math.max(p0.x,p1.x),segMiny=Math.min(p0.y,p1.y),segMaxy=Math.max(p0.y,p1.y),isOutsidePixelEnv=this._maxx<segMinx||this._minx>segMaxx||this._maxy<segMiny||this._miny>segMaxy;if(isOutsidePixelEnv)return!1;var intersects=this.intersectsToleranceSquare(p0,p1);return Assert.isTrue(!(isOutsidePixelEnv&&intersects),"Found bad envelope test"),intersects},initCorners:function(pt){this._minx=pt.x-.5,this._maxx=pt.x+.5,this._miny=pt.y-.5,this._maxy=pt.y+.5,this._corner[0]=new Coordinate(this._maxx,this._maxy),this._corner[1]=new Coordinate(this._minx,this._maxy),this._corner[2]=new Coordinate(this._minx,this._miny),this._corner[3]=new Coordinate(this._maxx,this._miny)},intersects:function(p0,p1){return 1===this._scaleFactor?this.intersectsScaled(p0,p1):(this.copyScaled(p0,this._p0Scaled),this.copyScaled(p1,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},scale:function(val){return Math.round(val*this._scaleFactor)},getCoordinate:function(){return this._originalPt},copyScaled:function(p,pScaled){pScaled.x=this.scale(p.x),pScaled.y=this.scale(p.y)},getSafeEnvelope:function(){if(null===this._safeEnv){var safeTolerance=HotPixel.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new Envelope(this._originalPt.x-safeTolerance,this._originalPt.x+safeTolerance,this._originalPt.y-safeTolerance,this._originalPt.y+safeTolerance)}return this._safeEnv},intersectsPixelClosure:function(p0,p1){return this._li.computeIntersection(p0,p1,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(p0,p1,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(p0,p1,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(p0,p1,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},intersectsToleranceSquare:function(p0,p1){var intersectsLeft=!1,intersectsBottom=!1;return this._li.computeIntersection(p0,p1,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(p0,p1,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(intersectsLeft=!0),this._li.computeIntersection(p0,p1,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(intersectsBottom=!0),this._li.computeIntersection(p0,p1,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!intersectsLeft||!intersectsBottom)||(!!p0.equals(this._pt)||!!p1.equals(this._pt))))))},addSnappedNode:function(segStr,segIndex){var p0=segStr.getCoordinate(segIndex),p1=segStr.getCoordinate(segIndex+1);return!!this.intersects(p0,p1)&&(segStr.addIntersection(this.getCoordinate(),segIndex),!0)},interfaces_:function(){return[]},getClass:function(){return HotPixel}}),HotPixel.SAFE_ENV_EXPANSION_FACTOR=.75,extend(MCIndexPointSnapper.prototype,{snap:function(){if(1===arguments.length){hotPixel=arguments[0];return this.snap(hotPixel,null,-1)}if(3===arguments.length){var hotPixel=arguments[0],parentEdge=arguments[1],hotPixelVertexIndex=arguments[2],pixelEnv=hotPixel.getSafeEnvelope(),hotPixelSnapAction=new HotPixelSnapAction(hotPixel,parentEdge,hotPixelVertexIndex);return this._index.query(pixelEnv,{interfaces_:function(){return[ItemVisitor]},visitItem:function(item){item.select(pixelEnv,hotPixelSnapAction)}}),hotPixelSnapAction.isNodeAdded()}},interfaces_:function(){return[]},getClass:function(){return MCIndexPointSnapper}}),inherits$1(HotPixelSnapAction,MonotoneChainSelectAction),extend(HotPixelSnapAction.prototype,{isNodeAdded:function(){return this._isNodeAdded},select:function(){if(2!==arguments.length)return MonotoneChainSelectAction.prototype.select.apply(this,arguments);var mc=arguments[0],startIndex=arguments[1],ss=mc.getContext();if(null!==this._parentEdge&&ss===this._parentEdge&&startIndex===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(ss,startIndex)},interfaces_:function(){return[]},getClass:function(){return HotPixelSnapAction}}),MCIndexPointSnapper.HotPixelSnapAction=HotPixelSnapAction,extend(InteriorIntersectionFinderAdder.prototype,{processIntersections:function(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)return null;var p00=e0.getCoordinates()[segIndex0],p01=e0.getCoordinates()[segIndex0+1],p10=e1.getCoordinates()[segIndex1],p11=e1.getCoordinates()[segIndex1+1];if(this._li.computeIntersection(p00,p01,p10,p11),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var intIndex=0;intIndex<this._li.getIntersectionNum();intIndex++)this._interiorIntersections.add(this._li.getIntersection(intIndex));e0.addIntersections(this._li,segIndex0,0),e1.addIntersections(this._li,segIndex1,1)}},isDone:function(){return!1},getInteriorIntersections:function(){return this._interiorIntersections},interfaces_:function(){return[SegmentIntersector]},getClass:function(){return InteriorIntersectionFinderAdder}}),extend(MCIndexSnapRounder.prototype,{checkCorrectness:function(inputSegmentStrings){var nv=new NodingValidator(NodedSegmentString.getNodedSubstrings(inputSegmentStrings));try{nv.checkValid()}catch(ex){if(!(ex instanceof Exception))throw ex;ex.printStackTrace()}},getNodedSubstrings:function(){return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)},snapRound:function(segStrings,li){var intersections=this.findInteriorIntersections(segStrings,li);this.computeIntersectionSnaps(intersections),this.computeVertexSnaps(segStrings)},findInteriorIntersections:function(segStrings,li){var intFinderAdder=new InteriorIntersectionFinderAdder(li);return this._noder.setSegmentIntersector(intFinderAdder),this._noder.computeNodes(segStrings),intFinderAdder.getInteriorIntersections()},computeVertexSnaps:function(){if(hasInterface(arguments[0],Collection))for(var i0=arguments[0].iterator();i0.hasNext();){var edge0=i0.next();this.computeVertexSnaps(edge0)}else if(arguments[0]instanceof NodedSegmentString)for(var e=arguments[0],pts0=e.getCoordinates(),i=0;i<pts0.length;i++){var hotPixel=new HotPixel(pts0[i],this._scaleFactor,this._li);this._pointSnapper.snap(hotPixel,e,i)&&e.addIntersection(pts0[i],i)}},computeNodes:function(inputSegmentStrings){this._nodedSegStrings=inputSegmentStrings,this._noder=new MCIndexNoder,this._pointSnapper=new MCIndexPointSnapper(this._noder.getIndex()),this.snapRound(inputSegmentStrings,this._li)},computeIntersectionSnaps:function(snapPts){for(var it=snapPts.iterator();it.hasNext();){var hotPixel=new HotPixel(it.next(),this._scaleFactor,this._li);this._pointSnapper.snap(hotPixel)}},interfaces_:function(){return[Noder]},getClass:function(){return MCIndexSnapRounder}}),extend(BufferOp.prototype,{bufferFixedPrecision:function(fixedPM){var noder=new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1)),fixedPM.getScale()),bufBuilder=new BufferBuilder(this._bufParams);bufBuilder.setWorkingPrecisionModel(fixedPM),bufBuilder.setNoder(noder),this._resultGeometry=bufBuilder.buffer(this._argGeom,this._distance)},bufferReducedPrecision:function(){if(0===arguments.length){for(var precDigits=BufferOp.MAX_PRECISION_DIGITS;precDigits>=0;precDigits--){try{this.bufferReducedPrecision(precDigits)}catch(ex){if(!(ex instanceof TopologyException))throw ex;this._saveException=ex}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var precisionDigits=arguments[0],fixedPM=new PrecisionModel(BufferOp.precisionScaleFactor(this._argGeom,this._distance,precisionDigits));this.bufferFixedPrecision(fixedPM)}},computeGeometry:function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var argPM=this._argGeom.getFactory().getPrecisionModel();argPM.getType()===PrecisionModel.FIXED?this.bufferFixedPrecision(argPM):this.bufferReducedPrecision()},setQuadrantSegments:function(quadrantSegments){this._bufParams.setQuadrantSegments(quadrantSegments)},bufferOriginalPrecision:function(){try{var bufBuilder=new BufferBuilder(this._bufParams);this._resultGeometry=bufBuilder.buffer(this._argGeom,this._distance)}catch(ex){if(!(ex instanceof RuntimeException))throw ex;this._saveException=ex}},getResultGeometry:function(distance){return this._distance=distance,this.computeGeometry(),this._resultGeometry},setEndCapStyle:function(endCapStyle){this._bufParams.setEndCapStyle(endCapStyle)},interfaces_:function(){return[]},getClass:function(){return BufferOp}}),BufferOp.bufferOp=function(){if(2===arguments.length){var g=arguments[0],distance=arguments[1];return geomBuf=new BufferOp(g).getResultGeometry(distance)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof Geometry&&"number"==typeof arguments[1]){var g=arguments[0],distance=arguments[1],quadrantSegments=arguments[2];(bufOp=new BufferOp(g)).setQuadrantSegments(quadrantSegments);return geomBuf=bufOp.getResultGeometry(distance)}if(arguments[2]instanceof BufferParameters&&arguments[0]instanceof Geometry&&"number"==typeof arguments[1]){var g=arguments[0],distance=arguments[1];return geomBuf=(bufOp=new BufferOp(g,arguments[2])).getResultGeometry(distance)}}else if(4===arguments.length){var g=arguments[0],distance=arguments[1],quadrantSegments=arguments[2],endCapStyle=arguments[3],bufOp=new BufferOp(g);bufOp.setQuadrantSegments(quadrantSegments),bufOp.setEndCapStyle(endCapStyle);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf}},BufferOp.precisionScaleFactor=function(g,distance,maxPrecisionDigits){var env=g.getEnvelopeInternal(),bufEnvMax=MathUtil.max(Math.abs(env.getMaxX()),Math.abs(env.getMaxY()),Math.abs(env.getMinX()),Math.abs(env.getMinY()))+2*(distance>0?distance:0),minUnitLog10=maxPrecisionDigits-Math.trunc(Math.log(bufEnvMax)/Math.log(10)+1);return Math.pow(10,minUnitLog10)},BufferOp.CAP_ROUND=BufferParameters.CAP_ROUND,BufferOp.CAP_BUTT=BufferParameters.CAP_FLAT,BufferOp.CAP_FLAT=BufferParameters.CAP_FLAT,BufferOp.CAP_SQUARE=BufferParameters.CAP_SQUARE,BufferOp.MAX_PRECISION_DIGITS=12,extend(PolygonExtracter.prototype,{filter:function(geom){geom instanceof Polygon&&this._comps.add(geom)},interfaces_:function(){return[GeometryFilter]},getClass:function(){return PolygonExtracter}}),PolygonExtracter.getPolygons=function(){if(1===arguments.length){geom=arguments[0];return PolygonExtracter.getPolygons(geom,new ArrayList)}if(2===arguments.length){var geom=arguments[0],list=arguments[1];return geom instanceof Polygon?list.add(geom):geom instanceof GeometryCollection&&geom.apply(new PolygonExtracter(list)),list}},extend(GeometryLocation.prototype,{isInsideArea:function(){return this._segIndex===GeometryLocation.INSIDE_AREA},getCoordinate:function(){return this._pt},getGeometryComponent:function(){return this._component},getSegmentIndex:function(){return this._segIndex},interfaces_:function(){return[]},getClass:function(){return GeometryLocation}}),GeometryLocation.INSIDE_AREA=-1,extend(PointExtracter.prototype,{filter:function(geom){geom instanceof Point&&this._pts.add(geom)},interfaces_:function(){return[GeometryFilter]},getClass:function(){return PointExtracter}}),PointExtracter.getPoints=function(){if(1===arguments.length){return(geom=arguments[0])instanceof Point?Collections.singletonList(geom):PointExtracter.getPoints(geom,new ArrayList)}if(2===arguments.length){var geom=arguments[0],list=arguments[1];return geom instanceof Point?list.add(geom):geom instanceof GeometryCollection&&geom.apply(new PointExtracter(list)),list}},extend(ConnectedElementLocationFilter.prototype,{filter:function(geom){(geom instanceof Point||geom instanceof LineString||geom instanceof Polygon)&&this._locations.add(new GeometryLocation(geom,0,geom.getCoordinate()))},interfaces_:function(){return[GeometryFilter]},getClass:function(){return ConnectedElementLocationFilter}}),ConnectedElementLocationFilter.getLocations=function(geom){var locations=new ArrayList;return geom.apply(new ConnectedElementLocationFilter(locations)),locations},extend(DistanceOp.prototype,{computeContainmentDistance:function(){if(0===arguments.length){locPtPoly=new Array(2).fill(null);if(this.computeContainmentDistance(0,locPtPoly),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,locPtPoly)}else if(2===arguments.length){var polyGeomIndex=arguments[0],locPtPoly=arguments[1],locationsIndex=1-polyGeomIndex;if((polys=PolygonExtracter.getPolygons(this._geom[polyGeomIndex])).size()>0){var insideLocs=ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);if(this.computeContainmentDistance(insideLocs,polys,locPtPoly),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[locationsIndex]=locPtPoly[0],this._minDistanceLocation[polyGeomIndex]=locPtPoly[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&hasInterface(arguments[0],List)&&hasInterface(arguments[1],List)){for(var locs=arguments[0],polys=arguments[1],locPtPoly=arguments[2],i=0;i<locs.size();i++)for(var loc=locs.get(i),j=0;j<polys.size();j++)if(this.computeContainmentDistance(loc,polys.get(j),locPtPoly),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof GeometryLocation&&arguments[1]instanceof Polygon){var ptLoc=arguments[0],poly=arguments[1],locPtPoly=arguments[2],pt=ptLoc.getCoordinate();if(Location.EXTERIOR!==this._ptLocator.locate(pt,poly))return this._minDistance=0,locPtPoly[0]=ptLoc,locPtPoly[1]=new GeometryLocation(poly,pt),null}},computeMinDistanceLinesPoints:function(lines,points,locGeom){for(var i=0;i<lines.size();i++)for(var line=lines.get(i),j=0;j<points.size();j++){var pt=points.get(j);if(this.computeMinDistance(line,pt,locGeom),this._minDistance<=this._terminateDistance)return null}},computeFacetDistance:function(){var locGeom=new Array(2).fill(null),lines0=LinearComponentExtracter.getLines(this._geom[0]),lines1=LinearComponentExtracter.getLines(this._geom[1]),pts0=PointExtracter.getPoints(this._geom[0]),pts1=PointExtracter.getPoints(this._geom[1]);return this.computeMinDistanceLines(lines0,lines1,locGeom),this.updateMinDistance(locGeom,!1),this._minDistance<=this._terminateDistance?null:(locGeom[0]=null,locGeom[1]=null,this.computeMinDistanceLinesPoints(lines0,pts1,locGeom),this.updateMinDistance(locGeom,!1),this._minDistance<=this._terminateDistance?null:(locGeom[0]=null,locGeom[1]=null,this.computeMinDistanceLinesPoints(lines1,pts0,locGeom),this.updateMinDistance(locGeom,!0),this._minDistance<=this._terminateDistance?null:(locGeom[0]=null,locGeom[1]=null,this.computeMinDistancePoints(pts0,pts1,locGeom),void this.updateMinDistance(locGeom,!1))))},nearestLocations:function(){return this.computeMinDistance(),this._minDistanceLocation},updateMinDistance:function(locGeom,flip){if(null===locGeom[0])return null;flip?(this._minDistanceLocation[0]=locGeom[1],this._minDistanceLocation[1]=locGeom[0]):(this._minDistanceLocation[0]=locGeom[0],this._minDistanceLocation[1]=locGeom[1])},nearestPoints:function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},computeMinDistance:function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof LineString&&arguments[1]instanceof Point){var line=arguments[0],pt=arguments[1],locGeom=arguments[2];if(line.getEnvelopeInternal().distance(pt.getEnvelopeInternal())>this._minDistance)return null;for(var coord0=line.getCoordinates(),coord=pt.getCoordinate(),i=0;i<coord0.length-1;i++){if((dist=CGAlgorithms.distancePointLine(coord,coord0[i],coord0[i+1]))<this._minDistance){this._minDistance=dist;var segClosestPoint=new LineSegment(coord0[i],coord0[i+1]).closestPoint(coord);locGeom[0]=new GeometryLocation(line,i,segClosestPoint),locGeom[1]=new GeometryLocation(pt,0,coord)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof LineString&&arguments[1]instanceof LineString){var line0=arguments[0],line1=arguments[1],locGeom=arguments[2];if(line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal())>this._minDistance)return null;for(var coord0=line0.getCoordinates(),coord1=line1.getCoordinates(),i=0;i<coord0.length-1;i++)for(var j=0;j<coord1.length-1;j++){var dist=CGAlgorithms.distanceLineLine(coord0[i],coord0[i+1],coord1[j],coord1[j+1]);if(dist<this._minDistance){this._minDistance=dist;var seg0=new LineSegment(coord0[i],coord0[i+1]),seg1=new LineSegment(coord1[j],coord1[j+1]),closestPt=seg0.closestPoints(seg1);locGeom[0]=new GeometryLocation(line0,i,closestPt[0]),locGeom[1]=new GeometryLocation(line1,j,closestPt[1])}if(this._minDistance<=this._terminateDistance)return null}}},computeMinDistancePoints:function(points0,points1,locGeom){for(var i=0;i<points0.size();i++)for(var pt0=points0.get(i),j=0;j<points1.size();j++){var pt1=points1.get(j),dist=pt0.getCoordinate().distance(pt1.getCoordinate());if(dist<this._minDistance&&(this._minDistance=dist,locGeom[0]=new GeometryLocation(pt0,0,pt0.getCoordinate()),locGeom[1]=new GeometryLocation(pt1,0,pt1.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},distance:function(){if(null===this._geom[0]||null===this._geom[1])throw new IllegalArgumentException("null geometries are not supported");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},computeMinDistanceLines:function(lines0,lines1,locGeom){for(var i=0;i<lines0.size();i++)for(var line0=lines0.get(i),j=0;j<lines1.size();j++){var line1=lines1.get(j);if(this.computeMinDistance(line0,line1,locGeom),this._minDistance<=this._terminateDistance)return null}},interfaces_:function(){return[]},getClass:function(){return DistanceOp}}),DistanceOp.distance=function(g0,g1){return new DistanceOp(g0,g1).distance()},DistanceOp.isWithinDistance=function(g0,g1,distance){return new DistanceOp(g0,g1,distance).distance()<=distance},DistanceOp.nearestPoints=function(g0,g1){return new DistanceOp(g0,g1).nearestPoints()},extend(EdgeString.prototype,{getCoordinates:function(){if(null===this._coordinates){for(var forwardDirectedEdges=0,reverseDirectedEdges=0,coordinateList=new CoordinateList,i=this._directedEdges.iterator();i.hasNext();){var directedEdge=i.next();directedEdge.getEdgeDirection()?forwardDirectedEdges++:reverseDirectedEdges++,coordinateList.add(directedEdge.getEdge().getLine().getCoordinates(),!1,directedEdge.getEdgeDirection())}this._coordinates=coordinateList.toCoordinateArray(),reverseDirectedEdges>forwardDirectedEdges&&CoordinateArrays.reverse(this._coordinates)}return this._coordinates},toLineString:function(){return this._factory.createLineString(this.getCoordinates())},add:function(directedEdge){this._directedEdges.add(directedEdge)},interfaces_:function(){return[]},getClass:function(){return EdgeString}}),extend(GraphComponent$1.prototype,{setVisited:function(isVisited){this._isVisited=isVisited},isMarked:function(){return this._isMarked},setData:function(data){this._data=data},getData:function(){return this._data},setMarked:function(isMarked){this._isMarked=isMarked},getContext:function(){return this._data},isVisited:function(){return this._isVisited},setContext:function(data){this._data=data},interfaces_:function(){return[]},getClass:function(){return GraphComponent$1}}),GraphComponent$1.getComponentWithVisitedState=function(i,visitedState){for(;i.hasNext();){var comp=i.next();if(comp.isVisited()===visitedState)return comp}return null},GraphComponent$1.setVisited=function(i,visited){for(;i.hasNext();){i.next().setVisited(visited)}},GraphComponent$1.setMarked=function(i,marked){for(;i.hasNext();){i.next().setMarked(marked)}},inherits$1(DirectedEdge$1,GraphComponent$1),extend(DirectedEdge$1.prototype,{isRemoved:function(){return null===this._parentEdge},compareDirection:function(e){return this._quadrant>e._quadrant?1:this._quadrant<e._quadrant?-1:CGAlgorithms.computeOrientation(e._p0,e._p1,this._p1)},getCoordinate:function(){return this._from.getCoordinate()},print:function(out){var className=this.getClass().getName(),lastDotPos=className.lastIndexOf("."),name=className.substring(lastDotPos+1);out.print("  "+name+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+this._angle)},getDirectionPt:function(){return this._p1},getAngle:function(){return this._angle},compareTo:function(obj){var de=obj;return this.compareDirection(de)},getFromNode:function(){return this._from},getSym:function(){return this._sym},setEdge:function(parentEdge){this._parentEdge=parentEdge},remove:function(){this._sym=null,this._parentEdge=null},getEdge:function(){return this._parentEdge},getQuadrant:function(){return this._quadrant},setSym:function(sym){this._sym=sym},getToNode:function(){return this._to},getEdgeDirection:function(){return this._edgeDirection},interfaces_:function(){return[Comparable]},getClass:function(){return DirectedEdge$1}}),DirectedEdge$1.toEdges=function(dirEdges){for(var edges=new ArrayList,i=dirEdges.iterator();i.hasNext();)edges.add(i.next()._parentEdge);return edges},inherits$1(LineMergeDirectedEdge,DirectedEdge$1),extend(LineMergeDirectedEdge.prototype,{getNext:function(){return 2!==this.getToNode().getDegree()?null:this.getToNode().getOutEdges().getEdges().get(0)===this.getSym()?this.getToNode().getOutEdges().getEdges().get(1):(Assert.isTrue(this.getToNode().getOutEdges().getEdges().get(1)===this.getSym()),this.getToNode().getOutEdges().getEdges().get(0))},interfaces_:function(){return[]},getClass:function(){return LineMergeDirectedEdge}}),inherits$1(Edge$1,GraphComponent$1),extend(Edge$1.prototype,{isRemoved:function(){return null===this._dirEdge},setDirectedEdges:function(de0,de1){this._dirEdge=[de0,de1],de0.setEdge(this),de1.setEdge(this),de0.setSym(de1),de1.setSym(de0),de0.getFromNode().addOutEdge(de0),de1.getFromNode().addOutEdge(de1)},getDirEdge:function(){if(Number.isInteger(arguments[0])){var i=arguments[0];return this._dirEdge[i]}if(arguments[0]instanceof Node$3){var fromNode=arguments[0];return this._dirEdge[0].getFromNode()===fromNode?this._dirEdge[0]:this._dirEdge[1].getFromNode()===fromNode?this._dirEdge[1]:null}},remove:function(){this._dirEdge=null},getOppositeNode:function(node){return this._dirEdge[0].getFromNode()===node?this._dirEdge[0].getToNode():this._dirEdge[1].getFromNode()===node?this._dirEdge[1].getToNode():null},interfaces_:function(){return[]},getClass:function(){return Edge$1}}),extend(DirectedEdgeStar$1.prototype,{getNextEdge:function(dirEdge){var i=this.getIndex(dirEdge);return this._outEdges.get(this.getIndex(i+1))},getCoordinate:function(){var it=this.iterator();if(!it.hasNext())return null;return it.next().getCoordinate()},iterator:function(){return this.sortEdges(),this._outEdges.iterator()},sortEdges:function(){this._sorted||(Collections.sort(this._outEdges),this._sorted=!0)},remove:function(de){this._outEdges.remove(de)},getEdges:function(){return this.sortEdges(),this._outEdges},getNextCWEdge:function(dirEdge){var i=this.getIndex(dirEdge);return this._outEdges.get(this.getIndex(i-1))},getIndex:function(){if(arguments[0]instanceof Edge$1){var edge=arguments[0];this.sortEdges();for(i=0;i<this._outEdges.size();i++){if((de=this._outEdges.get(i)).getEdge()===edge)return i}return-1}if(arguments[0]instanceof DirectedEdge$1){var dirEdge=arguments[0];this.sortEdges();for(i=0;i<this._outEdges.size();i++){var de=this._outEdges.get(i);if(de===dirEdge)return i}return-1}if(Number.isInteger(arguments[0])){var i,modi=(i=arguments[0])%this._outEdges.size();return modi<0&&(modi+=this._outEdges.size()),modi}},add:function(de){this._outEdges.add(de),this._sorted=!1},getDegree:function(){return this._outEdges.size()},interfaces_:function(){return[]},getClass:function(){return DirectedEdgeStar$1}}),inherits$1(Node$3,GraphComponent$1),extend(Node$3.prototype,{isRemoved:function(){return null===this._pt},addOutEdge:function(de){this._deStar.add(de)},getCoordinate:function(){return this._pt},getOutEdges:function(){return this._deStar},remove:function(){if(0===arguments.length)this._pt=null;else if(1===arguments.length){var de=arguments[0];this._deStar.remove(de)}},getIndex:function(edge){return this._deStar.getIndex(edge)},getDegree:function(){return this._deStar.getDegree()},interfaces_:function(){return[]},getClass:function(){return Node$3}}),Node$3.getEdgesBetween=function(node0,node1){var commonEdges=new HashSet(DirectedEdge$1.toEdges(node0.getOutEdges().getEdges())),edges1=DirectedEdge$1.toEdges(node1.getOutEdges().getEdges());return commonEdges.retainAll(edges1),commonEdges},inherits$1(LineMergeEdge,Edge$1),extend(LineMergeEdge.prototype,{getLine:function(){return this._line},interfaces_:function(){return[]},getClass:function(){return LineMergeEdge}}),extend(NodeMap$1.prototype,{find:function(coord){return this._nodeMap.get(coord)},iterator:function(){return this._nodeMap.values().iterator()},remove:function(pt){return this._nodeMap.remove(pt)},values:function(){return this._nodeMap.values()},add:function(n){return this._nodeMap.put(n.getCoordinate(),n),n},interfaces_:function(){return[]},getClass:function(){return NodeMap$1}}),extend(PlanarGraph$1.prototype,{findNodesOfDegree:function(degree){for(var nodesFound=new ArrayList,i=this.nodeIterator();i.hasNext();){var node=i.next();node.getDegree()===degree&&nodesFound.add(node)}return nodesFound},dirEdgeIterator:function(){return this._dirEdges.iterator()},edgeIterator:function(){return this._edges.iterator()},remove:function(){if(arguments[0]instanceof Edge$1){edge=arguments[0];this.remove(edge.getDirEdge(0)),this.remove(edge.getDirEdge(1)),this._edges.remove(edge),edge.remove()}else if(arguments[0]instanceof DirectedEdge$1){null!==(sym=(de=arguments[0]).getSym())&&sym.setSym(null),de.getFromNode().remove(de),de.remove(),this._dirEdges.remove(de)}else if(arguments[0]instanceof Node$3){for(var node=arguments[0],i=node.getOutEdges().getEdges().iterator();i.hasNext();){var de=i.next(),sym=de.getSym();null!==sym&&this.remove(sym),this._dirEdges.remove(de);var edge;null!==(edge=de.getEdge())&&this._edges.remove(edge)}this._nodeMap.remove(node.getCoordinate()),node.remove()}},findNode:function(pt){return this._nodeMap.find(pt)},getEdges:function(){return this._edges},nodeIterator:function(){return this._nodeMap.iterator()},contains:function(){if(arguments[0]instanceof Edge$1){var e=arguments[0];return this._edges.contains(e)}if(arguments[0]instanceof DirectedEdge$1){var de=arguments[0];return this._dirEdges.contains(de)}},add:function(){if(arguments[0]instanceof Node$3){var node=arguments[0];this._nodeMap.add(node)}else if(arguments[0]instanceof Edge$1){var edge=arguments[0];this._edges.add(edge),this.add(edge.getDirEdge(0)),this.add(edge.getDirEdge(1))}else if(arguments[0]instanceof DirectedEdge$1){var dirEdge=arguments[0];this._dirEdges.add(dirEdge)}},getNodes:function(){return this._nodeMap.values()},interfaces_:function(){return[]},getClass:function(){return PlanarGraph$1}}),inherits$1(LineMergeGraph,PlanarGraph$1),extend(LineMergeGraph.prototype,{addEdge:function(lineString){if(lineString.isEmpty())return null;var coordinates=CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());if(coordinates.length<=1)return null;var startCoordinate=coordinates[0],endCoordinate=coordinates[coordinates.length-1],startNode=this.getNode(startCoordinate),endNode=this.getNode(endCoordinate),directedEdge0=new LineMergeDirectedEdge(startNode,endNode,coordinates[1],!0),directedEdge1=new LineMergeDirectedEdge(endNode,startNode,coordinates[coordinates.length-2],!1),edge=new LineMergeEdge(lineString);edge.setDirectedEdges(directedEdge0,directedEdge1),this.add(edge)},getNode:function(coordinate){var node=this.findNode(coordinate);return null===node&&(node=new Node$3(coordinate),this.add(node)),node},interfaces_:function(){return[]},getClass:function(){return LineMergeGraph}}),extend(LineMerger.prototype,{buildEdgeStringsForUnprocessedNodes:function(){for(var i=this._graph.getNodes().iterator();i.hasNext();){var node=i.next();node.isMarked()||(Assert.isTrue(2===node.getDegree()),this.buildEdgeStringsStartingAt(node),node.setMarked(!0))}},buildEdgeStringsForNonDegree2Nodes:function(){for(var i=this._graph.getNodes().iterator();i.hasNext();){var node=i.next();2!==node.getDegree()&&(this.buildEdgeStringsStartingAt(node),node.setMarked(!0))}},buildEdgeStringsForObviousStartNodes:function(){this.buildEdgeStringsForNonDegree2Nodes()},getMergedLineStrings:function(){return this.merge(),this._mergedLineStrings},buildEdgeStringsStartingAt:function(node){for(var i=node.getOutEdges().iterator();i.hasNext();){var directedEdge=i.next();directedEdge.getEdge().isMarked()||this._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge))}},merge:function(){if(null!==this._mergedLineStrings)return null;GraphComponent$1.setMarked(this._graph.nodeIterator(),!1),GraphComponent$1.setMarked(this._graph.edgeIterator(),!1),this._edgeStrings=new ArrayList,this.buildEdgeStringsForObviousStartNodes(),this.buildEdgeStringsForIsolatedLoops(),this._mergedLineStrings=new ArrayList;for(var i=this._edgeStrings.iterator();i.hasNext();){var edgeString=i.next();this._mergedLineStrings.add(edgeString.toLineString())}},buildEdgeStringStartingWith:function(start){var edgeString=new EdgeString(this._factory),current=start;do{edgeString.add(current),current.getEdge().setMarked(!0),current=current.getNext()}while(null!==current&&current!==start);return edgeString},add:function(){if(arguments[0]instanceof Geometry){(geometry=arguments[0]).apply({interfaces_:function(){return[GeometryComponentFilter]},filter:function(component){component instanceof LineString&&this.add(component)}})}else if(hasInterface(arguments[0],Collection)){var geometries=arguments[0];this._mergedLineStrings=null;for(var i=geometries.iterator();i.hasNext();){var geometry=i.next();this.add(geometry)}}else if(arguments[0]instanceof LineString){var lineString=arguments[0];null===this._factory&&(this._factory=lineString.getFactory()),this._graph.addEdge(lineString)}},buildEdgeStringsForIsolatedLoops:function(){this.buildEdgeStringsForUnprocessedNodes()},interfaces_:function(){return[]},getClass:function(){return LineMerger}}),inherits$1(PolygonizeDirectedEdge,DirectedEdge$1),extend(PolygonizeDirectedEdge.prototype,{getNext:function(){return this._next},isInRing:function(){return null!==this._edgeRing},setRing:function(edgeRing){this._edgeRing=edgeRing},setLabel:function(label){this._label=label},getLabel:function(){return this._label},setNext:function(next){this._next=next},getRing:function(){return this._edgeRing},interfaces_:function(){return[]},getClass:function(){return PolygonizeDirectedEdge}}),inherits$1(PolygonizeEdge,Edge$1),extend(PolygonizeEdge.prototype,{getLine:function(){return this._line},interfaces_:function(){return[]},getClass:function(){return PolygonizeEdge}}),extend(ConnectedInteriorTester.prototype,{visitInteriorRing:function(ring,graph){var pts=ring.getCoordinates(),pt0=pts[0],pt1=ConnectedInteriorTester.findDifferentPoint(pts,pt0),e=graph.findEdgeInSameDirection(pt0,pt1),de=graph.findEdgeEnd(e),intDe=null;de.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR?intDe=de:de.getSym().getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR&&(intDe=de.getSym()),Assert.isTrue(null!==intDe,"unable to find dirEdge with Interior on RHS"),this.visitLinkedDirectedEdges(intDe)},visitShellInteriors:function(g,graph){if(g instanceof Polygon){p=g;this.visitInteriorRing(p.getExteriorRing(),graph)}if(g instanceof MultiPolygon)for(var mp=g,i=0;i<mp.getNumGeometries();i++){var p=mp.getGeometryN(i);this.visitInteriorRing(p.getExteriorRing(),graph)}},getCoordinate:function(){return this._disconnectedRingcoord},setInteriorEdgesInResult:function(graph){for(var it=graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next();de.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR&&de.setInResult(!0)}},visitLinkedDirectedEdges:function(start){var startDe=start,de=start;do{Assert.isTrue(null!==de,"found null Directed Edge"),de.setVisited(!0),de=de.getNext()}while(de!==startDe)},buildEdgeRings:function(dirEdges){for(var edgeRings=new ArrayList,it=dirEdges.iterator();it.hasNext();){var de=it.next();if(de.isInResult()&&null===de.getEdgeRing()){var er=new MaximalEdgeRing(de,this._geometryFactory);er.linkDirectedEdgesForMinimalEdgeRings();var minEdgeRings=er.buildMinimalRings();edgeRings.addAll(minEdgeRings)}}return edgeRings},hasUnvisitedShellEdge:function(edgeRings){for(var i=0;i<edgeRings.size();i++){var er=edgeRings.get(i);if(!er.isHole()){var edges=er.getEdges(),de=edges.get(0);if(de.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR)for(var j=0;j<edges.size();j++)if(!(de=edges.get(j)).isVisited())return this._disconnectedRingcoord=de.getCoordinate(),!0}}return!1},isInteriorsConnected:function(){var splitEdges=new ArrayList;this._geomGraph.computeSplitEdges(splitEdges);var graph=new PlanarGraph(new OverlayNodeFactory);graph.addEdges(splitEdges),this.setInteriorEdgesInResult(graph),graph.linkResultDirectedEdges();var edgeRings=this.buildEdgeRings(graph.getEdgeEnds());return this.visitShellInteriors(this._geomGraph.getGeometry(),graph),!this.hasUnvisitedShellEdge(edgeRings)},interfaces_:function(){return[]},getClass:function(){return ConnectedInteriorTester}}),ConnectedInteriorTester.findDifferentPoint=function(coord,pt){for(var i=0;i<coord.length;i++)if(!coord[i].equals(pt))return coord[i];return null},extend(EdgeEndBuilder.prototype,{createEdgeEndForNext:function(edge,l,eiCurr,eiNext){var iNext=eiCurr.segmentIndex+1;if(iNext>=edge.getNumPoints()&&null===eiNext)return null;var pNext=edge.getCoordinate(iNext);null!==eiNext&&eiNext.segmentIndex===eiCurr.segmentIndex&&(pNext=eiNext.coord);var e=new EdgeEnd(edge,eiCurr.coord,pNext,new Label(edge.getLabel()));l.add(e)},createEdgeEndForPrev:function(edge,l,eiCurr,eiPrev){var iPrev=eiCurr.segmentIndex;if(0===eiCurr.dist){if(0===iPrev)return null;iPrev--}var pPrev=edge.getCoordinate(iPrev);null!==eiPrev&&eiPrev.segmentIndex>=iPrev&&(pPrev=eiPrev.coord);var label=new Label(edge.getLabel());label.flip();var e=new EdgeEnd(edge,eiCurr.coord,pPrev,label);l.add(e)},computeEdgeEnds:function(){if(1===arguments.length){for(var edges=arguments[0],l=new ArrayList,i=edges;i.hasNext();){var e=i.next();this.computeEdgeEnds(e,l)}return l}if(2===arguments.length){var edge=arguments[0],l=arguments[1],eiList=edge.getEdgeIntersectionList();eiList.addEndpoints();var it=eiList.iterator(),eiPrev=null,eiCurr=null;if(!it.hasNext())return null;var eiNext=it.next();do{eiPrev=eiCurr,eiCurr=eiNext,eiNext=null,it.hasNext()&&(eiNext=it.next()),null!==eiCurr&&(this.createEdgeEndForPrev(edge,l,eiCurr,eiPrev),this.createEdgeEndForNext(edge,l,eiCurr,eiNext))}while(null!==eiCurr)}},interfaces_:function(){return[]},getClass:function(){return EdgeEndBuilder}}),inherits$1(EdgeEndBundle,EdgeEnd),extend(EdgeEndBundle.prototype,{insert:function(e){this._edgeEnds.add(e)},print:function(out){out.println("EdgeEndBundle--\x3e Label: "+this._label);for(var it=this.iterator();it.hasNext();){it.next().print(out),out.println()}},iterator:function(){return this._edgeEnds.iterator()},getEdgeEnds:function(){return this._edgeEnds},computeLabelOn:function(geomIndex,boundaryNodeRule){for(var boundaryCount=0,foundInterior=!1,it=this.iterator();it.hasNext();){(loc=it.next().getLabel().getLocation(geomIndex))===Location.BOUNDARY&&boundaryCount++,loc===Location.INTERIOR&&(foundInterior=!0)}var loc=Location.NONE;foundInterior&&(loc=Location.INTERIOR),boundaryCount>0&&(loc=GeometryGraph.determineBoundary(boundaryNodeRule,boundaryCount)),this._label.setLocation(geomIndex,loc)},computeLabelSide:function(geomIndex,side){for(var it=this.iterator();it.hasNext();){var e=it.next();if(e.getLabel().isArea()){var loc=e.getLabel().getLocation(geomIndex,side);if(loc===Location.INTERIOR)return this._label.setLocation(geomIndex,side,Location.INTERIOR),null;loc===Location.EXTERIOR&&this._label.setLocation(geomIndex,side,Location.EXTERIOR)}}},getLabel:function(){return this._label},computeLabelSides:function(geomIndex){this.computeLabelSide(geomIndex,Position.LEFT),this.computeLabelSide(geomIndex,Position.RIGHT)},updateIM:function(im){Edge.updateIM(this._label,im)},computeLabel:function(boundaryNodeRule){for(var isArea=!1,it=this.iterator();it.hasNext();){it.next().getLabel().isArea()&&(isArea=!0)}this._label=isArea?new Label(Location.NONE,Location.NONE,Location.NONE):new Label(Location.NONE);for(var i=0;i<2;i++)this.computeLabelOn(i,boundaryNodeRule),isArea&&this.computeLabelSides(i)},interfaces_:function(){return[]},getClass:function(){return EdgeEndBundle}}),inherits$1(EdgeEndBundleStar,EdgeEndStar),extend(EdgeEndBundleStar.prototype,{updateIM:function(im){for(var it=this.iterator();it.hasNext();){it.next().updateIM(im)}},insert:function(e){var eb=this._edgeMap.get(e);null===eb?(eb=new EdgeEndBundle(e),this.insertEdgeEnd(e,eb)):eb.insert(e)},interfaces_:function(){return[]},getClass:function(){return EdgeEndBundleStar}}),inherits$1(RelateNode,Node),extend(RelateNode.prototype,{updateIMFromEdges:function(im){this._edges.updateIM(im)},computeIM:function(im){im.setAtLeastIfValid(this._label.getLocation(0),this._label.getLocation(1),0)},interfaces_:function(){return[]},getClass:function(){return RelateNode}}),inherits$1(RelateNodeFactory,NodeFactory),extend(RelateNodeFactory.prototype,{createNode:function(coord){return new RelateNode(coord,new EdgeEndBundleStar)},interfaces_:function(){return[]},getClass:function(){return RelateNodeFactory}}),extend(RelateNodeGraph.prototype,{insertEdgeEnds:function(ee){for(var i=ee.iterator();i.hasNext();){var e=i.next();this._nodes.add(e)}},getNodeIterator:function(){return this._nodes.iterator()},copyNodesAndLabels:function(geomGraph,argIndex){for(var nodeIt=geomGraph.getNodeIterator();nodeIt.hasNext();){var graphNode=nodeIt.next();this._nodes.addNode(graphNode.getCoordinate()).setLabel(argIndex,graphNode.getLabel().getLocation(argIndex))}},build:function(geomGraph){this.computeIntersectionNodes(geomGraph,0),this.copyNodesAndLabels(geomGraph,0);var eeList=(new EdgeEndBuilder).computeEdgeEnds(geomGraph.getEdgeIterator());this.insertEdgeEnds(eeList)},computeIntersectionNodes:function(geomGraph,argIndex){for(var edgeIt=geomGraph.getEdgeIterator();edgeIt.hasNext();)for(var e=edgeIt.next(),eLoc=e.getLabel().getLocation(argIndex),eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next(),n=this._nodes.addNode(ei.coord);eLoc===Location.BOUNDARY?n.setLabelBoundary(argIndex):n.getLabel().isNull(argIndex)&&n.setLabel(argIndex,Location.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return RelateNodeGraph}}),extend(ConsistentAreaTester.prototype,{isNodeEdgeAreaLabelsConsistent:function(){for(var nodeIt=this._nodeGraph.getNodeIterator();nodeIt.hasNext();){var node=nodeIt.next();if(!node.getEdges().isAreaLabelsConsistent(this._geomGraph))return this._invalidPoint=node.getCoordinate().copy(),!1}return!0},getInvalidPoint:function(){return this._invalidPoint},hasDuplicateRings:function(){for(var nodeIt=this._nodeGraph.getNodeIterator();nodeIt.hasNext();)for(var i=nodeIt.next().getEdges().iterator();i.hasNext();){var eeb=i.next();if(eeb.getEdgeEnds().size()>1)return this._invalidPoint=eeb.getEdge().getCoordinate(0),!0}return!1},isNodeConsistentArea:function(){var intersector=this._geomGraph.computeSelfNodes(this._li,!0,!0);return intersector.hasProperIntersection()?(this._invalidPoint=intersector.getProperIntersectionPoint(),!1):(this._nodeGraph.build(this._geomGraph),this.isNodeEdgeAreaLabelsConsistent())},interfaces_:function(){return[]},getClass:function(){return ConsistentAreaTester}}),extend(IndexedNestedRingTester.prototype,{buildIndex:function(){this._index=new STRtree;for(var i=0;i<this._rings.size();i++){var ring=this._rings.get(i),env=ring.getEnvelopeInternal();this._index.insert(env,ring)}},getNestedPoint:function(){return this._nestedPt},isNonNested:function(){this.buildIndex();for(var i=0;i<this._rings.size();i++)for(var innerRing=this._rings.get(i),innerRingPts=innerRing.getCoordinates(),results=this._index.query(innerRing.getEnvelopeInternal()),j=0;j<results.size();j++){var searchRing=results.get(j),searchRingPts=searchRing.getCoordinates();if(innerRing!==searchRing&&innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())){var innerRingPt=IsValidOp.findPtNotNode(innerRingPts,searchRing,this._graph);if(null!==innerRingPt){if(CGAlgorithms.isPointInRing(innerRingPt,searchRingPts))return this._nestedPt=innerRingPt,!1}}}return!0},add:function(ring){this._rings.add(ring),this._totalEnv.expandToInclude(ring.getEnvelopeInternal())},interfaces_:function(){return[]},getClass:function(){return IndexedNestedRingTester}}),extend(TopologyValidationError.prototype,{getErrorType:function(){return this._errorType},getMessage:function(){return TopologyValidationError.errMsg[this._errorType]},getCoordinate:function(){return this._pt},toString:function(){var locStr="";return null!==this._pt&&(locStr=" at or near point "+this._pt),this.getMessage()+locStr},interfaces_:function(){return[]},getClass:function(){return TopologyValidationError}}),TopologyValidationError.ERROR=0,TopologyValidationError.REPEATED_POINT=1,TopologyValidationError.HOLE_OUTSIDE_SHELL=2,TopologyValidationError.NESTED_HOLES=3,TopologyValidationError.DISCONNECTED_INTERIOR=4,TopologyValidationError.SELF_INTERSECTION=5,TopologyValidationError.RING_SELF_INTERSECTION=6,TopologyValidationError.NESTED_SHELLS=7,TopologyValidationError.DUPLICATE_RINGS=8,TopologyValidationError.TOO_FEW_POINTS=9,TopologyValidationError.INVALID_COORDINATE=10,TopologyValidationError.RING_NOT_CLOSED=11,TopologyValidationError.errMsg=["Topology Validation Error","Repeated Point","Hole lies outside shell","Holes are nested","Interior is disconnected","Self-intersection","Ring Self-intersection","Nested shells","Duplicate Rings","Too few distinct points in geometry component","Invalid Coordinate","Ring is not closed"],extend(IsValidOp.prototype,{checkInvalidCoordinates:function(){if(arguments[0]instanceof Array){for(var coords=arguments[0],i=0;i<coords.length;i++)if(!IsValidOp.isValid(coords[i]))return this._validErr=new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE,coords[i]),null}else if(arguments[0]instanceof Polygon){var poly=arguments[0];if(this.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates()),null!==this._validErr)return null;for(i=0;i<poly.getNumInteriorRing();i++)if(this.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates()),null!==this._validErr)return null}},checkHolesNotNested:function(p,graph){for(var nestedTester=new IndexedNestedRingTester(graph),i=0;i<p.getNumInteriorRing();i++){var innerHole=p.getInteriorRingN(i);nestedTester.add(innerHole)}nestedTester.isNonNested()||(this._validErr=new TopologyValidationError(TopologyValidationError.NESTED_HOLES,nestedTester.getNestedPoint()))},checkConsistentArea:function(graph){var cat=new ConsistentAreaTester(graph);if(!cat.isNodeConsistentArea())return this._validErr=new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION,cat.getInvalidPoint()),null;cat.hasDuplicateRings()&&(this._validErr=new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS,cat.getInvalidPoint()))},isValid:function(){return this.checkValid(this._parentGeometry),null===this._validErr},checkShellInsideHole:function(shell,hole,graph){var shellPts=shell.getCoordinates(),holePts=hole.getCoordinates(),shellPt=IsValidOp.findPtNotNode(shellPts,hole,graph);if(null!==shellPt){if(!CGAlgorithms.isPointInRing(shellPt,holePts))return shellPt}var holePt=IsValidOp.findPtNotNode(holePts,shell,graph);if(null!==holePt){return CGAlgorithms.isPointInRing(holePt,shellPts)?holePt:null}return Assert.shouldNeverReachHere("points in shell and hole appear to be equal"),null},checkNoSelfIntersectingRings:function(graph){for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();if(this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList()),null!==this._validErr)return null}},checkConnectedInteriors:function(graph){var cit=new ConnectedInteriorTester(graph);cit.isInteriorsConnected()||(this._validErr=new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR,cit.getCoordinate()))},checkNoSelfIntersectingRing:function(eiList){for(var nodeSet=new TreeSet,isFirst=!0,i=eiList.iterator();i.hasNext();){var ei=i.next();if(isFirst)isFirst=!1;else{if(nodeSet.contains(ei.coord))return this._validErr=new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION,ei.coord),null;nodeSet.add(ei.coord)}}},checkHolesInShell:function(p,graph){for(var shell=p.getExteriorRing(),pir=new MCPointInRing(shell),i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i),holePt=IsValidOp.findPtNotNode(hole.getCoordinates(),shell,graph);if(null===holePt)return null;if(!pir.isInside(holePt))return this._validErr=new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL,holePt),null}},checkTooFewPoints:function(graph){if(graph.hasTooFewPoints())return this._validErr=new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS,graph.getInvalidPoint()),null},getValidationError:function(){return this.checkValid(this._parentGeometry),this._validErr},checkValid:function(){if(arguments[0]instanceof Point){g=arguments[0];this.checkInvalidCoordinates(g.getCoordinates())}else if(arguments[0]instanceof MultiPoint){g=arguments[0];this.checkInvalidCoordinates(g.getCoordinates())}else if(arguments[0]instanceof LinearRing){g=arguments[0];if(this.checkInvalidCoordinates(g.getCoordinates()),null!==this._validErr)return null;if(this.checkClosedRing(g),null!==this._validErr)return null;graph=new GeometryGraph(0,g);if(this.checkTooFewPoints(graph),null!==this._validErr)return null;var li=new RobustLineIntersector;graph.computeSelfNodes(li,!0,!0),this.checkNoSelfIntersectingRings(graph)}else if(arguments[0]instanceof LineString){g=arguments[0];if(this.checkInvalidCoordinates(g.getCoordinates()),null!==this._validErr)return null;graph=new GeometryGraph(0,g);this.checkTooFewPoints(graph)}else if(arguments[0]instanceof Polygon){g=arguments[0];if(this.checkInvalidCoordinates(g),null!==this._validErr)return null;if(this.checkClosedRings(g),null!==this._validErr)return null;graph=new GeometryGraph(0,g);if(this.checkTooFewPoints(graph),null!==this._validErr)return null;if(this.checkConsistentArea(graph),null!==this._validErr)return null;if(!this._isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(graph),null!==this._validErr))return null;if(this.checkHolesInShell(g,graph),null!==this._validErr)return null;if(this.checkHolesNotNested(g,graph),null!==this._validErr)return null;this.checkConnectedInteriors(graph)}else if(arguments[0]instanceof MultiPolygon){for(var g=arguments[0],i=0;i<g.getNumGeometries();i++){p=g.getGeometryN(i);if(this.checkInvalidCoordinates(p),null!==this._validErr)return null;if(this.checkClosedRings(p),null!==this._validErr)return null}var graph=new GeometryGraph(0,g);if(this.checkTooFewPoints(graph),null!==this._validErr)return null;if(this.checkConsistentArea(graph),null!==this._validErr)return null;if(!this._isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(graph),null!==this._validErr))return null;for(i=0;i<g.getNumGeometries();i++){p=g.getGeometryN(i);if(this.checkHolesInShell(p,graph),null!==this._validErr)return null}for(i=0;i<g.getNumGeometries();i++){var p=g.getGeometryN(i);if(this.checkHolesNotNested(p,graph),null!==this._validErr)return null}if(this.checkShellsNotNested(g,graph),null!==this._validErr)return null;this.checkConnectedInteriors(graph)}else if(arguments[0]instanceof GeometryCollection)for(var gc=arguments[0],i=0;i<gc.getNumGeometries();i++){g=gc.getGeometryN(i);if(this.checkValid(g),null!==this._validErr)return null}else if(arguments[0]instanceof Geometry){g=arguments[0];if(this._validErr=null,g.isEmpty())return null;if(g instanceof Point)this.checkValid(g);else if(g instanceof MultiPoint)this.checkValid(g);else if(g instanceof LinearRing)this.checkValid(g);else if(g instanceof LineString)this.checkValid(g);else if(g instanceof Polygon)this.checkValid(g);else if(g instanceof MultiPolygon)this.checkValid(g);else{if(!(g instanceof GeometryCollection))throw new UnsupportedOperationException(g.getClass().getName());this.checkValid(g)}}},setSelfTouchingRingFormingHoleValid:function(isValid){this._isSelfTouchingRingFormingHoleValid=isValid},checkShellNotNested:function(shell,p,graph){var shellPts=shell.getCoordinates(),polyShell=p.getExteriorRing(),polyPts=polyShell.getCoordinates(),shellPt=IsValidOp.findPtNotNode(shellPts,polyShell,graph);if(null===shellPt)return null;if(!CGAlgorithms.isPointInRing(shellPt,polyPts))return null;if(p.getNumInteriorRing()<=0)return this._validErr=new TopologyValidationError(TopologyValidationError.NESTED_SHELLS,shellPt),null;for(var badNestedPt=null,i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);if(null===(badNestedPt=this.checkShellInsideHole(shell,hole,graph)))return null}this._validErr=new TopologyValidationError(TopologyValidationError.NESTED_SHELLS,badNestedPt)},checkClosedRings:function(poly){if(this.checkClosedRing(poly.getExteriorRing()),null!==this._validErr)return null;for(var i=0;i<poly.getNumInteriorRing();i++)if(this.checkClosedRing(poly.getInteriorRingN(i)),null!==this._validErr)return null},checkClosedRing:function(ring){if(!ring.isClosed()){var pt=null;ring.getNumPoints()>=1&&(pt=ring.getCoordinateN(0)),this._validErr=new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED,pt)}},checkShellsNotNested:function(mp,graph){for(var i=0;i<mp.getNumGeometries();i++)for(var shell=mp.getGeometryN(i).getExteriorRing(),j=0;j<mp.getNumGeometries();j++)if(i!==j){var p2=mp.getGeometryN(j);if(this.checkShellNotNested(shell,p2,graph),null!==this._validErr)return null}},interfaces_:function(){return[]},getClass:function(){return IsValidOp}}),IsValidOp.findPtNotNode=function(testCoords,searchRing,graph){for(var eiList=graph.findEdge(searchRing).getEdgeIntersectionList(),i=0;i<testCoords.length;i++){var pt=testCoords[i];if(!eiList.isIntersection(pt))return pt}return null},IsValidOp.isValid=function(){if(arguments[0]instanceof Geometry){return new IsValidOp(arguments[0]).isValid()}if(arguments[0]instanceof Coordinate){var coord=arguments[0];return!Double.isNaN(coord.x)&&(!Double.isInfinite(coord.x)&&(!Double.isNaN(coord.y)&&!Double.isInfinite(coord.y)))}},extend(EdgeRing$1.prototype,{isIncluded:function(){return this._isIncluded},getCoordinates:function(){if(null===this._ringPts){for(var coordList=new CoordinateList,i=this._deList.iterator();i.hasNext();){var de=i.next(),edge=de.getEdge();EdgeRing$1.addEdge(edge.getLine().getCoordinates(),de.getEdgeDirection(),coordList)}this._ringPts=coordList.toCoordinateArray()}return this._ringPts},isIncludedSet:function(){return this._isIncludedSet},isValid:function(){return this.getCoordinates(),!(this._ringPts.length<=3)&&(this.getRing(),IsValidOp.isValid(this._ring))},build:function(startDE){var de=startDE;do{this.add(de),de.setRing(this),de=de.getNext(),Assert.isTrue(null!==de,"found null DE in ring"),Assert.isTrue(de===startDE||!de.isInRing(),"found DE already in ring")}while(de!==startDE)},isOuterHole:function(){return!!this._isHole&&!this.hasShell()},getPolygon:function(){var holeLR=null;if(null!==this._holes){holeLR=new Array(this._holes.size()).fill(null);for(var i=0;i<this._holes.size();i++)holeLR[i]=this._holes.get(i)}return this._factory.createPolygon(this._ring,holeLR)},isHole:function(){return this._isHole},isProcessed:function(){return this._isProcessed},addHole:function(){if(arguments[0]instanceof LinearRing){hole=arguments[0];null===this._holes&&(this._holes=new ArrayList),this._holes.add(hole)}else if(arguments[0]instanceof EdgeRing$1){var holeER=arguments[0];holeER.setShell(this);var hole=holeER.getRing();null===this._holes&&(this._holes=new ArrayList),this._holes.add(hole)}},setIncluded:function(isIncluded){this._isIncluded=isIncluded,this._isIncludedSet=!0},getOuterHole:function(){if(this.isHole())return null;for(var i=0;i<this._deList.size();i++){var adjRing=this._deList.get(i).getSym().getRing();if(adjRing.isOuterHole())return adjRing}return null},computeHole:function(){var ring=this.getRing();this._isHole=CGAlgorithms.isCCW(ring.getCoordinates())},hasShell:function(){return null!==this._shell},isOuterShell:function(){return null!==this.getOuterHole()},getLineString:function(){return this.getCoordinates(),this._factory.createLineString(this._ringPts)},toString:function(){return WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()))},getShell:function(){return this.isHole()?this._shell:this},add:function(de){this._deList.add(de)},getRing:function(){if(null!==this._ring)return this._ring;this.getCoordinates(),this._ringPts.length<3&&System.out.println(this._ringPts);try{this._ring=this._factory.createLinearRing(this._ringPts)}catch(ex){if(!(ex instanceof Exception))throw ex;System.out.println(this._ringPts)}return this._ring},updateIncluded:function(){if(this.isHole())return null;for(var i=0;i<this._deList.size();i++){var adjShell=this._deList.get(i).getSym().getRing().getShell();if(null!==adjShell&&adjShell.isIncludedSet())return this.setIncluded(!adjShell.isIncluded()),null}},setShell:function(shell){this._shell=shell},setProcessed:function(isProcessed){this._isProcessed=isProcessed},interfaces_:function(){return[]},getClass:function(){return EdgeRing$1}}),EdgeRing$1.findDirEdgesInRing=function(startDE){var de=startDE,edges=new ArrayList;do{edges.add(de),de=de.getNext(),Assert.isTrue(null!==de,"found null DE in ring"),Assert.isTrue(de===startDE||!de.isInRing(),"found DE already in ring")}while(de!==startDE);return edges},EdgeRing$1.addEdge=function(coords,isForward,coordList){if(isForward)for(i=0;i<coords.length;i++)coordList.add(coords[i],!1);else for(var i=coords.length-1;i>=0;i--)coordList.add(coords[i],!1)},EdgeRing$1.findEdgeRingContaining=function(testEr,shellList){for(var testRing=testEr.getRing(),testEnv=testRing.getEnvelopeInternal(),testPt=testRing.getCoordinateN(0),minShell=null,minShellEnv=null,it=shellList.iterator();it.hasNext();){var tryShell=it.next(),tryShellRing=tryShell.getRing(),tryShellEnv=tryShellRing.getEnvelopeInternal();if(!tryShellEnv.equals(testEnv)&&tryShellEnv.contains(testEnv)){testPt=CoordinateArrays.ptNotInList(testRing.getCoordinates(),tryShellRing.getCoordinates());var isContained=!1;CGAlgorithms.isPointInRing(testPt,tryShellRing.getCoordinates())&&(isContained=!0),isContained&&(null===minShell||minShellEnv.contains(tryShellEnv))&&(minShellEnv=(minShell=tryShell).getRing().getEnvelopeInternal())}}return minShell},extend(EnvelopeComparator.prototype,{compare:function(obj0,obj1){var r1=obj1;return obj0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope())},interfaces_:function(){return[Comparator]},getClass:function(){return EnvelopeComparator}}),EdgeRing$1.EnvelopeComparator=EnvelopeComparator,inherits$1(PolygonizeGraph,PlanarGraph$1),extend(PolygonizeGraph.prototype,{findEdgeRing:function(startDE){var er=new EdgeRing$1(this._factory);return er.build(startDE),er},computeDepthParity:function(){if(0===arguments.length)for(;;){if(null===(de=null))return null;this.computeDepthParity(de)}else if(1===arguments.length)var de=arguments[0]},computeNextCWEdges:function(){for(var iNode=this.nodeIterator();iNode.hasNext();){var node=iNode.next();PolygonizeGraph.computeNextCWEdges(node)}},addEdge:function(line){if(line.isEmpty())return null;var linePts=CoordinateArrays.removeRepeatedPoints(line.getCoordinates());if(linePts.length<2)return null;var startPt=linePts[0],endPt=linePts[linePts.length-1],nStart=this.getNode(startPt),nEnd=this.getNode(endPt),de0=new PolygonizeDirectedEdge(nStart,nEnd,linePts[1],!0),de1=new PolygonizeDirectedEdge(nEnd,nStart,linePts[linePts.length-2],!1),edge=new PolygonizeEdge(line);edge.setDirectedEdges(de0,de1),this.add(edge)},deleteCutEdges:function(){this.computeNextCWEdges(),PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);for(var cutLines=new ArrayList,i=this._dirEdges.iterator();i.hasNext();){var de=i.next();if(!de.isMarked()){var sym=de.getSym();if(de.getLabel()===sym.getLabel()){de.setMarked(!0),sym.setMarked(!0);var e=de.getEdge();cutLines.add(e.getLine())}}}return cutLines},getEdgeRings:function(){this.computeNextCWEdges(),PolygonizeGraph.label(this._dirEdges,-1);var maximalRings=PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);this.convertMaximalToMinimalEdgeRings(maximalRings);for(var edgeRingList=new ArrayList,i=this._dirEdges.iterator();i.hasNext();){var de=i.next();if(!de.isMarked()&&!de.isInRing()){var er=this.findEdgeRing(de);edgeRingList.add(er)}}return edgeRingList},getNode:function(pt){var node=this.findNode(pt);return null===node&&(node=new Node$3(pt),this.add(node)),node},convertMaximalToMinimalEdgeRings:function(ringEdges){for(var i=ringEdges.iterator();i.hasNext();){var de=i.next(),label=de.getLabel(),intNodes=PolygonizeGraph.findIntersectionNodes(de,label);if(null!==intNodes)for(var iNode=intNodes.iterator();iNode.hasNext();){var node=iNode.next();PolygonizeGraph.computeNextCCWEdges(node,label)}}},deleteDangles:function(){for(var nodesToRemove=this.findNodesOfDegree(1),dangleLines=new HashSet,nodeStack=new Stack$2,i=nodesToRemove.iterator();i.hasNext();)nodeStack.push(i.next());for(;!nodeStack.isEmpty();){var node=nodeStack.pop();PolygonizeGraph.deleteAllEdges(node);for(i=node.getOutEdges().getEdges().iterator();i.hasNext();){var de=i.next();de.setMarked(!0);var sym=de.getSym();null!==sym&&sym.setMarked(!0);var e=de.getEdge();dangleLines.add(e.getLine());var toNode=de.getToNode();1===PolygonizeGraph.getDegreeNonDeleted(toNode)&&nodeStack.push(toNode)}}return dangleLines},interfaces_:function(){return[]},getClass:function(){return PolygonizeGraph}}),PolygonizeGraph.findLabeledEdgeRings=function(dirEdges){for(var edgeRingStarts=new ArrayList,currLabel=1,i=dirEdges.iterator();i.hasNext();){var de=i.next();if(!de.isMarked()&&!(de.getLabel()>=0)){edgeRingStarts.add(de);var edges=EdgeRing$1.findDirEdgesInRing(de);PolygonizeGraph.label(edges,currLabel),currLabel++}}return edgeRingStarts},PolygonizeGraph.getDegreeNonDeleted=function(node){for(var degree=0,i=node.getOutEdges().getEdges().iterator();i.hasNext();){i.next().isMarked()||degree++}return degree},PolygonizeGraph.deleteAllEdges=function(node){for(var i=node.getOutEdges().getEdges().iterator();i.hasNext();){var de=i.next();de.setMarked(!0);var sym=de.getSym();null!==sym&&sym.setMarked(!0)}},PolygonizeGraph.label=function(dirEdges,label){for(var i=dirEdges.iterator();i.hasNext();){i.next().setLabel(label)}},PolygonizeGraph.computeNextCWEdges=function(node){for(var startDE=null,prevDE=null,i=node.getOutEdges().getEdges().iterator();i.hasNext();){var outDE=i.next();if(!outDE.isMarked()){if(null===startDE&&(startDE=outDE),null!==prevDE){(sym=prevDE.getSym()).setNext(outDE)}prevDE=outDE}}if(null!==prevDE){var sym=prevDE.getSym();sym.setNext(startDE)}},PolygonizeGraph.computeNextCCWEdges=function(node,label){for(var firstOutDE=null,prevInDE=null,edges=node.getOutEdges().getEdges(),i=edges.size()-1;i>=0;i--){var de=edges.get(i),sym=de.getSym(),outDE=null;de.getLabel()===label&&(outDE=de);var inDE=null;sym.getLabel()===label&&(inDE=sym),null===outDE&&null===inDE||(null!==inDE&&(prevInDE=inDE),null!==outDE&&(null!==prevInDE&&(prevInDE.setNext(outDE),prevInDE=null),null===firstOutDE&&(firstOutDE=outDE)))}null!==prevInDE&&(Assert.isTrue(null!==firstOutDE),prevInDE.setNext(firstOutDE))},PolygonizeGraph.getDegree=function(node,label){for(var degree=0,i=node.getOutEdges().getEdges().iterator();i.hasNext();){i.next().getLabel()===label&&degree++}return degree},PolygonizeGraph.findIntersectionNodes=function(startDE,label){var de=startDE,intNodes=null;do{var node=de.getFromNode();PolygonizeGraph.getDegree(node,label)>1&&(null===intNodes&&(intNodes=new ArrayList),intNodes.add(node)),de=de.getNext(),Assert.isTrue(null!==de,"found null DE in ring"),Assert.isTrue(de===startDE||!de.isInRing(),"found DE already in ring")}while(de!==startDE);return intNodes},extend(Polygonizer.prototype,{getGeometry:function(){return null===this._geomFactory&&(this._geomFactory=new GeometryFactory),this.polygonize(),this._extractOnlyPolygonal?this._geomFactory.buildGeometry(this._polyList):this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList))},getInvalidRingLines:function(){return this.polygonize(),this._invalidRingLines},findValidRings:function(edgeRingList,validEdgeRingList,invalidRingList){for(var i=edgeRingList.iterator();i.hasNext();){var er=i.next();er.isValid()?validEdgeRingList.add(er):invalidRingList.add(er.getLineString())}},polygonize:function(){if(null!==this._polyList)return null;if(this._polyList=new ArrayList,null===this._graph)return null;this._dangles=this._graph.deleteDangles(),this._cutEdges=this._graph.deleteCutEdges();var edgeRingList=this._graph.getEdgeRings(),validEdgeRingList=new ArrayList;this._invalidRingLines=new ArrayList,this._isCheckingRingsValid?this.findValidRings(edgeRingList,validEdgeRingList,this._invalidRingLines):validEdgeRingList=edgeRingList,this.findShellsAndHoles(validEdgeRingList),Polygonizer.assignHolesToShells(this._holeList,this._shellList),Collections.sort(this._shellList,new EdgeRing$1.EnvelopeComparator);var includeAll=!0;this._extractOnlyPolygonal&&(Polygonizer.findDisjointShells(this._shellList),includeAll=!1),this._polyList=Polygonizer.extractPolygons(this._shellList,includeAll)},getDangles:function(){return this.polygonize(),this._dangles},getCutEdges:function(){return this.polygonize(),this._cutEdges},getPolygons:function(){return this.polygonize(),this._polyList},add:function(){if(hasInterface(arguments[0],Collection))for(var i=arguments[0].iterator();i.hasNext();){var geometry=i.next();this.add(geometry)}else if(arguments[0]instanceof LineString){var line=arguments[0];this._geomFactory=line.getFactory(),null===this._graph&&(this._graph=new PolygonizeGraph(this._geomFactory)),this._graph.addEdge(line)}else if(arguments[0]instanceof Geometry){arguments[0].apply(this._lineStringAdder)}},setCheckRingsValid:function(isCheckingRingsValid){this._isCheckingRingsValid=isCheckingRingsValid},findShellsAndHoles:function(edgeRingList){this._holeList=new ArrayList,this._shellList=new ArrayList;for(var i=edgeRingList.iterator();i.hasNext();){var er=i.next();er.computeHole(),er.isHole()?this._holeList.add(er):this._shellList.add(er)}},interfaces_:function(){return[]},getClass:function(){return Polygonizer}}),Polygonizer.findOuterShells=function(shellList){for(var i=shellList.iterator();i.hasNext();){var er=i.next(),outerHoleER=er.getOuterHole();null===outerHoleER||outerHoleER.isProcessed()||(er.setIncluded(!0),outerHoleER.setProcessed(!0))}},Polygonizer.extractPolygons=function(shellList,includeAll){for(var polyList=new ArrayList,i=shellList.iterator();i.hasNext();){var er=i.next();(includeAll||er.isIncluded())&&polyList.add(er.getPolygon())}return polyList},Polygonizer.assignHolesToShells=function(holeList,shellList){for(var i=holeList.iterator();i.hasNext();){var holeER=i.next();Polygonizer.assignHoleToShell(holeER,shellList)}},Polygonizer.assignHoleToShell=function(holeER,shellList){var shell=EdgeRing$1.findEdgeRingContaining(holeER,shellList);null!==shell&&shell.addHole(holeER)},Polygonizer.findDisjointShells=function(shellList){Polygonizer.findOuterShells(shellList);var isMoreToScan=null;do{isMoreToScan=!1;for(var i=shellList.iterator();i.hasNext();){var er=i.next();er.isIncludedSet()||(er.updateIncluded(),er.isIncludedSet()||(isMoreToScan=!0))}}while(isMoreToScan)},extend(LineStringAdder.prototype,{filter:function(g){g instanceof LineString&&this.p.add(g)},interfaces_:function(){return[GeometryComponentFilter]},getClass:function(){return LineStringAdder}}),Polygonizer.LineStringAdder=LineStringAdder,extend(RelateComputer.prototype,{insertEdgeEnds:function(ee){for(var i=ee.iterator();i.hasNext();){var e=i.next();this._nodes.add(e)}},computeProperIntersectionIM:function(intersector,im){var dimA=this._arg[0].getGeometry().getDimension(),dimB=this._arg[1].getGeometry().getDimension(),hasProper=intersector.hasProperIntersection(),hasProperInterior=intersector.hasProperInteriorIntersection();2===dimA&&2===dimB?hasProper&&im.setAtLeast("212101212"):2===dimA&&1===dimB?(hasProper&&im.setAtLeast("FFF0FFFF2"),hasProperInterior&&im.setAtLeast("1FFFFF1FF")):1===dimA&&2===dimB?(hasProper&&im.setAtLeast("F0FFFFFF2"),hasProperInterior&&im.setAtLeast("1F1FFFFFF")):1===dimA&&1===dimB&&hasProperInterior&&im.setAtLeast("0FFFFFFFF")},labelIsolatedEdges:function(thisIndex,targetIndex){for(var ei=this._arg[thisIndex].getEdgeIterator();ei.hasNext();){var e=ei.next();e.isIsolated()&&(this.labelIsolatedEdge(e,targetIndex,this._arg[targetIndex].getGeometry()),this._isolatedEdges.add(e))}},labelIsolatedEdge:function(e,targetIndex,target){if(target.getDimension()>0){var loc=this._ptLocator.locate(e.getCoordinate(),target);e.getLabel().setAllLocations(targetIndex,loc)}else e.getLabel().setAllLocations(targetIndex,Location.EXTERIOR)},computeIM:function(){var im=new IntersectionMatrix;if(im.set(Location.EXTERIOR,Location.EXTERIOR,2),!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal()))return this.computeDisjointIM(im),im;this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1);var intersector=this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!1);this.computeIntersectionNodes(0),this.computeIntersectionNodes(1),this.copyNodesAndLabels(0),this.copyNodesAndLabels(1),this.labelIsolatedNodes(),this.computeProperIntersectionIM(intersector,im);var eeBuilder=new EdgeEndBuilder,ee0=eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator());this.insertEdgeEnds(ee0);var ee1=eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator());return this.insertEdgeEnds(ee1),this.labelNodeEdges(),this.labelIsolatedEdges(0,1),this.labelIsolatedEdges(1,0),this.updateIM(im),im},labelNodeEdges:function(){for(var ni=this._nodes.iterator();ni.hasNext();){ni.next().getEdges().computeLabelling(this._arg)}},copyNodesAndLabels:function(argIndex){for(var i=this._arg[argIndex].getNodeIterator();i.hasNext();){var graphNode=i.next();this._nodes.addNode(graphNode.getCoordinate()).setLabel(argIndex,graphNode.getLabel().getLocation(argIndex))}},labelIntersectionNodes:function(argIndex){for(var i=this._arg[argIndex].getEdgeIterator();i.hasNext();)for(var e=i.next(),eLoc=e.getLabel().getLocation(argIndex),eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next(),n=this._nodes.find(ei.coord);n.getLabel().isNull(argIndex)&&(eLoc===Location.BOUNDARY?n.setLabelBoundary(argIndex):n.setLabel(argIndex,Location.INTERIOR))}},labelIsolatedNode:function(n,targetIndex){var loc=this._ptLocator.locate(n.getCoordinate(),this._arg[targetIndex].getGeometry());n.getLabel().setAllLocations(targetIndex,loc)},computeIntersectionNodes:function(argIndex){for(var i=this._arg[argIndex].getEdgeIterator();i.hasNext();)for(var e=i.next(),eLoc=e.getLabel().getLocation(argIndex),eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next(),n=this._nodes.addNode(ei.coord);eLoc===Location.BOUNDARY?n.setLabelBoundary(argIndex):n.getLabel().isNull(argIndex)&&n.setLabel(argIndex,Location.INTERIOR)}},labelIsolatedNodes:function(){for(var ni=this._nodes.iterator();ni.hasNext();){var n=ni.next(),label=n.getLabel();Assert.isTrue(label.getGeometryCount()>0,"node with empty label found"),n.isIsolated()&&(label.isNull(0)?this.labelIsolatedNode(n,0):this.labelIsolatedNode(n,1))}},updateIM:function(im){for(var ei=this._isolatedEdges.iterator();ei.hasNext();){ei.next().updateIM(im)}for(var ni=this._nodes.iterator();ni.hasNext();){var node=ni.next();node.updateIM(im),node.updateIMFromEdges(im)}},computeDisjointIM:function(im){var ga=this._arg[0].getGeometry();ga.isEmpty()||(im.set(Location.INTERIOR,Location.EXTERIOR,ga.getDimension()),im.set(Location.BOUNDARY,Location.EXTERIOR,ga.getBoundaryDimension()));var gb=this._arg[1].getGeometry();gb.isEmpty()||(im.set(Location.EXTERIOR,Location.INTERIOR,gb.getDimension()),im.set(Location.EXTERIOR,Location.BOUNDARY,gb.getBoundaryDimension()))},interfaces_:function(){return[]},getClass:function(){return RelateComputer}}),extend(RectangleContains.prototype,{isContainedInBoundary:function(geom){if(geom instanceof Polygon)return!1;if(geom instanceof Point)return this.isPointContainedInBoundary(geom);if(geom instanceof LineString)return this.isLineStringContainedInBoundary(geom);for(var i=0;i<geom.getNumGeometries();i++){var comp=geom.getGeometryN(i);if(!this.isContainedInBoundary(comp))return!1}return!0},isLineSegmentContainedInBoundary:function(p0,p1){if(p0.equals(p1))return this.isPointContainedInBoundary(p0);if(p0.x===p1.x){if(p0.x===this._rectEnv.getMinX()||p0.x===this._rectEnv.getMaxX())return!0}else if(p0.y===p1.y&&(p0.y===this._rectEnv.getMinY()||p0.y===this._rectEnv.getMaxY()))return!0;return!1},isLineStringContainedInBoundary:function(line){for(var seq=line.getCoordinateSequence(),p0=new Coordinate,p1=new Coordinate,i=0;i<seq.size()-1;i++)if(seq.getCoordinate(i,p0),seq.getCoordinate(i+1,p1),!this.isLineSegmentContainedInBoundary(p0,p1))return!1;return!0},isPointContainedInBoundary:function(){if(arguments[0]instanceof Point){var point=arguments[0];return this.isPointContainedInBoundary(point.getCoordinate())}if(arguments[0]instanceof Coordinate){var pt=arguments[0];return pt.x===this._rectEnv.getMinX()||pt.x===this._rectEnv.getMaxX()||pt.y===this._rectEnv.getMinY()||pt.y===this._rectEnv.getMaxY()}},contains:function(geom){return!!this._rectEnv.contains(geom.getEnvelopeInternal())&&!this.isContainedInBoundary(geom)},interfaces_:function(){return[]},getClass:function(){return RectangleContains}}),RectangleContains.contains=function(rectangle,b){return new RectangleContains(rectangle).contains(b)},extend(RectangleLineIntersector.prototype,{intersects:function(p0,p1){var segEnv=new Envelope(p0,p1);if(!this._rectEnv.intersects(segEnv))return!1;if(this._rectEnv.intersects(p0))return!0;if(this._rectEnv.intersects(p1))return!0;if(p0.compareTo(p1)>0){var tmp=p0;p0=p1,p1=tmp}var isSegUpwards=!1;return p1.y>p0.y&&(isSegUpwards=!0),isSegUpwards?this._li.computeIntersection(p0,p1,this._diagDown0,this._diagDown1):this._li.computeIntersection(p0,p1,this._diagUp0,this._diagUp1),!!this._li.hasIntersection()},interfaces_:function(){return[]},getClass:function(){return RectangleLineIntersector}}),extend(ShortCircuitedGeometryVisitor.prototype,{applyTo:function(geom){for(var i=0;i<geom.getNumGeometries()&&!this._isDone;i++){var element=geom.getGeometryN(i);if(element instanceof GeometryCollection)this.applyTo(element);else if(this.visit(element),this.isDone())return this._isDone=!0,null}},interfaces_:function(){return[]},getClass:function(){return ShortCircuitedGeometryVisitor}}),extend(RectangleIntersects.prototype,{intersects:function(geom){if(!this._rectEnv.intersects(geom.getEnvelopeInternal()))return!1;var visitor=new EnvelopeIntersectsVisitor(this._rectEnv);if(visitor.applyTo(geom),visitor.intersects())return!0;var ecpVisitor=new GeometryContainsPointVisitor(this._rectangle);if(ecpVisitor.applyTo(geom),ecpVisitor.containsPoint())return!0;var riVisitor=new RectangleIntersectsSegmentVisitor(this._rectangle);return riVisitor.applyTo(geom),!!riVisitor.intersects()},interfaces_:function(){return[]},getClass:function(){return RectangleIntersects}}),RectangleIntersects.intersects=function(rectangle,b){return new RectangleIntersects(rectangle).intersects(b)},inherits$1(EnvelopeIntersectsVisitor,ShortCircuitedGeometryVisitor),extend(EnvelopeIntersectsVisitor.prototype,{isDone:function(){return!0===this._intersects},visit:function(element){var elementEnv=element.getEnvelopeInternal();return this._rectEnv.intersects(elementEnv)?this._rectEnv.contains(elementEnv)?(this._intersects=!0,null):elementEnv.getMinX()>=this._rectEnv.getMinX()&&elementEnv.getMaxX()<=this._rectEnv.getMaxX()?(this._intersects=!0,null):elementEnv.getMinY()>=this._rectEnv.getMinY()&&elementEnv.getMaxY()<=this._rectEnv.getMaxY()?(this._intersects=!0,null):void 0:null},intersects:function(){return this._intersects},interfaces_:function(){return[]},getClass:function(){return EnvelopeIntersectsVisitor}}),inherits$1(GeometryContainsPointVisitor,ShortCircuitedGeometryVisitor),extend(GeometryContainsPointVisitor.prototype,{isDone:function(){return!0===this._containsPoint},visit:function(geom){if(!(geom instanceof Polygon))return null;var elementEnv=geom.getEnvelopeInternal();if(!this._rectEnv.intersects(elementEnv))return null;for(var rectPt=new Coordinate,i=0;i<4;i++)if(this._rectSeq.getCoordinate(i,rectPt),elementEnv.contains(rectPt)&&SimplePointInAreaLocator.containsPointInPolygon(rectPt,geom))return this._containsPoint=!0,null},containsPoint:function(){return this._containsPoint},interfaces_:function(){return[]},getClass:function(){return GeometryContainsPointVisitor}}),inherits$1(RectangleIntersectsSegmentVisitor,ShortCircuitedGeometryVisitor),extend(RectangleIntersectsSegmentVisitor.prototype,{intersects:function(){return this._hasIntersection},isDone:function(){return!0===this._hasIntersection},visit:function(geom){var elementEnv=geom.getEnvelopeInternal();if(!this._rectEnv.intersects(elementEnv))return null;var lines=LinearComponentExtracter.getLines(geom);this.checkIntersectionWithLineStrings(lines)},checkIntersectionWithLineStrings:function(lines){for(var i=lines.iterator();i.hasNext();){var testLine=i.next();if(this.checkIntersectionWithSegments(testLine),this._hasIntersection)return null}},checkIntersectionWithSegments:function(testLine){for(var seq1=testLine.getCoordinateSequence(),j=1;j<seq1.size();j++)if(seq1.getCoordinate(j-1,this._p0),seq1.getCoordinate(j,this._p1),this._rectIntersector.intersects(this._p0,this._p1))return this._hasIntersection=!0,null},interfaces_:function(){return[]},getClass:function(){return RectangleIntersectsSegmentVisitor}}),inherits$1(RelateOp,GeometryGraphOperation),extend(RelateOp.prototype,{getIntersectionMatrix:function(){return this._relate.computeIM()},interfaces_:function(){return[]},getClass:function(){return RelateOp}}),RelateOp.covers=function(g1,g2){return!!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())&&(!!g1.isRectangle()||RelateOp.relate(g1,g2).isCovers())},RelateOp.intersects=function(g1,g2){return!!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())&&(g1.isRectangle()?RectangleIntersects.intersects(g1,g2):g2.isRectangle()?RectangleIntersects.intersects(g2,g1):RelateOp.relate(g1,g2).isIntersects())},RelateOp.touches=function(g1,g2){return!!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())&&RelateOp.relate(g1,g2).isTouches(g1.getDimension(),g2.getDimension())},RelateOp.within=function(g1,g2){return g2.contains(g1)},RelateOp.coveredBy=function(g1,g2){return RelateOp.covers(g2,g1)},RelateOp.relate=function(){if(2===arguments.length){return im=(relOp=new RelateOp(a=arguments[0],b=arguments[1])).getIntersectionMatrix()}if(3===arguments.length){if("string"==typeof arguments[2]&&arguments[0]instanceof Geometry&&arguments[1]instanceof Geometry){var g1=arguments[0],g2=arguments[1],intersectionPattern=arguments[2];return RelateOp.relateWithCheck(g1,g2).matches(intersectionPattern)}if(hasInterface(arguments[2],BoundaryNodeRule)&&arguments[0]instanceof Geometry&&arguments[1]instanceof Geometry){var a=arguments[0],b=arguments[1],relOp=new RelateOp(a,b,arguments[2]),im=relOp.getIntersectionMatrix();return im}}},RelateOp.overlaps=function(g1,g2){return!!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())&&RelateOp.relate(g1,g2).isOverlaps(g1.getDimension(),g2.getDimension())},RelateOp.disjoint=function(g1,g2){return!g1.intersects(g2)},RelateOp.relateWithCheck=function(g1,g2){return g1.checkNotGeometryCollection(g1),g1.checkNotGeometryCollection(g2),RelateOp.relate(g1,g2)},RelateOp.crosses=function(g1,g2){return!!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())&&RelateOp.relate(g1,g2).isCrosses(g1.getDimension(),g2.getDimension())},RelateOp.contains=function(g1,g2){return!!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())&&(g1.isRectangle()?RectangleContains.contains(g1,g2):RelateOp.relate(g1,g2).isContains())},extend(GeometryCombiner.prototype,{extractElements:function(geom,elems){if(null===geom)return null;for(var i=0;i<geom.getNumGeometries();i++){var elemGeom=geom.getGeometryN(i);this._skipEmpty&&elemGeom.isEmpty()||elems.add(elemGeom)}},combine:function(){for(var elems=new ArrayList,i=this._inputGeoms.iterator();i.hasNext();){var g=i.next();this.extractElements(g,elems)}return 0===elems.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(elems)},interfaces_:function(){return[]},getClass:function(){return GeometryCombiner}}),GeometryCombiner.combine=function(){if(1===arguments.length){return(combiner=new GeometryCombiner(arguments[0])).combine()}if(2===arguments.length){var g0=arguments[0],g1=arguments[1];return(combiner=new GeometryCombiner(GeometryCombiner.createList(g0,g1))).combine()}if(3===arguments.length){var g0=arguments[0],g1=arguments[1],g2=arguments[2],combiner=new GeometryCombiner(GeometryCombiner.createList(g0,g1,g2));return combiner.combine()}},GeometryCombiner.extractFactory=function(geoms){return geoms.isEmpty()?null:geoms.iterator().next().getFactory()},GeometryCombiner.createList=function(){if(2===arguments.length){var obj0=arguments[0],obj1=arguments[1];return(list=new ArrayList).add(obj0),list.add(obj1),list}if(3===arguments.length){var obj0=arguments[0],obj1=arguments[1],obj2=arguments[2],list=new ArrayList;return list.add(obj0),list.add(obj1),list.add(obj2),list}},extend(CascadedPolygonUnion.prototype,{reduceToGeometries:function(geomTree){for(var geoms=new ArrayList,i=geomTree.iterator();i.hasNext();){var o=i.next(),geom=null;hasInterface(o,List)?geom=this.unionTree(o):o instanceof Geometry&&(geom=o),geoms.add(geom)}return geoms},extractByEnvelope:function(env,geom,disjointGeoms){for(var intersectingGeoms=new ArrayList,i=0;i<geom.getNumGeometries();i++){var elem=geom.getGeometryN(i);elem.getEnvelopeInternal().intersects(env)?intersectingGeoms.add(elem):disjointGeoms.add(elem)}return this._geomFactory.buildGeometry(intersectingGeoms)},unionOptimized:function(g0,g1){var g0Env=g0.getEnvelopeInternal(),g1Env=g1.getEnvelopeInternal();if(!g0Env.intersects(g1Env)){return GeometryCombiner.combine(g0,g1)}if(g0.getNumGeometries()<=1&&g1.getNumGeometries()<=1)return this.unionActual(g0,g1);var commonEnv=g0Env.intersection(g1Env);return this.unionUsingEnvelopeIntersection(g0,g1,commonEnv)},union:function(){if(null===this._inputPolys)throw new IllegalStateException("union() method cannot be called twice");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var index=new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY),i=this._inputPolys.iterator();i.hasNext();){var item=i.next();index.insert(item.getEnvelopeInternal(),item)}this._inputPolys=null;var itemTree=index.itemsTree();return this.unionTree(itemTree)},binaryUnion:function(){if(1===arguments.length){geoms=arguments[0];return this.binaryUnion(geoms,0,geoms.size())}if(3===arguments.length){var geoms=arguments[0],start=arguments[1],end=arguments[2];if(end-start<=1){g0=CascadedPolygonUnion.getGeometry(geoms,start);return this.unionSafe(g0,null)}if(end-start==2)return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms,start),CascadedPolygonUnion.getGeometry(geoms,start+1));var mid=Math.trunc((end+start)/2),g0=this.binaryUnion(geoms,start,mid),g1=this.binaryUnion(geoms,mid,end);return this.unionSafe(g0,g1)}},repeatedUnion:function(geoms){for(var union=null,i=geoms.iterator();i.hasNext();){var g=i.next();union=null===union?g.copy():union.union(g)}return union},unionSafe:function(g0,g1){return null===g0&&null===g1?null:null===g0?g1.copy():null===g1?g0.copy():this.unionOptimized(g0,g1)},unionActual:function(g0,g1){return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))},unionTree:function(geomTree){var geoms=this.reduceToGeometries(geomTree);return this.binaryUnion(geoms)},unionUsingEnvelopeIntersection:function(g0,g1,common){var disjointPolys=new ArrayList,g0Int=this.extractByEnvelope(common,g0,disjointPolys),g1Int=this.extractByEnvelope(common,g1,disjointPolys),union=this.unionActual(g0Int,g1Int);disjointPolys.add(union);return GeometryCombiner.combine(disjointPolys)},bufferUnion:function(){if(1===arguments.length){var geoms=arguments[0];return unionAll=(gColl=(factory=geoms.get(0).getFactory()).buildGeometry(geoms)).buffer(0)}if(2===arguments.length){var g0=arguments[0],g1=arguments[1],factory=g0.getFactory(),gColl=factory.createGeometryCollection([g0,g1]),unionAll=gColl.buffer(0);return unionAll}},interfaces_:function(){return[]},getClass:function(){return CascadedPolygonUnion}}),CascadedPolygonUnion.restrictToPolygons=function(g){if(hasInterface(g,Polygonal))return g;var polygons=PolygonExtracter.getPolygons(g);return 1===polygons.size()?polygons.get(0):g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))},CascadedPolygonUnion.getGeometry=function(list,index){return index>=list.size()?null:list.get(index)},CascadedPolygonUnion.union=function(polys){return new CascadedPolygonUnion(polys).union()},CascadedPolygonUnion.STRTREE_NODE_CAPACITY=4,extend(PointGeometryUnion.prototype,{union:function(){for(var locater=new PointLocator,exteriorCoords=new TreeSet,i=0;i<this._pointGeom.getNumGeometries();i++){var coord=this._pointGeom.getGeometryN(i).getCoordinate();locater.locate(coord,this._otherGeom)===Location.EXTERIOR&&exteriorCoords.add(coord)}if(0===exteriorCoords.size())return this._otherGeom;var ptComp=null,coords=CoordinateArrays.toCoordinateArray(exteriorCoords);return ptComp=1===coords.length?this._geomFact.createPoint(coords[0]):this._geomFact.createMultiPointFromCoords(coords),GeometryCombiner.combine(ptComp,this._otherGeom)},interfaces_:function(){return[]},getClass:function(){return PointGeometryUnion}}),PointGeometryUnion.union=function(pointGeom,otherGeom){return new PointGeometryUnion(pointGeom,otherGeom).union()},extend(GeometryExtracter.prototype,{filter:function(geom){-1!==this._sortIndex&&geom.getSortIndex()!==this._sortIndex||this._comps.add(geom)},interfaces_:function(){return[GeometryFilter]},getClass:function(){return GeometryExtracter}}),GeometryExtracter.extract=function(){if(2===arguments.length){var geom=arguments[0],sortIndex=arguments[1];return GeometryExtracter.extract(geom,sortIndex,new ArrayList)}if(3===arguments.length){var geom=arguments[0],sortIndex=arguments[1],list=arguments[2];return geom.getSortIndex()===sortIndex?list.add(geom):geom instanceof GeometryCollection&&geom.apply(new GeometryExtracter(sortIndex,list)),list}},extend(UnaryUnionOp.prototype,{unionNoOpt:function(g0){var empty=this._geomFact.createPoint();return SnapIfNeededOverlayOp.overlayOp(g0,empty,OverlayOp.UNION)},unionWithNull:function(g0,g1){return null===g0&&null===g1?null:null===g1?g0:null===g0?g1:g0.union(g1)},extract:function(){if(hasInterface(arguments[0],Collection))for(var i=arguments[0].iterator();i.hasNext();){geom=i.next();this.extract(geom)}else if(arguments[0]instanceof Geometry){var geom=arguments[0];null===this._geomFact&&(this._geomFact=geom.getFactory()),GeometryExtracter.extract(geom,Geometry.SORTINDEX_POLYGON,this._polygons),GeometryExtracter.extract(geom,Geometry.SORTINDEX_LINESTRING,this._lines),GeometryExtracter.extract(geom,Geometry.SORTINDEX_POINT,this._points)}},union:function(){if(null===this._geomFact)return null;var unionPoints=null;if(this._points.size()>0){var ptGeom=this._geomFact.buildGeometry(this._points);unionPoints=this.unionNoOpt(ptGeom)}var unionLines=null;if(this._lines.size()>0){var lineGeom=this._geomFact.buildGeometry(this._lines);unionLines=this.unionNoOpt(lineGeom)}var unionPolygons=null;this._polygons.size()>0&&(unionPolygons=CascadedPolygonUnion.union(this._polygons));var unionLA=this.unionWithNull(unionLines,unionPolygons),union=null;return union=null===unionPoints?unionLA:null===unionLA?unionPoints:PointGeometryUnion.union(unionPoints,unionLA),null===union?this._geomFact.createGeometryCollection():union},interfaces_:function(){return[]},getClass:function(){return UnaryUnionOp}}),UnaryUnionOp.union=function(){if(1===arguments.length){if(hasInterface(arguments[0],Collection)){return(op=new UnaryUnionOp(geoms=arguments[0])).union()}if(arguments[0]instanceof Geometry){return(op=new UnaryUnionOp(arguments[0])).union()}}else if(2===arguments.length){var geoms=arguments[0],op=new UnaryUnionOp(geoms,arguments[1]);return op.union()}},extend(UnionInteracting.prototype,{extractElements:function(geom,interacts,isInteracting){for(var extractedGeoms=new ArrayList,i=0;i<geom.getNumGeometries();i++){var elem=geom.getGeometryN(i);interacts[i]===isInteracting&&extractedGeoms.add(elem)}return this._geomFactory.buildGeometry(extractedGeoms)},computeInteracting:function(){if(0===arguments.length)for(i=0;i<this._g0.getNumGeometries();i++){var elem=this._g0.getGeometryN(i);this._interacts0[i]=this.computeInteracting(elem)}else if(1===arguments.length){for(var elem0=arguments[0],interactsWithAny=!1,i=0;i<this._g1.getNumGeometries();i++){var interacts=this._g1.getGeometryN(i).getEnvelopeInternal().intersects(elem0.getEnvelopeInternal());interacts&&(this._interacts1[i]=!0),interacts&&(interactsWithAny=!0)}return interactsWithAny}},union:function(){this.computeInteracting();var int0=this.extractElements(this._g0,this._interacts0,!0),int1=this.extractElements(this._g1,this._interacts1,!0);(int0.isEmpty()||int1.isEmpty())&&System.out.println("found empty!");var union=int0.union(int1),disjoint0=this.extractElements(this._g0,this._interacts0,!1),disjoint1=this.extractElements(this._g1,this._interacts1,!1);return GeometryCombiner.combine(union,disjoint0,disjoint1)},bufferUnion:function(g0,g1){return g0.getFactory().createGeometryCollection([g0,g1]).buffer(0)},interfaces_:function(){return[]},getClass:function(){return UnionInteracting}}),UnionInteracting.union=function(g0,g1){return new UnionInteracting(g0,g1).union()},extend(UnionOp.prototype,{interfaces_:function(){return[]},getClass:function(){return UnionOp}}),UnionOp.union=function(g,other){if(g.isEmpty()||other.isEmpty()){if(g.isEmpty()&&other.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.UNION,g,other,g.getFactory());if(g.isEmpty())return other.copy();if(other.isEmpty())return g.copy()}return g.checkNotGeometryCollection(g),g.checkNotGeometryCollection(other),SnapIfNeededOverlayOp.overlayOp(g,other,OverlayOp.UNION)},inherits$1(PrecisionReducerCoordinateOperation,GeometryEditor.CoordinateOperation),extend(PrecisionReducerCoordinateOperation.prototype,{editCoordinates:function(coordinates,geom){if(0===coordinates.length)return null;for(var reducedCoords=new Array(coordinates.length).fill(null),i=0;i<coordinates.length;i++){var coord=new Coordinate(coordinates[i]);this._targetPM.makePrecise(coord),reducedCoords[i]=coord}var noRepeatedCoords=new CoordinateList(reducedCoords,!1).toCoordinateArray(),minLength=0;geom instanceof LineString&&(minLength=2),geom instanceof LinearRing&&(minLength=4);var collapsedCoords=reducedCoords;return this._removeCollapsed&&(collapsedCoords=null),noRepeatedCoords.length<minLength?collapsedCoords:noRepeatedCoords},interfaces_:function(){return[]},getClass:function(){return PrecisionReducerCoordinateOperation}}),extend(GeometryPrecisionReducer.prototype,{fixPolygonalTopology:function(geom){var geomToBuffer=geom;this._changePrecisionModel||(geomToBuffer=this.changePM(geom,this._targetPM));var bufGeom=geomToBuffer.buffer(0),finalGeom=bufGeom;return this._changePrecisionModel||(finalGeom=this.changePM(bufGeom,geom.getPrecisionModel())),finalGeom},reducePointwise:function(geom){var geomEdit=null;if(this._changePrecisionModel){geomEdit=new GeometryEditor(this.createFactory(geom.getFactory(),this._targetPM))}else geomEdit=new GeometryEditor;var finalRemoveCollapsed=this._removeCollapsed;geom.getDimension()>=2&&(finalRemoveCollapsed=!0);return geomEdit.edit(geom,new PrecisionReducerCoordinateOperation(this._targetPM,finalRemoveCollapsed))},changePM:function(geom,newPM){return this.createEditor(geom.getFactory(),newPM).edit(geom,new GeometryEditor.NoOpGeometryOperation)},setRemoveCollapsedComponents:function(removeCollapsed){this._removeCollapsed=removeCollapsed},createFactory:function(inputFactory,pm){return new GeometryFactory(pm,inputFactory.getSRID(),inputFactory.getCoordinateSequenceFactory())},setChangePrecisionModel:function(changePrecisionModel){this._changePrecisionModel=changePrecisionModel},reduce:function(geom){var reducePW=this.reducePointwise(geom);return this._isPointwise?reducePW:hasInterface(reducePW,Polygonal)?reducePW.isValid()?reducePW:this.fixPolygonalTopology(reducePW):reducePW},setPointwise:function(isPointwise){this._isPointwise=isPointwise},createEditor:function(geomFactory,newPM){if(geomFactory.getPrecisionModel()===newPM)return new GeometryEditor;return new GeometryEditor(this.createFactory(geomFactory,newPM))},interfaces_:function(){return[]},getClass:function(){return GeometryPrecisionReducer}}),GeometryPrecisionReducer.reduce=function(g,precModel){return new GeometryPrecisionReducer(precModel).reduce(g)},GeometryPrecisionReducer.reducePointwise=function(g,precModel){var reducer=new GeometryPrecisionReducer(precModel);return reducer.setPointwise(!0),reducer.reduce(g)},extend(DouglasPeuckerLineSimplifier.prototype,{simplifySection:function(i,j){if(i+1===j)return null;this._seg.p0=this._pts[i],this._seg.p1=this._pts[j];for(var maxDistance=-1,maxIndex=i,k=i+1;k<j;k++){var distance=this._seg.distance(this._pts[k]);distance>maxDistance&&(maxDistance=distance,maxIndex=k)}if(maxDistance<=this._distanceTolerance)for(k=i+1;k<j;k++)this._usePt[k]=!1;else this.simplifySection(i,maxIndex),this.simplifySection(maxIndex,j)},setDistanceTolerance:function(distanceTolerance){this._distanceTolerance=distanceTolerance},simplify:function(){this._usePt=new Array(this._pts.length).fill(null);for(i=0;i<this._pts.length;i++)this._usePt[i]=!0;this.simplifySection(0,this._pts.length-1);for(var coordList=new CoordinateList,i=0;i<this._pts.length;i++)this._usePt[i]&&coordList.add(new Coordinate(this._pts[i]));return coordList.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return DouglasPeuckerLineSimplifier}}),DouglasPeuckerLineSimplifier.simplify=function(pts,distanceTolerance){var simp=new DouglasPeuckerLineSimplifier(pts);return simp.setDistanceTolerance(distanceTolerance),simp.simplify()},extend(DouglasPeuckerSimplifier.prototype,{setEnsureValid:function(isEnsureValidTopology){this._isEnsureValidTopology=isEnsureValidTopology},getResultGeometry:function(){return this._inputGeom.isEmpty()?this._inputGeom.copy():new DPTransformer(this._isEnsureValidTopology,this._distanceTolerance).transform(this._inputGeom)},setDistanceTolerance:function(distanceTolerance){if(distanceTolerance<0)throw new IllegalArgumentException("Tolerance must be non-negative");this._distanceTolerance=distanceTolerance},interfaces_:function(){return[]},getClass:function(){return DouglasPeuckerSimplifier}}),DouglasPeuckerSimplifier.simplify=function(geom,distanceTolerance){var tss=new DouglasPeuckerSimplifier(geom);return tss.setDistanceTolerance(distanceTolerance),tss.getResultGeometry()},inherits$1(DPTransformer,GeometryTransformer),extend(DPTransformer.prototype,{transformPolygon:function(geom,parent){if(geom.isEmpty())return null;var rawGeom=GeometryTransformer.prototype.transformPolygon.call(this,geom,parent);return parent instanceof MultiPolygon?rawGeom:this.createValidArea(rawGeom)},createValidArea:function(rawAreaGeom){return this._isEnsureValidTopology?rawAreaGeom.buffer(0):rawAreaGeom},transformCoordinates:function(coords,parent){var inputPts=coords.toCoordinateArray(),newPts=null;return newPts=0===inputPts.length?new Array(0).fill(null):DouglasPeuckerLineSimplifier.simplify(inputPts,this._distanceTolerance),this._factory.getCoordinateSequenceFactory().create(newPts)},transformMultiPolygon:function(geom,parent){var rawGeom=GeometryTransformer.prototype.transformMultiPolygon.call(this,geom,parent);return this.createValidArea(rawGeom)},transformLinearRing:function(geom,parent){var removeDegenerateRings=parent instanceof Polygon,simpResult=GeometryTransformer.prototype.transformLinearRing.call(this,geom,parent);return!removeDegenerateRings||simpResult instanceof LinearRing?simpResult:null},interfaces_:function(){return[]},getClass:function(){return DPTransformer}}),DouglasPeuckerSimplifier.DPTransformer=DPTransformer,inherits$1(TaggedLineSegment,LineSegment),extend(TaggedLineSegment.prototype,{getIndex:function(){return this._index},getParent:function(){return this._parent},interfaces_:function(){return[]},getClass:function(){return TaggedLineSegment}}),extend(TaggedLineString.prototype,{addToResult:function(seg){this._resultSegs.add(seg)},asLineString:function(){return this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs))},getResultSize:function(){var resultSegsSize=this._resultSegs.size();return 0===resultSegsSize?0:resultSegsSize+1},getParent:function(){return this._parentLine},getSegment:function(i){return this._segs[i]},getParentCoordinates:function(){return this._parentLine.getCoordinates()},getMinimumSize:function(){return this._minimumSize},asLinearRing:function(){return this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs))},getSegments:function(){return this._segs},init:function(){var pts=this._parentLine.getCoordinates();this._segs=new Array(pts.length-1).fill(null);for(var i=0;i<pts.length-1;i++){var seg=new TaggedLineSegment(pts[i],pts[i+1],this._parentLine,i);this._segs[i]=seg}},getResultCoordinates:function(){return TaggedLineString.extractCoordinates(this._resultSegs)},interfaces_:function(){return[]},getClass:function(){return TaggedLineString}}),TaggedLineString.extractCoordinates=function(segs){for(var pts=new Array(segs.size()+1).fill(null),seg=null,i=0;i<segs.size();i++)seg=segs.get(i),pts[i]=seg.p0;return pts[pts.length-1]=seg.p1,pts},extend(LineSegmentIndex.prototype,{remove:function(seg){this._index.remove(new Envelope(seg.p0,seg.p1),seg)},add:function(){if(arguments[0]instanceof TaggedLineString)for(var segs=arguments[0].getSegments(),i=0;i<segs.length;i++){seg=segs[i];this.add(seg)}else if(arguments[0]instanceof LineSegment){var seg=arguments[0];this._index.insert(new Envelope(seg.p0,seg.p1),seg)}},query:function(querySeg){var env=new Envelope(querySeg.p0,querySeg.p1),visitor=new LineSegmentVisitor(querySeg);this._index.query(env,visitor);return visitor.getItems()},interfaces_:function(){return[]},getClass:function(){return LineSegmentIndex}}),extend(LineSegmentVisitor.prototype,{visitItem:function(item){var seg=item;Envelope.intersects(seg.p0,seg.p1,this._querySeg.p0,this._querySeg.p1)&&this._items.add(item)},getItems:function(){return this._items},interfaces_:function(){return[ItemVisitor]},getClass:function(){return LineSegmentVisitor}}),extend(TaggedLineStringSimplifier.prototype,{flatten:function(start,end){var newSeg=new LineSegment(this._linePts[start],this._linePts[end]);return this.remove(this._line,start,end),this._outputIndex.add(newSeg),newSeg},hasBadIntersection:function(parentLine,sectionIndex,candidateSeg){return!!this.hasBadOutputIntersection(candidateSeg)||!!this.hasBadInputIntersection(parentLine,sectionIndex,candidateSeg)},setDistanceTolerance:function(distanceTolerance){this._distanceTolerance=distanceTolerance},simplifySection:function(i,j,depth){depth+=1;var sectionIndex=new Array(2).fill(null);if(i+1===j){newSeg=this._line.getSegment(i);return this._line.addToResult(newSeg),null}var isValidToSimplify=!0;if(this._line.getResultSize()<this._line.getMinimumSize()){depth+1<this._line.getMinimumSize()&&(isValidToSimplify=!1)}var distance=new Array(1).fill(null),furthestPtIndex=this.findFurthestPoint(this._linePts,i,j,distance);distance[0]>this._distanceTolerance&&(isValidToSimplify=!1);var candidateSeg=new LineSegment;if(candidateSeg.p0=this._linePts[i],candidateSeg.p1=this._linePts[j],sectionIndex[0]=i,sectionIndex[1]=j,this.hasBadIntersection(this._line,sectionIndex,candidateSeg)&&(isValidToSimplify=!1),isValidToSimplify){var newSeg=this.flatten(i,j);return this._line.addToResult(newSeg),null}this.simplifySection(i,furthestPtIndex,depth),this.simplifySection(furthestPtIndex,j,depth)},hasBadOutputIntersection:function(candidateSeg){for(var i=this._outputIndex.query(candidateSeg).iterator();i.hasNext();){var querySeg=i.next();if(this.hasInteriorIntersection(querySeg,candidateSeg))return!0}return!1},findFurthestPoint:function(pts,i,j,maxDistance){var seg=new LineSegment;seg.p0=pts[i],seg.p1=pts[j];for(var maxDist=-1,maxIndex=i,k=i+1;k<j;k++){var midPt=pts[k],distance=seg.distance(midPt);distance>maxDist&&(maxDist=distance,maxIndex=k)}return maxDistance[0]=maxDist,maxIndex},simplify:function(line){this._line=line,this._linePts=line.getParentCoordinates(),this.simplifySection(0,this._linePts.length-1,0)},remove:function(line,start,end){for(var i=start;i<end;i++){var seg=line.getSegment(i);this._inputIndex.remove(seg)}},hasInteriorIntersection:function(seg0,seg1){return this._li.computeIntersection(seg0.p0,seg0.p1,seg1.p0,seg1.p1),this._li.isInteriorIntersection()},hasBadInputIntersection:function(parentLine,sectionIndex,candidateSeg){for(var i=this._inputIndex.query(candidateSeg).iterator();i.hasNext();){var querySeg=i.next();if(this.hasInteriorIntersection(querySeg,candidateSeg)){if(TaggedLineStringSimplifier.isInLineSection(parentLine,sectionIndex,querySeg))continue;return!0}}return!1},interfaces_:function(){return[]},getClass:function(){return TaggedLineStringSimplifier}}),TaggedLineStringSimplifier.isInLineSection=function(line,sectionIndex,seg){if(seg.getParent()!==line.getParent())return!1;var segIndex=seg.getIndex();return segIndex>=sectionIndex[0]&&segIndex<sectionIndex[1]},extend(TaggedLinesSimplifier.prototype,{setDistanceTolerance:function(distanceTolerance){this._distanceTolerance=distanceTolerance},simplify:function(taggedLines){for(i=taggedLines.iterator();i.hasNext();)this._inputIndex.add(i.next());for(var i=taggedLines.iterator();i.hasNext();){var tlss=new TaggedLineStringSimplifier(this._inputIndex,this._outputIndex);tlss.setDistanceTolerance(this._distanceTolerance),tlss.simplify(i.next())}},interfaces_:function(){return[]},getClass:function(){return TaggedLinesSimplifier}}),extend(TopologyPreservingSimplifier.prototype,{getResultGeometry:function(){if(this._inputGeom.isEmpty())return this._inputGeom.copy();this._linestringMap=new HashMap,this._inputGeom.apply(new LineStringMapBuilderFilter(this)),this._lineSimplifier.simplify(this._linestringMap.values());return new LineStringTransformer(this._linestringMap).transform(this._inputGeom)},setDistanceTolerance:function(distanceTolerance){if(distanceTolerance<0)throw new IllegalArgumentException("Tolerance must be non-negative");this._lineSimplifier.setDistanceTolerance(distanceTolerance)},interfaces_:function(){return[]},getClass:function(){return TopologyPreservingSimplifier}}),TopologyPreservingSimplifier.simplify=function(geom,distanceTolerance){var tss=new TopologyPreservingSimplifier(geom);return tss.setDistanceTolerance(distanceTolerance),tss.getResultGeometry()},inherits$1(LineStringTransformer,GeometryTransformer),extend(LineStringTransformer.prototype,{transformCoordinates:function(coords,parent){if(0===coords.size())return null;if(parent instanceof LineString){var taggedLine=this._linestringMap.get(parent);return this.createCoordinateSequence(taggedLine.getResultCoordinates())}return GeometryTransformer.prototype.transformCoordinates.call(this,coords,parent)},interfaces_:function(){return[]},getClass:function(){return LineStringTransformer}}),extend(LineStringMapBuilderFilter.prototype,{filter:function(geom){if(geom instanceof LineString){var line=geom;if(line.isEmpty())return null;var taggedLine=new TaggedLineString(line,line.isClosed()?4:2);this.tps._linestringMap.put(line,taggedLine)}},interfaces_:function(){return[GeometryComponentFilter]},getClass:function(){return LineStringMapBuilderFilter}}),TopologyPreservingSimplifier.LineStringTransformer=LineStringTransformer,TopologyPreservingSimplifier.LineStringMapBuilderFilter=LineStringMapBuilderFilter,extend(SplitSegment.prototype,{splitAt:function(){if(1===arguments.length){var pt=arguments[0],minFrac=this._minimumLen/this._segLen;if(pt.distance(this._seg.p0)<this._minimumLen)return this._splitPt=this._seg.pointAlong(minFrac),null;if(pt.distance(this._seg.p1)<this._minimumLen)return this._splitPt=SplitSegment.pointAlongReverse(this._seg,minFrac),null;this._splitPt=pt}else if(2===arguments.length){var length=arguments[0],endPt=arguments[1],frac=this.getConstrainedLength(length)/this._segLen;endPt.equals2D(this._seg.p0)?this._splitPt=this._seg.pointAlong(frac):this._splitPt=SplitSegment.pointAlongReverse(this._seg,frac)}},setMinimumLength:function(minLen){this._minimumLen=minLen},getConstrainedLength:function(len){return len<this._minimumLen?this._minimumLen:len},getSplitPoint:function(){return this._splitPt},interfaces_:function(){return[]},getClass:function(){return SplitSegment}}),SplitSegment.pointAlongReverse=function(seg,segmentLengthFraction){var coord=new Coordinate;return coord.x=seg.p1.x-segmentLengthFraction*(seg.p1.x-seg.p0.x),coord.y=seg.p1.y-segmentLengthFraction*(seg.p1.y-seg.p0.y),coord},extend(ConstraintSplitPointFinder.prototype,{findSplitPoint:function(seg,encroachPt){},interfaces_:function(){return[]},getClass:function(){return ConstraintSplitPointFinder}}),extend(NonEncroachingSplitPointFinder.prototype,{findSplitPoint:function(seg,encroachPt){var lineSeg=seg.getLineSegment(),midPtLen=lineSeg.getLength()/2,splitSeg=new SplitSegment(lineSeg),projPt=NonEncroachingSplitPointFinder.projectedSplitPoint(seg,encroachPt),maxSplitLen=2*projPt.distance(encroachPt)*.8;return maxSplitLen>midPtLen&&(maxSplitLen=midPtLen),splitSeg.setMinimumLength(maxSplitLen),splitSeg.splitAt(projPt),splitSeg.getSplitPoint()},interfaces_:function(){return[ConstraintSplitPointFinder]},getClass:function(){return NonEncroachingSplitPointFinder}}),NonEncroachingSplitPointFinder.projectedSplitPoint=function(seg,encroachPt){return seg.getLineSegment().project(encroachPt)},extend(TrianglePredicate.prototype,{interfaces_:function(){return[]},getClass:function(){return TrianglePredicate}}),TrianglePredicate.triArea=function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)},TrianglePredicate.isInCircleDDNormalized=function(a,b,c,p){var adx=DD.valueOf(a.x).selfSubtract(p.x),ady=DD.valueOf(a.y).selfSubtract(p.y),bdx=DD.valueOf(b.x).selfSubtract(p.x),bdy=DD.valueOf(b.y).selfSubtract(p.y),cdx=DD.valueOf(c.x).selfSubtract(p.x),cdy=DD.valueOf(c.y).selfSubtract(p.y),abdet=adx.multiply(bdy).selfSubtract(bdx.multiply(ady)),bcdet=bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy)),cadet=cdx.multiply(ady).selfSubtract(adx.multiply(cdy)),alift=adx.multiply(adx).selfAdd(ady.multiply(ady)),blift=bdx.multiply(bdx).selfAdd(bdy.multiply(bdy)),clift=cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));return alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet)).doubleValue()>0},TrianglePredicate.checkRobustInCircle=function(a,b,c,p){var nonRobustInCircle=TrianglePredicate.isInCircleNonRobust(a,b,c,p),isInCircleDD=TrianglePredicate.isInCircleDDSlow(a,b,c,p),isInCircleCC=TrianglePredicate.isInCircleCC(a,b,c,p),circumCentre=Triangle$1.circumcentre(a,b,c);System.out.println("p radius diff a = "+Math.abs(p.distance(circumCentre)-a.distance(circumCentre))/a.distance(circumCentre)),nonRobustInCircle===isInCircleDD&&nonRobustInCircle===isInCircleCC||(System.out.println("inCircle robustness failure (double result = "+nonRobustInCircle+", DD result = "+isInCircleDD+", CC result = "+isInCircleCC+")"),System.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a,b,c,p]))),System.out.println("Circumcentre = "+WKTWriter.toPoint(circumCentre)+" radius = "+a.distance(circumCentre)),System.out.println("p radius diff a = "+Math.abs(p.distance(circumCentre)/a.distance(circumCentre)-1)),System.out.println("p radius diff b = "+Math.abs(p.distance(circumCentre)/b.distance(circumCentre)-1)),System.out.println("p radius diff c = "+Math.abs(p.distance(circumCentre)/c.distance(circumCentre)-1)),System.out.println())},TrianglePredicate.isInCircleDDFast=function(a,b,c,p){var aTerm=DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b,c,p)),bTerm=DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a,c,p)),cTerm=DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a,b,p)),pTerm=DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a,b,c));return aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm).doubleValue()>0},TrianglePredicate.isInCircleCC=function(a,b,c,p){var cc=Triangle$1.circumcentre(a,b,c),ccRadius=a.distance(cc);return p.distance(cc)-ccRadius<=0},TrianglePredicate.isInCircleNormalized=function(a,b,c,p){var adx=a.x-p.x,ady=a.y-p.y,bdx=b.x-p.x,bdy=b.y-p.y,cdx=c.x-p.x,cdy=c.y-p.y;return(adx*adx+ady*ady)*(bdx*cdy-cdx*bdy)+(bdx*bdx+bdy*bdy)*(cdx*ady-adx*cdy)+(cdx*cdx+cdy*cdy)*(adx*bdy-bdx*ady)>0},TrianglePredicate.isInCircleDDSlow=function(a,b,c,p){var px=DD.valueOf(p.x),py=DD.valueOf(p.y),ax=DD.valueOf(a.x),ay=DD.valueOf(a.y),bx=DD.valueOf(b.x),by=DD.valueOf(b.y),cx=DD.valueOf(c.x),cy=DD.valueOf(c.y),aTerm=ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx,by,cx,cy,px,py)),bTerm=bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax,ay,cx,cy,px,py)),cTerm=cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax,ay,bx,by,px,py)),pTerm=px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax,ay,bx,by,cx,cy));return aTerm.subtract(bTerm).add(cTerm).subtract(pTerm).doubleValue()>0},TrianglePredicate.isInCircleNonRobust=function(a,b,c,p){return(a.x*a.x+a.y*a.y)*TrianglePredicate.triArea(b,c,p)-(b.x*b.x+b.y*b.y)*TrianglePredicate.triArea(a,c,p)+(c.x*c.x+c.y*c.y)*TrianglePredicate.triArea(a,b,p)-(p.x*p.x+p.y*p.y)*TrianglePredicate.triArea(a,b,c)>0},TrianglePredicate.isInCircleRobust=function(a,b,c,p){return TrianglePredicate.isInCircleNormalized(a,b,c,p)},TrianglePredicate.triAreaDDSlow=function(ax,ay,bx,by,cx,cy){return bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)))},TrianglePredicate.triAreaDDFast=function(a,b,c){var t1=DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y)),t2=DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));return t1.selfSubtract(t2)},extend(Vertex.prototype,{circleCenter:function(b,c){var a=new Vertex(this.getX(),this.getY()),hcc=new HCoordinate(this.bisector(a,b),this.bisector(b,c)),cc=null;try{cc=new Vertex(hcc.getX(),hcc.getY())}catch(nre){if(!(nre instanceof NotRepresentableException))throw nre;System.err.println("a: "+a+"  b: "+b+"  c: "+c),System.err.println(nre)}return cc},dot:function(v){return this._p.x*v.getX()+this._p.y*v.getY()},magn:function(){return Math.sqrt(this._p.x*this._p.x+this._p.y*this._p.y)},getZ:function(){return this._p.z},bisector:function(a,b){var dx=b.getX()-a.getX(),dy=b.getY()-a.getY();return new HCoordinate(new HCoordinate(a.getX()+dx/2,a.getY()+dy/2,1),new HCoordinate(a.getX()-dy+dx/2,a.getY()+dx+dy/2,1))},equals:function(){if(1===arguments.length){_x=arguments[0];return this._p.x===_x.getX()&&this._p.y===_x.getY()}if(2===arguments.length){var _x=arguments[0],tolerance=arguments[1];return this._p.distance(_x.getCoordinate())<tolerance}},getCoordinate:function(){return this._p},isInCircle:function(a,b,c){return TrianglePredicate.isInCircleRobust(a._p,b._p,c._p,this._p)},interpolateZValue:function(v0,v1,v2){var x0=v0.getX(),y0=v0.getY(),a=v1.getX()-x0,b=v2.getX()-x0,c=v1.getY()-y0,d=v2.getY()-y0,det=a*d-b*c,dx=this.getX()-x0,dy=this.getY()-y0,t=(d*dx-b*dy)/det,u=(-c*dx+a*dy)/det;return v0.getZ()+t*(v1.getZ()-v0.getZ())+u*(v2.getZ()-v0.getZ())},midPoint:function(a){return new Vertex((this._p.x+a.getX())/2,(this._p.y+a.getY())/2,(this._p.z+a.getZ())/2)},rightOf:function(e){return this.isCCW(e.dest(),e.orig())},isCCW:function(b,c){return(b._p.x-this._p.x)*(c._p.y-this._p.y)-(b._p.y-this._p.y)*(c._p.x-this._p.x)>0},getX:function(){return this._p.x},crossProduct:function(v){return this._p.x*v.getY()-this._p.y*v.getX()},setZ:function(_z){this._p.z=_z},times:function(c){return new Vertex(c*this._p.x,c*this._p.y)},cross:function(){return new Vertex(this._p.y,-this._p.x)},leftOf:function(e){return this.isCCW(e.orig(),e.dest())},toString:function(){return"POINT ("+this._p.x+" "+this._p.y+")"},sub:function(v){return new Vertex(this._p.x-v.getX(),this._p.y-v.getY())},getY:function(){return this._p.y},classify:function(p0,p1){var a=p1.sub(p0),b=this.sub(p0),sa=a.crossProduct(b);return sa>0?Vertex.LEFT:sa<0?Vertex.RIGHT:a.getX()*b.getX()<0||a.getY()*b.getY()<0?Vertex.BEHIND:a.magn()<b.magn()?Vertex.BEYOND:p0.equals(this)?Vertex.ORIGIN:p1.equals(this)?Vertex.DESTINATION:Vertex.BETWEEN},sum:function(v){return new Vertex(this._p.x+v.getX(),this._p.y+v.getY())},distance:function(v1,v2){return Math.sqrt(Math.pow(v2.getX()-v1.getX(),2)+Math.pow(v2.getY()-v1.getY(),2))},circumRadiusRatio:function(b,c){var x=this.circleCenter(b,c),radius=this.distance(x,b),edgeLength=this.distance(this,b),el=this.distance(b,c);return el<edgeLength&&(edgeLength=el),(el=this.distance(c,this))<edgeLength&&(edgeLength=el),radius/edgeLength},interfaces_:function(){return[]},getClass:function(){return Vertex}}),Vertex.interpolateZ=function(){if(3===arguments.length){var p=arguments[0],p0=arguments[1],p1=arguments[2],segLen=p0.distance(p1),ptLen=p.distance(p0),dz=p1.z-p0.z;return p0.z+dz*(ptLen/segLen)}if(4===arguments.length){var p=arguments[0],v0=arguments[1],v1=arguments[2],v2=arguments[3],x0=v0.x,y0=v0.y,a=v1.x-x0,b=v2.x-x0,c=v1.y-y0,d=v2.y-y0,det=a*d-b*c,dx=p.x-x0,dy=p.y-y0,t=(d*dx-b*dy)/det,u=(-c*dx+a*dy)/det;return v0.z+t*(v1.z-v0.z)+u*(v2.z-v0.z)}},Vertex.LEFT=0,Vertex.RIGHT=1,Vertex.BEYOND=2,Vertex.BEHIND=3,Vertex.BETWEEN=4,Vertex.ORIGIN=5,Vertex.DESTINATION=6,inherits$1(ConstraintVertex,Vertex),extend(ConstraintVertex.prototype,{getConstraint:function(){return this._constraint},setOnConstraint:function(isOnConstraint){this._isOnConstraint=isOnConstraint},merge:function(other){other._isOnConstraint&&(this._isOnConstraint=!0,this._constraint=other._constraint)},isOnConstraint:function(){return this._isOnConstraint},setConstraint:function(constraint){this._isOnConstraint=!0,this._constraint=constraint},interfaces_:function(){return[]},getClass:function(){return ConstraintVertex}}),extend(QuadEdge.prototype,{equalsNonOriented:function(qe){return!!this.equalsOriented(qe)||!!this.equalsOriented(qe.sym())},toLineSegment:function(){return new LineSegment(this._vertex.getCoordinate(),this.dest().getCoordinate())},dest:function(){return this.sym().orig()},oNext:function(){return this._next},equalsOriented:function(qe){return!(!this.orig().getCoordinate().equals2D(qe.orig().getCoordinate())||!this.dest().getCoordinate().equals2D(qe.dest().getCoordinate()))},dNext:function(){return this.sym().oNext().sym()},lPrev:function(){return this._next.sym()},rPrev:function(){return this.sym().oNext()},rot:function(){return this._rot},oPrev:function(){return this._rot._next._rot},sym:function(){return this._rot._rot},setOrig:function(o){this._vertex=o},lNext:function(){return this.invRot().oNext().rot()},getLength:function(){return this.orig().getCoordinate().distance(this.dest().getCoordinate())},invRot:function(){return this._rot.sym()},setDest:function(d){this.sym().setOrig(d)},setData:function(data){this._data=data},getData:function(){return this._data},delete:function(){this._rot=null},orig:function(){return this._vertex},rNext:function(){return this._rot._next.invRot()},toString:function(){var p0=this._vertex.getCoordinate(),p1=this.dest().getCoordinate();return WKTWriter.toLineString(p0,p1)},isLive:function(){return null!==this._rot},getPrimary:function(){return this.orig().getCoordinate().compareTo(this.dest().getCoordinate())<=0?this:this.sym()},dPrev:function(){return this.invRot().oNext().invRot()},setNext:function(next){this._next=next},interfaces_:function(){return[]},getClass:function(){return QuadEdge}}),QuadEdge.makeEdge=function(o,d){var q0=new QuadEdge,q1=new QuadEdge,q2=new QuadEdge,q3=new QuadEdge;q0._rot=q1,q1._rot=q2,q2._rot=q3,q3._rot=q0,q0.setNext(q0),q1.setNext(q3),q2.setNext(q2),q3.setNext(q1);var base=q0;return base.setOrig(o),base.setDest(d),base},QuadEdge.swap=function(e){var a=e.oPrev(),b=e.sym().oPrev();QuadEdge.splice(e,a),QuadEdge.splice(e.sym(),b),QuadEdge.splice(e,a.lNext()),QuadEdge.splice(e.sym(),b.lNext()),e.setOrig(a.dest()),e.setDest(b.dest())},QuadEdge.splice=function(a,b){var alpha=a.oNext().rot(),beta=b.oNext().rot(),t1=b.oNext(),t2=a.oNext(),t3=beta.oNext(),t4=alpha.oNext();a.setNext(t1),b.setNext(t2),alpha.setNext(t3),beta.setNext(t4)},QuadEdge.connect=function(a,b){var e=QuadEdge.makeEdge(a.dest(),b.orig());return QuadEdge.splice(e,a.lNext()),QuadEdge.splice(e.sym(),b),e},extend(IncrementalDelaunayTriangulator.prototype,{insertSite:function(v){var e=this._subdiv.locate(v);if(this._subdiv.isVertexOfEdge(e,v))return e;this._subdiv.isOnEdge(e,v.getCoordinate())&&(e=e.oPrev(),this._subdiv.delete(e.oNext()));var base=this._subdiv.makeEdge(e.orig(),v);QuadEdge.splice(base,e);var startEdge=base;do{e=(base=this._subdiv.connect(e,base.sym())).oPrev()}while(e.lNext()!==startEdge);for(;;){var t=e.oPrev();if(t.dest().rightOf(e)&&v.isInCircle(e.orig(),t.dest(),e.dest()))QuadEdge.swap(e),e=e.oPrev();else{if(e.oNext()===startEdge)return base;e=e.oNext().lPrev()}}},insertSites:function(vertices){for(var i=vertices.iterator();i.hasNext();){var v=i.next();this.insertSite(v)}},interfaces_:function(){return[]},getClass:function(){return IncrementalDelaunayTriangulator}}),extend(QuadEdgeLocator.prototype,{locate:function(v){},interfaces_:function(){return[]},getClass:function(){return QuadEdgeLocator}}),extend(LastFoundQuadEdgeLocator.prototype,{init:function(){this._lastEdge=this.findEdge()},locate:function(v){this._lastEdge.isLive()||this.init();var e=this._subdiv.locateFromEdge(v,this._lastEdge);return this._lastEdge=e,e},findEdge:function(){return this._subdiv.getEdges().iterator().next()},interfaces_:function(){return[QuadEdgeLocator]},getClass:function(){return LastFoundQuadEdgeLocator}}),inherits$1(LocateFailureException,RuntimeException),extend(LocateFailureException.prototype,{getSegment:function(){return this._seg},interfaces_:function(){return[]},getClass:function(){return LocateFailureException}}),LocateFailureException.msgWithSpatial=function(msg,seg){return null!==seg?msg+" [ "+seg+" ]":msg},extend(TriangleVisitor.prototype,{visit:function(triEdges){},interfaces_:function(){return[]},getClass:function(){return TriangleVisitor}}),extend(QuadEdgeSubdivision.prototype,{getTriangleVertices:function(includeFrame){var visitor=new TriangleVertexListVisitor;return this.visitTriangles(visitor,includeFrame),visitor.getTriangleVertices()},isFrameVertex:function(v){return!!v.equals(this._frameVertex[0])||(!!v.equals(this._frameVertex[1])||!!v.equals(this._frameVertex[2]))},isVertexOfEdge:function(e,v){return!(!v.equals(e.orig(),this._tolerance)&&!v.equals(e.dest(),this._tolerance))},connect:function(a,b){var q=QuadEdge.connect(a,b);return this._quadEdges.add(q),q},getVoronoiCellPolygon:function(qe,geomFact){var cellPts=new ArrayList,startQE=qe;do{var cc=qe.rot().orig().getCoordinate();cellPts.add(cc),qe=qe.oPrev()}while(qe!==startQE);var coordList=new CoordinateList;coordList.addAll(cellPts,!1),coordList.closeRing(),coordList.size()<4&&(System.out.println(coordList),coordList.add(coordList.get(coordList.size()-1),!0));var pts=coordList.toCoordinateArray(),cellPoly=geomFact.createPolygon(geomFact.createLinearRing(pts),null),v=startQE.orig();return cellPoly.setUserData(v.getCoordinate()),cellPoly},setLocator:function(locator){this._locator=locator},initSubdiv:function(){var ea=this.makeEdge(this._frameVertex[0],this._frameVertex[1]),eb=this.makeEdge(this._frameVertex[1],this._frameVertex[2]);QuadEdge.splice(ea.sym(),eb);var ec=this.makeEdge(this._frameVertex[2],this._frameVertex[0]);return QuadEdge.splice(eb.sym(),ec),QuadEdge.splice(ec.sym(),ea),ea},isFrameBorderEdge:function(e){var leftTri=new Array(3).fill(null);QuadEdgeSubdivision.getTriangleEdges(e,leftTri);var rightTri=new Array(3).fill(null);QuadEdgeSubdivision.getTriangleEdges(e.sym(),rightTri);var vLeftTriOther=e.lNext().dest();if(this.isFrameVertex(vLeftTriOther))return!0;var vRightTriOther=e.sym().lNext().dest();return!!this.isFrameVertex(vRightTriOther)},makeEdge:function(o,d){var q=QuadEdge.makeEdge(o,d);return this._quadEdges.add(q),q},visitTriangles:function(triVisitor,includeFrame){this._visitedKey++;var edgeStack=new Stack$2;edgeStack.push(this._startingEdge);for(var visitedEdges=new HashSet;!edgeStack.empty();){var edge=edgeStack.pop();if(!visitedEdges.contains(edge)){var triEdges=this.fetchTriangleToVisit(edge,edgeStack,includeFrame,visitedEdges);null!==triEdges&&triVisitor.visit(triEdges)}}},isFrameEdge:function(e){return!(!this.isFrameVertex(e.orig())&&!this.isFrameVertex(e.dest()))},isOnEdge:function(e,p){this._seg.setCoordinates(e.orig().getCoordinate(),e.dest().getCoordinate());return this._seg.distance(p)<this._edgeCoincidenceTolerance},getEnvelope:function(){return new Envelope(this._frameEnv)},createFrame:function(env){var deltaX=env.getWidth(),deltaY=env.getHeight(),offset=0;offset=deltaX>deltaY?10*deltaX:10*deltaY,this._frameVertex[0]=new Vertex((env.getMaxX()+env.getMinX())/2,env.getMaxY()+offset),this._frameVertex[1]=new Vertex(env.getMinX()-offset,env.getMinY()-offset),this._frameVertex[2]=new Vertex(env.getMaxX()+offset,env.getMinY()-offset),this._frameEnv=new Envelope(this._frameVertex[0].getCoordinate(),this._frameVertex[1].getCoordinate()),this._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate())},getTriangleCoordinates:function(includeFrame){var visitor=new TriangleCoordinatesVisitor;return this.visitTriangles(visitor,includeFrame),visitor.getTriangles()},getVertices:function(includeFrame){for(var vertices=new HashSet,i=this._quadEdges.iterator();i.hasNext();){var qe=i.next(),v=qe.orig();!includeFrame&&this.isFrameVertex(v)||vertices.add(v);var vd=qe.dest();!includeFrame&&this.isFrameVertex(vd)||vertices.add(vd)}return vertices},fetchTriangleToVisit:function(edge,edgeStack,includeFrame,visitedEdges){var curr=edge,edgeCount=0,isFrame=!1;do{this._triEdges[edgeCount]=curr,this.isFrameEdge(curr)&&(isFrame=!0);var sym=curr.sym();visitedEdges.contains(sym)||edgeStack.push(sym),visitedEdges.add(curr),edgeCount++,curr=curr.lNext()}while(curr!==edge);return isFrame&&!includeFrame?null:this._triEdges},getEdges:function(){if(0===arguments.length)return this._quadEdges;if(1===arguments.length){for(var geomFact=arguments[0],quadEdges=this.getPrimaryEdges(!1),edges=new Array(quadEdges.size()).fill(null),i=0,it=quadEdges.iterator();it.hasNext();){var qe=it.next();edges[i++]=geomFact.createLineString([qe.orig().getCoordinate(),qe.dest().getCoordinate()])}return geomFact.createMultiLineString(edges)}},getVertexUniqueEdges:function(includeFrame){for(var edges=new ArrayList,visitedVertices=new HashSet,i=this._quadEdges.iterator();i.hasNext();){var qe=i.next(),v=qe.orig();visitedVertices.contains(v)||(visitedVertices.add(v),!includeFrame&&this.isFrameVertex(v)||edges.add(qe));var qd=qe.sym(),vd=qd.orig();visitedVertices.contains(vd)||(visitedVertices.add(vd),!includeFrame&&this.isFrameVertex(vd)||edges.add(qd))}return edges},getTriangleEdges:function(includeFrame){var visitor=new TriangleEdgesListVisitor;return this.visitTriangles(visitor,includeFrame),visitor.getTriangleEdges()},getPrimaryEdges:function(includeFrame){this._visitedKey++;var edges=new ArrayList,edgeStack=new Stack$2;edgeStack.push(this._startingEdge);for(var visitedEdges=new HashSet;!edgeStack.empty();){var edge=edgeStack.pop();if(!visitedEdges.contains(edge)){var priQE=edge.getPrimary();!includeFrame&&this.isFrameEdge(priQE)||edges.add(priQE),edgeStack.push(edge.oNext()),edgeStack.push(edge.sym().oNext()),visitedEdges.add(edge),visitedEdges.add(edge.sym())}}return edges},delete:function(e){QuadEdge.splice(e,e.oPrev()),QuadEdge.splice(e.sym(),e.sym().oPrev());var eSym=e.sym(),eRot=e.rot(),eRotSym=e.rot().sym();this._quadEdges.remove(e),this._quadEdges.remove(eSym),this._quadEdges.remove(eRot),this._quadEdges.remove(eRotSym),e.delete(),eSym.delete(),eRot.delete(),eRotSym.delete()},locateFromEdge:function(v,startEdge){for(var iter=0,maxIter=this._quadEdges.size(),e=startEdge;;){if(++iter>maxIter)throw new LocateFailureException(e.toLineSegment());if(v.equals(e.orig())||v.equals(e.dest()))break;if(v.rightOf(e))e=e.sym();else if(v.rightOf(e.oNext())){if(v.rightOf(e.dPrev()))break;e=e.dPrev()}else e=e.oNext()}return e},getTolerance:function(){return this._tolerance},getVoronoiCellPolygons:function(geomFact){this.visitTriangles(new TriangleCircumcentreVisitor,!0);for(var cells=new ArrayList,i=this.getVertexUniqueEdges(!1).iterator();i.hasNext();){var qe=i.next();cells.add(this.getVoronoiCellPolygon(qe,geomFact))}return cells},getVoronoiDiagram:function(geomFact){var vorCells=this.getVoronoiCellPolygons(geomFact);return geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells))},getTriangles:function(geomFact){for(var triPtsList=this.getTriangleCoordinates(!1),tris=new Array(triPtsList.size()).fill(null),i=0,it=triPtsList.iterator();it.hasNext();){var triPt=it.next();tris[i++]=geomFact.createPolygon(geomFact.createLinearRing(triPt),null)}return geomFact.createGeometryCollection(tris)},insertSite:function(v){var e=this.locate(v);if(v.equals(e.orig(),this._tolerance)||v.equals(e.dest(),this._tolerance))return e;var base=this.makeEdge(e.orig(),v);QuadEdge.splice(base,e);var startEdge=base;do{e=(base=this.connect(e,base.sym())).oPrev()}while(e.lNext()!==startEdge);return startEdge},locate:function(){if(1===arguments.length){if(arguments[0]instanceof Vertex){var v=arguments[0];return this._locator.locate(v)}if(arguments[0]instanceof Coordinate){var p=arguments[0];return this._locator.locate(new Vertex(p))}}else if(2===arguments.length){var p0=arguments[0],p1=arguments[1],e=this._locator.locate(new Vertex(p0));if(null===e)return null;var base=e;e.dest().getCoordinate().equals2D(p0)&&(base=e.sym());var locEdge=base;do{if(locEdge.dest().getCoordinate().equals2D(p1))return locEdge;locEdge=locEdge.oNext()}while(locEdge!==base);return null}},interfaces_:function(){return[]},getClass:function(){return QuadEdgeSubdivision}}),QuadEdgeSubdivision.getTriangleEdges=function(startQE,triEdge){if(triEdge[0]=startQE,triEdge[1]=triEdge[0].lNext(),triEdge[2]=triEdge[1].lNext(),triEdge[2].lNext()!==triEdge[0])throw new IllegalArgumentException("Edges do not form a triangle")},extend(TriangleCircumcentreVisitor.prototype,{visit:function(triEdges){for(var a=triEdges[0].orig().getCoordinate(),b=triEdges[1].orig().getCoordinate(),c=triEdges[2].orig().getCoordinate(),ccVertex=new Vertex(Triangle$1.circumcentre(a,b,c)),i=0;i<3;i++)triEdges[i].rot().setOrig(ccVertex)},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleCircumcentreVisitor}}),extend(TriangleEdgesListVisitor.prototype,{getTriangleEdges:function(){return this._triList},visit:function(triEdges){this._triList.add(triEdges.clone())},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleEdgesListVisitor}}),extend(TriangleVertexListVisitor.prototype,{visit:function(triEdges){this._triList.add([triEdges[0].orig(),triEdges[1].orig(),triEdges[2].orig()])},getTriangleVertices:function(){return this._triList},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleVertexListVisitor}}),extend(TriangleCoordinatesVisitor.prototype,{checkTriangleSize:function(pts){pts.length>=2?WKTWriter.toLineString(pts[0],pts[1]):pts.length>=1&&WKTWriter.toPoint(pts[0])},visit:function(triEdges){this._coordList.clear();for(var i=0;i<3;i++){var v=triEdges[i].orig();this._coordList.add(v.getCoordinate())}if(this._coordList.size()>0){this._coordList.closeRing();var pts=this._coordList.toCoordinateArray();if(4!==pts.length)return null;this._triCoords.add(pts)}},getTriangles:function(){return this._triCoords},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleCoordinatesVisitor}}),QuadEdgeSubdivision.TriangleCircumcentreVisitor=TriangleCircumcentreVisitor,QuadEdgeSubdivision.TriangleEdgesListVisitor=TriangleEdgesListVisitor,QuadEdgeSubdivision.TriangleVertexListVisitor=TriangleVertexListVisitor,QuadEdgeSubdivision.TriangleCoordinatesVisitor=TriangleCoordinatesVisitor,QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR=1e3,extend(Segment.prototype,{getLineSegment:function(){return this._ls},getEndZ:function(){return this._ls.getCoordinate(1).z},getStartZ:function(){return this._ls.getCoordinate(0).z},intersection:function(s){return this._ls.intersection(s.getLineSegment())},getStart:function(){return this._ls.getCoordinate(0)},getEnd:function(){return this._ls.getCoordinate(1)},getEndY:function(){return this._ls.getCoordinate(1).y},getStartX:function(){return this._ls.getCoordinate(0).x},equalsTopo:function(s){return this._ls.equalsTopo(s.getLineSegment())},getStartY:function(){return this._ls.getCoordinate(0).y},setData:function(data){this._data=data},getData:function(){return this._data},getEndX:function(){return this._ls.getCoordinate(1).x},toString:function(){return this._ls.toString()},interfaces_:function(){return[]},getClass:function(){return Segment}}),extend(KdNodeVisitor.prototype,{visit:function(node){},interfaces_:function(){return[]},getClass:function(){return KdNodeVisitor}}),extend(KdNode.prototype,{isRepeated:function(){return this._count>1},getRight:function(){return this._right},getCoordinate:function(){return this._p},setLeft:function(_left){this._left=_left},getX:function(){return this._p.x},getData:function(){return this._data},getCount:function(){return this._count},getLeft:function(){return this._left},getY:function(){return this._p.y},increment:function(){this._count=this._count+1},setRight:function(_right){this._right=_right},interfaces_:function(){return[]},getClass:function(){return KdNode}}),extend(KdTree.prototype,{insert:function(){if(1===arguments.length){p=arguments[0];return this.insert(p,null)}if(2===arguments.length){var p=arguments[0],data=arguments[1];if(null===this._root)return this._root=new KdNode(p,data),this._root;if(this._tolerance>0){var matchNode=this.findBestMatchNode(p);if(null!==matchNode)return matchNode.increment(),matchNode}return this.insertExact(p,data)}},query:function(){if(1===arguments.length){var queryEnv=arguments[0],result=new ArrayList;return this.query(queryEnv,result),result}if(2===arguments.length)if(arguments[0]instanceof Envelope&&hasInterface(arguments[1],List)){var queryEnv=arguments[0],result=arguments[1];this.queryNode(this._root,queryEnv,!0,{interfaces_:function(){return[KdNodeVisitor]},visit:function(node){result.add(node)}})}else if(arguments[0]instanceof Envelope&&hasInterface(arguments[1],KdNodeVisitor)){var queryEnv=arguments[0],visitor=arguments[1];this.queryNode(this._root,queryEnv,!0,visitor)}},queryNode:function(currentNode,queryEnv,odd,visitor){if(null===currentNode)return null;var min=null,max=null,discriminant=null;odd?(min=queryEnv.getMinX(),max=queryEnv.getMaxX(),discriminant=currentNode.getX()):(min=queryEnv.getMinY(),max=queryEnv.getMaxY(),discriminant=currentNode.getY());var searchRight=discriminant<=max;min<discriminant&&this.queryNode(currentNode.getLeft(),queryEnv,!odd,visitor),queryEnv.contains(currentNode.getCoordinate())&&visitor.visit(currentNode),searchRight&&this.queryNode(currentNode.getRight(),queryEnv,!odd,visitor)},findBestMatchNode:function(p){var visitor=new BestMatchVisitor(p,this._tolerance);return this.query(visitor.queryEnvelope(),visitor),visitor.getNode()},isEmpty:function(){return null===this._root},insertExact:function(p,data){for(var currentNode=this._root,leafNode=this._root,isOddLevel=!0,isLessThan=!0;null!==currentNode;){if(null!==currentNode){if(p.distance(currentNode.getCoordinate())<=this._tolerance)return currentNode.increment(),currentNode}leafNode=currentNode,currentNode=(isLessThan=isOddLevel?p.x<currentNode.getX():p.y<currentNode.getY())?currentNode.getLeft():currentNode.getRight(),isOddLevel=!isOddLevel}this._numberOfNodes=this._numberOfNodes+1;var node=new KdNode(p,data);return isLessThan?leafNode.setLeft(node):leafNode.setRight(node),node},interfaces_:function(){return[]},getClass:function(){return KdTree}}),KdTree.toCoordinates=function(){if(1===arguments.length){kdnodes=arguments[0];return KdTree.toCoordinates(kdnodes,!1)}if(2===arguments.length){for(var kdnodes=arguments[0],includeRepeated=arguments[1],coord=new CoordinateList,it=kdnodes.iterator();it.hasNext();)for(var node=it.next(),count=includeRepeated?node.getCount():1,i=0;i<count;i++)coord.add(node.getCoordinate(),!0);return coord.toCoordinateArray()}},extend(BestMatchVisitor.prototype,{visit:function(node){var dist=this._p.distance(node.getCoordinate());if(!(dist<=this._tolerance))return null;var update=!1;(null===this._matchNode||dist<this._matchDist||null!==this._matchNode&&dist===this._matchDist&&node.getCoordinate().compareTo(this._matchNode.getCoordinate())<1)&&(update=!0),update&&(this._matchNode=node,this._matchDist=dist)},queryEnvelope:function(){var queryEnv=new Envelope(this._p);return queryEnv.expandBy(this._tolerance),queryEnv},getNode:function(){return this._matchNode},interfaces_:function(){return[KdNodeVisitor]},getClass:function(){return BestMatchVisitor}}),KdTree.BestMatchVisitor=BestMatchVisitor,extend(ConformingDelaunayTriangulator.prototype,{getInitialVertices:function(){return this._initialVertices},getKDT:function(){return this._kdt},enforceConstraints:function(){this.addConstraintVertices();var count=0,splits=0;do{splits=this.enforceGabriel(this._segments),count++}while(splits>0&&count<ConformingDelaunayTriangulator.MAX_SPLIT_ITER)},insertSites:function(vertices){for(var i=vertices.iterator();i.hasNext();){var v=i.next();this.insertSite(v)}},getVertexFactory:function(){return this._vertexFactory},getPointArray:function(){for(var pts=new Array(this._initialVertices.size()+this._segVertices.size()).fill(null),index=0,i=this._initialVertices.iterator();i.hasNext();){v=i.next();pts[index++]=v.getCoordinate()}for(var i2=this._segVertices.iterator();i2.hasNext();){var v=i2.next();pts[index++]=v.getCoordinate()}return pts},setConstraints:function(segments,segVertices){this._segments=segments,this._segVertices=segVertices},computeConvexHull:function(){var fact=new GeometryFactory,hull=new ConvexHull(this.getPointArray(),fact);this._convexHull=hull.getConvexHull()},addConstraintVertices:function(){this.computeConvexHull(),this.insertSites(this._segVertices)},findNonGabrielPoint:function(seg){var p=seg.getStart(),q=seg.getEnd(),midPt=new Coordinate((p.x+q.x)/2,(p.y+q.y)/2),segRadius=p.distance(midPt),env=new Envelope(midPt);env.expandBy(segRadius);for(var result=this._kdt.query(env),closestNonGabriel=null,minDist=Double.MAX_VALUE,i=result.iterator();i.hasNext();){var testPt=i.next().getCoordinate();if(!testPt.equals2D(p)&&!testPt.equals2D(q)){var testRadius=midPt.distance(testPt);if(testRadius<segRadius){(null===closestNonGabriel||testRadius<minDist)&&(closestNonGabriel=testPt,minDist=testRadius)}}}return closestNonGabriel},getConstraintSegments:function(){return this._segments},setSplitPointFinder:function(splitFinder){this._splitFinder=splitFinder},getConvexHull:function(){return this._convexHull},getTolerance:function(){return this._tolerance},enforceGabriel:function(segsToInsert){for(var newSegments=new ArrayList,splits=0,segsToRemove=new ArrayList,i=segsToInsert.iterator();i.hasNext();){var seg=i.next(),encroachPt=this.findNonGabrielPoint(seg);if(null!==encroachPt){this._splitPt=this._splitFinder.findSplitPoint(seg,encroachPt);var splitVertex=this.createVertex(this._splitPt,seg),s1=(this.insertSite(splitVertex),new Segment(seg.getStartX(),seg.getStartY(),seg.getStartZ(),splitVertex.getX(),splitVertex.getY(),splitVertex.getZ(),seg.getData())),s2=new Segment(splitVertex.getX(),splitVertex.getY(),splitVertex.getZ(),seg.getEndX(),seg.getEndY(),seg.getEndZ(),seg.getData());newSegments.add(s1),newSegments.add(s2),segsToRemove.add(seg),splits+=1}}return segsToInsert.removeAll(segsToRemove),segsToInsert.addAll(newSegments),splits},createVertex:function(){if(1===arguments.length){var p=arguments[0],v=null;return v=null!==this._vertexFactory?this._vertexFactory.createVertex(p,null):new ConstraintVertex(p)}if(2===arguments.length){var p=arguments[0],seg=arguments[1],v=null;return(v=null!==this._vertexFactory?this._vertexFactory.createVertex(p,seg):new ConstraintVertex(p)).setOnConstraint(!0),v}},getSubdivision:function(){return this._subdiv},computeBoundingBox:function(){var vertexEnv=ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices),segEnv=ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices),allPointsEnv=new Envelope(vertexEnv);allPointsEnv.expandToInclude(segEnv);var deltaX=.2*allPointsEnv.getWidth(),deltaY=.2*allPointsEnv.getHeight(),delta=Math.max(deltaX,deltaY);this._computeAreaEnv=new Envelope(allPointsEnv),this._computeAreaEnv.expandBy(delta)},setVertexFactory:function(vertexFactory){this._vertexFactory=vertexFactory},formInitialDelaunay:function(){this.computeBoundingBox(),this._subdiv=new QuadEdgeSubdivision(this._computeAreaEnv,this._tolerance),this._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv)),this._incDel=new IncrementalDelaunayTriangulator(this._subdiv),this.insertSites(this._initialVertices)},insertSite:function(){if(arguments[0]instanceof ConstraintVertex){var v=arguments[0],kdnode=this._kdt.insert(v.getCoordinate(),v);if(kdnode.isRepeated()){var snappedV=kdnode.getData();return snappedV.merge(v),snappedV}return this._incDel.insertSite(v),v}if(arguments[0]instanceof Coordinate){var p=arguments[0];this.insertSite(this.createVertex(p))}},interfaces_:function(){return[]},getClass:function(){return ConformingDelaunayTriangulator}}),ConformingDelaunayTriangulator.computeVertexEnvelope=function(vertices){for(var env=new Envelope,i=vertices.iterator();i.hasNext();){var v=i.next();env.expandToInclude(v.getCoordinate())}return env},ConformingDelaunayTriangulator.MAX_SPLIT_ITER=99,extend(DelaunayTriangulationBuilder.prototype,{create:function(){if(null!==this._subdiv)return null;var siteEnv=DelaunayTriangulationBuilder.envelope(this._siteCoords),vertices=DelaunayTriangulationBuilder.toVertices(this._siteCoords);this._subdiv=new QuadEdgeSubdivision(siteEnv,this._tolerance);new IncrementalDelaunayTriangulator(this._subdiv).insertSites(vertices)},setTolerance:function(tolerance){this._tolerance=tolerance},setSites:function(){if(arguments[0]instanceof Geometry){var geom=arguments[0];this._siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)}else if(hasInterface(arguments[0],Collection)){var coords=arguments[0];this._siteCoords=DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords))}},getEdges:function(geomFact){return this.create(),this._subdiv.getEdges(geomFact)},getSubdivision:function(){return this.create(),this._subdiv},getTriangles:function(geomFact){return this.create(),this._subdiv.getTriangles(geomFact)},interfaces_:function(){return[]},getClass:function(){return DelaunayTriangulationBuilder}}),DelaunayTriangulationBuilder.extractUniqueCoordinates=function(geom){if(null===geom)return new CoordinateList;var coords=geom.getCoordinates();return DelaunayTriangulationBuilder.unique(coords)},DelaunayTriangulationBuilder.envelope=function(coords){for(var env=new Envelope,i=coords.iterator();i.hasNext();){var coord=i.next();env.expandToInclude(coord)}return env},DelaunayTriangulationBuilder.unique=function(coords){var coordsCopy=CoordinateArrays.copyDeep(coords);Arrays.sort(coordsCopy);return new CoordinateList(coordsCopy,!1)},DelaunayTriangulationBuilder.toVertices=function(coords){for(var verts=new ArrayList,i=coords.iterator();i.hasNext();){var coord=i.next();verts.add(new Vertex(coord))}return verts},extend(ConformingDelaunayTriangulationBuilder.prototype,{createSiteVertices:function(coords){for(var verts=new ArrayList,i=coords.iterator();i.hasNext();){var coord=i.next();this._constraintVertexMap.containsKey(coord)||verts.add(new ConstraintVertex(coord))}return verts},create:function(){if(null!==this._subdiv)return null;var siteEnv=DelaunayTriangulationBuilder.envelope(this._siteCoords),segments=new ArrayList;null!==this._constraintLines&&(siteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal()),this.createVertices(this._constraintLines),segments=ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines));var cdt=new ConformingDelaunayTriangulator(this.createSiteVertices(this._siteCoords),this._tolerance);cdt.setConstraints(segments,new ArrayList(this._constraintVertexMap.values())),cdt.formInitialDelaunay(),cdt.enforceConstraints(),this._subdiv=cdt.getSubdivision()},setTolerance:function(tolerance){this._tolerance=tolerance},setConstraints:function(constraintLines){this._constraintLines=constraintLines},setSites:function(geom){this._siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)},getEdges:function(geomFact){return this.create(),this._subdiv.getEdges(geomFact)},getSubdivision:function(){return this.create(),this._subdiv},getTriangles:function(geomFact){return this.create(),this._subdiv.getTriangles(geomFact)},createVertices:function(geom){for(var coords=geom.getCoordinates(),i=0;i<coords.length;i++){var v=new ConstraintVertex(coords[i]);this._constraintVertexMap.put(coords[i],v)}},interfaces_:function(){return[]},getClass:function(){return ConformingDelaunayTriangulationBuilder}}),ConformingDelaunayTriangulationBuilder.createConstraintSegments=function(){if(1===arguments.length){for(var geom=arguments[0],lines=LinearComponentExtracter.getLines(geom),constraintSegs=new ArrayList,i=lines.iterator();i.hasNext();){line=i.next();ConformingDelaunayTriangulationBuilder.createConstraintSegments(line,constraintSegs)}return constraintSegs}if(2===arguments.length)for(var line=arguments[0],constraintSegs=arguments[1],coords=line.getCoordinates(),i=1;i<coords.length;i++)constraintSegs.add(new Segment(coords[i-1],coords[i]))},extend(VoronoiDiagramBuilder.prototype,{create:function(){if(null!==this._subdiv)return null;var siteEnv=DelaunayTriangulationBuilder.envelope(this._siteCoords);this._diagramEnv=siteEnv;var expandBy=Math.max(this._diagramEnv.getWidth(),this._diagramEnv.getHeight());this._diagramEnv.expandBy(expandBy),null!==this._clipEnv&&this._diagramEnv.expandToInclude(this._clipEnv);var vertices=DelaunayTriangulationBuilder.toVertices(this._siteCoords);this._subdiv=new QuadEdgeSubdivision(siteEnv,this._tolerance);new IncrementalDelaunayTriangulator(this._subdiv).insertSites(vertices)},getDiagram:function(geomFact){this.create();var polys=this._subdiv.getVoronoiDiagram(geomFact);return VoronoiDiagramBuilder.clipGeometryCollection(polys,this._diagramEnv)},setTolerance:function(tolerance){this._tolerance=tolerance},setSites:function(){if(arguments[0]instanceof Geometry){var geom=arguments[0];this._siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)}else if(hasInterface(arguments[0],Collection)){var coords=arguments[0];this._siteCoords=DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords))}},setClipEnvelope:function(clipEnv){this._clipEnv=clipEnv},getSubdivision:function(){return this.create(),this._subdiv},interfaces_:function(){return[]},getClass:function(){return VoronoiDiagramBuilder}}),VoronoiDiagramBuilder.clipGeometryCollection=function(geom,clipEnv){for(var clipPoly=geom.getFactory().toGeometry(clipEnv),clipped=new ArrayList,i=0;i<geom.getNumGeometries();i++){var g=geom.getGeometryN(i),result=null;clipEnv.contains(g.getEnvelopeInternal())?result=g:clipEnv.intersects(g.getEnvelopeInternal())&&(result=clipPoly.intersection(g)).setUserData(g.getUserData()),null===result||result.isEmpty()||clipped.add(result)}return geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped))},extend(LinearLocation.prototype,{getSegmentIndex:function(){return this._segmentIndex},getComponentIndex:function(){return this._componentIndex},isEndpoint:function(linearGeom){var nseg=linearGeom.getGeometryN(this._componentIndex).getNumPoints()-1;return this._segmentIndex>=nseg||this._segmentIndex===nseg&&this._segmentFraction>=1},isValid:function(linearGeom){if(this._componentIndex<0||this._componentIndex>=linearGeom.getNumGeometries())return!1;var lineComp=linearGeom.getGeometryN(this._componentIndex);return!(this._segmentIndex<0||this._segmentIndex>lineComp.getNumPoints())&&((this._segmentIndex!==lineComp.getNumPoints()||0===this._segmentFraction)&&!(this._segmentFraction<0||this._segmentFraction>1))},normalize:function(){this._segmentFraction<0&&(this._segmentFraction=0),this._segmentFraction>1&&(this._segmentFraction=1),this._componentIndex<0&&(this._componentIndex=0,this._segmentIndex=0,this._segmentFraction=0),this._segmentIndex<0&&(this._segmentIndex=0,this._segmentFraction=0),1===this._segmentFraction&&(this._segmentFraction=0,this._segmentIndex+=1)},toLowest:function(linearGeom){var nseg=linearGeom.getGeometryN(this._componentIndex).getNumPoints()-1;return this._segmentIndex<nseg?this:new LinearLocation(this._componentIndex,nseg,1,!1)},getCoordinate:function(linearGeom){var lineComp=linearGeom.getGeometryN(this._componentIndex),p0=lineComp.getCoordinateN(this._segmentIndex);if(this._segmentIndex>=lineComp.getNumPoints()-1)return p0;var p1=lineComp.getCoordinateN(this._segmentIndex+1);return LinearLocation.pointAlongSegmentByFraction(p0,p1,this._segmentFraction)},getSegmentFraction:function(){return this._segmentFraction},getSegment:function(linearGeom){var lineComp=linearGeom.getGeometryN(this._componentIndex),p0=lineComp.getCoordinateN(this._segmentIndex);if(this._segmentIndex>=lineComp.getNumPoints()-1){return new LineSegment(lineComp.getCoordinateN(lineComp.getNumPoints()-2),p0)}return new LineSegment(p0,lineComp.getCoordinateN(this._segmentIndex+1))},clamp:function(linear){if(this._componentIndex>=linear.getNumGeometries())return this.setToEnd(linear),null;if(this._segmentIndex>=linear.getNumPoints()){var line=linear.getGeometryN(this._componentIndex);this._segmentIndex=line.getNumPoints()-1,this._segmentFraction=1}},setToEnd:function(linear){this._componentIndex=linear.getNumGeometries()-1;var lastLine=linear.getGeometryN(this._componentIndex);this._segmentIndex=lastLine.getNumPoints()-1,this._segmentFraction=1},compareTo:function(o){var other=o;return this._componentIndex<other._componentIndex?-1:this._componentIndex>other._componentIndex?1:this._segmentIndex<other._segmentIndex?-1:this._segmentIndex>other._segmentIndex?1:this._segmentFraction<other._segmentFraction?-1:this._segmentFraction>other._segmentFraction?1:0},clone:function(){return new LinearLocation(this._componentIndex,this._segmentIndex,this._segmentFraction)},toString:function(){return"LinearLoc["+this._componentIndex+", "+this._segmentIndex+", "+this._segmentFraction+"]"},isOnSameSegment:function(loc){return this._componentIndex===loc._componentIndex&&(this._segmentIndex===loc._segmentIndex||(loc._segmentIndex-this._segmentIndex==1&&0===loc._segmentFraction||this._segmentIndex-loc._segmentIndex==1&&0===this._segmentFraction))},snapToVertex:function(linearGeom,minDistance){if(this._segmentFraction<=0||this._segmentFraction>=1)return null;var segLen=this.getSegmentLength(linearGeom),lenToStart=this._segmentFraction*segLen,lenToEnd=segLen-lenToStart;lenToStart<=lenToEnd&&lenToStart<minDistance?this._segmentFraction=0:lenToEnd<=lenToStart&&lenToEnd<minDistance&&(this._segmentFraction=1)},compareLocationValues:function(componentIndex1,segmentIndex1,segmentFraction1){return this._componentIndex<componentIndex1?-1:this._componentIndex>componentIndex1?1:this._segmentIndex<segmentIndex1?-1:this._segmentIndex>segmentIndex1?1:this._segmentFraction<segmentFraction1?-1:this._segmentFraction>segmentFraction1?1:0},getSegmentLength:function(linearGeom){var lineComp=linearGeom.getGeometryN(this._componentIndex),segIndex=this._segmentIndex;this._segmentIndex>=lineComp.getNumPoints()-1&&(segIndex=lineComp.getNumPoints()-2);var p0=lineComp.getCoordinateN(segIndex),p1=lineComp.getCoordinateN(segIndex+1);return p0.distance(p1)},isVertex:function(){return this._segmentFraction<=0||this._segmentFraction>=1},interfaces_:function(){return[Comparable]},getClass:function(){return LinearLocation}}),LinearLocation.getEndLocation=function(linear){var loc=new LinearLocation;return loc.setToEnd(linear),loc},LinearLocation.pointAlongSegmentByFraction=function(p0,p1,frac){if(frac<=0)return p0;if(frac>=1)return p1;return new Coordinate((p1.x-p0.x)*frac+p0.x,(p1.y-p0.y)*frac+p0.y,(p1.z-p0.z)*frac+p0.z)},LinearLocation.compareLocationValues=function(componentIndex0,segmentIndex0,segmentFraction0,componentIndex1,segmentIndex1,segmentFraction1){return componentIndex0<componentIndex1?-1:componentIndex0>componentIndex1?1:segmentIndex0<segmentIndex1?-1:segmentIndex0>segmentIndex1?1:segmentFraction0<segmentFraction1?-1:segmentFraction0>segmentFraction1?1:0},extend(LinearIterator.prototype,{getComponentIndex:function(){return this._componentIndex},getLine:function(){return this._currentLine},getVertexIndex:function(){return this._vertexIndex},getSegmentEnd:function(){return this._vertexIndex<this.getLine().getNumPoints()-1?this._currentLine.getCoordinateN(this._vertexIndex+1):null},next:function(){if(!this.hasNext())return null;this._vertexIndex++,this._vertexIndex>=this._currentLine.getNumPoints()&&(this._componentIndex++,this.loadCurrentLine(),this._vertexIndex=0)},loadCurrentLine:function(){if(this._componentIndex>=this._numLines)return this._currentLine=null,null;this._currentLine=this._linearGeom.getGeometryN(this._componentIndex)},getSegmentStart:function(){return this._currentLine.getCoordinateN(this._vertexIndex)},isEndOfLine:function(){return!(this._componentIndex>=this._numLines)&&!(this._vertexIndex<this._currentLine.getNumPoints()-1)},hasNext:function(){return!(this._componentIndex>=this._numLines)&&!(this._componentIndex===this._numLines-1&&this._vertexIndex>=this._currentLine.getNumPoints())},interfaces_:function(){return[]},getClass:function(){return LinearIterator}}),LinearIterator.segmentEndVertexIndex=function(loc){return loc.getSegmentFraction()>0?loc.getSegmentIndex()+1:loc.getSegmentIndex()},extend(LocationIndexOfPoint.prototype,{indexOf:function(inputPt){return this.indexOfFromStart(inputPt,null)},indexOfFromStart:function(inputPt,minIndex){for(var minDistance=Double.MAX_VALUE,minComponentIndex=0,minSegmentIndex=0,minFrac=-1,seg=new LineSegment,it=new LinearIterator(this._linearGeom);it.hasNext();it.next())if(!it.isEndOfLine()){seg.p0=it.getSegmentStart(),seg.p1=it.getSegmentEnd();var segDistance=seg.distance(inputPt),segFrac=seg.segmentFraction(inputPt),candidateComponentIndex=it.getComponentIndex(),candidateSegmentIndex=it.getVertexIndex();segDistance<minDistance&&(null===minIndex||minIndex.compareLocationValues(candidateComponentIndex,candidateSegmentIndex,segFrac)<0)&&(minComponentIndex=candidateComponentIndex,minSegmentIndex=candidateSegmentIndex,minFrac=segFrac,minDistance=segDistance)}if(minDistance===Double.MAX_VALUE)return new LinearLocation(minIndex);return new LinearLocation(minComponentIndex,minSegmentIndex,minFrac)},indexOfAfter:function(inputPt,minIndex){if(null===minIndex)return this.indexOf(inputPt);var endLoc=LinearLocation.getEndLocation(this._linearGeom);if(endLoc.compareTo(minIndex)<=0)return endLoc;var closestAfter=this.indexOfFromStart(inputPt,minIndex);return Assert.isTrue(closestAfter.compareTo(minIndex)>=0,"computed location is before specified minimum location"),closestAfter},interfaces_:function(){return[]},getClass:function(){return LocationIndexOfPoint}}),LocationIndexOfPoint.indexOf=function(linearGeom,inputPt){return new LocationIndexOfPoint(linearGeom).indexOf(inputPt)},LocationIndexOfPoint.indexOfAfter=function(linearGeom,inputPt,minIndex){return new LocationIndexOfPoint(linearGeom).indexOfAfter(inputPt,minIndex)},extend(LocationIndexOfLine.prototype,{indicesOf:function(subLine){var startPt=subLine.getGeometryN(0).getCoordinateN(0),lastLine=subLine.getGeometryN(subLine.getNumGeometries()-1),endPt=lastLine.getCoordinateN(lastLine.getNumPoints()-1),locPt=new LocationIndexOfPoint(this._linearGeom),subLineLoc=new Array(2).fill(null);return subLineLoc[0]=locPt.indexOf(startPt),0===subLine.getLength()?subLineLoc[1]=subLineLoc[0].clone():subLineLoc[1]=locPt.indexOfAfter(endPt,subLineLoc[0]),subLineLoc},interfaces_:function(){return[]},getClass:function(){return LocationIndexOfLine}}),LocationIndexOfLine.indicesOf=function(linearGeom,subLine){return new LocationIndexOfLine(linearGeom).indicesOf(subLine)},extend(LinearGeometryBuilder.prototype,{getGeometry:function(){return this.endLine(),this._geomFact.buildGeometry(this._lines)},getLastCoordinate:function(){return this._lastPt},endLine:function(){if(null===this._coordList)return null;if(this._ignoreInvalidLines&&this._coordList.size()<2)return this._coordList=null,null;var rawPts=this._coordList.toCoordinateArray(),pts=rawPts;this._fixInvalidLines&&(pts=this.validCoordinateSequence(rawPts)),this._coordList=null;var line=null;try{line=this._geomFact.createLineString(pts)}catch(ex){if(!(ex instanceof IllegalArgumentException))throw ex;if(!this._ignoreInvalidLines)throw ex}null!==line&&this._lines.add(line)},setFixInvalidLines:function(fixInvalidLines){this._fixInvalidLines=fixInvalidLines},add:function(){if(1===arguments.length){pt=arguments[0];this.add(pt,!0)}else if(2===arguments.length){var pt=arguments[0],allowRepeatedPoints=arguments[1];null===this._coordList&&(this._coordList=new CoordinateList),this._coordList.add(pt,allowRepeatedPoints),this._lastPt=pt}},setIgnoreInvalidLines:function(ignoreInvalidLines){this._ignoreInvalidLines=ignoreInvalidLines},validCoordinateSequence:function(pts){if(pts.length>=2)return pts;return[pts[0],pts[0]]},interfaces_:function(){return[]},getClass:function(){return LinearGeometryBuilder}}),extend(ExtractLineByLocation.prototype,{computeLinear:function(start,end){var builder=new LinearGeometryBuilder(this._line.getFactory());builder.setFixInvalidLines(!0),start.isVertex()||builder.add(start.getCoordinate(this._line));for(var it=new LinearIterator(this._line,start);it.hasNext()&&!(end.compareLocationValues(it.getComponentIndex(),it.getVertexIndex(),0)<0);it.next()){var pt=it.getSegmentStart();builder.add(pt),it.isEndOfLine()&&builder.endLine()}return end.isVertex()||builder.add(end.getCoordinate(this._line)),builder.getGeometry()},computeLine:function(start,end){var coordinates=this._line.getCoordinates(),newCoordinates=new CoordinateList,startSegmentIndex=start.getSegmentIndex();start.getSegmentFraction()>0&&(startSegmentIndex+=1);var lastSegmentIndex=end.getSegmentIndex();1===end.getSegmentFraction()&&(lastSegmentIndex+=1),lastSegmentIndex>=coordinates.length&&(lastSegmentIndex=coordinates.length-1),start.isVertex()||newCoordinates.add(start.getCoordinate(this._line));for(var i=startSegmentIndex;i<=lastSegmentIndex;i++)newCoordinates.add(coordinates[i]);end.isVertex()||newCoordinates.add(end.getCoordinate(this._line)),newCoordinates.size()<=0&&newCoordinates.add(start.getCoordinate(this._line));var newCoordinateArray=newCoordinates.toCoordinateArray();return newCoordinateArray.length<=1&&(newCoordinateArray=[newCoordinateArray[0],newCoordinateArray[0]]),this._line.getFactory().createLineString(newCoordinateArray)},extract:function(start,end){return end.compareTo(start)<0?this.reverse(this.computeLinear(end,start)):this.computeLinear(start,end)},reverse:function(linear){return linear instanceof LineString?linear.reverse():linear instanceof MultiLineString?linear.reverse():(Assert.shouldNeverReachHere("non-linear geometry encountered"),null)},interfaces_:function(){return[]},getClass:function(){return ExtractLineByLocation}}),ExtractLineByLocation.extract=function(line,start,end){return new ExtractLineByLocation(line).extract(start,end)},extend(LocationIndexedLine.prototype,{clampIndex:function(index){var loc=index.clone();return loc.clamp(this._linearGeom),loc},project:function(pt){return LocationIndexOfPoint.indexOf(this._linearGeom,pt)},checkGeometryType:function(){if(!(this._linearGeom instanceof LineString||this._linearGeom instanceof MultiLineString))throw new IllegalArgumentException("Input geometry must be linear")},extractPoint:function(){if(1===arguments.length){return(index=arguments[0]).getCoordinate(this._linearGeom)}if(2===arguments.length){var index=arguments[0],offsetDistance=arguments[1],indexLow=index.toLowest(this._linearGeom);return indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(),offsetDistance)}},isValidIndex:function(index){return index.isValid(this._linearGeom)},getEndIndex:function(){return LinearLocation.getEndLocation(this._linearGeom)},getStartIndex:function(){return new LinearLocation},indexOfAfter:function(pt,minIndex){return LocationIndexOfPoint.indexOfAfter(this._linearGeom,pt,minIndex)},extractLine:function(startIndex,endIndex){return ExtractLineByLocation.extract(this._linearGeom,startIndex,endIndex)},indexOf:function(pt){return LocationIndexOfPoint.indexOf(this._linearGeom,pt)},indicesOf:function(subLine){return LocationIndexOfLine.indicesOf(this._linearGeom,subLine)},interfaces_:function(){return[]},getClass:function(){return LocationIndexedLine}}),extend(LengthIndexOfPoint.prototype,{indexOf:function(inputPt){return this.indexOfFromStart(inputPt,-1)},indexOfFromStart:function(inputPt,minIndex){for(var minDistance=Double.MAX_VALUE,ptMeasure=minIndex,segmentStartMeasure=0,seg=new LineSegment,it=new LinearIterator(this._linearGeom);it.hasNext();){if(!it.isEndOfLine()){seg.p0=it.getSegmentStart(),seg.p1=it.getSegmentEnd();var segDistance=seg.distance(inputPt),segMeasureToPt=this.segmentNearestMeasure(seg,inputPt,segmentStartMeasure);segDistance<minDistance&&segMeasureToPt>minIndex&&(ptMeasure=segMeasureToPt,minDistance=segDistance),segmentStartMeasure+=seg.getLength()}it.next()}return ptMeasure},indexOfAfter:function(inputPt,minIndex){if(minIndex<0)return this.indexOf(inputPt);var endIndex=this._linearGeom.getLength();if(endIndex<minIndex)return endIndex;var closestAfter=this.indexOfFromStart(inputPt,minIndex);return Assert.isTrue(closestAfter>=minIndex,"computed index is before specified minimum index"),closestAfter},segmentNearestMeasure:function(seg,inputPt,segmentStartMeasure){var projFactor=seg.projectionFactor(inputPt);return projFactor<=0?segmentStartMeasure:projFactor<=1?segmentStartMeasure+projFactor*seg.getLength():segmentStartMeasure+seg.getLength()},interfaces_:function(){return[]},getClass:function(){return LengthIndexOfPoint}}),LengthIndexOfPoint.indexOf=function(linearGeom,inputPt){return new LengthIndexOfPoint(linearGeom).indexOf(inputPt)},LengthIndexOfPoint.indexOfAfter=function(linearGeom,inputPt,minIndex){return new LengthIndexOfPoint(linearGeom).indexOfAfter(inputPt,minIndex)},extend(LengthLocationMap.prototype,{getLength:function(loc){for(var totalLength=0,it=new LinearIterator(this._linearGeom);it.hasNext();){if(!it.isEndOfLine()){var p0=it.getSegmentStart(),segLen=it.getSegmentEnd().distance(p0);if(loc.getComponentIndex()===it.getComponentIndex()&&loc.getSegmentIndex()===it.getVertexIndex())return totalLength+segLen*loc.getSegmentFraction();totalLength+=segLen}it.next()}return totalLength},resolveHigher:function(loc){if(!loc.isEndpoint(this._linearGeom))return loc;var compIndex=loc.getComponentIndex();if(compIndex>=this._linearGeom.getNumGeometries()-1)return loc;do{compIndex++}while(compIndex<this._linearGeom.getNumGeometries()-1&&0===this._linearGeom.getGeometryN(compIndex).getLength());return new LinearLocation(compIndex,0,0)},getLocation:function(){if(1===arguments.length){length=arguments[0];return this.getLocation(length,!0)}if(2===arguments.length){var length=arguments[0],resolveLower=arguments[1],forwardLength=length;if(length<0){forwardLength=this._linearGeom.getLength()+length}var loc=this.getLocationForward(forwardLength);return resolveLower?loc:this.resolveHigher(loc)}},getLocationForward:function(length){if(length<=0)return new LinearLocation;for(var totalLength=0,it=new LinearIterator(this._linearGeom);it.hasNext();){if(it.isEndOfLine()){if(totalLength===length){return new LinearLocation(compIndex=it.getComponentIndex(),segIndex=it.getVertexIndex(),0)}}else{var p0=it.getSegmentStart(),segLen=it.getSegmentEnd().distance(p0);if(totalLength+segLen>length){var frac=(length-totalLength)/segLen,compIndex=it.getComponentIndex(),segIndex=it.getVertexIndex();return new LinearLocation(compIndex,segIndex,frac)}totalLength+=segLen}it.next()}return LinearLocation.getEndLocation(this._linearGeom)},interfaces_:function(){return[]},getClass:function(){return LengthLocationMap}}),LengthLocationMap.getLength=function(linearGeom,loc){return new LengthLocationMap(linearGeom).getLength(loc)},LengthLocationMap.getLocation=function(){if(2===arguments.length){var linearGeom=arguments[0],length=arguments[1];return(locater=new LengthLocationMap(linearGeom)).getLocation(length)}if(3===arguments.length){var linearGeom=arguments[0],length=arguments[1],resolveLower=arguments[2],locater=new LengthLocationMap(linearGeom);return locater.getLocation(length,resolveLower)}},extend(LengthIndexedLine.prototype,{clampIndex:function(index){var posIndex=this.positiveIndex(index),startIndex=this.getStartIndex();if(posIndex<startIndex)return startIndex;var endIndex=this.getEndIndex();return posIndex>endIndex?endIndex:posIndex},locationOf:function(){if(1===arguments.length){index=arguments[0];return LengthLocationMap.getLocation(this._linearGeom,index)}if(2===arguments.length){var index=arguments[0],resolveLower=arguments[1];return LengthLocationMap.getLocation(this._linearGeom,index,resolveLower)}},project:function(pt){return LengthIndexOfPoint.indexOf(this._linearGeom,pt)},positiveIndex:function(index){return index>=0?index:this._linearGeom.getLength()+index},extractPoint:function(){if(1===arguments.length){index=arguments[0];return(loc=LengthLocationMap.getLocation(this._linearGeom,index)).getCoordinate(this._linearGeom)}if(2===arguments.length){var index=arguments[0],offsetDistance=arguments[1],loc=LengthLocationMap.getLocation(this._linearGeom,index),locLow=loc.toLowest(this._linearGeom);return locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(),offsetDistance)}},isValidIndex:function(index){return index>=this.getStartIndex()&&index<=this.getEndIndex()},getEndIndex:function(){return this._linearGeom.getLength()},getStartIndex:function(){return 0},indexOfAfter:function(pt,minIndex){return LengthIndexOfPoint.indexOfAfter(this._linearGeom,pt,minIndex)},extractLine:function(startIndex,endIndex){new LocationIndexedLine(this._linearGeom);var startIndex2=this.clampIndex(startIndex),endIndex2=this.clampIndex(endIndex),resolveStartLower=startIndex2===endIndex2,startLoc=this.locationOf(startIndex2,resolveStartLower),endLoc=this.locationOf(endIndex2);return ExtractLineByLocation.extract(this._linearGeom,startLoc,endLoc)},indexOf:function(pt){return LengthIndexOfPoint.indexOf(this._linearGeom,pt)},indicesOf:function(subLine){var locIndex=LocationIndexOfLine.indicesOf(this._linearGeom,subLine);return[LengthLocationMap.getLength(this._linearGeom,locIndex[0]),LengthLocationMap.getLength(this._linearGeom,locIndex[1])]},interfaces_:function(){return[]},getClass:function(){return LengthIndexedLine}});var adder=function(){return new Adder};Adder.prototype={constructor:Adder,reset:function(){this.s=this.t=0},add:function(y){_add(temp,y,this.t),_add(this,temp.s,this.s),this.s?this.t+=temp.t:this.s=temp.t},valueOf:function(){return this.s}};var temp=new Adder,epsilon=1e-6,pi=Math.PI,halfPi=pi/2,quarterPi=pi/4,tau=2*pi,degrees=180/pi,radians=pi/180,abs=Math.abs,atan=Math.atan,atan2=Math.atan2,cos=Math.cos,exp=Math.exp,log=Math.log,sin=Math.sin,sqrt=Math.sqrt,tan=Math.tan,streamObjectType={Feature:function(object,stream){streamGeometry(object.geometry,stream)},FeatureCollection:function(object,stream){for(var features=object.features,i=-1,n=features.length;++i<n;)streamGeometry(features[i].geometry,stream)}},streamGeometryType={Sphere:function(object,stream){stream.sphere()},Point:function(object,stream){object=object.coordinates,stream.point(object[0],object[1],object[2])},MultiPoint:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)object=coordinates[i],stream.point(object[0],object[1],object[2])},LineString:function(object,stream){streamLine(object.coordinates,stream,0)},MultiLineString:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)streamLine(coordinates[i],stream,0)},Polygon:function(object,stream){streamPolygon(object.coordinates,stream)},MultiPolygon:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)streamPolygon(coordinates[i],stream)},GeometryCollection:function(object,stream){for(var geometries=object.geometries,i=-1,n=geometries.length;++i<n;)streamGeometry(geometries[i],stream)}},geoStream=function(object,stream){object&&streamObjectType.hasOwnProperty(object.type)?streamObjectType[object.type](object,stream):streamGeometry(object,stream)},compose=(adder(),adder(),adder(),function(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1])}return a.invert&&b.invert&&(compose.invert=function(x,y){return(x=b.invert(x,y))&&a.invert(x[0],x[1])}),compose});rotationIdentity.invert=rotationIdentity;var rotation=function(rotate){function forward(coordinates){return coordinates=rotate(coordinates[0]*radians,coordinates[1]*radians),coordinates[0]*=degrees,coordinates[1]*=degrees,coordinates}return rotate=rotateRadians(rotate[0]*radians,rotate[1]*radians,rotate.length>2?rotate[2]*radians:0),forward.invert=function(coordinates){return coordinates=rotate.invert(coordinates[0]*radians,coordinates[1]*radians),coordinates[0]*=degrees,coordinates[1]*=degrees,coordinates},forward},clipBuffer=function(){var line,lines=[];return{point:function(x,y){line.push([x,y])},lineStart:function(){lines.push(line=[])},lineEnd:noop,rejoin:function(){lines.length>1&&lines.push(lines.pop().concat(lines.shift()))},result:function(){var result=lines;return lines=[],line=null,result}}},clipLine=function(a,b,x0,y0,x1,y1){var r,ax=a[0],ay=a[1],t0=0,t1=1,dx=b[0]-ax,dy=b[1]-ay;if(r=x0-ax,dx||!(r>0)){if(r/=dx,dx<0){if(r<t0)return;r<t1&&(t1=r)}else if(dx>0){if(r>t1)return;r>t0&&(t0=r)}if(r=x1-ax,dx||!(r<0)){if(r/=dx,dx<0){if(r>t1)return;r>t0&&(t0=r)}else if(dx>0){if(r<t0)return;r<t1&&(t1=r)}if(r=y0-ay,dy||!(r>0)){if(r/=dy,dy<0){if(r<t0)return;r<t1&&(t1=r)}else if(dy>0){if(r>t1)return;r>t0&&(t0=r)}if(r=y1-ay,dy||!(r<0)){if(r/=dy,dy<0){if(r>t1)return;r>t0&&(t0=r)}else if(dy>0){if(r<t0)return;r<t1&&(t1=r)}return t0>0&&(a[0]=ax+t0*dx,a[1]=ay+t0*dy),t1<1&&(b[0]=ax+t1*dx,b[1]=ay+t1*dy),!0}}}}},pointEqual=function(a,b){return abs(a[0]-b[0])<epsilon&&abs(a[1]-b[1])<epsilon},clipPolygon=function(segments,compareIntersection,startInside,interpolate,stream){var i,n,subject=[],clip=[];if(segments.forEach(function(segment){if(!((n=segment.length-1)<=0)){var n,x,p0=segment[0],p1=segment[n];if(pointEqual(p0,p1)){for(stream.lineStart(),i=0;i<n;++i)stream.point((p0=segment[i])[0],p0[1]);stream.lineEnd()}else subject.push(x=new Intersection(p0,segment,null,!0)),clip.push(x.o=new Intersection(p0,null,x,!1)),subject.push(x=new Intersection(p1,segment,null,!1)),clip.push(x.o=new Intersection(p1,null,x,!0))}}),subject.length){for(clip.sort(compareIntersection),link(subject),link(clip),i=0,n=clip.length;i<n;++i)clip[i].e=startInside=!startInside;for(var points,point,start=subject[0];;){for(var current=start,isSubject=!0;current.v;)if((current=current.n)===start)return;points=current.z,stream.lineStart();do{if(current.v=current.o.v=!0,current.e){if(isSubject)for(i=0,n=points.length;i<n;++i)stream.point((point=points[i])[0],point[1]);else interpolate(current.x,current.n.x,1,stream);current=current.n}else{if(isSubject)for(points=current.p.z,i=points.length-1;i>=0;--i)stream.point((point=points[i])[0],point[1]);else interpolate(current.x,current.p.x,-1,stream);current=current.p}points=(current=current.o).z,isSubject=!isSubject}while(!current.v);stream.lineEnd()}}},ascending=function(a,b){return a<b?-1:a>b?1:a>=b?0:NaN},merge$1=(function(compare){1===compare.length&&(compare=function(f){return function(d,x){return ascending(f(d),x)}}(compare))}(ascending),function(arrays){for(var m,merged,array,n=arrays.length,i=-1,j=0;++i<n;)j+=arrays[i].length;for(merged=new Array(j);--n>=0;)for(m=(array=arrays[n]).length;--m>=0;)merged[--j]=array[m];return merged}),clipMax=1e9,clipMin=-clipMax,sum$1=adder(),identity$4=(adder(),function(x){return x}),x0$2=(adder(),adder(),1/0),y0$2=x0$2,x1=-x0$2,y1=x1,boundsStream$1={point:function(x,y){x<x0$2&&(x0$2=x),x>x1&&(x1=x),y<y0$2&&(y0$2=y),y>y1&&(y1=y)},lineStart:noop,lineEnd:noop,polygonStart:noop,polygonEnd:noop,result:function(){var bounds=[[x0$2,y0$2],[x1,y1]];return x1=y1=-(y0$2=x0$2=1/0),bounds}},clip=(adder(),function(pointVisible,clipLine,interpolate,start){return function(rotate,sink){function point(lambda,phi){var point=rotate(lambda,phi);pointVisible(lambda=point[0],phi=point[1])&&sink.point(lambda,phi)}function pointLine(lambda,phi){var point=rotate(lambda,phi);line.point(point[0],point[1])}function lineStart(){clip.point=pointLine,line.lineStart()}function lineEnd(){clip.point=point,line.lineEnd()}function pointRing(lambda,phi){ring.push([lambda,phi]);var point=rotate(lambda,phi);ringSink.point(point[0],point[1])}function ringStart(){ringSink.lineStart(),ring=[]}function ringEnd(){pointRing(ring[0][0],ring[0][1]),ringSink.lineEnd();var i,m,segment,point,clean=ringSink.clean(),ringSegments=ringBuffer.result(),n=ringSegments.length;if(ring.pop(),polygon.push(ring),ring=null,n)if(1&clean){if(segment=ringSegments[0],(m=segment.length-1)>0){for(polygonStarted||(sink.polygonStart(),polygonStarted=!0),sink.lineStart(),i=0;i<m;++i)sink.point((point=segment[i])[0],point[1]);sink.lineEnd()}}else n>1&&2&clean&&ringSegments.push(ringSegments.pop().concat(ringSegments.shift())),segments.push(ringSegments.filter(validSegment))}var polygon,segments,ring,line=clipLine(sink),rotatedStart=rotate.invert(start[0],start[1]),ringBuffer=clipBuffer(),ringSink=clipLine(ringBuffer),polygonStarted=!1,clip={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){clip.point=pointRing,clip.lineStart=ringStart,clip.lineEnd=ringEnd,segments=[],polygon=[]},polygonEnd:function(){clip.point=point,clip.lineStart=lineStart,clip.lineEnd=lineEnd,segments=merge$1(segments);var startInside=function(polygon,point){var lambda=point[0],phi=point[1],normal=[sin(lambda),-cos(lambda),0],angle=0,winding=0;sum$1.reset();for(var i=0,n=polygon.length;i<n;++i)if(m=(ring=polygon[i]).length)for(var ring,m,point0=ring[m-1],lambda0=point0[0],phi0=point0[1]/2+quarterPi,sinPhi0=sin(phi0),cosPhi0=cos(phi0),j=0;j<m;++j,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[j],lambda1=point1[0],phi1=point1[1]/2+quarterPi,sinPhi1=sin(phi1),cosPhi1=cos(phi1),delta=lambda1-lambda0,sign=delta>=0?1:-1,absDelta=sign*delta,antimeridian=absDelta>pi,k=sinPhi0*sinPhi1;if(sum$1.add(atan2(k*sign*sin(absDelta),cosPhi0*cosPhi1+k*cos(absDelta))),angle+=antimeridian?delta+sign*tau:delta,antimeridian^lambda0>=lambda^lambda1>=lambda){var arc=cartesianCross(cartesian(point0),cartesian(point1));cartesianNormalizeInPlace(arc);var intersection=cartesianCross(normal,arc);cartesianNormalizeInPlace(intersection);var phiArc=(antimeridian^delta>=0?-1:1)*asin(intersection[2]);(phi>phiArc||phi===phiArc&&(arc[0]||arc[1]))&&(winding+=antimeridian^delta>=0?1:-1)}}return(angle<-epsilon||angle<epsilon&&sum$1<-epsilon)^1&winding}(polygon,rotatedStart);segments.length?(polygonStarted||(sink.polygonStart(),polygonStarted=!0),clipPolygon(segments,compareIntersection,startInside,interpolate,sink)):startInside&&(polygonStarted||(sink.polygonStart(),polygonStarted=!0),sink.lineStart(),interpolate(null,null,1,sink),sink.lineEnd()),polygonStarted&&(sink.polygonEnd(),polygonStarted=!1),segments=polygon=null},sphere:function(){sink.polygonStart(),sink.lineStart(),interpolate(null,null,1,sink),sink.lineEnd(),sink.polygonEnd()}};return clip}}),clipAntimeridian=clip(function(){return!0},function(stream){var _clean,lambda0=NaN,phi0=NaN,sign0=NaN;return{lineStart:function(){stream.lineStart(),_clean=1},point:function(lambda1,phi1){var sign1=lambda1>0?pi:-pi,delta=abs(lambda1-lambda0);abs(delta-pi)<epsilon?(stream.point(lambda0,phi0=(phi0+phi1)/2>0?halfPi:-halfPi),stream.point(sign0,phi0),stream.lineEnd(),stream.lineStart(),stream.point(sign1,phi0),stream.point(lambda1,phi0),_clean=0):sign0!==sign1&&delta>=pi&&(abs(lambda0-sign0)<epsilon&&(lambda0-=sign0*epsilon),abs(lambda1-sign1)<epsilon&&(lambda1-=sign1*epsilon),phi0=function(lambda0,phi0,lambda1,phi1){var cosPhi0,cosPhi1,sinLambda0Lambda1=sin(lambda0-lambda1);return abs(sinLambda0Lambda1)>epsilon?atan((sin(phi0)*(cosPhi1=cos(phi1))*sin(lambda1)-sin(phi1)*(cosPhi0=cos(phi0))*sin(lambda0))/(cosPhi0*cosPhi1*sinLambda0Lambda1)):(phi0+phi1)/2}(lambda0,phi0,lambda1,phi1),stream.point(sign0,phi0),stream.lineEnd(),stream.lineStart(),stream.point(sign1,phi0),_clean=0),stream.point(lambda0=lambda1,phi0=phi1),sign0=sign1},lineEnd:function(){stream.lineEnd(),lambda0=phi0=NaN},clean:function(){return 2-_clean}}},function(from,to,direction,stream){var phi;if(null==from)phi=direction*halfPi,stream.point(-pi,phi),stream.point(0,phi),stream.point(pi,phi),stream.point(pi,0),stream.point(pi,-phi),stream.point(0,-phi),stream.point(-pi,-phi),stream.point(-pi,0),stream.point(-pi,phi);else if(abs(from[0]-to[0])>epsilon){var lambda=from[0]<to[0]?pi:-pi;phi=direction*lambda/2,stream.point(-lambda,phi),stream.point(0,phi),stream.point(lambda,phi)}else stream.point(to[0],to[1])},[-pi,-halfPi]),clipCircle=function(radius,delta){function visible(lambda,phi){return cos(lambda)*cos(phi)>cr}function intersect(a,b,two){var n1=[1,0,0],n2=cartesianCross(cartesian(a),cartesian(b)),n2n2=cartesianDot(n2,n2),n1n2=n2[0],determinant=n2n2-n1n2*n1n2;if(!determinant)return!two&&a;var c1=cr*n2n2/determinant,c2=-cr*n1n2/determinant,n1xn2=cartesianCross(n1,n2),A=cartesianScale(n1,c1);cartesianAddInPlace(A,cartesianScale(n2,c2));var u=n1xn2,w=cartesianDot(A,u),uu=cartesianDot(u,u),t2=w*w-uu*(cartesianDot(A,A)-1);if(!(t2<0)){var t=sqrt(t2),q=cartesianScale(u,(-w-t)/uu);if(cartesianAddInPlace(q,A),q=spherical(q),!two)return q;var z,lambda0=a[0],lambda1=b[0],phi0=a[1],phi1=b[1];lambda1<lambda0&&(z=lambda0,lambda0=lambda1,lambda1=z);var delta=lambda1-lambda0,polar=abs(delta-pi)<epsilon;if(!polar&&phi1<phi0&&(z=phi0,phi0=phi1,phi1=z),polar||delta<epsilon?polar?phi0+phi1>0^q[1]<(abs(q[0]-lambda0)<epsilon?phi0:phi1):phi0<=q[1]&&q[1]<=phi1:delta>pi^(lambda0<=q[0]&&q[0]<=lambda1)){var q1=cartesianScale(u,(-w+t)/uu);return cartesianAddInPlace(q1,A),[q,spherical(q1)]}}}function code(lambda,phi){var r=smallRadius?radius:pi-radius,code=0;return lambda<-r?code|=1:lambda>r&&(code|=2),phi<-r?code|=4:phi>r&&(code|=8),code}var cr=cos(radius),smallRadius=cr>0,notHemisphere=abs(cr)>epsilon;return clip(visible,function(stream){var point0,c0,v0,v00,_clean;return{lineStart:function(){v00=v0=!1,_clean=1},point:function(lambda,phi){var point2,point1=[lambda,phi],v=visible(lambda,phi),c=smallRadius?v?0:code(lambda,phi):v?code(lambda+(lambda<0?pi:-pi),phi):0;if(!point0&&(v00=v0=v)&&stream.lineStart(),v!==v0&&(!(point2=intersect(point0,point1))||pointEqual(point0,point2)||pointEqual(point1,point2))&&(point1[0]+=epsilon,point1[1]+=epsilon,v=visible(point1[0],point1[1])),v!==v0)_clean=0,v?(stream.lineStart(),point2=intersect(point1,point0),stream.point(point2[0],point2[1])):(point2=intersect(point0,point1),stream.point(point2[0],point2[1]),stream.lineEnd()),point0=point2;else if(notHemisphere&&point0&&smallRadius^v){var t;c&c0||!(t=intersect(point1,point0,!0))||(_clean=0,smallRadius?(stream.lineStart(),stream.point(t[0][0],t[0][1]),stream.point(t[1][0],t[1][1]),stream.lineEnd()):(stream.point(t[1][0],t[1][1]),stream.lineEnd(),stream.lineStart(),stream.point(t[0][0],t[0][1])))}!v||point0&&pointEqual(point0,point1)||stream.point(point1[0],point1[1]),point0=point1,v0=v,c0=c},lineEnd:function(){v0&&stream.lineEnd(),point0=null},clean:function(){return _clean|(v00&&v0)<<1}}},function(from,to,direction,stream){!function(stream,radius,delta,direction,t0,t1){if(delta){var cosRadius=cos(radius),sinRadius=sin(radius),step=direction*delta;null==t0?(t0=radius+direction*tau,t1=radius-step/2):(t0=circleRadius(cosRadius,t0),t1=circleRadius(cosRadius,t1),(direction>0?t0<t1:t0>t1)&&(t0+=direction*tau));for(var point,t=t0;direction>0?t>t1:t<t1;t-=step)point=spherical([cosRadius,-sinRadius*cos(t),-sinRadius*sin(t)]),stream.point(point[0],point[1])}}(stream,radius,delta,direction,from,to)},smallRadius?[0,-radius]:[-pi,radius-pi])};TransformStream.prototype={constructor:TransformStream,point:function(x,y){this.stream.point(x,y)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var maxDepth=16,cosMinDistance=cos(30*radians),resample=function(project,delta2){return+delta2?function(project,delta2){function resampleLineTo(x0,y0,lambda0,a0,b0,c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*delta2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=sqrt(a*a+b*b+c*c),phi2=asin(c/=m),lambda2=abs(abs(c)-1)<epsilon||abs(lambda0-lambda1)<epsilon?(lambda0+lambda1)/2:atan2(b,a),p=project(lambda2,phi2),x2=p[0],y2=p[1],dx2=x2-x0,dy2=y2-y0,dz=dy*dx2-dx*dy2;(dz*dz/d2>delta2||abs((dx*dx2+dy*dy2)/d2-.5)>.3||a0*a1+b0*b1+c0*c1<cosMinDistance)&&(resampleLineTo(x0,y0,lambda0,a0,b0,c0,x2,y2,lambda2,a/=m,b/=m,c,depth,stream),stream.point(x2,y2),resampleLineTo(x2,y2,lambda2,a,b,c,x1,y1,lambda1,a1,b1,c1,depth,stream))}}return function(stream){function point(x,y){x=project(x,y),stream.point(x[0],x[1])}function lineStart(){x0=NaN,resampleStream.point=linePoint,stream.lineStart()}function linePoint(lambda,phi){var c=cartesian([lambda,phi]),p=project(lambda,phi);resampleLineTo(x0,y0,lambda0,a0,b0,c0,x0=p[0],y0=p[1],lambda0=lambda,a0=c[0],b0=c[1],c0=c[2],maxDepth,stream),stream.point(x0,y0)}function lineEnd(){resampleStream.point=point,stream.lineEnd()}function ringStart(){lineStart(),resampleStream.point=ringPoint,resampleStream.lineEnd=ringEnd}function ringPoint(lambda,phi){linePoint(lambda00=lambda,phi),x00=x0,y00=y0,a00=a0,b00=b0,c00=c0,resampleStream.point=linePoint}function ringEnd(){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,maxDepth,stream),resampleStream.lineEnd=lineEnd,lineEnd()}var lambda00,x00,y00,a00,b00,c00,lambda0,x0,y0,a0,b0,c0,resampleStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){stream.polygonStart(),resampleStream.lineStart=ringStart},polygonEnd:function(){stream.polygonEnd(),resampleStream.lineStart=lineStart}};return resampleStream}}(project,delta2):function(project){return transformer({point:function(x,y){x=project(x,y),this.stream.point(x[0],x[1])}})}(project)},transformRadians=transformer({point:function(x,y){this.stream.point(x*radians,y*radians)}});mercatorRaw.invert=function(x,y){return[x,2*atan(exp(y))-halfPi]},transverseMercatorRaw.invert=function(x,y){return[-y,2*atan(exp(x))-halfPi]};var geoTransverseMercator=function(){var m=function(project){function reclip(){var k=pi*scale(),t=m(rotation(m.rotate()).invert([0,0]));return clipExtent(null==x0?[[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]:project===mercatorRaw?[[Math.max(t[0]-k,x0),y0],[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]])}var y0,x1,y1,m=projection(project),center=m.center,scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,x0=null;return m.scale=function(_){return arguments.length?(scale(_),reclip()):scale()},m.translate=function(_){return arguments.length?(translate(_),reclip()):translate()},m.center=function(_){return arguments.length?(center(_),reclip()):center()},m.clipExtent=function(_){return arguments.length?(null==_?x0=y0=x1=y1=null:(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reclip()):null==x0?null:[[x0,y0],[x1,y1]]},reclip()}(transverseMercatorRaw),center=m.center,rotate=m.rotate;return m.center=function(_){return arguments.length?center([-_[1],_[0]]):(_=center(),[_[1],-_[0]])},m.rotate=function(_){return arguments.length?rotate([_[0],_[1],_.length>2?_[2]+90:90]):(_=rotate(),[_[0],_[1],_[2]-90])},rotate([0,0,90]).scale(159.155)},quickselect=partialSort,rbush_1=rbush;rbush.prototype={all:function(){return this._all(this.data,[])},search:function(bbox){var node=this.data,result=[],toBBox=this.toBBox;if(!intersects(bbox,node))return result;for(var i,len,child,childBBox,nodesToSearch=[];node;){for(i=0,len=node.children.length;i<len;i++)child=node.children[i],intersects(bbox,childBBox=node.leaf?toBBox(child):child)&&(node.leaf?result.push(child):contains$1(bbox,childBBox)?this._all(child,result):nodesToSearch.push(child));node=nodesToSearch.pop()}return result},collides:function(bbox){var node=this.data,toBBox=this.toBBox;if(!intersects(bbox,node))return!1;for(var i,len,child,childBBox,nodesToSearch=[];node;){for(i=0,len=node.children.length;i<len;i++)if(child=node.children[i],childBBox=node.leaf?toBBox(child):child,intersects(bbox,childBBox)){if(node.leaf||contains$1(bbox,childBBox))return!0;nodesToSearch.push(child)}node=nodesToSearch.pop()}return!1},load:function(data){if(!data||!data.length)return this;if(data.length<this._minEntries){for(var i=0,len=data.length;i<len;i++)this.insert(data[i]);return this}var node=this._build(data.slice(),0,data.length-1,0);if(this.data.children.length)if(this.data.height===node.height)this._splitRoot(this.data,node);else{if(this.data.height<node.height){var tmpNode=this.data;this.data=node,node=tmpNode}this._insert(node,this.data.height-node.height-1,!0)}else this.data=node;return this},insert:function(item){return item&&this._insert(item,this.data.height-1),this},clear:function(){return this.data=createNode([]),this},remove:function(item,equalsFn){if(!item)return this;for(var i,parent,index,goingUp,node=this.data,bbox=this.toBBox(item),path=[],indexes=[];node||path.length;){if(node||(node=path.pop(),parent=path[path.length-1],i=indexes.pop(),goingUp=!0),node.leaf&&-1!==(index=function(item,items,equalsFn){if(!equalsFn)return items.indexOf(item);for(var i=0;i<items.length;i++)if(equalsFn(item,items[i]))return i;return-1}(item,node.children,equalsFn)))return node.children.splice(index,1),path.push(node),this._condense(path),this;goingUp||node.leaf||!contains$1(node,bbox)?parent?(i++,node=parent.children[i],goingUp=!1):node=null:(path.push(node),indexes.push(i),i=0,parent=node,node=node.children[0])}return this},toBBox:function(item){return item},compareMinX:compareNodeMinX,compareMinY:compareNodeMinY,toJSON:function(){return this.data},fromJSON:function(data){return this.data=data,this},_all:function(node,result){for(var nodesToSearch=[];node;)node.leaf?result.push.apply(result,node.children):nodesToSearch.push.apply(nodesToSearch,node.children),node=nodesToSearch.pop();return result},_build:function(items,left,right,height){var node,N=right-left+1,M=this._maxEntries;if(N<=M)return node=createNode(items.slice(left,right+1)),calcBBox(node,this.toBBox),node;height||(height=Math.ceil(Math.log(N)/Math.log(M)),M=Math.ceil(N/Math.pow(M,height-1))),(node=createNode([])).leaf=!1,node.height=height;var i,j,right2,right3,N2=Math.ceil(N/M),N1=N2*Math.ceil(Math.sqrt(M));for(multiSelect(items,left,right,N1,this.compareMinX),i=left;i<=right;i+=N1)for(multiSelect(items,i,right2=Math.min(i+N1-1,right),N2,this.compareMinY),j=i;j<=right2;j+=N2)right3=Math.min(j+N2-1,right2),node.children.push(this._build(items,j,right3,height-1));return calcBBox(node,this.toBBox),node},_chooseSubtree:function(bbox,node,level,path){for(var i,len,child,targetNode,area,enlargement,minArea,minEnlargement;;){if(path.push(node),node.leaf||path.length-1===level)break;for(minArea=minEnlargement=1/0,i=0,len=node.children.length;i<len;i++)area=bboxArea(child=node.children[i]),(enlargement=function(a,b){return(Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY))}(bbox,child)-area)<minEnlargement?(minEnlargement=enlargement,minArea=area<minArea?area:minArea,targetNode=child):enlargement===minEnlargement&&area<minArea&&(minArea=area,targetNode=child);node=targetNode||node.children[0]}return node},_insert:function(item,level,isNode){var toBBox=this.toBBox,bbox=isNode?item:toBBox(item),insertPath=[],node=this._chooseSubtree(bbox,this.data,level,insertPath);for(node.children.push(item),extend$1(node,bbox);level>=0&&insertPath[level].children.length>this._maxEntries;)this._split(insertPath,level),level--;this._adjustParentBBoxes(bbox,insertPath,level)},_split:function(insertPath,level){var node=insertPath[level],M=node.children.length,m=this._minEntries;this._chooseSplitAxis(node,m,M);var splitIndex=this._chooseSplitIndex(node,m,M),newNode=createNode(node.children.splice(splitIndex,node.children.length-splitIndex));newNode.height=node.height,newNode.leaf=node.leaf,calcBBox(node,this.toBBox),calcBBox(newNode,this.toBBox),level?insertPath[level-1].children.push(newNode):this._splitRoot(node,newNode)},_splitRoot:function(node,newNode){this.data=createNode([node,newNode]),this.data.height=node.height+1,this.data.leaf=!1,calcBBox(this.data,this.toBBox)},_chooseSplitIndex:function(node,m,M){var i,bbox1,bbox2,overlap,area,minOverlap,minArea,index;for(minOverlap=minArea=1/0,i=m;i<=M-m;i++)overlap=function(a,b){var minX=Math.max(a.minX,b.minX),minY=Math.max(a.minY,b.minY),maxX=Math.min(a.maxX,b.maxX),maxY=Math.min(a.maxY,b.maxY);return Math.max(0,maxX-minX)*Math.max(0,maxY-minY)}(bbox1=distBBox(node,0,i,this.toBBox),bbox2=distBBox(node,i,M,this.toBBox)),area=bboxArea(bbox1)+bboxArea(bbox2),overlap<minOverlap?(minOverlap=overlap,index=i,minArea=area<minArea?area:minArea):overlap===minOverlap&&area<minArea&&(minArea=area,index=i);return index},_chooseSplitAxis:function(node,m,M){var compareMinX=node.leaf?this.compareMinX:compareNodeMinX,compareMinY=node.leaf?this.compareMinY:compareNodeMinY;this._allDistMargin(node,m,M,compareMinX)<this._allDistMargin(node,m,M,compareMinY)&&node.children.sort(compareMinX)},_allDistMargin:function(node,m,M,compare){node.children.sort(compare);var i,child,toBBox=this.toBBox,leftBBox=distBBox(node,0,m,toBBox),rightBBox=distBBox(node,M-m,M,toBBox),margin=bboxMargin(leftBBox)+bboxMargin(rightBBox);for(i=m;i<M-m;i++)child=node.children[i],extend$1(leftBBox,node.leaf?toBBox(child):child),margin+=bboxMargin(leftBBox);for(i=M-m-1;i>=m;i--)child=node.children[i],extend$1(rightBBox,node.leaf?toBBox(child):child),margin+=bboxMargin(rightBBox);return margin},_adjustParentBBoxes:function(bbox,path,level){for(var i=level;i>=0;i--)extend$1(path[i],bbox)},_condense:function(path){for(var siblings,i=path.length-1;i>=0;i--)0===path[i].children.length?i>0?(siblings=path[i-1].children).splice(siblings.indexOf(path[i]),1):this.clear():calcBBox(path[i],this.toBBox)},_initFormat:function(format){var compareArr=["return a"," - b",";"];this.compareMinX=new Function("a","b",compareArr.join(format[0])),this.compareMinY=new Function("a","b",compareArr.join(format[1])),this.toBBox=new Function("a","return {minX: a"+format[0]+", minY: a"+format[1]+", maxX: a"+format[2]+", maxY: a"+format[3]+"};")}};var isects=function(feature,filterFn,useSpatialIndex){function ifIsectAddToOutput(ring0,edge0,ring1,edge1){var start0=coord[ring0][edge0],end0=coord[ring0][edge0+1],start1=coord[ring1][edge1],end1=coord[ring1][edge1+1],isect=function(start0,end0,start1,end1){if(equalArrays$3(start0,start1)||equalArrays$3(start0,end1)||equalArrays$3(end0,start1)||equalArrays$3(end1,start1))return null;var x0=start0[0],y0=start0[1],x1=end0[0],y1=end0[1],x2=start1[0],y2=start1[1],x3=end1[0],y3=end1[1],denom=(x0-x1)*(y2-y3)-(y0-y1)*(x2-x3);return 0===denom?null:[((x0*y1-y0*x1)*(x2-x3)-(x0-x1)*(x2*y3-y2*x3))/denom,((x0*y1-y0*x1)*(y2-y3)-(y0-y1)*(x2*y3-y2*x3))/denom]}(start0,end0,start1,end1);if(null!==isect){var frac0,frac1;if(frac0=end0[0]!==start0[0]?(isect[0]-start0[0])/(end0[0]-start0[0]):(isect[1]-start0[1])/(end0[1]-start0[1]),frac1=end1[0]!==start1[0]?(isect[0]-start1[0])/(end1[0]-start1[0]):(isect[1]-start1[1])/(end1[1]-start1[1]),!(frac0>=1||frac0<=0||frac1>=1||frac1<=0)){var key=isect,unique=!seen[key];unique&&(seen[key]=!0),filterFn?output.push(filterFn(isect,ring0,edge0,start0,end0,frac0,ring1,edge1,start1,end1,frac1,unique)):output.push(isect)}}}function rbushTreeItem(ring,edge){var minX,maxX,minY,maxY,start=coord[ring][edge],end=coord[ring][edge+1];return start[0]<end[0]?(minX=start[0],maxX=end[0]):(minX=end[0],maxX=start[0]),start[1]<end[1]?(minY=start[1],maxY=end[1]):(minY=end[1],maxY=start[1]),{minX:minX,minY:minY,maxX:maxX,maxY:maxY,ring:ring,edge:edge}}if("Polygon"!==feature.geometry.type)throw new Error("The input feature must be a Polygon");void 0===useSpatialIndex&&(useSpatialIndex=1);var coord=feature.geometry.coordinates,output=[],seen={};if(useSpatialIndex){for(var allEdgesAsRbushTreeItems=[],ring0=0;ring0<coord.length;ring0++)for(var edge0=0;edge0<coord[ring0].length-1;edge0++)allEdgesAsRbushTreeItems.push(rbushTreeItem(ring0,edge0));var tree=rbush_1();tree.load(allEdgesAsRbushTreeItems)}for(var ringA=0;ringA<coord.length;ringA++)for(var edgeA=0;edgeA<coord[ringA].length-1;edgeA++)if(useSpatialIndex){tree.search(rbushTreeItem(ringA,edgeA)).forEach(function(bboxIsect){var ring1=bboxIsect.ring,edge1=bboxIsect.edge;ifIsectAddToOutput(ringA,edgeA,ring1,edge1)})}else for(var ring1=0;ring1<coord.length;ring1++)for(var edge1=0;edge1<coord[ring1].length-1;edge1++)ifIsectAddToOutput(ringA,edgeA,ring1,edge1);return filterFn||(output={type:"Feature",geometry:{type:"MultiPoint",coordinates:output}}),output},RADIUS=6378137,simplepolygon=function(feature$$1){function determineParents(){for(var featuresWithoutParent=[],i=0;i<output.features.length;i++)-1==output.features[i].properties.parent&&featuresWithoutParent.push(i);if(featuresWithoutParent.length>1)for(i=0;i<featuresWithoutParent.length;i++){for(var parent=-1,j=0;j<output.features.length;j++)featuresWithoutParent[i]!=j&&booleanPointInPolygon(output.features[featuresWithoutParent[i]].geometry.coordinates[0][0],output.features[j],{ignoreBoundary:!0})&&area$1(output.features[j])<1/0&&(parent=j);output.features[featuresWithoutParent[i]].properties.parent=parent}}function setNetWinding(){for(var i=0;i<output.features.length;i++)if(-1==output.features[i].properties.parent){var netWinding=output.features[i].properties.winding;output.features[i].properties.netWinding=netWinding,setNetWindingOfChildren(i,netWinding)}}function setNetWindingOfChildren(parent,ParentNetWinding){for(var i=0;i<output.features.length;i++)if(output.features[i].properties.parent==parent){var netWinding=ParentNetWinding+output.features[i].properties.winding;output.features[i].properties.netWinding=netWinding,setNetWindingOfChildren(i,netWinding)}}if("Feature"!=feature$$1.type)throw new Error("The input must a geojson object of type Feature");if(void 0===feature$$1.geometry||null==feature$$1.geometry)throw new Error("The input must a geojson object with a non-empty geometry");if("Polygon"!=feature$$1.geometry.type)throw new Error("The input must be a geojson Polygon");for(var numRings=feature$$1.geometry.coordinates.length,vertices=[],i=0;i<numRings;i++){var ring=feature$$1.geometry.coordinates[i];equalArrays$2(ring[0],ring[ring.length-1])||ring.push(ring[0]),vertices.push.apply(vertices,ring.slice(0,ring.length-1))}if(!function(array){for(var u={},isUnique=1,i=0,l=array.length;i<l;++i){if(u.hasOwnProperty(array[i])){isUnique=0;break}u[array[i]]=1}return isUnique}(vertices))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var numvertices=vertices.length,selfIsectsData=isects(feature$$1,function(isect,ring0,edge0,start0,end0,frac0,ring1,edge1,start1,end1,frac1,unique){return[isect,ring0,edge0,start0,end0,frac0,ring1,edge1,start1,end1,frac1,unique]}),numSelfIsect=selfIsectsData.length;if(0==numSelfIsect){for(var outputFeatureArray=[],i=0;i<numRings;i++)outputFeatureArray.push(polygon([feature$$1.geometry.coordinates[i]],{parent:-1,winding:function(ring){for(var leftVtx=0,i=0;i<ring.length-1;i++)ring[i][0]<ring[leftVtx][0]&&(leftVtx=i);if(isConvex([ring[(leftVtx-1).modulo(ring.length-1)],ring[leftVtx],ring[(leftVtx+1).modulo(ring.length-1)]],!0))winding=1;else var winding=-1;return winding}(feature$$1.geometry.coordinates[i])}));output=featureCollection(outputFeatureArray);return determineParents(),setNetWinding(),output}for(var pseudoVtxListByRingAndEdge=[],isectList=[],i=0;i<numRings;i++){pseudoVtxListByRingAndEdge.push([]);for(j=0;j<feature$$1.geometry.coordinates[i].length-1;j++)pseudoVtxListByRingAndEdge[i].push([new PseudoVtx(feature$$1.geometry.coordinates[i][(j+1).modulo(feature$$1.geometry.coordinates[i].length-1)],1,[i,j],[i,(j+1).modulo(feature$$1.geometry.coordinates[i].length-1)],void 0)]),isectList.push(new Isect(feature$$1.geometry.coordinates[i][j],[i,(j-1).modulo(feature$$1.geometry.coordinates[i].length-1)],[i,j],void 0,void 0,!1,!0))}for(i=0;i<numSelfIsect;i++)pseudoVtxListByRingAndEdge[selfIsectsData[i][1]][selfIsectsData[i][2]].push(new PseudoVtx(selfIsectsData[i][0],selfIsectsData[i][5],[selfIsectsData[i][1],selfIsectsData[i][2]],[selfIsectsData[i][6],selfIsectsData[i][7]],void 0)),selfIsectsData[i][11]&&isectList.push(new Isect(selfIsectsData[i][0],[selfIsectsData[i][1],selfIsectsData[i][2]],[selfIsectsData[i][6],selfIsectsData[i][7]],void 0,void 0,!0,!0));for(var numIsect=isectList.length,i=0;i<pseudoVtxListByRingAndEdge.length;i++)for(j=0;j<pseudoVtxListByRingAndEdge[i].length;j++)pseudoVtxListByRingAndEdge[i][j].sort(function(a,b){return a.param<b.param?-1:1});for(var allIsectsAsIsectRbushTreeItem=[],i=0;i<numIsect;i++)allIsectsAsIsectRbushTreeItem.push({minX:isectList[i].coord[0],minY:isectList[i].coord[1],maxX:isectList[i].coord[0],maxY:isectList[i].coord[1],index:i});var isectRbushTree=rbush_1();isectRbushTree.load(allIsectsAsIsectRbushTreeItem);for(i=0;i<pseudoVtxListByRingAndEdge.length;i++)for(j=0;j<pseudoVtxListByRingAndEdge[i].length;j++)for(k=0;k<pseudoVtxListByRingAndEdge[i][j].length;k++){coordToFind=k==pseudoVtxListByRingAndEdge[i][j].length-1?pseudoVtxListByRingAndEdge[i][(j+1).modulo(feature$$1.geometry.coordinates[i].length-1)][0].coord:pseudoVtxListByRingAndEdge[i][j][k+1].coord;IsectRbushTreeItemFound=isectRbushTree.search({minX:coordToFind[0],minY:coordToFind[1],maxX:coordToFind[0],maxY:coordToFind[1]})[0];pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn=IsectRbushTreeItemFound.index}for(i=0;i<pseudoVtxListByRingAndEdge.length;i++)for(j=0;j<pseudoVtxListByRingAndEdge[i].length;j++)for(k=0;k<pseudoVtxListByRingAndEdge[i][j].length;k++){var IsectRbushTreeItemFound,coordToFind=pseudoVtxListByRingAndEdge[i][j][k].coord,l=(IsectRbushTreeItemFound=isectRbushTree.search({minX:coordToFind[0],minY:coordToFind[1],maxX:coordToFind[0],maxY:coordToFind[1]})[0]).index;l<numvertices?isectList[l].nxtIsectAlongRingAndEdge2=pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn:equalArrays$2(isectList[l].ringAndEdge1,pseudoVtxListByRingAndEdge[i][j][k].ringAndEdgeIn)?isectList[l].nxtIsectAlongRingAndEdge1=pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn:isectList[l].nxtIsectAlongRingAndEdge2=pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn}for(var queue=[],i=0,j=0;j<numRings;j++){for(var leftIsect=i,k=0;k<feature$$1.geometry.coordinates[j].length-1;k++)isectList[i].coord[0]<isectList[leftIsect].coord[0]&&(leftIsect=i),i++;for(var isectAfterLeftIsect=isectList[leftIsect].nxtIsectAlongRingAndEdge2,k=0;k<isectList.length;k++)if(isectList[k].nxtIsectAlongRingAndEdge1==leftIsect||isectList[k].nxtIsectAlongRingAndEdge2==leftIsect){var isectBeforeLeftIsect=k;break}var windingAtIsect=isConvex([isectList[isectBeforeLeftIsect].coord,isectList[leftIsect].coord,isectList[isectAfterLeftIsect].coord],!0)?1:-1;queue.push({isect:leftIsect,parent:-1,winding:windingAtIsect})}queue.sort(function(a,b){return isectList[a.isect].coord>isectList[b.isect].coord?-1:1});for(outputFeatureArray=[];queue.length>0;){var popped=queue.pop(),startIsect=popped.isect,currentOutputRingParent=popped.parent,currentOutputRingWinding=popped.winding,currentOutputRing=outputFeatureArray.length,currentOutputRingCoords=[isectList[startIsect].coord],currentIsect=startIsect;if(isectList[startIsect].ringAndEdge1Walkable)var walkingRingAndEdge=isectList[startIsect].ringAndEdge1,nxtIsect=isectList[startIsect].nxtIsectAlongRingAndEdge1;else var walkingRingAndEdge=isectList[startIsect].ringAndEdge2,nxtIsect=isectList[startIsect].nxtIsectAlongRingAndEdge2;for(;!equalArrays$2(isectList[startIsect].coord,isectList[nxtIsect].coord);){currentOutputRingCoords.push(isectList[nxtIsect].coord);for(var nxtIsectInQueue=void 0,i=0;i<queue.length;i++)if(queue[i].isect==nxtIsect){nxtIsectInQueue=i;break}if(void 0!=nxtIsectInQueue&&queue.splice(nxtIsectInQueue,1),equalArrays$2(walkingRingAndEdge,isectList[nxtIsect].ringAndEdge1)){if(walkingRingAndEdge=isectList[nxtIsect].ringAndEdge2,isectList[nxtIsect].ringAndEdge2Walkable=!1,isectList[nxtIsect].ringAndEdge1Walkable){pushing={isect:nxtIsect};isConvex([isectList[currentIsect].coord,isectList[nxtIsect].coord,isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge2].coord],1==currentOutputRingWinding)?(pushing.parent=currentOutputRingParent,pushing.winding=-currentOutputRingWinding):(pushing.parent=currentOutputRing,pushing.winding=currentOutputRingWinding),queue.push(pushing)}currentIsect=nxtIsect,nxtIsect=isectList[nxtIsect].nxtIsectAlongRingAndEdge2}else{if(walkingRingAndEdge=isectList[nxtIsect].ringAndEdge1,isectList[nxtIsect].ringAndEdge1Walkable=!1,isectList[nxtIsect].ringAndEdge2Walkable){var pushing={isect:nxtIsect};isConvex([isectList[currentIsect].coord,isectList[nxtIsect].coord,isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge1].coord],1==currentOutputRingWinding)?(pushing.parent=currentOutputRingParent,pushing.winding=-currentOutputRingWinding):(pushing.parent=currentOutputRing,pushing.winding=currentOutputRingWinding),queue.push(pushing)}currentIsect=nxtIsect,nxtIsect=isectList[nxtIsect].nxtIsectAlongRingAndEdge1}}currentOutputRingCoords.push(isectList[nxtIsect].coord),outputFeatureArray.push(polygon([currentOutputRingCoords],{index:currentOutputRing,parent:currentOutputRingParent,winding:currentOutputRingWinding,netWinding:void 0}))}var output=featureCollection(outputFeatureArray);return determineParents(),setNetWinding(),output},PseudoVtx=function(coord,param,ringAndEdgeIn,ringAndEdgeOut,nxtIsectAlongEdgeIn){this.coord=coord,this.param=param,this.ringAndEdgeIn=ringAndEdgeIn,this.ringAndEdgeOut=ringAndEdgeOut,this.nxtIsectAlongEdgeIn=nxtIsectAlongEdgeIn},Isect=function(coord,ringAndEdge1,ringAndEdge2,nxtIsectAlongRingAndEdge1,nxtIsectAlongRingAndEdge2,ringAndEdge1Walkable,ringAndEdge2Walkable){this.coord=coord,this.ringAndEdge1=ringAndEdge1,this.ringAndEdge2=ringAndEdge2,this.nxtIsectAlongRingAndEdge1=nxtIsectAlongRingAndEdge1,this.nxtIsectAlongRingAndEdge2=nxtIsectAlongRingAndEdge2,this.ringAndEdge1Walkable=ringAndEdge1Walkable,this.ringAndEdge2Walkable=ringAndEdge2Walkable};Number.prototype.modulo=function(n){return(this%n+n)%n},rbush$3.prototype={all:function(){return this._all(this.data,[])},search:function(bbox){var node=this.data,result=[],toBBox=this.toBBox;if(!intersects$2(bbox,node))return result;for(var i,len,child,childBBox,nodesToSearch=[];node;){for(i=0,len=node.children.length;i<len;i++)child=node.children[i],intersects$2(bbox,childBBox=node.leaf?toBBox(child):child)&&(node.leaf?result.push(child):contains$2(bbox,childBBox)?this._all(child,result):nodesToSearch.push(child));node=nodesToSearch.pop()}return result},collides:function(bbox){var node=this.data,toBBox=this.toBBox;if(!intersects$2(bbox,node))return!1;for(var i,len,child,childBBox,nodesToSearch=[];node;){for(i=0,len=node.children.length;i<len;i++)if(child=node.children[i],childBBox=node.leaf?toBBox(child):child,intersects$2(bbox,childBBox)){if(node.leaf||contains$2(bbox,childBBox))return!0;nodesToSearch.push(child)}node=nodesToSearch.pop()}return!1},load:function(data){if(!data||!data.length)return this;if(data.length<this._minEntries){for(var i=0,len=data.length;i<len;i++)this.insert(data[i]);return this}var node=this._build(data.slice(),0,data.length-1,0);if(this.data.children.length)if(this.data.height===node.height)this._splitRoot(this.data,node);else{if(this.data.height<node.height){var tmpNode=this.data;this.data=node,node=tmpNode}this._insert(node,this.data.height-node.height-1,!0)}else this.data=node;return this},insert:function(item){return item&&this._insert(item,this.data.height-1),this},clear:function(){return this.data=createNode$1([]),this},remove:function(item,equalsFn){if(!item)return this;for(var i,parent,index,goingUp,node=this.data,bbox=this.toBBox(item),path=[],indexes=[];node||path.length;){if(node||(node=path.pop(),parent=path[path.length-1],i=indexes.pop(),goingUp=!0),node.leaf&&-1!==(index=function(item,items,equalsFn){if(!equalsFn)return items.indexOf(item);for(var i=0;i<items.length;i++)if(equalsFn(item,items[i]))return i;return-1}(item,node.children,equalsFn)))return node.children.splice(index,1),path.push(node),this._condense(path),this;goingUp||node.leaf||!contains$2(node,bbox)?parent?(i++,node=parent.children[i],goingUp=!1):node=null:(path.push(node),indexes.push(i),i=0,parent=node,node=node.children[0])}return this},toBBox:function(item){return item},compareMinX:compareNodeMinX$1,compareMinY:compareNodeMinY$1,toJSON:function(){return this.data},fromJSON:function(data){return this.data=data,this},_all:function(node,result){for(var nodesToSearch=[];node;)node.leaf?result.push.apply(result,node.children):nodesToSearch.push.apply(nodesToSearch,node.children),node=nodesToSearch.pop();return result},_build:function(items,left,right,height){var node,N=right-left+1,M=this._maxEntries;if(N<=M)return node=createNode$1(items.slice(left,right+1)),calcBBox$1(node,this.toBBox),node;height||(height=Math.ceil(Math.log(N)/Math.log(M)),M=Math.ceil(N/Math.pow(M,height-1))),(node=createNode$1([])).leaf=!1,node.height=height;var i,j,right2,right3,N2=Math.ceil(N/M),N1=N2*Math.ceil(Math.sqrt(M));for(multiSelect$1(items,left,right,N1,this.compareMinX),i=left;i<=right;i+=N1)for(multiSelect$1(items,i,right2=Math.min(i+N1-1,right),N2,this.compareMinY),j=i;j<=right2;j+=N2)right3=Math.min(j+N2-1,right2),node.children.push(this._build(items,j,right3,height-1));return calcBBox$1(node,this.toBBox),node},_chooseSubtree:function(bbox,node,level,path){for(var i,len,child,targetNode,area,enlargement,minArea,minEnlargement;;){if(path.push(node),node.leaf||path.length-1===level)break;for(minArea=minEnlargement=1/0,i=0,len=node.children.length;i<len;i++)area=bboxArea$1(child=node.children[i]),(enlargement=function(a,b){return(Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY))}(bbox,child)-area)<minEnlargement?(minEnlargement=enlargement,minArea=area<minArea?area:minArea,targetNode=child):enlargement===minEnlargement&&area<minArea&&(minArea=area,targetNode=child);node=targetNode||node.children[0]}return node},_insert:function(item,level,isNode){var toBBox=this.toBBox,bbox=isNode?item:toBBox(item),insertPath=[],node=this._chooseSubtree(bbox,this.data,level,insertPath);for(node.children.push(item),extend$2(node,bbox);level>=0&&insertPath[level].children.length>this._maxEntries;)this._split(insertPath,level),level--;this._adjustParentBBoxes(bbox,insertPath,level)},_split:function(insertPath,level){var node=insertPath[level],M=node.children.length,m=this._minEntries;this._chooseSplitAxis(node,m,M);var splitIndex=this._chooseSplitIndex(node,m,M),newNode=createNode$1(node.children.splice(splitIndex,node.children.length-splitIndex));newNode.height=node.height,newNode.leaf=node.leaf,calcBBox$1(node,this.toBBox),calcBBox$1(newNode,this.toBBox),level?insertPath[level-1].children.push(newNode):this._splitRoot(node,newNode)},_splitRoot:function(node,newNode){this.data=createNode$1([node,newNode]),this.data.height=node.height+1,this.data.leaf=!1,calcBBox$1(this.data,this.toBBox)},_chooseSplitIndex:function(node,m,M){var i,bbox1,bbox2,overlap,area,minOverlap,minArea,index;for(minOverlap=minArea=1/0,i=m;i<=M-m;i++)overlap=function(a,b){var minX=Math.max(a.minX,b.minX),minY=Math.max(a.minY,b.minY),maxX=Math.min(a.maxX,b.maxX),maxY=Math.min(a.maxY,b.maxY);return Math.max(0,maxX-minX)*Math.max(0,maxY-minY)}(bbox1=distBBox$1(node,0,i,this.toBBox),bbox2=distBBox$1(node,i,M,this.toBBox)),area=bboxArea$1(bbox1)+bboxArea$1(bbox2),overlap<minOverlap?(minOverlap=overlap,index=i,minArea=area<minArea?area:minArea):overlap===minOverlap&&area<minArea&&(minArea=area,index=i);return index},_chooseSplitAxis:function(node,m,M){var compareMinX=node.leaf?this.compareMinX:compareNodeMinX$1,compareMinY=node.leaf?this.compareMinY:compareNodeMinY$1;this._allDistMargin(node,m,M,compareMinX)<this._allDistMargin(node,m,M,compareMinY)&&node.children.sort(compareMinX)},_allDistMargin:function(node,m,M,compare){node.children.sort(compare);var i,child,toBBox=this.toBBox,leftBBox=distBBox$1(node,0,m,toBBox),rightBBox=distBBox$1(node,M-m,M,toBBox),margin=bboxMargin$1(leftBBox)+bboxMargin$1(rightBBox);for(i=m;i<M-m;i++)child=node.children[i],extend$2(leftBBox,node.leaf?toBBox(child):child),margin+=bboxMargin$1(leftBBox);for(i=M-m-1;i>=m;i--)child=node.children[i],extend$2(rightBBox,node.leaf?toBBox(child):child),margin+=bboxMargin$1(rightBBox);return margin},_adjustParentBBoxes:function(bbox,path,level){for(var i=level;i>=0;i--)extend$2(path[i],bbox)},_condense:function(path){for(var siblings,i=path.length-1;i>=0;i--)0===path[i].children.length?i>0?(siblings=path[i-1].children).splice(siblings.indexOf(path[i]),1):this.clear():calcBBox$1(path[i],this.toBBox)},_initFormat:function(format){var compareArr=["return a"," - b",";"];this.compareMinX=new Function("a","b",compareArr.join(format[0])),this.compareMinY=new Function("a","b",compareArr.join(format[1])),this.toBBox=new Function("a","return {minX: a"+format[0]+", minY: a"+format[1]+", maxX: a"+format[2]+", maxY: a"+format[3]+"};")}};var ig_turfhelper={along:along,arrayToFeaturePoints:arrayToFeaturePoints,createbuffer:createbuffer,pointInPolygon:pointInPolygon,polygonToFeaturePolygon:polygonToFeaturePolygon,polylineToFeatureLinestring:polylineToFeatureLinestring,simplifyFeature:simplifyFeature,simplifyPointArray:simplifyPointArray,toLatLngs:toLatLngs,toCoords:toCoords,trimPaths:trimPaths,union:union,kinks:kinks,unkink:unkink,concave:concave};exports.along=along,exports.arrayToFeaturePoints=arrayToFeaturePoints,exports.createbuffer=createbuffer,exports.pointInPolygon=pointInPolygon,exports.polygonToFeaturePolygon=polygonToFeaturePolygon,exports.polylineToFeatureLinestring=polylineToFeatureLinestring,exports.simplifyFeature=simplifyFeature,exports.simplifyPointArray=simplifyPointArray,exports.toLatLngs=toLatLngs,exports.toCoords=toCoords,exports.trimPaths=trimPaths,exports.kinks=kinks,exports.unkink=unkink,exports.union=union,exports.concave=concave,exports.default=ig_turfhelper,Object.defineProperty(exports,"__esModule",{value:!0})}),Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=ig_turfhelper.min.js.map
