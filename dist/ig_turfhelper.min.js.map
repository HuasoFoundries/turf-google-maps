{"version":3,"file":"ig_turfhelper.min.js","sources":["ig_turfhelper.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.turfHelper = global.turfHelper || {})));\n}(this, (function (exports) { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/** @license\n *\n *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)\n *  Michigan Tech Research Institute (MTRI)\n *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar beginsWith;\nvar endsWith;\nvar Wkt = function Wkt(obj) {\n    if (obj instanceof Wkt) return obj;\n    if (!(this instanceof Wkt)) return new Wkt(obj);\n    this._wrapped = obj;\n};\nbeginsWith = function beginsWith(str, sub) {\n    return str.substring(0, sub.length) === sub;\n};\nendsWith = function endsWith(str, sub) {\n    return str.substring(str.length - sub.length) === sub;\n};\nWkt.delimiter = ' ';\nWkt.isArray = function (obj) {\n    return !!(obj && obj.constructor === Array);\n};\nWkt.trim = function (str, sub) {\n    sub = sub || ' ';\n    while (beginsWith(str, sub)) {\n        str = str.substring(1);\n    }\n    while (endsWith(str, sub)) {\n        str = str.substring(0, str.length - 1);\n    }\n    return str;\n};\nWkt.Wkt = function (initializer) {\n    this.delimiter = Wkt.delimiter || ' ';\n    this.wrapVertices = true;\n    this.regExes = {\n        'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n        'spaces': /\\s+|\\+/,\n        'numeric': /-*\\d+(\\.*\\d+)?/,\n        'comma': /\\s*,\\s*/,\n        'parenComma': /\\)\\s*,\\s*\\(/,\n        'coord': /-*\\d+\\.*\\d+ -*\\d+\\.*\\d+/,\n        'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,\n        'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/,\n        'ogcTypes': /^(multi)?(point|line|polygon|box)?(string)?$/i,\n        'crudeJson': /^{.*\"(type|coordinates|geometries|features)\":.*}$/\n    };\n    this.components = undefined;\n    if (initializer && typeof initializer === 'string') {\n        this.read(initializer);\n    } else if (initializer && (typeof initializer === 'undefined' ? 'undefined' : _typeof(initializer)) !== undefined) {\n        this.fromObject(initializer);\n    }\n};\nWkt.Wkt.prototype.isCollection = function () {\n    switch (this.type.slice(0, 5)) {\n        case 'multi':\n            return true;\n        case 'polyg':\n            return true;\n        default:\n            return false;\n    }\n};\nWkt.Wkt.prototype.sameCoords = function (a, b) {\n    return a.x === b.x && a.y === b.y;\n};\nWkt.Wkt.prototype.fromObject = function (obj) {\n    var result;\n    if (obj.hasOwnProperty('type') && obj.hasOwnProperty('coordinates')) {\n        result = this.fromJson(obj);\n    } else {\n        result = this.deconstruct.call(this, obj);\n    }\n    this.components = result.components;\n    this.isRectangle = result.isRectangle || false;\n    this.type = result.type;\n    return this;\n};\nWkt.Wkt.prototype.toObject = function (config) {\n    var obj = this.construct[this.type].call(this, config);\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Wkt.isArray(obj)) {\n        obj.properties = this.properties;\n    }\n    return obj;\n};\nWkt.Wkt.prototype.toString = function (config) {\n    return this.write();\n};\nWkt.Wkt.prototype.fromJson = function (obj) {\n    var i, j, k, coords, iring, oring;\n    this.type = obj.type.toLowerCase();\n    this.components = [];\n    if (obj.hasOwnProperty('geometry')) {\n        this.fromJson(obj.geometry);\n        this.properties = obj.properties;\n        return this;\n    }\n    coords = obj.coordinates;\n    if (!Wkt.isArray(coords[0])) {\n        this.components.push({\n            x: coords[0],\n            y: coords[1]\n        });\n    } else {\n        for (i in coords) {\n            if (coords.hasOwnProperty(i)) {\n                if (!Wkt.isArray(coords[i][0])) {\n                    if (this.type === 'multipoint') {\n                        this.components.push([{\n                            x: coords[i][0],\n                            y: coords[i][1]\n                        }]);\n                    } else {\n                        this.components.push({\n                            x: coords[i][0],\n                            y: coords[i][1]\n                        });\n                    }\n                } else {\n                    oring = [];\n                    for (j in coords[i]) {\n                        if (coords[i].hasOwnProperty(j)) {\n                            if (!Wkt.isArray(coords[i][j][0])) {\n                                oring.push({\n                                    x: coords[i][j][0],\n                                    y: coords[i][j][1]\n                                });\n                            } else {\n                                iring = [];\n                                for (k in coords[i][j]) {\n                                    if (coords[i][j].hasOwnProperty(k)) {\n                                        iring.push({\n                                            x: coords[i][j][k][0],\n                                            y: coords[i][j][k][1]\n                                        });\n                                    }\n                                }\n                                oring.push(iring);\n                            }\n                        }\n                    }\n                    this.components.push(oring);\n                }\n            }\n        }\n    }\n    return this;\n};\nWkt.Wkt.prototype.toJson = function () {\n    var cs, json, i, j, k, ring, rings;\n    cs = this.components;\n    json = {\n        coordinates: [],\n        type: function () {\n            var i, type, s;\n            type = this.regExes.ogcTypes.exec(this.type).slice(1);\n            s = [];\n            for (i in type) {\n                if (type.hasOwnProperty(i)) {\n                    if (type[i] !== undefined) {\n                        s.push(type[i].toLowerCase().slice(0, 1).toUpperCase() + type[i].toLowerCase().slice(1));\n                    }\n                }\n            }\n            return s;\n        }.call(this).join('')\n    };if (this.type.toLowerCase() === 'box') {\n        json.type = 'Polygon';\n        json.bbox = [];\n        for (i in cs) {\n            if (cs.hasOwnProperty(i)) {\n                json.bbox = json.bbox.concat([cs[i].x, cs[i].y]);\n            }\n        }\n        json.coordinates = [[[cs[0].x, cs[0].y], [cs[0].x, cs[1].y], [cs[1].x, cs[1].y], [cs[1].x, cs[0].y], [cs[0].x, cs[0].y]]];\n        return json;\n    }\n    for (i in cs) {\n        if (cs.hasOwnProperty(i)) {\n            if (Wkt.isArray(cs[i])) {\n                rings = [];\n                for (j in cs[i]) {\n                    if (cs[i].hasOwnProperty(j)) {\n                        if (Wkt.isArray(cs[i][j])) {\n                            ring = [];\n                            for (k in cs[i][j]) {\n                                if (cs[i][j].hasOwnProperty(k)) {\n                                    ring.push([cs[i][j][k].x, cs[i][j][k].y]);\n                                }\n                            }\n                            rings.push(ring);\n                        } else {\n                            if (cs[i].length > 1) {\n                                rings.push([cs[i][j].x, cs[i][j].y]);\n                            } else {\n                                rings = rings.concat([cs[i][j].x, cs[i][j].y]);\n                            }\n                        }\n                    }\n                }\n                json.coordinates.push(rings);\n            } else {\n                if (cs.length > 1) {\n                    json.coordinates.push([cs[i].x, cs[i].y]);\n                } else {\n                    json.coordinates = json.coordinates.concat([cs[i].x, cs[i].y]);\n                }\n            }\n        }\n    }\n    return json;\n};\nWkt.Wkt.prototype.merge = function (wkt) {\n    var prefix = this.type.slice(0, 5);\n    if (this.type !== wkt.type) {\n        if (this.type.slice(5, this.type.length) !== wkt.type) {\n            throw TypeError('The input geometry types must agree or the calling Wkt.Wkt instance must be a multigeometry of the other');\n        }\n    }\n    switch (prefix) {\n        case 'point':\n            this.components = [this.components.concat(wkt.components)];\n            break;\n        case 'multi':\n            this.components = this.components.concat(wkt.type.slice(0, 5) === 'multi' ? wkt.components : [wkt.components]);\n            break;\n        default:\n            this.components = [this.components, wkt.components];\n            break;\n    }\n    if (prefix !== 'multi') {\n        this.type = 'multi' + this.type;\n    }\n    return this;\n};\nWkt.Wkt.prototype.read = function (str) {\n    var matches;\n    matches = this.regExes.typeStr.exec(str);\n    if (matches) {\n        this.type = matches[1].toLowerCase();\n        this.base = matches[2];\n        if (this.ingest[this.type]) {\n            this.components = this.ingest[this.type].apply(this, [this.base]);\n        }\n    } else {\n        if (this.regExes.crudeJson.test(str)) {\n            if ((typeof JSON === 'undefined' ? 'undefined' : _typeof(JSON)) === 'object' && typeof JSON.parse === 'function') {\n                this.fromJson(JSON.parse(str));\n            } else {\n                console.log('JSON.parse() is not available; cannot parse GeoJSON strings');\n                throw {\n                    name: 'JSONError',\n                    message: 'JSON.parse() is not available; cannot parse GeoJSON strings'\n                };\n            }\n        } else {\n            console.log('Invalid WKT string provided to read() ', str);\n            throw {\n                name: 'WKTError',\n                message: 'Invalid WKT string provided to read()'\n            };\n        }\n    }\n    return this;\n};\nWkt.Wkt.prototype.write = function (components) {\n    var i, pieces, data;\n    components = components || this.components;\n    pieces = [];\n    pieces.push(this.type.toUpperCase() + '(');\n    for (i = 0; i < components.length; i += 1) {\n        if (this.isCollection() && i > 0) {\n            pieces.push(',');\n        }\n        if (!this.extract[this.type]) {\n            return null;\n        }\n        data = this.extract[this.type].apply(this, [components[i]]);\n        if (this.isCollection() && this.type !== 'multipoint') {\n            pieces.push('(' + data + ')');\n        } else {\n            pieces.push(data);\n            if (i !== components.length - 1 && this.type !== 'multipoint') {\n                pieces.push(',');\n            }\n        }\n    }\n    pieces.push(')');\n    return pieces.join('');\n};\nWkt.Wkt.prototype.extract = {\n    point: function point(_point) {\n        return String(_point.x) + this.delimiter + String(_point.y);\n    },\n    multipoint: function multipoint(_multipoint) {\n        var i,\n            parts = [],\n            s;\n        for (i = 0; i < _multipoint.length; i += 1) {\n            s = this.extract.point.apply(this, [_multipoint[i]]);\n            if (this.wrapVertices) {\n                s = '(' + s + ')';\n            }\n            parts.push(s);\n        }\n        return parts.join(',');\n    },\n    linestring: function linestring(_linestring) {\n        return this.extract.point.apply(this, [_linestring]);\n    },\n    multilinestring: function multilinestring(_multilinestring) {\n        var i,\n            parts = [];\n        if (_multilinestring.length) {\n            for (i = 0; i < _multilinestring.length; i += 1) {\n                parts.push(this.extract.linestring.apply(this, [_multilinestring[i]]));\n            }\n        } else {\n            parts.push(this.extract.point.apply(this, [_multilinestring]));\n        }\n        return parts.join(',');\n    },\n    polygon: function polygon(_polygon) {\n        return this.extract.multilinestring.apply(this, [_polygon]);\n    },\n    multipolygon: function multipolygon(_multipolygon) {\n        var i,\n            parts = [];\n        for (i = 0; i < _multipolygon.length; i += 1) {\n            parts.push('(' + this.extract.polygon.apply(this, [_multipolygon[i]]) + ')');\n        }\n        return parts.join(',');\n    },\n    box: function box(_box) {\n        return this.extract.linestring.apply(this, [_box]);\n    },\n    geometrycollection: function geometrycollection(str) {\n        console.log('The geometrycollection WKT type is not yet supported.');\n    }\n};\nWkt.Wkt.prototype.ingest = {\n    point: function point(str) {\n        var coords = Wkt.trim(str).split(this.regExes.spaces);\n        return [{\n            x: parseFloat(this.regExes.numeric.exec(coords[0])[0]),\n            y: parseFloat(this.regExes.numeric.exec(coords[1])[0])\n        }];\n    },\n    multipoint: function multipoint(str) {\n        var i, components, points;\n        components = [];\n        points = Wkt.trim(str).split(this.regExes.comma);\n        for (i = 0; i < points.length; i += 1) {\n            components.push(this.ingest.point.apply(this, [points[i]]));\n        }\n        return components;\n    },\n    linestring: function linestring(str) {\n        var i, multipoints, components;\n        multipoints = this.ingest.multipoint.apply(this, [str]);\n        components = [];\n        for (i = 0; i < multipoints.length; i += 1) {\n            components = components.concat(multipoints[i]);\n        }\n        return components;\n    },\n    multilinestring: function multilinestring(str) {\n        var i, components, line, lines;\n        components = [];\n        lines = Wkt.trim(str).split(this.regExes.doubleParenComma);\n        if (lines.length === 1) {\n            lines = Wkt.trim(str).split(this.regExes.parenComma);\n        }\n        for (i = 0; i < lines.length; i += 1) {\n            line = lines[i].replace(this.regExes.trimParens, '$1');\n            components.push(this.ingest.linestring.apply(this, [line]));\n        }\n        return components;\n    },\n    polygon: function polygon(str) {\n        var i, j, components, subcomponents, ring, rings;\n        rings = Wkt.trim(str).split(this.regExes.parenComma);\n        components = [];\n        for (i = 0; i < rings.length; i += 1) {\n            ring = rings[i].replace(this.regExes.trimParens, '$1').split(this.regExes.comma);\n            subcomponents = [];\n            for (j = 0; j < ring.length; j += 1) {\n                var split = ring[j].split(this.regExes.spaces);\n                if (split.length > 2) {\n                    split = split.filter(function (n) {\n                        return n != \"\";\n                    });\n                }\n                if (split.length === 2) {\n                    var x_cord = split[0];\n                    var y_cord = split[1];\n                    subcomponents.push({\n                        x: parseFloat(x_cord),\n                        y: parseFloat(y_cord)\n                    });\n                }\n            }\n            components.push(subcomponents);\n        }\n        return components;\n    },\n    box: function box(str) {\n        var i, multipoints, components;\n        multipoints = this.ingest.multipoint.apply(this, [str]);\n        components = [];\n        for (i = 0; i < multipoints.length; i += 1) {\n            components = components.concat(multipoints[i]);\n        }\n        return components;\n    },\n    multipolygon: function multipolygon(str) {\n        var i, components, polygon, polygons;\n        components = [];\n        polygons = Wkt.trim(str).split(this.regExes.doubleParenComma);\n        for (i = 0; i < polygons.length; i += 1) {\n            polygon = polygons[i].replace(this.regExes.trimParens, '$1');\n            components.push(this.ingest.polygon.apply(this, [polygon]));\n        }\n        return components;\n    },\n    geometrycollection: function geometrycollection(str) {\n        console.log('The geometrycollection WKT type is not yet supported.');\n    }\n};\nWkt.Wkt.prototype.isRectangle = false;\nWkt.Wkt.prototype.construct = {\n    point: function point(config, component) {\n        var c = component || this.components;\n        config = config || {\n            optimized: true\n        };\n        config.position = new google.maps.LatLng(c[0].y, c[0].x);\n        return new google.maps.Marker(config);\n    },\n    multipoint: function multipoint(config) {\n        var i, c, arr;\n        c = this.components;\n        config = config || {};\n        arr = [];\n        for (i = 0; i < c.length; i += 1) {\n            arr.push(this.construct.point(config, c[i]));\n        }\n        return arr;\n    },\n    linestring: function linestring(config, component) {\n        var i, c;\n        c = component || this.components;\n        config = config || {\n            editable: false\n        };\n        config.path = [];\n        for (i = 0; i < c.length; i += 1) {\n            config.path.push(new google.maps.LatLng(c[i].y, c[i].x));\n        }\n        return new google.maps.Polyline(config);\n    },\n    multilinestring: function multilinestring(config) {\n        var i, c, arr;\n        c = this.components;\n        config = config || {\n            editable: false\n        };\n        config.path = [];\n        arr = [];\n        for (i = 0; i < c.length; i += 1) {\n            arr.push(this.construct.linestring(config, c[i]));\n        }\n        return arr;\n    },\n    box: function box(config, component) {\n        var c = component || this.components;\n        config = config || {};\n        config.bounds = new google.maps.LatLngBounds(new google.maps.LatLng(c[0].y, c[0].x), new google.maps.LatLng(c[1].y, c[1].x));\n        return new google.maps.Rectangle(config);\n    },\n    polygon: function polygon(config, component) {\n        var j, k, c, rings, verts;\n        c = component || this.components;\n        config = config || {\n            editable: false\n        };\n        config.paths = [];\n        rings = [];\n        for (j = 0; j < c.length; j += 1) {\n            verts = [];\n            for (k = 0; k < c[j].length - 1; k += 1) {\n                verts.push(new google.maps.LatLng(c[j][k].y, c[j][k].x));\n            }\n            if (j !== 0) {\n                if (config.reverseInnerPolygons === null || config.reverseInnerPolygons) {\n                    verts.reverse();\n                }\n            }\n            rings.push(verts);\n        }\n        config.paths = config.paths.concat(rings);\n        if (this.isRectangle) {\n            return function () {\n                var bounds, v;\n                bounds = new google.maps.LatLngBounds();\n                for (v in rings[0]) {\n                    if (rings[0].hasOwnProperty(v)) {\n                        bounds.extend(rings[0][v]);\n                    }\n                }\n                return new google.maps.Rectangle({\n                    bounds: bounds\n                });\n            }();\n        } else {\n            return new google.maps.Polygon(config);\n        }\n    },\n    multipolygon: function multipolygon(config) {\n        var i, c, arr;\n        c = this.components;\n        config = config || {\n            editable: false\n        };\n        config.path = [];\n        arr = [];\n        for (i = 0; i < c.length; i += 1) {\n            arr.push(this.construct.polygon(config, c[i]));\n        }\n        return arr;\n    }\n};\nWkt.Wkt.prototype.deconstruct = function (obj, multiFlag) {\n    var features, i, j, verts, rings, sign, tmp, response, lat, lng, vertex, ring;\n    var polygons, polygon, k, linestring, linestrings;\n    if (google.maps.geometry) {\n        sign = google.maps.geometry.spherical.computeSignedArea;\n    }\n    if (obj.constructor === google.maps.LatLng) {\n        response = {\n            type: 'point',\n            components: [{\n                x: obj.lng(),\n                y: obj.lat()\n            }]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Point) {\n        response = {\n            type: 'point',\n            components: [{\n                x: obj.x,\n                y: obj.y\n            }]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Marker) {\n        response = {\n            type: 'point',\n            components: [{\n                x: obj.getPosition().lng(),\n                y: obj.getPosition().lat()\n            }]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Polyline) {\n        verts = [];\n        for (i = 0; i < obj.getPath().length; i += 1) {\n            tmp = obj.getPath().getAt(i);\n            verts.push({\n                x: tmp.lng(),\n                y: tmp.lat()\n            });\n        }\n        response = {\n            type: 'linestring',\n            components: verts\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Polygon) {\n        rings = [];\n        if (multiFlag === undefined) {\n            multiFlag = function () {\n                var areas, l;\n                l = obj.getPaths().length;\n                if (l <= 1) {\n                    return false;\n                }\n                if (l === 2) {\n                    if (sign(obj.getPaths().getAt(0)) * sign(obj.getPaths().getAt(1)) < 0) {\n                        return false;\n                    }\n                    return true;\n                }\n                areas = obj.getPaths().getArray().map(function (k) {\n                    return sign(k) / Math.abs(sign(k));\n                });\n                if (areas.indexOf(areas[0]) !== areas.lastIndexOf(areas[0])) {\n                    multiFlag = true;\n                    return true;\n                }\n                return false;\n            }();\n        }\n        for (i = 0; i < obj.getPaths().length; i += 1) {\n            tmp = obj.getPaths().getAt(i);\n            verts = [];\n            for (j = 0; j < obj.getPaths().getAt(i).length; j += 1) {\n                verts.push({\n                    x: tmp.getAt(j).lng(),\n                    y: tmp.getAt(j).lat()\n                });\n            }\n            if (!tmp.getAt(tmp.length - 1).equals(tmp.getAt(0))) {\n                if (i % 2 !== 0) {\n                    verts.unshift({\n                        x: tmp.getAt(tmp.length - 1).lng(),\n                        y: tmp.getAt(tmp.length - 1).lat()\n                    });\n                } else {\n                    verts.push({\n                        x: tmp.getAt(0).lng(),\n                        y: tmp.getAt(0).lat()\n                    });\n                }\n            }\n            if (obj.getPaths().length > 1 && i > 0) {\n                if (sign(obj.getPaths().getAt(i)) > 0 && sign(obj.getPaths().getAt(i - 1)) > 0 || sign(obj.getPaths().getAt(i)) < 0 && sign(obj.getPaths().getAt(i - 1)) < 0 && !multiFlag) {\n                    verts = [verts];\n                }\n            }\n            if (i % 2 !== 0) {\n                verts.reverse();\n            }\n            rings.push(verts);\n        }\n        response = {\n            type: multiFlag ? 'multipolygon' : 'polygon',\n            components: rings\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Circle) {\n        var point = obj.getCenter();\n        var radius = obj.getRadius();\n        verts = [];\n        var d2r = Math.PI / 180;\n        var r2d = 180 / Math.PI;\n        radius = radius / 1609;\n        var earthsradius = 3963;\n        var num_seg = 32;\n        var rlat = radius / earthsradius * r2d;\n        var rlng = rlat / Math.cos(point.lat() * d2r);\n        for (var n = 0; n <= num_seg; n++) {\n            var theta = Math.PI * (n / (num_seg / 2));\n            lng = point.lng() + rlng * Math.cos(theta);\n            lat = point.lat() + rlat * Math.sin(theta);\n            verts.push({\n                x: lng,\n                y: lat\n            });\n        }\n        response = {\n            type: 'polygon',\n            components: [verts]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.LatLngBounds) {\n        tmp = obj;\n        verts = [];\n        verts.push({\n            x: tmp.getSouthWest().lng(),\n            y: tmp.getNorthEast().lat()\n        });\n        verts.push({\n            x: tmp.getNorthEast().lng(),\n            y: tmp.getNorthEast().lat()\n        });\n        verts.push({\n            x: tmp.getNorthEast().lng(),\n            y: tmp.getSouthWest().lat()\n        });\n        verts.push({\n            x: tmp.getSouthWest().lng(),\n            y: tmp.getSouthWest().lat()\n        });\n        verts.push({\n            x: tmp.getSouthWest().lng(),\n            y: tmp.getNorthEast().lat()\n        });\n        response = {\n            type: 'polygon',\n            isRectangle: true,\n            components: [verts]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Rectangle) {\n        tmp = obj.getBounds();\n        verts = [];\n        verts.push({\n            x: tmp.getSouthWest().lng(),\n            y: tmp.getNorthEast().lat()\n        });\n        verts.push({\n            x: tmp.getNorthEast().lng(),\n            y: tmp.getNorthEast().lat()\n        });\n        verts.push({\n            x: tmp.getNorthEast().lng(),\n            y: tmp.getSouthWest().lat()\n        });\n        verts.push({\n            x: tmp.getSouthWest().lng(),\n            y: tmp.getSouthWest().lat()\n        });\n        verts.push({\n            x: tmp.getSouthWest().lng(),\n            y: tmp.getNorthEast().lat()\n        });\n        response = {\n            type: 'polygon',\n            isRectangle: true,\n            components: [verts]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.Feature) {\n        return this.deconstruct.call(this, obj.getGeometry());\n    }\n    if (obj.constructor === google.maps.Data.Point) {\n        response = {\n            type: 'point',\n            components: [{\n                x: obj.get().lng(),\n                y: obj.get().lat()\n            }]\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.LineString) {\n        verts = [];\n        for (i = 0; i < obj.getLength(); i += 1) {\n            vertex = obj.getAt(i);\n            verts.push({\n                x: vertex.lng(),\n                y: vertex.lat()\n            });\n        }\n        response = {\n            type: 'linestring',\n            components: verts\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.Polygon) {\n        rings = [];\n        for (i = 0; i < obj.getLength(); i += 1) {\n            ring = obj.getAt(i);\n            verts = [];\n            for (j = 0; j < ring.getLength(); j += 1) {\n                vertex = ring.getAt(j);\n                verts.push({\n                    x: vertex.lng(),\n                    y: vertex.lat()\n                });\n            }\n            verts.push({\n                x: ring.getAt(0).lng(),\n                y: ring.getAt(0).lat()\n            });\n            rings.push(verts);\n        }\n        response = {\n            type: 'polygon',\n            components: rings\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.MultiPoint) {\n        verts = [];\n        for (i = 0; i < obj.getLength(); i += 1) {\n            vertex = obj.getAt(i);\n            verts.push([{\n                x: vertex.lng(),\n                y: vertex.lat()\n            }]);\n        }\n        response = {\n            type: 'multipoint',\n            components: verts\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.MultiLineString) {\n        linestrings = [];\n        for (i = 0; i < obj.getLength(); i += 1) {\n            verts = [];\n            linestring = obj.getAt(i);\n            for (j = 0; j < linestring.getLength(); j += 1) {\n                vertex = linestring.getAt(j);\n                verts.push({\n                    x: vertex.lng(),\n                    y: vertex.lat()\n                });\n            }\n            linestrings.push(verts);\n        }\n        response = {\n            type: 'multilinestring',\n            components: linestrings\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.MultiPolygon) {\n        polygons = [];\n        for (k = 0; k < obj.getLength(); k += 1) {\n            polygon = obj.getAt(k);\n            rings = [];\n            for (i = 0; i < polygon.getLength(); i += 1) {\n                ring = polygon.getAt(i);\n                verts = [];\n                for (j = 0; j < ring.getLength(); j += 1) {\n                    vertex = ring.getAt(j);\n                    verts.push({\n                        x: vertex.lng(),\n                        y: vertex.lat()\n                    });\n                }\n                verts.push({\n                    x: ring.getAt(0).lng(),\n                    y: ring.getAt(0).lat()\n                });\n                rings.push(verts);\n            }\n            polygons.push(rings);\n        }\n        response = {\n            type: 'multipolygon',\n            components: polygons\n        };\n        return response;\n    }\n    if (obj.constructor === google.maps.Data.GeometryCollection) {\n        var objects = [];\n        for (k = 0; k < obj.getLength(); k += 1) {\n            var object = obj.getAt(k);\n            objects.push(this.deconstruct.call(this, object));\n        }\n        response = {\n            type: 'geometrycollection',\n            components: objects\n        };\n        return response;\n    }\n    if (Wkt.isArray(obj)) {\n        features = [];\n        for (i = 0; i < obj.length; i += 1) {\n            features.push(this.deconstruct.call(this, obj[i], true));\n        }\n        response = {\n            type: function () {\n                var k,\n                    type = obj[0].constructor;\n                for (k = 0; k < obj.length; k += 1) {\n                    if (obj[k].constructor !== type) {\n                        return 'geometrycollection';\n                    }\n                }\n                switch (type) {\n                    case google.maps.Marker:\n                        return 'multipoint';\n                    case google.maps.Polyline:\n                        return 'multilinestring';\n                    case google.maps.Polygon:\n                        return 'multipolygon';\n                    default:\n                        return 'geometrycollection';\n                }\n            }(),\n            components: function () {\n                var i, comps;\n                comps = [];\n                for (i = 0; i < features.length; i += 1) {\n                    if (features[i].components) {\n                        comps.push(features[i].components);\n                    }\n                }\n                return {\n                    comps: comps\n                };\n            }()\n        };\n        response.components = response.components.comps;\n        return response;\n    }\n    console.warn('The passed object does not have any recognizable properties.');\n};\nfunction Wicket$1() {\n    return new Wkt.Wkt();\n}\n\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nvar arrayProto = Array.prototype;\nvar splice = arrayProto.splice;\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nvar freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global && global.Object === Object && global;\n\nvar freeSelf = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self && self.Object === Object && self;\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nvar _Symbol = root.Symbol;\n\nvar objectProto$1 = Object.prototype;\nvar hasOwnProperty$1 = objectProto$1.hasOwnProperty;\nvar nativeObjectToString = objectProto$1.toString;\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty$1.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\nvar objectProto$2 = Object.prototype;\nvar nativeObjectToString$1 = objectProto$2.toString;\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nvar coreJsData = root['__core-js_shared__'];\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nvar funcProto$1 = Function.prototype;\nvar funcToString$1 = funcProto$1.toString;\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString$1.call(func);\n    } catch (e) {}\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n  return '';\n}\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\nvar funcProto = Function.prototype;\nvar objectProto = Object.prototype;\nvar funcToString = funcProto.toString;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nvar Map$1 = getNative(root, 'Map');\n\nvar nativeCreate = getNative(Object, 'create');\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\nvar objectProto$3 = Object.prototype;\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty$2.call(data, key) ? data[key] : undefined;\n}\n\nvar objectProto$4 = Object.prototype;\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty$3.call(data, key);\n}\n\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED$1 : value;\n  return this;\n}\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map$1 || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nfunction isKeyable(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nvar LARGE_ARRAY_SIZE = 200;\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map$1 || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nvar HASH_UNDEFINED$2 = '__lodash_hash_undefined__';\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED$2);\n  return this;\n}\n\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nvar COMPARE_PARTIAL_FLAG$2 = 1;\nvar COMPARE_UNORDERED_FLAG$1 = 2;\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2,\n      arrLength = array.length,\n      othLength = other.length;\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array);\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nvar Uint8Array = root.Uint8Array;\n\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nvar COMPARE_PARTIAL_FLAG$3 = 1;\nvar COMPARE_UNORDERED_FLAG$2 = 2;\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar symbolProto = _Symbol ? _Symbol.prototype : undefined;\nvar symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      return eq(+object, +other);\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n    case regexpTag:\n    case stringTag:\n      return object == other + '';\n    case mapTag:\n      var convert = mapToArray;\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3;\n      convert || (convert = setToArray);\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG$2;\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nvar isArray = Array.isArray;\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nfunction stubArray() {\n  return [];\n}\n\nvar objectProto$7 = Object.prototype;\nvar propertyIsEnumerable = objectProto$7.propertyIsEnumerable;\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nfunction isObjectLike(value) {\n  return value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';\n}\n\nvar argsTag$1 = '[object Arguments]';\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag$1;\n}\n\nvar objectProto$9 = Object.prototype;\nvar hasOwnProperty$7 = objectProto$9.hasOwnProperty;\nvar propertyIsEnumerable$1 = objectProto$9.propertyIsEnumerable;\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty$7.call(value, 'callee') && !propertyIsEnumerable$1.call(value, 'callee');\n};\n\nfunction stubFalse() {\n  return false;\n}\n\nvar freeExports = (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\nvar freeModule = freeExports && (typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module && !module.nodeType && module;\nvar moduleExports = freeModule && freeModule.exports === freeExports;\nvar Buffer = moduleExports ? root.Buffer : undefined;\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;\n}\n\nvar argsTag$2 = '[object Arguments]';\nvar arrayTag$1 = '[object Array]';\nvar boolTag$1 = '[object Boolean]';\nvar dateTag$1 = '[object Date]';\nvar errorTag$1 = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag$1 = '[object Map]';\nvar numberTag$1 = '[object Number]';\nvar objectTag$1 = '[object Object]';\nvar regexpTag$1 = '[object RegExp]';\nvar setTag$1 = '[object Set]';\nvar stringTag$1 = '[object String]';\nvar weakMapTag = '[object WeakMap]';\nvar arrayBufferTag$1 = '[object ArrayBuffer]';\nvar dataViewTag$1 = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$2] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag$1] = typedArrayTags[boolTag$1] = typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag$1] = typedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$1] = typedArrayTags[numberTag$1] = typedArrayTags[objectTag$1] = typedArrayTags[regexpTag$1] = typedArrayTags[setTag$1] = typedArrayTags[stringTag$1] = typedArrayTags[weakMapTag] = false;\nfunction baseIsTypedArray(value) {\n    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nvar freeExports$1 = (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\nvar freeModule$1 = freeExports$1 && (typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module && !module.nodeType && module;\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\nvar freeProcess = moduleExports$1 && freeGlobal.process;\nvar nodeUtil = function () {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nvar objectProto$8 = Object.prototype;\nvar hasOwnProperty$6 = objectProto$8.hasOwnProperty;\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$6.call(value, key)) && !(skipIndexes && (\n    key == 'length' ||\n    isBuff && (key == 'offset' || key == 'parent') ||\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar objectProto$11 = Object.prototype;\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto$11;\n  return value === proto;\n}\n\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nvar nativeKeys = overArg(Object.keys, Object);\n\nvar objectProto$10 = Object.prototype;\nvar hasOwnProperty$8 = objectProto$10.hasOwnProperty;\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$8.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nvar COMPARE_PARTIAL_FLAG$4 = 1;\nvar objectProto$6 = Object.prototype;\nvar hasOwnProperty$5 = objectProto$6.hasOwnProperty;\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty$5.call(other, key))) {\n      return false;\n    }\n  }\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    }\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nvar DataView = getNative(root, 'DataView');\n\nvar Promise$1 = getNative(root, 'Promise');\n\nvar Set = getNative(root, 'Set');\n\nvar WeakMap = getNative(root, 'WeakMap');\n\nvar mapTag$2 = '[object Map]';\nvar objectTag$2 = '[object Object]';\nvar promiseTag = '[object Promise]';\nvar setTag$2 = '[object Set]';\nvar weakMapTag$1 = '[object WeakMap]';\nvar dataViewTag$2 = '[object DataView]';\nvar dataViewCtorString = toSource(DataView);\nvar mapCtorString = toSource(Map$1);\nvar promiseCtorString = toSource(Promise$1);\nvar setCtorString = toSource(Set);\nvar weakMapCtorString = toSource(WeakMap);\nvar getTag = baseGetTag;\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag$2 || Map$1 && getTag(new Map$1()) != mapTag$2 || Promise$1 && getTag(Promise$1.resolve()) != promiseTag || Set && getTag(new Set()) != setTag$2 || WeakMap && getTag(new WeakMap()) != weakMapTag$1) {\n    getTag = function getTag(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag$2 ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n        if (ctorString) {\n            switch (ctorString) {\n                case dataViewCtorString:\n                    return dataViewTag$2;\n                case mapCtorString:\n                    return mapTag$2;\n                case promiseCtorString:\n                    return promiseTag;\n                case setCtorString:\n                    return setTag$2;\n                case weakMapCtorString:\n                    return weakMapTag$1;\n            }\n        }\n        return result;\n    };\n}\nvar getTag$1 = getTag;\n\nvar COMPARE_PARTIAL_FLAG$1 = 1;\nvar argsTag = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar objectTag = '[object Object]';\nvar objectProto$5 = Object.prototype;\nvar hasOwnProperty$4 = objectProto$5.hasOwnProperty;\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag$1(object),\n      othTag = othIsArr ? arrayTag : getTag$1(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG$1)) {\n    var objIsWrapped = objIsObj && hasOwnProperty$4.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty$4.call(other, '__wrapped__');\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nvar COMPARE_PARTIAL_FLAG = 1;\nvar COMPARE_UNORDERED_FLAG = 2;\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nvar symbolTag$1 = '[object Symbol]';\nfunction isSymbol(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag$1;\n}\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nvar reIsPlainProp = /^\\w*$/;\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n}\nmemoize.Cache = MapCache;\n\nvar MAX_MEMOIZE_SIZE = 500;\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nvar reLeadingDot = /^\\./;\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function (match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\n\nvar INFINITY = 1 / 0;\nvar symbolProto$1 = _Symbol ? _Symbol.prototype : undefined;\nvar symbolToString = symbolProto$1 ? symbolProto$1.toString : undefined;\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nvar INFINITY$1 = 1 / 0;\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY$1 ? '-0' : result;\n}\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return index && index == length ? object : undefined;\n}\n\nfunction get$1(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nvar COMPARE_PARTIAL_FLAG$5 = 1;\nvar COMPARE_UNORDERED_FLAG$3 = 2;\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function (object) {\n    var objValue = get$1(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$5 | COMPARE_UNORDERED_FLAG$3);\n  };\n}\n\nfunction identity(value) {\n  return value;\n}\n\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nfunction baseIteratee(value) {\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n  return property(value);\n}\n\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nvar baseFor = createBaseFor();\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nvar baseEach = createBaseEach(baseForOwn);\n\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n  baseEach(collection, function (value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nfunction toLatLng(position) {\n\tif (position instanceof google.maps.LatLng) {\n\t\treturn {\n\t\t\tlat: position.lat(),\n\t\t\tlng: position.lng()\n\t\t};\n\t} else if (position.lat && position.lng) {\n\t\treturn position;\n\t} else {\n\t\treturn {\n\t\t\tlat: position[1],\n\t\t\tlng: position[0]\n\t\t};\n\t}\n}\nfunction toLatLngs(coordinates) {\n\treturn map(coordinates, toLatLng);\n}\nfunction toCoord$1(LatLng) {\n\tif (google.maps && google.maps.LatLng && LatLng instanceof google.maps.LatLng) {\n\t\treturn [LatLng.lng(), LatLng.lat()];\n\t} else if (LatLng.lat && LatLng.lng) {\n\t\treturn [LatLng.lng, LatLng.lat];\n\t} else if (LatLng.length && LatLng.length >= 2) {\n\t\treturn LatLng;\n\t} else {\n\t\tthrow new Error('google.maps is not present in the global scope');\n\t}\n}\nfunction toCoords(arrayLatLng, closeRing) {\n\tvar ring = map(arrayLatLng, toCoord$1);\n\tif (closeRing === true) {\n\t\tvar last_coord = ring.pop();\n\t\tif (last_coord[0] === ring[0][0] && last_coord[1] === ring[0][1]) {\n\t\t\tring.push(ring[0]);\n\t\t} else {\n\t\t\tring.push(last_coord);\n\t\t\tring.push(ring[0]);\n\t\t}\n\t}\n\treturn ring;\n}\n\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\nvar earthRadius = 6371008.8;\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325\n};\n\n\nfunction feature(geometry, properties, bbox, id) {\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) {\n        if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n        if (bbox.length !== 4) throw new Error('bbox must be an Array of 4 numbers');\n    }\n    if (id && ['string', 'number'].indexOf(typeof id === 'undefined' ? 'undefined' : _typeof(id)) === -1) throw new Error('id must be a number or a string');\n    var feat = { type: 'Feature' };\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\nfunction point(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (!Array.isArray(coordinates)) throw new Error('Coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('Coordinates must contain numbers');\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\nfunction polygon(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('Coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\nfunction lineString(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (coordinates.length < 2) throw new Error('Coordinates must be an array of two or more positions');\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('Coordinates must contain numbers');\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\nfunction featureCollection(features, bbox, id) {\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox && bbox.length !== 4) throw new Error('bbox must be an Array of 4 numbers');\n    if (id && ['string', 'number'].indexOf(typeof id === 'undefined' ? 'undefined' : _typeof(id)) === -1) throw new Error('id must be a number or a string');\n    var fc = { type: 'FeatureCollection' };\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\nfunction multiLineString(coordinates, properties, bbox, id) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, bbox, id);\n}\n\n\nfunction geometryCollection(geometries, properties, bbox, id) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, bbox, id);\n}\n\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject$2(input) {\n    return !!input && input.constructor === Object;\n}\n\nvar debug = console.debug.bind(console, '%c turfHelper' + ':', \"color:#00CC00;font-weight:bold;\");\nvar warn = console.debug.bind(console, '%c turfHelper' + ':', \"color:orange;font-weight:bold;\");\nfunction arrayToFeaturePolygon(LatLngArray) {\n    var vertices = toCoords(LatLngArray, true);\n    return {\n        type: \"Feature\",\n        properties: {},\n        geometry: {\n            type: \"Polygon\",\n            coordinates: [vertices]\n        }\n    };\n}\nfunction markerToFeaturePoint(marker) {\n    if (!marker.getPosition || typeof marker.getPosition !== 'function') {\n        throw new Error('input object does not have a getPosition method');\n    }\n    var position = marker.getPosition(),\n        Feature = {\n        type: \"Feature\",\n        properties: {},\n        geometry: {\n            type: \"Point\",\n            coordinates: [position.lng(), position.lat()]\n        }\n    };\n    return Feature;\n}\nfunction polylineToFeatureLinestring(objeto) {\n    var vertices;\n    if (objeto instanceof google.maps.Polyline) {\n        vertices = toCoords(objeto.getPath().getArray());\n    } else {\n        vertices = toCoords(objeto);\n    }\n    return lineString(vertices);\n}\nfunction polygonToFeaturePolygon(object) {\n    var ring, polygonFeature;\n    if (object.type === 'Feature') {\n        polygonFeature = object;\n    } else if (object instanceof google.maps.Polygon) {\n        object = object.getPath().getArray();\n        ring = toCoords(object, true);\n        polygonFeature = arrayToFeaturePolygon(ring);\n    } else if (!!(object && object.constructor === Array)) {\n        ring = toCoords(object, true);\n        polygonFeature = arrayToFeaturePolygon(ring);\n    } else if (object.geometry) {\n        polygonFeature = {\n            type: \"Feature\",\n            properties: {},\n            geometry: object.geometry\n        };\n    } else {\n        throw new Error('object is not a Feature, google.maps.Polygon nor an array of google.maps.LatLng');\n    }\n    polygonFeature.properties = {};\n    return polygonFeature;\n}\nfunction arrayToFeaturePoints(latLngArray) {\n    var FeatureCollection = {\n        \"type\": \"FeatureCollection\",\n        \"features\": []\n    };\n    latLngArray.forEach(function (latLng) {\n        var Feature = {\n            type: \"Feature\",\n            geometry: {\n                type: \"Point\",\n                coordinates: toCoords([latLng])[0]\n            }\n        };\n        FeatureCollection.features.push(Feature);\n    });\n    return FeatureCollection;\n}\n\nfunction tin(points, z) {\n    if (points.type !== 'FeatureCollection') throw new Error('points must be a FeatureCollection');\n    var isPointZ = false;\n    return featureCollection(triangulate(points.features.map(function (p) {\n        var point$$1 = {\n            x: p.geometry.coordinates[0],\n            y: p.geometry.coordinates[1]\n        };\n        if (z) {\n            point$$1.z = p.properties[z];\n        } else if (p.geometry.coordinates.length === 3) {\n            isPointZ = true;\n            point$$1.z = p.geometry.coordinates[2];\n        }\n        return point$$1;\n    })).map(function (triangle) {\n        var a = [triangle.a.x, triangle.a.y];\n        var b = [triangle.b.x, triangle.b.y];\n        var c = [triangle.c.x, triangle.c.y];\n        var properties = {};\n        if (isPointZ) {\n            a.push(triangle.a.z);\n            b.push(triangle.b.z);\n            c.push(triangle.c.z);\n        } else {\n            properties = {\n                a: triangle.a.z,\n                b: triangle.b.z,\n                c: triangle.c.z\n            };\n        }\n        return polygon([[a, b, c, a]], properties);\n    }));\n}\nfunction Triangle(a, b, c) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    var A = b.x - a.x,\n        B = b.y - a.y,\n        C = c.x - a.x,\n        D = c.y - a.y,\n        E = A * (a.x + b.x) + B * (a.y + b.y),\n        F = C * (a.x + c.x) + D * (a.y + c.y),\n        G = 2 * (A * (c.y - b.y) - B * (c.x - b.x)),\n        dx,\n        dy;\n    this.x = (D * E - B * F) / G;\n    this.y = (A * F - C * E) / G;\n    dx = this.x - a.x;\n    dy = this.y - a.y;\n    this.r = dx * dx + dy * dy;\n}\nfunction byX(a, b) {\n    return b.x - a.x;\n}\nfunction dedup(edges) {\n    var j = edges.length,\n        a,\n        b,\n        i,\n        m,\n        n;\n    outer: while (j) {\n        b = edges[--j];\n        a = edges[--j];\n        i = j;\n        while (i) {\n            n = edges[--i];\n            m = edges[--i];\n            if (a === m && b === n || a === n && b === m) {\n                edges.splice(j, 2);\n                edges.splice(i, 2);\n                j -= 2;\n                continue outer;\n            }\n        }\n    }\n}\nfunction triangulate(vertices) {\n    if (vertices.length < 3) return [];\n    vertices.sort(byX);\n    var i = vertices.length - 1,\n        xmin = vertices[i].x,\n        xmax = vertices[0].x,\n        ymin = vertices[i].y,\n        ymax = ymin,\n        epsilon = 1e-12;\n    var a, b, c, A, B, G;\n    while (i--) {\n        if (vertices[i].y < ymin) ymin = vertices[i].y;\n        if (vertices[i].y > ymax) ymax = vertices[i].y;\n    }\n    var dx = xmax - xmin,\n        dy = ymax - ymin,\n        dmax = dx > dy ? dx : dy,\n        xmid = (xmax + xmin) * 0.5,\n        ymid = (ymax + ymin) * 0.5,\n        open = [new Triangle({\n        x: xmid - 20 * dmax,\n        y: ymid - dmax,\n        __sentinel: true\n    }, {\n        x: xmid,\n        y: ymid + 20 * dmax,\n        __sentinel: true\n    }, {\n        x: xmid + 20 * dmax,\n        y: ymid - dmax,\n        __sentinel: true\n    })],\n        closed = [],\n        edges = [],\n        j;\n    i = vertices.length;\n    while (i--) {\n        edges.length = 0;\n        j = open.length;\n        while (j--) {\n            dx = vertices[i].x - open[j].x;\n            if (dx > 0 && dx * dx > open[j].r) {\n                closed.push(open[j]);\n                open.splice(j, 1);\n                continue;\n            }\n            dy = vertices[i].y - open[j].y;\n            if (dx * dx + dy * dy > open[j].r) continue;\n            edges.push(open[j].a, open[j].b, open[j].b, open[j].c, open[j].c, open[j].a);\n            open.splice(j, 1);\n        }\n        dedup(edges);\n        j = edges.length;\n        while (j) {\n            b = edges[--j];\n            a = edges[--j];\n            c = vertices[i];\n            A = b.x - a.x;\n            B = b.y - a.y;\n            G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n            if (Math.abs(G) > epsilon) {\n                open.push(new Triangle(a, b, c));\n            }\n        }\n    }\n    Array.prototype.push.apply(closed, open);\n    i = closed.length;\n    while (i--) {\n        if (closed[i].a.__sentinel || closed[i].b.__sentinel || closed[i].c.__sentinel) closed.splice(i, 1);\n    }return closed;\n}\n\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    switch (geojson.type) {\n        case 'Feature':\n            return cloneFeature(geojson);\n        case 'FeatureCollection':\n            return cloneFeatureCollection(geojson);\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n        case 'GeometryCollection':\n            return cloneGeometry(geojson);\n        default:\n            throw new Error('unknown GeoJSON type');\n    }\n}\nfunction cloneFeature(geojson) {\n    var cloned = { type: 'Feature' };\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case 'type':\n            case 'properties':\n            case 'geometry':\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n            if (value.length) cloned[key] = value.map(function (item) {\n                return item;\n            });\n            cloned[key] = cloneProperties(value);\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: 'FeatureCollection' };\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case 'type':\n            case 'features':\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\nfunction deepSlice(coords) {\n    if (_typeof(coords[0]) !== 'object') {\n        return coords.slice();\n    }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nfunction getCoord(obj) {\n    if (!obj) throw new Error('obj is required');\n    var coordinates = getCoords(obj);\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return coordinates;\n    } else {\n        throw new Error('Coordinate is not a valid Point');\n    }\n}\nfunction getCoords(obj) {\n    if (!obj) throw new Error('obj is required');\n    var coordinates;\n    if (obj.length) {\n        coordinates = obj;\n    } else if (obj.coordinates) {\n        coordinates = obj.coordinates;\n    } else if (obj.geometry && obj.geometry.coordinates) {\n        coordinates = obj.geometry.coordinates;\n    }\n    if (coordinates) {\n        containsNumber(coordinates);\n        return coordinates;\n    }\n    throw new Error('No valid coordinates');\n}\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n\n\n\n\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    if (geojson === null) return;\n    var featureIndex,\n        geometryIndex,\n        j,\n        k,\n        l,\n        geometry$$1,\n        stopG,\n        coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n    for (featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n        isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n        for (geometryIndex = 0; geometryIndex < stopG; geometryIndex++) {\n            var featureSubIndex = 0;\n            geometry$$1 = isGeometryCollection ? geometryMaybeCollection.geometries[geometryIndex] : geometryMaybeCollection;\n            if (geometry$$1 === null) continue;\n            coords = geometry$$1.coordinates;\n            var geomType = geometry$$1.type;\n            wrapShrink = excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon') ? 1 : 0;\n            switch (geomType) {\n                case null:\n                    break;\n                case 'Point':\n                    callback(coords, coordIndex, featureIndex, featureSubIndex);\n                    coordIndex++;\n                    featureSubIndex++;\n                    break;\n                case 'LineString':\n                case 'MultiPoint':\n                    for (j = 0; j < coords.length; j++) {\n                        callback(coords[j], coordIndex, featureIndex, featureSubIndex);\n                        coordIndex++;\n                        if (geomType === 'MultiPoint') featureSubIndex++;\n                    }\n                    if (geomType === 'LineString') featureSubIndex++;\n                    break;\n                case 'Polygon':\n                case 'MultiLineString':\n                    for (j = 0; j < coords.length; j++) {\n                        for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                            callback(coords[j][k], coordIndex, featureIndex, featureSubIndex);\n                            coordIndex++;\n                        }\n                        if (geomType === 'MultiLineString') featureSubIndex++;\n                    }\n                    if (geomType === 'Polygon') featureSubIndex++;\n                    break;\n                case 'MultiPolygon':\n                    for (j = 0; j < coords.length; j++) {\n                        for (k = 0; k < coords[j].length; k++) {\n                            for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                                callback(coords[j][k][l], coordIndex, featureIndex, featureSubIndex);\n                                coordIndex++;\n                            }\n                        }featureSubIndex++;\n                    }\n                    break;\n                case 'GeometryCollection':\n                    for (j = 0; j < geometry$$1.geometries.length; j++) {\n                        coordEach(geometry$$1.geometries[j], callback, excludeWrapCoord);\n                    }break;\n                default:\n                    throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n\n\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i], i);\n        }\n    }\n}\n\n\nfunction geomEach(geojson, callback) {\n    var i,\n        j,\n        g,\n        geometry$$1,\n        stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n    for (i = 0; i < stop; i++) {\n        geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n        featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n        featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : undefined;\n        featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : undefined;\n        isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n        for (g = 0; g < stopG; g++) {\n            geometry$$1 = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n            if (geometry$$1 === null) {\n                callback(null, featureIndex, featureProperties, featureBBox, featureId);\n                continue;\n            }\n            switch (geometry$$1.type) {\n                case 'Point':\n                case 'LineString':\n                case 'MultiPoint':\n                case 'Polygon':\n                case 'MultiLineString':\n                case 'MultiPolygon':\n                    {\n                        callback(geometry$$1, featureIndex, featureProperties, featureBBox, featureId);\n                        break;\n                    }\n                case 'GeometryCollection':\n                    {\n                        for (j = 0; j < geometry$$1.geometries.length; j++) {\n                            callback(geometry$$1.geometries[j], featureIndex, featureProperties, featureBBox, featureId);\n                        }\n                        break;\n                    }\n                default:\n                    throw new Error('Unknown Geometry Type');\n            }\n        }\n        featureIndex++;\n    }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, currentIndex, currentProperties) {\n        if (currentIndex === 0 && initialValue === undefined) previousValue = currentGeometry;else previousValue = callback(previousValue, currentGeometry, currentIndex, currentProperties);\n    });\n    return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry$$1, featureIndex, properties, bbox, id) {\n        var type = geometry$$1 === null ? null : geometry$$1.type;\n        switch (type) {\n            case null:\n            case 'Point':\n            case 'LineString':\n            case 'Polygon':\n                callback(feature(geometry$$1, properties, bbox, id), featureIndex, 0);\n                return;\n        }\n        var geomType;\n        switch (type) {\n            case 'MultiPoint':\n                geomType = 'Point';\n                break;\n            case 'MultiLineString':\n                geomType = 'LineString';\n                break;\n            case 'MultiPolygon':\n                geomType = 'Polygon';\n                break;\n        }\n        geometry$$1.coordinates.forEach(function (coordinate, featureSubIndex) {\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            callback(feature(geom, properties), featureIndex, featureSubIndex);\n        });\n    });\n}\n\n\n\nfunction lineEach(geojson, callback) {\n    if (!geojson) throw new Error('geojson is required');\n    flattenEach(geojson, function (feature$$1, featureIndex, featureSubIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n            case 'LineString':\n                callback(feature$$1, featureIndex, featureSubIndex, 0);\n                break;\n            case 'Polygon':\n                for (var lineIndex = 0; lineIndex < coords.length; lineIndex++) {\n                    callback(lineString(coords[lineIndex], feature$$1.properties), featureIndex, featureSubIndex, lineIndex);\n                }\n                break;\n        }\n    });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, featureSubIndex, lineIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;else previousValue = callback(previousValue, currentLine, featureIndex, featureSubIndex, lineIndex);\n    });\n    return previousValue;\n}\n\nfunction lineDissolve(geojson, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n    if (getType(geojson) !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (!geojson.features.length) throw new Error('geojson is empty');\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n    var result = [];\n    var lastLine = lineReduce(geojson, function (previousLine, currentLine) {\n        var merged = mergeLineStrings(previousLine, currentLine);\n        if (merged) return merged;\n        else {\n                result.push(previousLine);\n                return currentLine;\n            }\n    });\n    if (lastLine) result.push(lastLine);\n    if (!result.length) return null;\n    else if (result.length === 1) return result[0];\n        else return multiLineString(result.map(function (line) {\n                return line.coordinates;\n            }));\n}\nfunction coordId(coord) {\n    return coord[0].toString() + ',' + coord[1].toString();\n}\nfunction mergeLineStrings(a, b) {\n    var coords1 = a.geometry.coordinates;\n    var coords2 = b.geometry.coordinates;\n    var s1 = coordId(coords1[0]);\n    var e1 = coordId(coords1[coords1.length - 1]);\n    var s2 = coordId(coords2[0]);\n    var e2 = coordId(coords2[coords2.length - 1]);\n    var coords;\n    if (s1 === e2) coords = coords2.concat(coords1.slice(1));else if (s2 === e1) coords = coords1.concat(coords2.slice(1));else if (s1 === s2) coords = coords1.slice(1).reverse().concat(coords2);else if (e1 === e2) coords = coords1.concat(coords2.reverse().slice(1));else return null;\n    return lineString(coords);\n}\n\nvar identity$2 = function (x) {\n  return x;\n};\n\nvar transform = function (transform) {\n  if (transform == null) return identity$2;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) {\n      output[j] = input[j], ++j;\n    }return output;\n  };\n};\n\nvar reverse = function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n};\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n  function point(p) {\n    return transformPoint(p);\n  }\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }if (points.length < 2) points.push(points[0]);\n    return points;\n  }\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) {\n      points.push(points[0]);\n    }\n    return points;\n  }\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n    switch (type) {\n      case \"GeometryCollection\":\n        return { type: type, geometries: o.geometries.map(geometry) };\n      case \"Point\":\n        coordinates = point(o.coordinates);break;\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);break;\n      case \"LineString\":\n        coordinates = line(o.arcs);break;\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);break;\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);break;\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);break;\n      default:\n        return null;\n    }\n    return { type: type, coordinates: coordinates };\n  }\n  return geometry(o);\n}\n\nvar stitch = function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n};\n\nfunction planarRingArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n  while (++i < n) {\n    a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  }return Math.abs(area);\n}\nvar merge = function (topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n  objects.forEach(geometry);\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);break;\n      case \"Polygon\":\n        extract(o.arcs);break;\n      case \"MultiPolygon\":\n        o.arcs.forEach(extract);break;\n    }\n  }\n  function extract(polygon) {\n    polygon.forEach(function (ring) {\n      ring.forEach(function (arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n  function area(ring) {\n    return planarRingArea(object(topology, { type: \"Polygon\", arcs: [ring] }).coordinates[0]);\n  }\n  polygons.forEach(function (polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n  polygons.forEach(function (polygon) {\n    delete polygon._;\n  });\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function (polygons) {\n      var arcs = [],\n          n;\n      polygons.forEach(function (polygon) {\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n      arcs = stitch(topology, arcs);\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n      return arcs;\n    })\n  };\n}\n\nvar bounds = function (objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n  var boundGeometryType = {\n    GeometryCollection: function GeometryCollection(o) {\n      o.geometries.forEach(boundGeometry);\n    },\n    Point: function Point(o) {\n      boundPoint(o.coordinates);\n    },\n    MultiPoint: function MultiPoint(o) {\n      o.coordinates.forEach(boundPoint);\n    },\n    LineString: function LineString(o) {\n      boundLine(o.arcs);\n    },\n    MultiLineString: function MultiLineString(o) {\n      o.arcs.forEach(boundLine);\n    },\n    Polygon: function Polygon(o) {\n      o.arcs.forEach(boundLine);\n    },\n    MultiPolygon: function MultiPolygon(o) {\n      o.arcs.forEach(boundMultiLine);\n    }\n  };\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function (size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = index + 1 & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = index + 1 & mask];\n    }\n    return false;\n  }\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function (size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = index + 1 & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = index + 1 & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = index + 1 & mask];\n    }\n    return missingValue;\n  }\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n  return {\n    set: set,\n    maybeSet: maybeSet,\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function (pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\nvar buffer = new ArrayBuffer(16);\nvar floats = new Float64Array(buffer);\nvar uints = new Uint32Array(buffer);\nvar hashPoint = function (point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\nvar join = function (topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0,\n  i,\n      n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1;\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1;\n  }\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return;\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex) && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n    return indexes;\n  }\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n  visitedByIndex = leftByIndex = rightByIndex = null;\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint),\n      j;\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n  return junctionByPoint;\n};\n\nvar cut = function (topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i,\n      n;\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = { 0: lineMid, 1: line[1] };\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = { 0: ringMid, 1: ring[1] };\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else {\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart;\n        }\n      }\n    }\n  }\n  return topology;\n};\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\nfunction reverse$1(array, start, end) {\n  for (var mid = start + (end-- - start >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\nvar dedup$1 = function (topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      line,\n      rings = topology.rings,\n      ring,\n      arcCount = lines.length + rings.length,\n      i,\n      n;\n  delete topology.lines;\n  delete topology.rings;\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];while (line = line.next) {\n      ++arcCount;\n    }\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];while (ring = ring.next) {\n      ++arcCount;\n    }\n  }\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) {\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n  function dedupLine(arc) {\n    var startPoint, endPoint, startArcs, startArc, endArcs, endArc, i, n;\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n    if (startArcs) startArcs.push(arc);else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc);else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n  function dedupRing(arc) {\n    var endPoint, endArcs, endArc, i, n;\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n    if (endArcs) endArcs.push(arc);else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0],\n        ib = arcB[0],\n        ja = arcA[1],\n        jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) {\n      if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    }return true;\n  }\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0],\n        ib = arcB[0],\n        ja = arcA[1],\n        jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) {\n      if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    }return true;\n  }\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0],\n        ib = arcB[0],\n        ja = arcA[1],\n        jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0],\n        ib = arcB[0],\n        ja = arcA[1],\n        jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n  return topology;\n};\n\nvar delta = function (arcs) {\n  var i = -1,\n      n = arcs.length;\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n    if (k === 1) arc[k++] = [0, 0];\n    arc.length = k;\n  }\n  return arcs;\n};\n\nvar extract = function (objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n  var extractGeometryType = {\n    GeometryCollection: function GeometryCollection(o) {\n      o.geometries.forEach(extractGeometry);\n    },\n    LineString: function LineString(o) {\n      o.arcs = extractLine(o.arcs);\n    },\n    MultiLineString: function MultiLineString(o) {\n      o.arcs = o.arcs.map(extractLine);\n    },\n    Polygon: function Polygon(o) {\n      o.arcs = o.arcs.map(extractRing);\n    },\n    MultiPolygon: function MultiPolygon(o) {\n      o.arcs = o.arcs.map(extractMultiRing);\n    }\n  };\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) {\n      coordinates[++index] = line[i];\n    }var arc = { 0: index - n + 1, 1: index };\n    lines.push(arc);\n    return arc;\n  }\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      coordinates[++index] = ring[i];\n    }var arc = { 0: index - n + 1, 1: index };\n    rings.push(arc);\n    return arc;\n  }\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\nvar geometry$1 = function (inputs) {\n  var outputs = {},\n      key;\n  for (key in inputs) {\n    outputs[key] = geomifyObject(inputs[key]);\n  }return outputs;\n};\nfunction geomifyObject(input) {\n  return input == null ? { type: null } : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection : input.type === \"Feature\" ? geomifyFeature : geomifyGeometry)(input);\n}\nfunction geomifyFeatureCollection(input) {\n  var output = { type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature) };\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry),\n      key;\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) {\n    output.properties = input.properties;break;\n  }\n  return output;\n}\nfunction geomifyGeometry(input) {\n  if (input == null) return { type: null };\n  var output = input.type === \"GeometryCollection\" ? { type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry) } : input.type === \"Point\" || input.type === \"MultiPoint\" ? { type: input.type, coordinates: input.coordinates } : { type: input.type, arcs: input.coordinates };\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function (objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n),\n    pi,\n        px,\n        py,\n        x,\n        y;\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y];\n    }\n    output.length = j;\n    while (j < m) {\n      j = output.push([output[0][0], output[0][1]]);\n    }return output;\n  }\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n  var quantizeGeometryType = {\n    GeometryCollection: function GeometryCollection(o) {\n      o.geometries.forEach(quantizeGeometry);\n    },\n    Point: function Point(o) {\n      o.coordinates = quantizePoint(o.coordinates);\n    },\n    MultiPoint: function MultiPoint(o) {\n      o.coordinates = o.coordinates.map(quantizePoint);\n    },\n    LineString: function LineString(o) {\n      o.arcs = quantizeLine(o.arcs);\n    },\n    MultiLineString: function MultiLineString(o) {\n      o.arcs = o.arcs.map(quantizeLine);\n    },\n    Polygon: function Polygon(o) {\n      o.arcs = quantizePolygon(o.arcs);\n    },\n    MultiPolygon: function MultiPolygon(o) {\n      o.arcs = o.arcs.map(quantizePolygon);\n    }\n  };\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\nvar topology = function (objects, quantization) {\n  var bbox = bounds(objects = geometry$1(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup$1(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n  objects = topology.objects;\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function (arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n  delete topology.coordinates;\n  coordinates = null;\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n  var indexGeometryType = {\n    GeometryCollection: function GeometryCollection(o) {\n      o.geometries.forEach(indexGeometry);\n    },\n    LineString: function LineString(o) {\n      o.arcs = indexArcs(o.arcs);\n    },\n    MultiLineString: function MultiLineString(o) {\n      o.arcs = o.arcs.map(indexArcs);\n    },\n    Polygon: function Polygon(o) {\n      o.arcs = o.arcs.map(indexArcs);\n    },\n    MultiPolygon: function MultiPolygon(o) {\n      o.arcs = o.arcs.map(indexMultiArcs);\n    }\n  };\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n  return topology;\n};\nfunction hashArc(arc) {\n  var i = arc[0],\n      j = arc[1],\n      t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0],\n      ja = arcA[1],\n      ib = arcB[0],\n      jb = arcB[1],\n      t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\nfunction polygonDissolve(geojson, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n    if (getType(geojson) !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (!geojson.features.length) throw new Error('geojson is empty');\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n    var geoms = [];\n    flattenEach(geojson, function (feature$$1) {\n        geoms.push(feature$$1.geometry);\n    });\n    var topo = topology({ geoms: geometryCollection(geoms).geometry });\n    return merge(topo, topo.objects.geoms.geometries);\n}\n\nfunction dissolve(geojson, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n    if (getType(geojson) !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (!geojson.features.length) throw new Error('geojson is empty');\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n    var type = getHomogenousType(geojson);\n    if (!type) throw new Error('geojson must be homogenous');\n    switch (type) {\n        case 'LineString':\n            return lineDissolve(geojson, options);\n        case 'Polygon':\n            return polygonDissolve(geojson, options);\n        default:\n            throw new Error(type + ' is not supported');\n    }\n}\nfunction getHomogenousType(geojson) {\n    var types = {};\n    flattenEach(geojson, function (feature$$1) {\n        types[feature$$1.geometry.type] = true;\n    });\n    var keys = Object.keys(types);\n    if (keys.length === 1) return keys[0];\n    return null;\n}\n\nfunction distance(from, to, options) {\n  options = options || {};\n  if (!isObject$2(options)) throw new Error('options is invalid');\n  var units = options.units;\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n}\n\nfunction concave$1(points, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    if (!points) throw new Error('points is required');\n    var maxEdge = options.maxEdge || Infinity;\n    if (!isNumber(maxEdge)) throw new Error('maxEdge is invalid');\n    var cleaned = removeDuplicates(points);\n    var tinPolys = tin(cleaned);\n    tinPolys.features = tinPolys.features.filter(function (triangle) {\n        var pt1 = triangle.geometry.coordinates[0][0];\n        var pt2 = triangle.geometry.coordinates[0][1];\n        var pt3 = triangle.geometry.coordinates[0][2];\n        var dist1 = distance(pt1, pt2, options);\n        var dist2 = distance(pt2, pt3, options);\n        var dist3 = distance(pt1, pt3, options);\n        return dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge;\n    });\n    if (tinPolys.features.length < 1) return null;\n    var dissolved = dissolve(tinPolys, options);\n    if (dissolved.coordinates.length === 1) {\n        dissolved.coordinates = dissolved.coordinates[0];\n        dissolved.type = 'Polygon';\n    }\n    return feature(dissolved);\n}\nfunction removeDuplicates(points) {\n    var cleaned = [];\n    var existing = {};\n    featureEach(points, function (pt) {\n        if (!pt.geometry) return;\n        var key = pt.geometry.coordinates.join('-');\n        if (!existing.hasOwnProperty(key)) {\n            cleaned.push(pt);\n            existing[key] = true;\n        }\n    });\n    return featureCollection(cleaned);\n}\n\nfunction concave(latLngArray, maxEdge, units) {\n  var FeatureCollection = arrayToFeaturePoints(latLngArray);\n  return concave$1(FeatureCollection, {\n    maxEdge: maxEdge,\n    units: units\n  });\n}\n\nfunction cleanCoords(geojson, options) {\n    var mutate = (typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object' ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n    var newCoords = [];\n    switch (type) {\n        case 'LineString':\n            newCoords = cleanLine(geojson);\n            break;\n        case 'MultiLineString':\n        case 'Polygon':\n            getCoords(geojson).forEach(function (line) {\n                newCoords.push(cleanLine(line));\n            });\n            break;\n        case 'MultiPolygon':\n            getCoords(geojson).forEach(function (polygons) {\n                var polyPoints = [];\n                polygons.forEach(function (ring) {\n                    polyPoints.push(cleanLine(ring));\n                });\n                newCoords.push(polyPoints);\n            });\n            break;\n        case 'Point':\n            return geojson;\n        case 'MultiPoint':\n            var existing = {};\n            getCoords(geojson).forEach(function (coord) {\n                var key = coord.join('-');\n                if (!existing.hasOwnProperty(key)) {\n                    newCoords.push(coord);\n                    existing[key] = true;\n                }\n            });\n            break;\n        default:\n            throw new Error(type + ' geometry not supported');\n    }\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return { type: type, coordinates: newCoords };\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({ type: type, coordinates: newCoords }, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n    var prevPoint, point$$1, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point$$1 = points[i];\n        nextPoint = points[i + 1];\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point$$1)) {\n            newPoints.push(point$$1);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\nfunction isPointOnLineSegment(start, end, point$$1) {\n    var x = point$$1[0],\n        y = point$$1[1];\n    var startX = start[0],\n        startY = start[1];\n    var endX = end[0],\n        endY = end[1];\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) return false;else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nvar simplifyJS = require('simplify-js');\nfunction simplify(geojson, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var tolerance = options.tolerance;\n    var highQuality = options.highQuality;\n    var mutate = options.mutate;\n    if (!geojson) throw new Error('geojson is required');\n    if (tolerance && tolerance < 0) throw new Error('invalid tolerance');\n    if (mutate !== true) geojson = clone(geojson);\n    geomEach(geojson, function (geom) {\n        simplifyGeom(geom, tolerance, highQuality);\n    });\n    return geojson;\n}\nfunction simplifyGeom(geometry$$1, tolerance, highQuality) {\n    var type = geometry$$1.type;\n    if (type === 'Point' || type === 'MultiPoint') return geometry$$1;\n    cleanCoords(geometry$$1, true);\n    var coordinates = geometry$$1.coordinates;\n    switch (type) {\n        case 'LineString':\n            geometry$$1['coordinates'] = simplifyLine(coordinates, tolerance, highQuality);\n            break;\n        case 'MultiLineString':\n            geometry$$1['coordinates'] = coordinates.map(function (lines) {\n                return simplifyLine(lines, tolerance, highQuality);\n            });\n            break;\n        case 'Polygon':\n            geometry$$1['coordinates'] = simplifyPolygon(coordinates, tolerance, highQuality);\n            break;\n        case 'MultiPolygon':\n            geometry$$1['coordinates'] = coordinates.map(function (rings) {\n                return simplifyPolygon(rings, tolerance, highQuality);\n            });\n    }\n    return geometry$$1;\n}\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n    return simplifyJS(coordinates.map(function (coord) {\n        return { x: coord[0], y: coord[1], z: coord[2] };\n    }), tolerance, highQuality).map(function (coords) {\n        return coords.z ? [coords.x, coords.y, coords.z] : [coords.x, coords.y];\n    });\n}\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n    return coordinates.map(function (ring) {\n        var pts = ring.map(function (coord) {\n            return { x: coord[0], y: coord[1] };\n        });\n        if (pts.length < 4) {\n            throw new Error('invalid polygon');\n        }\n        var simpleRing = simplifyJS(pts, tolerance, highQuality).map(function (coords) {\n            return [coords.x, coords.y];\n        });\n        while (!checkValidity(simpleRing)) {\n            tolerance -= tolerance * 0.01;\n            simpleRing = simplifyJS(pts, tolerance, highQuality).map(function (coords) {\n                return [coords.x, coords.y];\n            });\n        }\n        if (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0] || simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1]) {\n            simpleRing.push(simpleRing[0]);\n        }\n        return simpleRing;\n    });\n}\nfunction checkValidity(ring) {\n    if (ring.length < 3) return false;\n    return !(ring.length === 3 && ring[2][0] === ring[0][0] && ring[2][1] === ring[0][1]);\n}\n\nfunction simplifyPointArray(coordArray, tolerance, highQuality) {\n\ttolerance = tolerance || 0.00001;\n\thighQuality = highQuality || false;\n\tvar Feature = lineString(toCoords(coordArray));\n\tvar simplifiedgeom = simplify(Feature, tolerance, highQuality);\n\treturn simplifiedgeom.geometry.coordinates;\n}\nfunction simplifyFeature(object, output, tolerance, highQuality) {\n\toutput = (output || 'feature').toLowerCase();\n\tvar Feature;\n\tif (object instanceof google.maps.Polyline || object instanceof google.maps.Polygon) {\n\t\tvar geometry$$1 = Wicket$1().fromObject(object).toJson();\n\t\tFeature = {\n\t\t\ttype: \"Feature\",\n\t\t\tproperties: {},\n\t\t\tgeometry: geometry$$1\n\t\t};\n\t} else if (object.type && object.type === 'Feature' && object.geometry) {\n\t\tFeature = object;\n\t} else {\n\t\tFeature = polygonToFeaturePolygon(object);\n\t}\n\tif (Feature.geometry.type === 'MultiPolygon') {\n\t\tFeature.geometry.type = 'Polygon';\n\t\tFeature.geometry.coordinates = Feature.geometry.coordinates[0];\n\t}\n\tvar simplifiedgeom = simplify(Feature, tolerance, highQuality);\n\tif (simplifiedgeom && simplifiedgeom.geometry) {\n\t\tFeature = simplifiedgeom;\n\t} else {\n\t\twarn('Cannot simplify  Feature', Feature);\n\t}\n\tif (output === 'geometry') {\n\t\treturn Feature.geometry;\n\t} else if (output === 'object') {\n\t\treturn Wicket$1().fromJson(Feature.geometry).toObject();\n\t} else {\n\t\treturn Feature;\n\t}\n}\n\nfunction bearing(start, end, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var final = options.final;\n    if (final === true) return calculateFinalBearing(start, end);\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return radiansToDegrees(Math.atan2(a, b));\n}\nfunction calculateFinalBearing(start, end) {\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n\nfunction destination(origin, distance, bearing, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearing_rad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, units);\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) + Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearing_rad));\n    var longitude2 = longitude1 + Math.atan2(Math.sin(bearing_rad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    return point([radiansToDegrees(longitude2), radiansToDegrees(latitude2)]);\n}\n\nfunction along$1(line, distance$$1, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var coords;\n    if (line.type === 'Feature') coords = line.geometry.coordinates;else if (line.type === 'LineString') coords = line.coordinates;else throw new Error('input must be a LineString Feature or Geometry');\n    if (!isNumber(distance$$1)) throw new Error('distance must be a number');\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance$$1 >= travelled && i === coords.length - 1) break;else if (travelled >= distance$$1) {\n            var overshot = distance$$1 - travelled;\n            if (!overshot) return point(coords[i]);else {\n                var direction = bearing(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination(coords[i], overshot, direction, options);\n                return interpolated;\n            }\n        } else {\n            travelled += distance(coords[i], coords[i + 1], options);\n        }\n    }\n    return point(coords[coords.length - 1]);\n}\n\nfunction along(object, distance, units) {\n\tvar Feature;\n\tif (object instanceof google.maps.Polyline) {\n\t\tvar geometry$$1 = Wicket$1().fromObject(object).toJson();\n\t\tFeature = {\n\t\t\ttype: \"Feature\",\n\t\t\tproperties: {},\n\t\t\tgeometry: geometry$$1\n\t\t};\n\t} else if (object.type && object.type === 'Feature' && object.geometry) {\n\t\tFeature = object;\n\t} else {\n\t\tvar arrayCoords = toCoords(object);\n\t\tFeature = lineString(arrayCoords);\n\t}\n\treturn along$1(Feature, distance, units);\n}\n\nvar extend = function (target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key];\n  }\n};\n\nfunction NumberUtil() {}\nextend(NumberUtil.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NumberUtil;\n\t}\n});\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\n\treturn Math.abs(x1 - x2) <= tolerance;\n};\n\nfunction IllegalArgumentException() {}\n\nfunction Double() {}\nDouble.isNaN = function (n) {\n  return Number.isNaN(n);\n};\nDouble.doubleToLongBits = function (n) {\n  return n;\n};\nDouble.longBitsToDouble = function (n) {\n  return n;\n};\nDouble.isInfinite = function (n) {\n  return !Number.isFinite(n);\n};\nDouble.MAX_VALUE = Number.MAX_VALUE;\n\nfunction Comparable() {}\n\nfunction Clonable() {}\n\nfunction Comparator() {}\n\nfunction Serializable() {}\n\nfunction RuntimeException(message) {\n  this.name = 'RuntimeException';\n  this.message = message;\n  this.stack = new Error().stack;\n  Error.call(this, message);\n}\nRuntimeException.prototype = Object.create(Error.prototype);\nRuntimeException.prototype.constructor = Error;\n\nvar inherits$1 = function (c, p) {\n  c.prototype = Object.create(p.prototype);\n  c.prototype.constructor = c;\n};\n\nfunction AssertionFailedException() {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.call(this);\n\t} else if (arguments.length === 1) {\n\t\tvar message = arguments[0];\n\t\tRuntimeException.call(this, message);\n\t}\n}\ninherits$1(AssertionFailedException, RuntimeException);\nextend(AssertionFailedException.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn AssertionFailedException;\n\t}\n});\n\nfunction Assert() {}\nextend(Assert.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Assert;\n\t}\n});\nAssert.shouldNeverReachHere = function () {\n\tif (arguments.length === 0) {\n\t\tAssert.shouldNeverReachHere(null);\n\t} else if (arguments.length === 1) {\n\t\tvar message = arguments[0];\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t}\n};\nAssert.isTrue = function () {\n\tif (arguments.length === 1) {\n\t\tvar assertion = arguments[0];\n\t\tAssert.isTrue(assertion, null);\n\t} else if (arguments.length === 2) {\n\t\tvar assertion = arguments[0],\n\t\t    message = arguments[1];\n\t\tif (!assertion) {\n\t\t\tif (message === null) {\n\t\t\t\tthrow new AssertionFailedException();\n\t\t\t} else {\n\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t}\n\t\t}\n\t}\n};\nAssert.equals = function () {\n\tif (arguments.length === 2) {\n\t\tvar expectedValue = arguments[0],\n\t\t    actualValue = arguments[1];\n\t\tAssert.equals(expectedValue, actualValue, null);\n\t} else if (arguments.length === 3) {\n\t\tvar expectedValue = arguments[0],\n\t\t    actualValue = arguments[1],\n\t\t    message = arguments[2];\n\t\tif (!actualValue.equals(expectedValue)) {\n\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n};\n\nfunction Coordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tvar c = arguments[0];\n\t\tCoordinate.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tvar x = arguments[0],\n\t\t    y = arguments[1];\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tvar x = arguments[0],\n\t\t    y = arguments[1],\n\t\t    z = arguments[2];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n}\nextend(Coordinate.prototype, {\n\tsetOrdinate: function setOrdinate(ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t},\n\tequals2D: function equals2D() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar c = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetOrdinate: function getOrdinate(ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t},\n\tequals3D: function equals3D(other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t},\n\tequals: function equals(other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t},\n\tequalInZ: function equalInZ(c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t},\n\tclone: function clone() {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t},\n\tcopy: function copy() {\n\t\treturn new Coordinate(this);\n\t},\n\ttoString: function toString() {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t},\n\tdistance3D: function distance3D(c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t},\n\tdistance: function distance(c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function hashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t},\n\tsetCoordinate: function setCoordinate(other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable, Clonable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Coordinate;\n\t}\n});\nCoordinate.hashCode = function () {\n\tif (arguments.length === 1) {\n\t\tvar x = arguments[0];\n\t\tvar f = Double.doubleToLongBits(x);\n\t\treturn Math.trunc(f ^ f >>> 32);\n\t}\n};\nfunction DimensionalComparator() {\n\tthis._dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tvar dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis._dimensionsToTest = dimensionsToTest;\n\t}\n}\nextend(DimensionalComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this._dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DimensionalComparator;\n\t}\n});\nDimensionalComparator.compare = function (a, b) {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\tif (Double.isNaN(a)) {\n\t\tif (Double.isNaN(b)) return 0;\n\t\treturn -1;\n\t}\n\tif (Double.isNaN(b)) return 1;\n\treturn 0;\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n\nfunction Iterator() {}\nIterator.prototype.hasNext = function () {};\nIterator.prototype.next = function () {};\nIterator.prototype.remove = function () {};\n\nfunction Collection() {}\nCollection.prototype.add = function () {};\nCollection.prototype.addAll = function () {};\nCollection.prototype.isEmpty = function () {};\nCollection.prototype.iterator = function () {};\nCollection.prototype.size = function () {};\nCollection.prototype.toArray = function () {};\nCollection.prototype.remove = function () {};\n\nfunction IndexOutOfBoundsException$1(message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException$1.prototype = new Error();\nIndexOutOfBoundsException$1.prototype.name = 'IndexOutOfBoundsException';\n\nfunction List() {}\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List;\nList.prototype.get = function () {};\nList.prototype.set = function () {};\nList.prototype.isEmpty = function () {};\n\nfunction NoSuchElementException(message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\nfunction OperationNotSupported(message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\nfunction ArrayList() {\n  this.array_ = [];\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nArrayList.prototype = Object.create(List.prototype);\nArrayList.prototype.constructor = ArrayList;\nArrayList.prototype.ensureCapacity = function () {};\nArrayList.prototype.interfaces_ = function () {\n  return [List, Collection];\n};\nArrayList.prototype.add = function (e) {\n  if (arguments.length === 1) {\n    this.array_.push(e);\n  } else {\n    this.array_.splice(arguments[0], arguments[1]);\n  }\n  return true;\n};\nArrayList.prototype.clear = function () {\n  this.array_ = [];\n};\nArrayList.prototype.addAll = function (c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\nArrayList.prototype.set = function (index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\nArrayList.prototype.iterator = function () {\n  return new Iterator_(this);\n};\nArrayList.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException$1();\n  }\n  return this.array_[index];\n};\nArrayList.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\nArrayList.prototype.size = function () {\n  return this.array_.length;\n};\nArrayList.prototype.toArray = function () {\n  var array = [];\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n  return array;\n};\nArrayList.prototype.remove = function (o) {\n  var found = false;\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n  return found;\n};\nvar Iterator_ = function Iterator_(arrayList) {\n  this.arrayList_ = arrayList;\n  this.position_ = 0;\n};\nIterator_.prototype.next = function () {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\nIterator_.prototype.hasNext = function () {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\nIterator_.prototype.set = function (element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\nIterator_.prototype.remove = function () {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n\nfunction CoordinateList() {\n\tArrayList.apply(this);\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tvar coord = arguments[0],\n\t\t    allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, allowRepeated);\n\t}\n}\ninherits$1(CoordinateList, ArrayList);\nextend(CoordinateList.prototype, {\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this.get(i);\n\t},\n\taddAll: function addAll() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar coll = arguments[0],\n\t\t\t    allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext();) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\n\t},\n\tclone: function clone() {\n\t\tvar clone = ArrayList.prototype.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).copy());\n\t\t}\n\t\treturn clone;\n\t},\n\ttoCoordinateArray: function toCoordinateArray() {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar coord = arguments[0];\n\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar coord = arguments[0],\n\t\t\t\t    allowRepeated = arguments[1];\n\t\t\t\tthis.add(coord, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar coord = arguments[0],\n\t\t\t\t    allowRepeated = arguments[1];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar obj = arguments[0],\n\t\t\t\t    allowRepeated = arguments[1];\n\t\t\t\tthis.add(obj, allowRepeated);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tvar coord = arguments[0],\n\t\t\t\t    allowRepeated = arguments[1],\n\t\t\t\t    direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate) {\n\t\t\t\tvar i = arguments[0],\n\t\t\t\t    coord = arguments[1],\n\t\t\t\t    allowRepeated = arguments[2];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < size) {\n\t\t\t\t\t\t\tvar next = this.get(i);\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, i, coord);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar coord = arguments[0],\n\t\t\t    allowRepeated = arguments[1],\n\t\t\t    start = arguments[2],\n\t\t\t    end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tcloseRing: function closeRing() {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateList;\n\t}\n});\nCoordinateList.coordArrayType = new Array(0).fill(null);\n\nfunction Envelope() {\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tvar env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar p1 = arguments[0],\n\t\t    p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tvar x1 = arguments[0],\n\t\t    x2 = arguments[1],\n\t\t    y1 = arguments[2],\n\t\t    y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n}\nextend(Envelope.prototype, {\n\tgetArea: function getArea() {\n\t\treturn this.getWidth() * this.getHeight();\n\t},\n\tequals: function equals(other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY();\n\t},\n\tintersection: function intersection(env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this._minx > env._minx ? this._minx : env._minx;\n\t\tvar intMinY = this._miny > env._miny ? this._miny : env._miny;\n\t\tvar intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n\t\tvar intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t},\n\tisNull: function isNull() {\n\t\treturn this._maxx < this._minx;\n\t},\n\tgetMaxX: function getMaxX() {\n\t\treturn this._maxx;\n\t},\n\tcovers: function covers() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy;\n\t\t}\n\t},\n\tintersects: function intersects() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny);\n\t\t}\n\t},\n\tgetMinY: function getMinY() {\n\t\treturn this._miny;\n\t},\n\tgetMinX: function getMinX() {\n\t\treturn this._minx;\n\t},\n\texpandToInclude: function expandToInclude() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis._minx = other.getMinX();\n\t\t\t\t\tthis._maxx = other.getMaxX();\n\t\t\t\t\tthis._miny = other.getMinY();\n\t\t\t\t\tthis._maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other._minx < this._minx) {\n\t\t\t\t\t\tthis._minx = other._minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxx > this._maxx) {\n\t\t\t\t\t\tthis._maxx = other._maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._miny < this._miny) {\n\t\t\t\t\t\tthis._miny = other._miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxy > this._maxy) {\n\t\t\t\t\t\tthis._maxy = other._maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis._minx = x;\n\t\t\t\tthis._maxx = x;\n\t\t\t\tthis._miny = y;\n\t\t\t\tthis._maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this._minx) {\n\t\t\t\t\tthis._minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this._maxx) {\n\t\t\t\t\tthis._maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this._miny) {\n\t\t\t\t\tthis._miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this._maxy) {\n\t\t\t\t\tthis._maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tminExtent: function minExtent() {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t},\n\tgetWidth: function getWidth() {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxx - this._minx;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this._minx < env._minx) return -1;\n\t\tif (this._minx > env._minx) return 1;\n\t\tif (this._miny < env._miny) return -1;\n\t\tif (this._miny > env._miny) return 1;\n\t\tif (this._maxx < env._maxx) return -1;\n\t\tif (this._maxx > env._maxx) return 1;\n\t\tif (this._maxy < env._maxy) return -1;\n\t\tif (this._maxy > env._maxy) return 1;\n\t\treturn 0;\n\t},\n\ttranslate: function translate(transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t},\n\ttoString: function toString() {\n\t\treturn \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n\t},\n\tsetToNull: function setToNull() {\n\t\tthis._minx = 0;\n\t\tthis._maxx = -1;\n\t\tthis._miny = 0;\n\t\tthis._maxy = -1;\n\t},\n\tgetHeight: function getHeight() {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxy - this._miny;\n\t},\n\tmaxExtent: function maxExtent() {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t},\n\texpandBy: function expandBy() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar deltaX = arguments[0],\n\t\t\t    deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis._minx -= deltaX;\n\t\t\tthis._maxx += deltaX;\n\t\t\tthis._miny -= deltaY;\n\t\t\tthis._maxy += deltaY;\n\t\t\tif (this._minx > this._maxx || this._miny > this._maxy) this.setToNull();\n\t\t}\n\t},\n\tcontains: function contains() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tvar other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar x = arguments[0],\n\t\t\t    y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t},\n\tcentre: function centre() {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t},\n\tinit: function init() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tvar env = arguments[0];\n\t\t\t\tthis._minx = env._minx;\n\t\t\t\tthis._maxx = env._maxx;\n\t\t\t\tthis._miny = env._miny;\n\t\t\t\tthis._maxy = env._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p1 = arguments[0],\n\t\t\t    p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar x1 = arguments[0],\n\t\t\t    x2 = arguments[1],\n\t\t\t    y1 = arguments[2],\n\t\t\t    y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis._minx = x1;\n\t\t\t\tthis._maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis._minx = x2;\n\t\t\t\tthis._maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis._miny = y1;\n\t\t\t\tthis._maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis._miny = y2;\n\t\t\t\tthis._maxy = y1;\n\t\t\t}\n\t\t}\n\t},\n\tgetMaxY: function getMaxY() {\n\t\treturn this._maxy;\n\t},\n\tdistance: function distance(env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this._maxx < env._minx) dx = env._minx - this._maxx;else if (this._minx > env._maxx) dx = this._minx - env._maxx;\n\t\tvar dy = 0.0;\n\t\tif (this._maxy < env._miny) dy = env._miny - this._maxy;else if (this._miny > env._maxy) dy = this._miny - env._maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function hashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this._minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxy);\n\t\treturn result;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Envelope;\n\t}\n});\nEnvelope.intersects = function () {\n\tif (arguments.length === 3) {\n\t\tvar p1 = arguments[0],\n\t\t    p2 = arguments[1],\n\t\t    q = arguments[2];\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (arguments.length === 4) {\n\t\tvar p1 = arguments[0],\n\t\t    p2 = arguments[1],\n\t\t    q1 = arguments[2],\n\t\t    q2 = arguments[3];\n\t\tvar minq = Math.min(q1.x, q2.x);\n\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\tvar minp = Math.min(p1.x, p2.x);\n\t\tvar maxp = Math.max(p1.x, p2.x);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\tminq = Math.min(q1.y, q2.y);\n\t\tmaxq = Math.max(q1.y, q2.y);\n\t\tminp = Math.min(p1.y, p2.y);\n\t\tmaxp = Math.max(p1.y, p2.y);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\treturn true;\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n\nfunction Exception() {}\n\nfunction NotRepresentableException() {\n\tException.call(this, \"Projective point not representable on the Cartesian plane.\");\n}\ninherits$1(NotRepresentableException, Exception);\nextend(NotRepresentableException.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NotRepresentableException;\n\t}\n});\n\nfunction Location() {}\nextend(Location.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Location;\n\t}\n});\nLocation.toLocationSymbol = function (locationValue) {\n\tswitch (locationValue) {\n\t\tcase Location.EXTERIOR:\n\t\t\treturn 'e';\n\t\tcase Location.BOUNDARY:\n\t\t\treturn 'b';\n\t\tcase Location.INTERIOR:\n\t\t\treturn 'i';\n\t\tcase Location.NONE:\n\t\t\treturn '-';\n\t}\n\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n};\nLocation.INTERIOR = 0;\nLocation.BOUNDARY = 1;\nLocation.EXTERIOR = 2;\nLocation.NONE = -1;\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1;\n};\n\nfunction MathUtil() {}\nextend(MathUtil.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MathUtil;\n\t}\n});\nMathUtil.log10 = function (x) {\n\tvar ln = Math.log(x);\n\tif (Double.isInfinite(ln)) return ln;\n\tif (Double.isNaN(ln)) return ln;\n\treturn ln / MathUtil.LOG_10;\n};\nMathUtil.min = function (v1, v2, v3, v4) {\n\tvar min = v1;\n\tif (v2 < min) min = v2;\n\tif (v3 < min) min = v3;\n\tif (v4 < min) min = v4;\n\treturn min;\n};\nMathUtil.clamp = function () {\n\tif (typeof arguments[2] === \"number\" && typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tvar x = arguments[0],\n\t\t    min = arguments[1],\n\t\t    max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t} else if (Number.isInteger(arguments[2]) && Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\tvar x = arguments[0],\n\t\t    min = arguments[1],\n\t\t    max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t}\n};\nMathUtil.wrap = function (index, max) {\n\tif (index < 0) {\n\t\treturn max - -index % max;\n\t}\n\treturn index % max;\n};\nMathUtil.max = function () {\n\tif (arguments.length === 3) {\n\t\tvar v1 = arguments[0],\n\t\t    v2 = arguments[1],\n\t\t    v3 = arguments[2];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\treturn max;\n\t} else if (arguments.length === 4) {\n\t\tvar v1 = arguments[0],\n\t\t    v2 = arguments[1],\n\t\t    v3 = arguments[2],\n\t\t    v4 = arguments[3];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\tif (v4 > max) max = v4;\n\t\treturn max;\n\t}\n};\nMathUtil.average = function (x1, x2) {\n\treturn (x1 + x2) / 2.0;\n};\nMathUtil.LOG_10 = Math.log(10);\n\nfunction StringBuffer(str) {\n  this.str = str;\n}\nStringBuffer.prototype.append = function (e) {\n  this.str += e;\n};\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\nStringBuffer.prototype.toString = function (e) {\n  return this.str;\n};\n\nfunction Integer(value) {\n  this.value = value;\n}\nInteger.prototype.intValue = function () {\n  return this.value;\n};\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1;\n  if (this.value > o) return 1;\n  return 0;\n};\nInteger.isNaN = function (n) {\n  return Number.isNaN(n);\n};\n\nfunction Character() {}\nCharacter.isWhitespace = function (c) {\n  return c <= 32 && c >= 0 || c == 127;\n};\nCharacter.toUpperCase = function (c) {\n  return c.toUpperCase();\n};\n\nfunction DD() {\n\tthis._hi = 0.0;\n\tthis._lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tvar x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tvar dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tvar str = arguments[0];\n\t\t\tDD.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar hi = arguments[0],\n\t\t    lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n}\nextend(DD.prototype, {\n\tle: function le(y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo;\n\t},\n\textractSignificantDigits: function extractSignificantDigits(insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y._hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y._hi);\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y._hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t},\n\tsqr: function sqr() {\n\t\treturn this.multiply(this);\n\t},\n\tdoubleValue: function doubleValue() {\n\t\treturn this._hi + this._lo;\n\t},\n\tsubtract: function subtract() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar y = arguments[0];\n\t\t\treturn this.add(-y);\n\t\t}\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar y = arguments[0];\n\t\t\treturn this._hi === y._hi && this._lo === y._lo;\n\t\t}\n\t},\n\tisZero: function isZero() {\n\t\treturn this._hi === 0.0 && this._lo === 0.0;\n\t},\n\tselfSubtract: function selfSubtract() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y._hi, -y._lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y, 0.0);\n\t\t}\n\t},\n\tgetSpecialNumberString: function getSpecialNumberString() {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t},\n\tmin: function min(x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tselfDivide: function selfDivide() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfDivide(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfDivide(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar yhi = arguments[0],\n\t\t\t    ylo = arguments[1];\n\t\t\tvar hc = null,\n\t\t\t    tc = null,\n\t\t\t    hy = null,\n\t\t\t    ty = null,\n\t\t\t    C = null,\n\t\t\t    c = null,\n\t\t\t    U = null,\n\t\t\t    u = null;\n\t\t\tC = this._hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis._hi = u;\n\t\t\tthis._lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t},\n\tdump: function dump() {\n\t\treturn \"DD<\" + this._hi + \", \" + this._lo + \">\";\n\t},\n\tdivide: function divide() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\tvar hc = null,\n\t\t\t    tc = null,\n\t\t\t    hy = null,\n\t\t\t    ty = null,\n\t\t\t    C = null,\n\t\t\t    c = null,\n\t\t\t    U = null,\n\t\t\t    u = null;\n\t\t\tC = this._hi / y._hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y._hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y._hi;\n\t\t\tU = C * y._hi;\n\t\t\thy = u - hy;\n\t\t\tty = y._hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\n\t\t}\n\t},\n\tge: function ge(y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo;\n\t},\n\tpow: function pow(exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t},\n\tceil: function ceil() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.ceil(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tif (this._hi < other._hi) return -1;\n\t\tif (this._hi > other._hi) return 1;\n\t\tif (this._lo < other._lo) return -1;\n\t\tif (this._lo > other._lo) return 1;\n\t\treturn 0;\n\t},\n\trint: function rint() {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t},\n\tsetValue: function setValue() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t}\n\t},\n\tmax: function max(x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tsqrt: function sqrt() {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this._hi);\n\t\tvar ax = this._hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq._hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t},\n\tselfAdd: function selfAdd() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfAdd(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\tvar H = null,\n\t\t\t\t    h = null,\n\t\t\t\t    S = null,\n\t\t\t\t    s = null,\n\t\t\t\t    e = null,\n\t\t\t\t    f = null;\n\t\t\t\tS = this._hi + y;\n\t\t\t\te = S - this._hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = y - e + (this._hi - s);\n\t\t\t\tf = s + this._lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis._hi = H + h;\n\t\t\t\tthis._lo = h + (H - this._hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar yhi = arguments[0],\n\t\t\t    ylo = arguments[1];\n\t\t\tvar H = null,\n\t\t\t    h = null,\n\t\t\t    T = null,\n\t\t\t    t = null,\n\t\t\t    S = null,\n\t\t\t    s = null,\n\t\t\t    e = null,\n\t\t\t    f = null;\n\t\t\tS = this._hi + yhi;\n\t\t\tT = this._lo + ylo;\n\t\t\te = S - this._hi;\n\t\t\tf = T - this._lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this._hi - s);\n\t\t\tt = ylo - f + (this._lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfMultiply: function selfMultiply() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar yhi = arguments[0],\n\t\t\t    ylo = arguments[1];\n\t\t\tvar hx = null,\n\t\t\t    tx = null,\n\t\t\t    hy = null,\n\t\t\t    ty = null,\n\t\t\t    C = null,\n\t\t\t    c = null;\n\t\t\tC = DD.SPLIT * this._hi;\n\t\t\thx = C - this._hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this._hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this._hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfSqr: function selfSqr() {\n\t\treturn this.selfMultiply(this);\n\t},\n\tfloor: function floor() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.floor(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tnegate: function negate() {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this._hi, -this._lo);\n\t},\n\tclone: function clone() {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tmultiply: function multiply() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\n\t\t}\n\t},\n\tisNaN: function isNaN() {\n\t\treturn Double.isNaN(this._hi);\n\t},\n\tintValue: function intValue() {\n\t\treturn Math.trunc(this._hi);\n\t},\n\ttoString: function toString() {\n\t\tvar mag = DD.magnitude(this._hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t},\n\ttoStandardNotation: function toStandardNotation() {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t},\n\treciprocal: function reciprocal() {\n\t\tvar hc = null,\n\t\t    tc = null,\n\t\t    hy = null,\n\t\t    ty = null,\n\t\t    C = null,\n\t\t    c = null,\n\t\t    U = null,\n\t\t    u = null;\n\t\tC = 1.0 / this._hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this._hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this._hi;\n\t\tU = C * this._hi;\n\t\thy = u - hy;\n\t\tty = this._hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this._lo) / this._hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t},\n\ttoSciNotation: function toSciNotation() {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t},\n\tabs: function abs() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t},\n\tisPositive: function isPositive() {\n\t\treturn this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0;\n\t},\n\tlt: function lt(y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo < y._lo;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tvar y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t}\n\t},\n\tinit: function init() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tvar x = arguments[0];\n\t\t\t\tthis._hi = x;\n\t\t\t\tthis._lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tvar dd = arguments[0];\n\t\t\t\tthis._hi = dd._hi;\n\t\t\t\tthis._lo = dd._lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar hi = arguments[0],\n\t\t\t    lo = arguments[1];\n\t\t\tthis._hi = hi;\n\t\t\tthis._lo = lo;\n\t\t}\n\t},\n\tgt: function gt(y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo > y._lo;\n\t},\n\tisNegative: function isNegative() {\n\t\treturn this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0;\n\t},\n\ttrunc: function trunc() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor();else return this.ceil();\n\t},\n\tsignum: function signum() {\n\t\tif (this._hi > 0) return 1;\n\t\tif (this._hi < 0) return -1;\n\t\tif (this._lo > 0) return 1;\n\t\tif (this._lo < 0) return -1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable, Comparable, Clonable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DD;\n\t}\n});\nDD.sqr = function (x) {\n\treturn DD.valueOf(x).selfMultiply(x);\n};\nDD.valueOf = function () {\n\tif (typeof arguments[0] === \"string\") {\n\t\tvar str = arguments[0];\n\t\treturn DD.parse(str);\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tvar x = arguments[0];\n\t\treturn new DD(x);\n\t}\n};\nDD.sqrt = function (x) {\n\treturn DD.valueOf(x).sqrt();\n};\nDD.parse = function (str) {\n\tvar i = 0;\n\tvar strlen = str.length;\n\twhile (Character.isWhitespace(str.charAt(i))) {\n\t\ti++;\n\t}var isNegative = false;\n\tif (i < strlen) {\n\t\tvar signCh = str.charAt(i);\n\t\tif (signCh === '-' || signCh === '+') {\n\t\t\ti++;\n\t\t\tif (signCh === '-') isNegative = true;\n\t\t}\n\t}\n\tvar val = new DD();\n\tvar numDigits = 0;\n\tvar numBeforeDec = 0;\n\tvar exp = 0;\n\twhile (true) {\n\t\tif (i >= strlen) break;\n\t\tvar ch = str.charAt(i);\n\t\ti++;\n\t\tif (Character.isDigit(ch)) {\n\t\t\tvar d = ch - '0';\n\t\t\tval.selfMultiply(DD.TEN);\n\t\t\tval.selfAdd(d);\n\t\t\tnumDigits++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === '.') {\n\t\t\tnumBeforeDec = numDigits;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tvar expStr = str.substring(i);\n\t\t\ttry {\n\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t\tbreak;\n\t\t}\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t}\n\tvar val2 = val;\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\tif (numDecPlaces === 0) {\n\t\tval2 = val;\n\t} else if (numDecPlaces > 0) {\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\tval2 = val.divide(scale);\n\t} else if (numDecPlaces < 0) {\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\tval2 = val.multiply(scale);\n\t}\n\tif (isNegative) {\n\t\treturn val2.negate();\n\t}\n\treturn val2;\n};\nDD.createNaN = function () {\n\treturn new DD(Double.NaN, Double.NaN);\n};\nDD.copy = function (dd) {\n\treturn new DD(dd);\n};\nDD.magnitude = function (x) {\n\tvar xAbs = Math.abs(x);\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\tvar xMag = Math.trunc(Math.floor(xLog10));\n\tvar xApprox = Math.pow(10, xMag);\n\tif (xApprox * 10 <= xAbs) xMag += 1;\n\treturn xMag;\n};\nDD.stringOfChar = function (ch, len) {\n\tvar buf = new StringBuffer();\n\tfor (var i = 0; i < len; i++) {\n\t\tbuf.append(ch);\n\t}\n\treturn buf.toString();\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n\nfunction CGAlgorithmsDD() {}\nextend(CGAlgorithmsDD.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CGAlgorithmsDD;\n\t}\n});\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\tif (index <= 1) return index;\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n};\nCGAlgorithmsDD.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\treturn det.signum();\n};\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\tvar denom = denom1.subtract(denom2);\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numx = numx1.subtract(numx2);\n\tvar fracP = numx.selfDivide(denom).doubleValue();\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numy = numy1.subtract(numy2);\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\treturn new Coordinate(x, y);\n};\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\n\tvar detsum = null;\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\tvar det = detleft - detright;\n\tif (detleft > 0.0) {\n\t\tif (detright <= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = detleft + detright;\n\t\t}\n\t} else if (detleft < 0.0) {\n\t\tif (detright >= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = -detleft - detright;\n\t\t}\n\t} else {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\tif (det >= errbound || -det >= errbound) {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\treturn 2;\n};\nCGAlgorithmsDD.signum = function (x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n\nfunction CoordinateSequence() {}\nextend(CoordinateSequence.prototype, {\n\tsetOrdinate: function setOrdinate(index, ordinateIndex, value) {},\n\tsize: function size() {},\n\tgetOrdinate: function getOrdinate(index, ordinateIndex) {},\n\tgetCoordinate: function getCoordinate() {\n\t\t\n\t},\n\tgetCoordinateCopy: function getCoordinateCopy(i) {},\n\tgetDimension: function getDimension() {},\n\tgetX: function getX(index) {},\n\tclone: function clone() {},\n\texpandEnvelope: function expandEnvelope(env) {},\n\tcopy: function copy() {},\n\tgetY: function getY(index) {},\n\ttoCoordinateArray: function toCoordinateArray() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Clonable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequence;\n\t}\n});\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n\nfunction System() {}\nSystem.arraycopy = function (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\nSystem.getProperty = function (name) {\n  return {\n    'line.separator': '\\n'\n  }[name];\n};\n\nfunction HCoordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.w = null;\n\tif (arguments.length === 0) {\n\t\tthis.x = 0.0;\n\t\tthis.y = 0.0;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 1) {\n\t\tvar p = arguments[0];\n\t\tthis.x = p.x;\n\t\tthis.y = p.y;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tvar _x = arguments[0],\n\t\t\t    _y = arguments[1];\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.w = 1.0;\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n\t\t\tvar p1 = arguments[0],\n\t\t\t    p2 = arguments[1];\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tvar p1 = arguments[0],\n\t\t\t    p2 = arguments[1];\n\t\t\tthis.x = p1.y - p2.y;\n\t\t\tthis.y = p2.x - p1.x;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1],\n\t\t    _w = arguments[2];\n\t\tthis.x = _x;\n\t\tthis.y = _y;\n\t\tthis.w = _w;\n\t} else if (arguments.length === 4) {\n\t\tvar p1 = arguments[0],\n\t\t    p2 = arguments[1],\n\t\t    q1 = arguments[2],\n\t\t    q2 = arguments[3];\n\t\tvar px = p1.y - p2.y;\n\t\tvar py = p2.x - p1.x;\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tthis.x = py * qw - qy * pw;\n\t\tthis.y = qx * pw - px * qw;\n\t\tthis.w = px * qy - qx * py;\n\t}\n}\nextend(HCoordinate.prototype, {\n\tgetY: function getY() {\n\t\tvar a = this.y / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetX: function getX() {\n\t\tvar a = this.x / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tvar p = new Coordinate();\n\t\tp.x = this.getX();\n\t\tp.y = this.getY();\n\t\treturn p;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HCoordinate;\n\t}\n});\nHCoordinate.intersection = function (p1, p2, q1, q2) {\n\tvar px = p1.y - p2.y;\n\tvar py = p2.x - p1.x;\n\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\tvar qx = q1.y - q2.y;\n\tvar qy = q2.x - q1.x;\n\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\tvar x = py * qw - qy * pw;\n\tvar y = qx * pw - px * qw;\n\tvar w = px * qy - qx * py;\n\tvar xInt = x / w;\n\tvar yInt = y / w;\n\tif (Double.isNaN(xInt) || Double.isInfinite(xInt) || Double.isNaN(yInt) || Double.isInfinite(yInt)) {\n\t\tthrow new NotRepresentableException();\n\t}\n\treturn new Coordinate(xInt, yInt);\n};\n\nfunction CoordinateSequenceFactory() {}\nextend(CoordinateSequenceFactory.prototype, {\n\tcreate: function create() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\t\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\t\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\t\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequenceFactory;\n\t}\n});\n\nfunction GeometryComponentFilter() {}\nextend(GeometryComponentFilter.prototype, {\n\tfilter: function filter(geom) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryComponentFilter;\n\t}\n});\n\nfunction Geometry() {\n\tthis._envelope = null;\n\tthis._factory = null;\n\tthis._SRID = null;\n\tthis._userData = null;\n\tvar factory = arguments[0];\n\tthis._factory = factory;\n\tthis._SRID = factory.getSRID();\n}\nextend(Geometry.prototype, {\n\tisGeometryCollection: function isGeometryCollection() {\n\t\treturn this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION;\n\t},\n\tgetFactory: function getFactory() {\n\t\treturn this._factory;\n\t},\n\tgetGeometryN: function getGeometryN(n) {\n\t\treturn this;\n\t},\n\tgetArea: function getArea() {\n\t\treturn 0.0;\n\t},\n\tisRectangle: function isRectangle() {\n\t\treturn false;\n\t},\n\tequals: function equals() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar g = arguments[0];\n\t\t\tif (g === null) return false;\n\t\t\treturn this.equalsTopo(g);\n\t\t} else if (arguments[0] instanceof Object) {\n\t\t\tvar o = arguments[0];\n\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\tvar g = o;\n\t\t\treturn this.equalsExact(g);\n\t\t}\n\t},\n\tequalsExact: function equalsExact(other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t},\n\tgeometryChanged: function geometryChanged() {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t},\n\tgeometryChangedAction: function geometryChangedAction() {\n\t\tthis._envelope = null;\n\t},\n\tequalsNorm: function equalsNorm(g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t},\n\tgetLength: function getLength() {\n\t\treturn 0.0;\n\t},\n\tgetNumGeometries: function getNumGeometries() {\n\t\treturn 1;\n\t},\n\tcompareTo: function compareTo() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar other = o;\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o, comp);\n\t\t}\n\t},\n\tgetUserData: function getUserData() {\n\t\treturn this._userData;\n\t},\n\tgetSRID: function getSRID() {\n\t\treturn this._SRID;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t},\n\tcheckNotGeometryCollection: function checkNotGeometryCollection(g) {\n\t\tif (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t},\n\tequal: function equal(a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t},\n\tnorm: function norm() {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t},\n\tgetPrecisionModel: function getPrecisionModel() {\n\t\treturn this._factory.getPrecisionModel();\n\t},\n\tgetEnvelopeInternal: function getEnvelopeInternal() {\n\t\tif (this._envelope === null) {\n\t\t\tthis._envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this._envelope);\n\t},\n\tsetSRID: function setSRID(SRID) {\n\t\tthis._SRID = SRID;\n\t},\n\tsetUserData: function setUserData(userData) {\n\t\tthis._userData = userData;\n\t},\n\tcompare: function compare(a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t},\n\thashCode: function hashCode() {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t},\n\tisGeometryCollectionOrDerived: function isGeometryCollectionOrDerived() {\n\t\tif (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Clonable, Comparable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Geometry;\n\t}\n});\nGeometry.hasNonEmptyElements = function (geometries) {\n\tfor (var i = 0; i < geometries.length; i++) {\n\t\tif (!geometries[i].isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.hasNullElements = function (array) {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i] === null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.SORTINDEX_POINT = 0;\nGeometry.SORTINDEX_MULTIPOINT = 1;\nGeometry.SORTINDEX_LINESTRING = 2;\nGeometry.SORTINDEX_LINEARRING = 3;\nGeometry.SORTINDEX_MULTILINESTRING = 4;\nGeometry.SORTINDEX_POLYGON = 5;\nGeometry.SORTINDEX_MULTIPOLYGON = 6;\nGeometry.SORTINDEX_GEOMETRYCOLLECTION = 7;\nGeometry.geometryChangedFilter = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter: function filter(geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n\nfunction CoordinateFilter() {}\nextend(CoordinateFilter.prototype, {\n\tfilter: function filter(coord) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateFilter;\n\t}\n});\n\nfunction BoundaryNodeRule() {}\nextend(BoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BoundaryNodeRule;\n\t}\n});\nfunction Mod2BoundaryNodeRule() {}\nextend(Mod2BoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n});\nfunction EndPointBoundaryNodeRule() {}\nextend(EndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n});\nfunction MultiValentEndPointBoundaryNodeRule() {}\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n});\nfunction MonoValentEndPointBoundaryNodeRule() {}\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function isInBoundary(boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n});\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n\nfunction CoordinateArrays() {}\nextend(CoordinateArrays.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateArrays;\n\t}\n});\nCoordinateArrays.isRing = function (pts) {\n\tif (pts.length < 4) return false;\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\treturn true;\n};\nCoordinateArrays.ptNotInList = function (testPts, pts) {\n\tfor (var i = 0; i < testPts.length; i++) {\n\t\tvar testPt = testPts[i];\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t}\n\treturn null;\n};\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\tif (i < 0) return null;\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function () {\n\tif (arguments.length === 2) {\n\t\tvar coord1 = arguments[0],\n\t\t    coord2 = arguments[1];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t}\n\t\treturn true;\n\t} else if (arguments.length === 3) {\n\t\tvar coord1 = arguments[0],\n\t\t    coord2 = arguments[1],\n\t\t    coordinateComparator = arguments[2];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\nCoordinateArrays.intersection = function (coordinates, env) {\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t}\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.hasRepeatedPoints = function (coord) {\n\tfor (var i = 1; i < coord.length; i++) {\n\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCoordinateArrays.removeRepeatedPoints = function (coord) {\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\tvar coordList = new CoordinateList(coord, false);\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.reverse = function (coord) {\n\tvar last = coord.length - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tvar tmp = coord[i];\n\t\tcoord[i] = coord[last - i];\n\t\tcoord[last - i] = tmp;\n\t}\n};\nCoordinateArrays.removeNull = function (coord) {\n\tvar nonNull = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) nonNull++;\n\t}\n\tvar newCoord = new Array(nonNull).fill(null);\n\tif (nonNull === 0) return newCoord;\n\tvar j = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t}\n\treturn newCoord;\n};\nCoordinateArrays.copyDeep = function () {\n\tif (arguments.length === 1) {\n\t\tvar coordinates = arguments[0];\n\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t}\n\t\treturn copy;\n\t} else if (arguments.length === 5) {\n\t\tvar src = arguments[0],\n\t\t    srcStart = arguments[1],\n\t\t    dest = arguments[2],\n\t\t    destStart = arguments[3],\n\t\t    length = arguments[4];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t}\n\t}\n};\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\n\tfor (var i = 0; i < pts1.length; i++) {\n\t\tvar p1 = pts1[i];\n\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\tif (p1.compareTo(p2) !== 0) return false;\n\t}\n\treturn true;\n};\nCoordinateArrays.envelope = function (coordinates) {\n\tvar env = new Envelope();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tenv.expandToInclude(coordinates[i]);\n\t}\n\treturn env;\n};\nCoordinateArrays.toCoordinateArray = function (coordList) {\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\n\treturn c.length >= n ? c : [];\n};\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nCoordinateArrays.increasingDirection = function (pts) {\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\tvar j = pts.length - 1 - i;\n\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\tif (comp !== 0) return comp;\n\t}\n\treturn 1;\n};\nCoordinateArrays.compare = function (pts1, pts2) {\n\tvar i = 0;\n\twhile (i < pts1.length && i < pts2.length) {\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\tif (compare !== 0) return compare;\n\t\ti++;\n\t}\n\tif (i < pts2.length) return -1;\n\tif (i < pts1.length) return 1;\n\treturn 0;\n};\nCoordinateArrays.minCoordinate = function (coordinates) {\n\tvar minCoord = null;\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\tminCoord = coordinates[i];\n\t\t}\n\t}\n\treturn minCoord;\n};\nCoordinateArrays.extract = function (pts, start, end) {\n\tstart = MathUtil.clamp(start, 0, pts.length);\n\tend = MathUtil.clamp(end, -1, pts.length);\n\tvar npts = end - start + 1;\n\tif (end < 0) npts = 0;\n\tif (start >= pts.length) npts = 0;\n\tif (end < start) npts = 0;\n\tvar extractPts = new Array(npts).fill(null);\n\tif (npts === 0) return extractPts;\n\tvar iPts = 0;\n\tfor (var i = start; i <= end; i++) {\n\t\textractPts[iPts++] = pts[i];\n\t}\n\treturn extractPts;\n};\nfunction ForwardComparator() {}\nextend(ForwardComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ForwardComparator;\n\t}\n});\nfunction BidirectionalComparator() {}\nextend(BidirectionalComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t},\n\tOLDcompare: function OLDcompare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BidirectionalComparator;\n\t}\n});\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n\nfunction Map$3() {}\nMap$3.prototype.get = function () {};\nMap$3.prototype.put = function () {};\nMap$3.prototype.size = function () {};\nMap$3.prototype.values = function () {};\nMap$3.prototype.entrySet = function () {};\n\nfunction SortedMap() {}\nSortedMap.prototype = new Map$3();\n\nfunction Set$2() {}\nSet$2.prototype = new Collection();\nSet$2.prototype.contains = function () {};\n\nfunction HashSet() {\n  this.array_ = [];\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nHashSet.prototype = new Set$2();\nHashSet.prototype.contains = function (o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\nHashSet.prototype.add = function (o) {\n  if (this.contains(o)) {\n    return false;\n  }\n  this.array_.push(o);\n  return true;\n};\nHashSet.prototype.addAll = function (c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\nHashSet.prototype.remove = function (o) {\n  throw new javascript.util.OperationNotSupported();\n};\nHashSet.prototype.size = function () {\n  return this.array_.length;\n};\nHashSet.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\nHashSet.prototype.toArray = function () {\n  var array = [];\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n  return array;\n};\nHashSet.prototype.iterator = function () {\n  return new Iterator_$1(this);\n};\nvar Iterator_$1 = function Iterator_(hashSet) {\n  this.hashSet_ = hashSet;\n  this.position_ = 0;\n};\nIterator_$1.prototype.next = function () {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\nIterator_$1.prototype.hasNext = function () {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\nIterator_$1.prototype.remove = function () {\n  throw new OperationNotSupported();\n};\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf(p) {\n  return p == null ? BLACK : p.color;\n}\nfunction parentOf(p) {\n  return p == null ? null : p.parent;\n}\nfunction setColor(p, c) {\n  if (p !== null) p.color = c;\n}\nfunction leftOf(p) {\n  return p == null ? null : p.left;\n}\nfunction rightOf(p) {\n  return p == null ? null : p.right;\n}\nfunction TreeMap() {\n  this.root_ = null;\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue() {\n        return this.value;\n      },\n      getKey: function getKey() {\n        return this.key;\n      }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_,\n      parent,\n      cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue() {\n      return this.value;\n    },\n    getKey: function getKey() {\n      return this.key;\n    }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null) this.root_ = r;else if (p.parent.left == p) p.parent.left = r;else p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null) this.root_ = l;else if (p.parent.right == p) p.parent.right = l;else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\nTreeMap.successor = function (t) {\n  if (t === null) return null;else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\nTreeMap.prototype.size = function () {\n  return this.size_;\n};\n\nfunction Lineal() {}\nextend(Lineal.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Lineal;\n\t}\n});\n\nfunction SortedSet() {}\nSortedSet.prototype = new Set$2();\n\nfunction TreeSet() {\n  this.array_ = [];\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\nTreeSet.prototype.contains = function (o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\nTreeSet.prototype.add = function (o) {\n  if (this.contains(o)) {\n    return false;\n  }\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n  this.array_.push(o);\n  return true;\n};\nTreeSet.prototype.addAll = function (c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported();\n};\nTreeSet.prototype.size = function () {\n  return this.array_.length;\n};\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\nTreeSet.prototype.toArray = function () {\n  var array = [];\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n  return array;\n};\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this);\n};\nvar Iterator_$2 = function Iterator_(treeSet) {\n  this.treeSet_ = treeSet;\n  this.position_ = 0;\n};\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported();\n};\n\nfunction Arrays() {}\nArrays.sort = function () {\n  var a = arguments[0],\n      i,\n      t,\n      comparator,\n      compare;\n  if (arguments.length === 1) {\n    compare = function compare(a, b) {\n      return a.compareTo(b);\n    };\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function compare(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function compare(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\nArrays.asList = function (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n\nfunction Dimension() {}\nextend(Dimension.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Dimension;\n\t}\n});\nDimension.toDimensionSymbol = function (dimensionValue) {\n\tswitch (dimensionValue) {\n\t\tcase Dimension.FALSE:\n\t\t\treturn Dimension.SYM_FALSE;\n\t\tcase Dimension.TRUE:\n\t\t\treturn Dimension.SYM_TRUE;\n\t\tcase Dimension.DONTCARE:\n\t\t\treturn Dimension.SYM_DONTCARE;\n\t\tcase Dimension.P:\n\t\t\treturn Dimension.SYM_P;\n\t\tcase Dimension.L:\n\t\t\treturn Dimension.SYM_L;\n\t\tcase Dimension.A:\n\t\t\treturn Dimension.SYM_A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n};\nDimension.toDimensionValue = function (dimensionSymbol) {\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\tcase Dimension.SYM_FALSE:\n\t\t\treturn Dimension.FALSE;\n\t\tcase Dimension.SYM_TRUE:\n\t\t\treturn Dimension.TRUE;\n\t\tcase Dimension.SYM_DONTCARE:\n\t\t\treturn Dimension.DONTCARE;\n\t\tcase Dimension.SYM_P:\n\t\t\treturn Dimension.P;\n\t\tcase Dimension.SYM_L:\n\t\t\treturn Dimension.L;\n\t\tcase Dimension.SYM_A:\n\t\t\treturn Dimension.A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n\nfunction GeometryFilter() {}\nextend(GeometryFilter.prototype, {\n\tfilter: function filter(geom) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryFilter;\n\t}\n});\n\nfunction CoordinateSequenceFilter() {}\nextend(CoordinateSequenceFilter.prototype, {\n\tfilter: function filter(seq, i) {},\n\tisDone: function isDone() {},\n\tisGeometryChanged: function isGeometryChanged() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequenceFilter;\n\t}\n});\n\nfunction GeometryCollection() {\n\tthis._geometries = null;\n\tvar geometries = arguments[0],\n\t    factory = arguments[1];\n\tGeometry.call(this, factory);\n\tif (geometries === null) {\n\t\tgeometries = [];\n\t}\n\tif (Geometry.hasNullElements(geometries)) {\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t}\n\tthis._geometries = geometries;\n}\ninherits$1(GeometryCollection, Geometry);\nextend(GeometryCollection.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this._geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t},\n\tgetGeometryN: function getGeometryN(n) {\n\t\treturn this._geometries[n];\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_GEOMETRYCOLLECTION;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar childCoordinates = this._geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function getArea() {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tarea += this._geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this._geometries.length !== otherCollection._geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tif (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tthis._geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this._geometries);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._geometries[0].getCoordinate();\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetDimension: function getDimension() {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetLength: function getLength() {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tsum += this._geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tnumPoints += this._geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\tgetNumGeometries: function getNumGeometries() {\n\t\treturn this._geometries.length;\n\t},\n\treverse: function reverse() {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this._geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o._geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar gc = o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tif (this._geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t\tif (filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t},\n\tclone: function clone() {\n\t\tvar gc = Geometry.prototype.clone.call(this);\n\t\tgc._geometries = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tgc._geometries[i] = this._geometries[i].clone();\n\t\t}\n\t\treturn gc;\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"GeometryCollection\";\n\t},\n\tcopy: function copy() {\n\t\tvar geometries = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this._factory);\n\t},\n\tisEmpty: function isEmpty() {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCollection;\n\t}\n});\nGeometryCollection.serialVersionUID = -5694727726395021467;\n\nfunction MultiLineString() {\n\tvar lineStrings = arguments[0],\n\t    factory = arguments[1];\n\tGeometryCollection.call(this, lineStrings, factory);\n}\ninherits$1(MultiLineString, GeometryCollection);\nextend(MultiLineString.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_MULTILINESTRING;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function isClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 1;\n\t},\n\treverse: function reverse() {\n\t\tvar nLines = this._geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"MultiLineString\";\n\t},\n\tcopy: function copy() {\n\t\tvar lineStrings = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this._factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiLineString;\n\t}\n});\nMultiLineString.serialVersionUID = 8166665132445433741;\n\nfunction BoundaryOp() {\n\tthis._geom = null;\n\tthis._geomFact = null;\n\tthis._bnRule = null;\n\tthis._endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    bnRule = arguments[1];\n\t\tthis._geom = geom;\n\t\tthis._geomFact = geom.getFactory();\n\t\tthis._bnRule = bnRule;\n\t}\n}\nextend(BoundaryOp.prototype, {\n\tboundaryMultiLineString: function boundaryMultiLineString(mLine) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this._geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this._geomFact.createMultiPointFromCoords(bdyPts);\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tif (this._geom instanceof LineString) return this.boundaryLineString(this._geom);\n\t\tif (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom);\n\t\treturn this._geom.getBoundary();\n\t},\n\tboundaryLineString: function boundaryLineString(line) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this._geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t},\n\tgetEmptyMultiPoint: function getEmptyMultiPoint() {\n\t\treturn this._geomFact.createMultiPoint();\n\t},\n\tcomputeBoundaryCoordinates: function computeBoundaryCoordinates(mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis._endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this._bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t},\n\taddEndpoint: function addEndpoint(pt) {\n\t\tvar counter = this._endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis._endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BoundaryOp;\n\t}\n});\nBoundaryOp.getBoundary = function () {\n\tif (arguments.length === 1) {\n\t\tvar g = arguments[0];\n\t\tvar bop = new BoundaryOp(g);\n\t\treturn bop.getBoundary();\n\t} else if (arguments.length === 2) {\n\t\tvar g = arguments[0],\n\t\t    bnRule = arguments[1];\n\t\tvar bop = new BoundaryOp(g, bnRule);\n\t\treturn bop.getBoundary();\n\t}\n};\nfunction Counter() {\n\tthis.count = null;\n}\nextend(Counter.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Counter;\n\t}\n});\n\nfunction PrintStream() {}\n\nfunction StringReader() {}\n\nfunction DecimalFormat() {}\n\nfunction ByteArrayOutputStream() {}\n\nfunction IOException() {}\n\nfunction LineNumberReader() {}\n\nfunction StringUtil() {}\nextend(StringUtil.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn StringUtil;\n\t}\n});\nStringUtil.chars = function (c, n) {\n\tvar ch = new Array(n).fill(null);\n\tfor (var i = 0; i < n; i++) {\n\t\tch[i] = c;\n\t}\n\treturn new String(ch);\n};\nStringUtil.getStackTrace = function () {\n\tif (arguments.length === 1) {\n\t\tvar t = arguments[0];\n\t\tvar os = new ByteArrayOutputStream();\n\t\tvar ps = new PrintStream(os);\n\t\tt.printStackTrace(ps);\n\t\treturn os.toString();\n\t} else if (arguments.length === 2) {\n\t\tvar t = arguments[0],\n\t\t    depth = arguments[1];\n\t\tvar stackTrace = \"\";\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\tfor (var i = 0; i < depth; i++) {\n\t\t\ttry {\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t} else throw e;\n\t\t\t} finally {}\n\t\t}\n\t\treturn stackTrace;\n\t}\n};\nStringUtil.split = function (s, separator) {\n\tvar separatorlen = separator.length;\n\tvar tokenList = new ArrayList();\n\tvar tmpString = \"\" + s;\n\tvar pos = tmpString.indexOf(separator);\n\twhile (pos >= 0) {\n\t\tvar token = tmpString.substring(0, pos);\n\t\ttokenList.add(token);\n\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\tpos = tmpString.indexOf(separator);\n\t}\n\tif (tmpString.length > 0) tokenList.add(tmpString);\n\tvar res = new Array(tokenList.size()).fill(null);\n\tfor (var i = 0; i < res.length; i++) {\n\t\tres[i] = tokenList.get(i);\n\t}\n\treturn res;\n};\nStringUtil.toString = function () {\n\tif (arguments.length === 1) {\n\t\tvar d = arguments[0];\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t}\n};\nStringUtil.spaces = function (n) {\n\treturn StringUtil.chars(' ', n);\n};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n\nfunction CoordinateSequences() {}\nextend(CoordinateSequences.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequences;\n\t}\n});\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\tfor (var dim = 0; dim < minDim; dim++) {\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t}\n};\nCoordinateSequences.isRing = function (seq) {\n\tvar n = seq.size();\n\tif (n === 0) return true;\n\tif (n <= 3) return false;\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n};\nCoordinateSequences.isEqual = function (cs1, cs2) {\n\tvar cs1Size = cs1.size();\n\tvar cs2Size = cs2.size();\n\tif (cs1Size !== cs2Size) return false;\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\tfor (var i = 0; i < cs1Size; i++) {\n\t\tfor (var d = 0; d < dim; d++) {\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nCoordinateSequences.extend = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tif (n > 0) {\n\t\tfor (var i = n; i < size; i++) {\n\t\t\tCoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t\t}\n\t}\n\treturn newseq;\n};\nCoordinateSequences.reverse = function (seq) {\n\tvar last = seq.size() - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tCoordinateSequences.swap(seq, i, last - i);\n\t}\n};\nCoordinateSequences.swap = function (seq, i, j) {\n\tif (i === j) return null;\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\tseq.setOrdinate(j, dim, tmp);\n\t}\n};\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t}\n};\nCoordinateSequences.toString = function () {\n\tif (arguments.length === 1) {\n\t\tvar cs = arguments[0];\n\t\tvar size = cs.size();\n\t\tif (size === 0) return \"()\";\n\t\tvar dim = cs.getDimension();\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append('(');\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (i > 0) buf.append(\" \");\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tif (d > 0) buf.append(\",\");\n\t\t\t\tbuf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t}\n\t\t}\n\t\tbuf.append(')');\n\t\treturn buf.toString();\n\t}\n};\nCoordinateSequences.ensureValidRing = function (fact, seq) {\n\tvar n = seq.size();\n\tif (n === 0) return seq;\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\tif (isClosed) return seq;\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n};\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tfor (var i = n; i < size; i++) {\n\t\tCoordinateSequences.copy(seq, 0, newseq, i, 1);\n\t}return newseq;\n};\n\nfunction LineString() {\n\tthis._points = null;\n\tvar points = arguments[0],\n\t    factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(points);\n}\ninherits$1(LineString, Geometry);\nextend(LineString.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this._points.expandEnvelope(new Envelope());\n\t},\n\tisRing: function isRing() {\n\t\treturn this.isClosed() && this.isSimple();\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_LINESTRING;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this._points.toCoordinateArray();\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this._points.size() !== otherLineString._points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tif (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {\n\t\tfor (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n\t\t\tvar j = this._points.size() - 1 - i;\n\t\t\tif (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n\t\t\t\tif (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n\t\t\t\t\tCoordinateSequences.reverse(this._points);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._points.getCoordinate(0);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function isClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t},\n\tgetEndPoint: function getEndPoint() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 1;\n\t},\n\tgetLength: function getLength() {\n\t\treturn CGAlgorithms.computeLength(this._points);\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\treturn this._points.size();\n\t},\n\treverse: function reverse() {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this._points.size() && j < line._points.size()) {\n\t\t\t\tvar comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this._points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line._points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar line = o;\n\t\t\treturn comp.compare(this._points, line._points);\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tif (this._points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points, i);\n\t\t\t\tif (filter.isDone()) break;\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tisEquivalentClass: function isEquivalentClass(other) {\n\t\treturn other instanceof LineString;\n\t},\n\tclone: function clone() {\n\t\tvar ls = Geometry.prototype.clone.call(this);\n\t\tls._points = this._points.clone();\n\t\treturn ls;\n\t},\n\tgetCoordinateN: function getCoordinateN(n) {\n\t\treturn this._points.getCoordinate(n);\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"LineString\";\n\t},\n\tcopy: function copy() {\n\t\treturn new LineString(this._points.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function getCoordinateSequence() {\n\t\treturn this._points;\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this._points.size() === 0;\n\t},\n\tinit: function init(points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis._points = points;\n\t},\n\tisCoordinate: function isCoordinate(pt) {\n\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\tif (this._points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetStartPoint: function getStartPoint() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t},\n\tgetPointN: function getPointN(n) {\n\t\treturn this.getFactory().createPoint(this._points.getCoordinate(n));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineString;\n\t}\n});\nLineString.serialVersionUID = 3110669828065365560;\n\nfunction Puntal() {}\nextend(Puntal.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Puntal;\n\t}\n});\n\nfunction Point() {\n\tthis._coordinates = null;\n\tvar coordinates = arguments[0],\n\t    factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(coordinates);\n}\ninherits$1(Point, Geometry);\nextend(Point.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n\t\treturn env;\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_POINT;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null;\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 0;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t},\n\treverse: function reverse() {\n\t\treturn this.copy();\n\t},\n\tgetX: function getX() {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar point = other;\n\t\t\treturn comp.compare(this._coordinates, point._coordinates);\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\tfilter.filter(this._coordinates, 0);\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn this.getFactory().createGeometryCollection(null);\n\t},\n\tclone: function clone() {\n\t\tvar p = Geometry.prototype.clone.call(this);\n\t\tp._coordinates = this._coordinates.clone();\n\t\treturn p;\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"Point\";\n\t},\n\tcopy: function copy() {\n\t\treturn new Point(this._coordinates.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function getCoordinateSequence() {\n\t\treturn this._coordinates;\n\t},\n\tgetY: function getY() {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this._coordinates.size() === 0;\n\t},\n\tinit: function init(coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis._coordinates = coordinates;\n\t},\n\tisSimple: function isSimple() {\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Point;\n\t}\n});\nPoint.serialVersionUID = 4902022702746614570;\n\nfunction Polygonal() {}\nextend(Polygonal.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Polygonal;\n\t}\n});\n\nfunction Polygon() {\n\tthis._shell = null;\n\tthis._holes = null;\n\tvar shell = arguments[0],\n\t    holes = arguments[1],\n\t    factory = arguments[2];\n\tGeometry.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis._shell = shell;\n\tthis._holes = holes;\n}\ninherits$1(Polygon, Geometry);\nextend(Polygon.prototype, {\n\tcomputeEnvelopeInternal: function computeEnvelopeInternal() {\n\t\treturn this._shell.getEnvelopeInternal();\n\t},\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_POLYGON;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this._shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tvar childCoordinates = this._holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function getArea() {\n\t\tvar area = 0.0;\n\t\tarea += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tarea -= Math.abs(CGAlgorithms.signedArea(this._holes[i].getCoordinateSequence()));\n\t\t}\n\t\treturn area;\n\t},\n\tisRectangle: function isRectangle() {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this._shell === null) return false;\n\t\tif (this._shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this._shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherPolygonShell = otherPolygon._shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._holes.length !== otherPolygon._holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tif (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function normalize() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this._shell, true);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis.normalize(this._holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this._holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar ring = arguments[0],\n\t\t\t    clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._shell.getCoordinate();\n\t},\n\tgetNumInteriorRing: function getNumInteriorRing() {\n\t\treturn this._holes.length;\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn 1;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 2;\n\t},\n\tgetLength: function getLength() {\n\t\tvar len = 0.0;\n\t\tlen += this._shell.getLength();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tlen += this._holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\tvar numPoints = this._shell.getNumPoints();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tnumPoints += this._holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\treverse: function reverse() {\n\t\tvar poly = this.copy();\n\t\tpoly._shell = this._shell.copy().reverse();\n\t\tpoly._holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tpoly._holes[i] = this._holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t},\n\tconvexHull: function convexHull() {\n\t\treturn this.getExteriorRing().convexHull();\n\t},\n\tcompareToSameClass: function compareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar o = arguments[0];\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = o._shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar o = arguments[0],\n\t\t\t    comp = arguments[1];\n\t\t\tvar poly = o;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = poly._shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function apply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tif (!filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t\t\tif (filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tvar filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this._holes.length + 1).fill(null);\n\t\trings[0] = this._shell;\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\trings[i + 1] = this._holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t},\n\tclone: function clone() {\n\t\tvar poly = Geometry.prototype.clone.call(this);\n\t\tpoly._shell = this._shell.clone();\n\t\tpoly._holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tpoly._holes[i] = this._holes[i].clone();\n\t\t}\n\t\treturn poly;\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"Polygon\";\n\t},\n\tcopy: function copy() {\n\t\tvar shell = this._shell.copy();\n\t\tvar holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < holes.length; i++) {\n\t\t\tholes[i] = this._holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shell, holes, this._factory);\n\t},\n\tgetExteriorRing: function getExteriorRing() {\n\t\treturn this._shell;\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this._shell.isEmpty();\n\t},\n\tgetInteriorRingN: function getInteriorRingN(n) {\n\t\treturn this._holes[n];\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Polygon;\n\t}\n});\nPolygon.serialVersionUID = -3494792200821764533;\n\nfunction MultiPoint() {\n\tvar points = arguments[0],\n\t    factory = arguments[1];\n\tGeometryCollection.call(this, points, factory);\n}\ninherits$1(MultiPoint, GeometryCollection);\nextend(MultiPoint.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_MULTIPOINT;\n\t},\n\tisValid: function isValid() {\n\t\treturn true;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar n = arguments[0];\n\t\t\treturn this._geometries[n].getCoordinate();\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 0;\n\t},\n\tgetBoundary: function getBoundary() {\n\t\treturn this.getFactory().createGeometryCollection(null);\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"MultiPoint\";\n\t},\n\tcopy: function copy() {\n\t\tvar points = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this._factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiPoint;\n\t}\n});\nMultiPoint.serialVersionUID = -8048474874175355449;\n\nfunction LinearRing() {\n\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof GeometryFactory) {\n\t\tvar points = arguments[0],\n\t\t    factory = arguments[1];\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tvar points = arguments[0],\n\t\t    factory = arguments[1];\n\t\tLineString.call(this, points, factory);\n\t\tthis.validateConstruction();\n\t}\n}\ninherits$1(LinearRing, LineString);\nextend(LinearRing.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_LINEARRING;\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t},\n\tisClosed: function isClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn LineString.prototype.isClosed.call(this);\n\t},\n\treverse: function reverse() {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t},\n\tvalidateConstruction: function validateConstruction() {\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"LinearRing\";\n\t},\n\tcopy: function copy() {\n\t\treturn new LinearRing(this._points.copy(), this._factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearRing;\n\t}\n});\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n\nfunction MultiPolygon() {\n\tvar polygons = arguments[0],\n\t    factory = arguments[1];\n\tGeometryCollection.call(this, polygons, factory);\n}\ninherits$1(MultiPolygon, GeometryCollection);\nextend(MultiPolygon.prototype, {\n\tgetSortIndex: function getSortIndex() {\n\t\treturn Geometry.SORTINDEX_MULTIPOLYGON;\n\t},\n\tequalsExact: function equalsExact() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar other = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function getBoundaryDimension() {\n\t\treturn 1;\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn 2;\n\t},\n\treverse: function reverse() {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t},\n\tgetBoundary: function getBoundary() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar polygon = this._geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t},\n\tgetGeometryType: function getGeometryType() {\n\t\treturn \"MultiPolygon\";\n\t},\n\tcopy: function copy() {\n\t\tvar polygons = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this._factory);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MultiPolygon;\n\t}\n});\nMultiPolygon.serialVersionUID = -551033529766975875;\n\nfunction GeometryEditor() {\n\tthis._factory = null;\n\tthis._isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar factory = arguments[0];\n\t\tthis._factory = factory;\n\t}\n}\nextend(GeometryEditor.prototype, {\n\tsetCopyUserData: function setCopyUserData(isUserDataCopied) {\n\t\tthis._isUserDataCopied = isUserDataCopied;\n\t},\n\tedit: function edit(geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this._isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t},\n\teditInternal: function editInternal(geometry, operation) {\n\t\tif (this._factory === null) this._factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t},\n\teditGeometryCollection: function editGeometryCollection(collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this._factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this._factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this._factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this._factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this._factory.createGeometryCollection(geometries.toArray([]));\n\t},\n\teditPolygon: function editPolygon(polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this._factory);\n\t\tif (newPolygon === null) newPolygon = this._factory.createPolygon(null);\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this._factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this._factory.createPolygon(shell, holes.toArray([]));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryEditor;\n\t}\n});\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nfunction NoOpGeometryOperation() {}\nextend(NoOpGeometryOperation.prototype, {\n\tedit: function edit(geometry, factory) {\n\t\treturn geometry;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NoOpGeometryOperation;\n\t}\n});\nfunction CoordinateOperation() {}\nextend(CoordinateOperation.prototype, {\n\tedit: function edit(geometry, factory) {\n\t\tvar coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n\t\tif (coords === null) return geometry;\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(coords);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(coords);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coords.length > 0) {\n\t\t\t\treturn factory.createPoint(coords[0]);\n\t\t\t} else {\n\t\t\t\treturn factory.createPoint();\n\t\t\t}\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateOperation;\n\t}\n});\nfunction CoordinateSequenceOperation() {}\nextend(CoordinateSequenceOperation.prototype, {\n\tedit: function edit(geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateSequenceOperation;\n\t}\n});\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n\nfunction CoordinateArraySequence() {\n\tthis._dimension = 3;\n\tthis._coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tvar coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tvar size = arguments[0];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tvar coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis._coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._dimension = coordSeq.getDimension();\n\t\t\tthis._coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\t\tthis._coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tvar coordinates = arguments[0],\n\t\t\t    dimension = arguments[1];\n\t\t\tthis._coordinates = coordinates;\n\t\t\tthis._dimension = dimension;\n\t\t\tif (coordinates === null) this._coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tvar size = arguments[0],\n\t\t\t    dimension = arguments[1];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tthis._dimension = dimension;\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n}\nextend(CoordinateArraySequence.prototype, {\n\tsetOrdinate: function setOrdinate(index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis._coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis._coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis._coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t},\n\tsize: function size() {\n\t\treturn this._coordinates.length;\n\t},\n\tgetOrdinate: function getOrdinate(index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this._coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this._coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this._coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar i = arguments[0];\n\t\t\treturn this._coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar index = arguments[0],\n\t\t\t    coord = arguments[1];\n\t\t\tcoord.x = this._coordinates[index].x;\n\t\t\tcoord.y = this._coordinates[index].y;\n\t\t\tcoord.z = this._coordinates[index].z;\n\t\t}\n\t},\n\tgetCoordinateCopy: function getCoordinateCopy(i) {\n\t\treturn new Coordinate(this._coordinates[i]);\n\t},\n\tgetDimension: function getDimension() {\n\t\treturn this._dimension;\n\t},\n\tgetX: function getX(index) {\n\t\treturn this._coordinates[index].x;\n\t},\n\tclone: function clone() {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this._coordinates[i].clone();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this._dimension);\n\t},\n\texpandEnvelope: function expandEnvelope(env) {\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this._coordinates[i]);\n\t\t}\n\t\treturn env;\n\t},\n\tcopy: function copy() {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this._coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this._dimension);\n\t},\n\ttoString: function toString() {\n\t\tif (this._coordinates.length > 0) {\n\t\t\tvar strBuf = new StringBuffer(17 * this._coordinates.length);\n\t\t\tstrBuf.append('(');\n\t\t\tstrBuf.append(this._coordinates[0]);\n\t\t\tfor (var i = 1; i < this._coordinates.length; i++) {\n\t\t\t\tstrBuf.append(\", \");\n\t\t\t\tstrBuf.append(this._coordinates[i]);\n\t\t\t}\n\t\t\tstrBuf.append(')');\n\t\t\treturn strBuf.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t},\n\tgetY: function getY(index) {\n\t\treturn this._coordinates[index].y;\n\t},\n\ttoCoordinateArray: function toCoordinateArray() {\n\t\treturn this._coordinates;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateSequence, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateArraySequence;\n\t}\n});\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n\nfunction CoordinateArraySequenceFactory() {}\nextend(CoordinateArraySequenceFactory.prototype, {\n\treadResolve: function readResolve() {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t},\n\tcreate: function create() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar size = arguments[0],\n\t\t\t    dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n});\nCoordinateArraySequenceFactory.instance = function () {\n\treturn CoordinateArraySequenceFactory.instanceObject;\n};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n\nvar i;\nvar defineProperty$1 = Object.defineProperty;\nfunction is(a, b) {\n  return a === b || a !== a && b !== b;\n}\nvar MapPolyfill = createCollection({\n  'delete': sharedDelete,\n  has: mapHas,\n  get: sharedGet,\n  set: sharedSet,\n  keys: sharedKeys,\n  values: sharedValues,\n  entries: mapEntries,\n  forEach: sharedForEach,\n  clear: sharedClear\n});\nfunction createCollection(proto, objectOnly) {\n  function Collection(a) {\n    if (!this || this.constructor !== Collection) return new Collection(a);\n    this._keys = [];\n    this._values = [];\n    this._itp = [];\n    this.objectOnly = objectOnly;\n    if (a) init.call(this, a);\n  }\n  if (!objectOnly) {\n    defineProperty$1(proto, 'size', {\n      get: sharedSize\n    });\n  }\n  proto.constructor = Collection;\n  Collection.prototype = proto;\n  return Collection;\n}\nfunction init(a) {\n  if (this.add) a.forEach(this.add, this);\n  else a.forEach(function (a) {\n      this.set(a[0], a[1]);\n    }, this);\n}\nfunction sharedDelete(key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1);\n    this._values.splice(i, 1);\n    this._itp.forEach(function (p) {\n      if (i < p[0]) p[0]--;\n    });\n  }\n  return i > -1;\n}\nfunction sharedGet(key) {\n  return this.has(key) ? this._values[i] : undefined;\n}\nfunction has(list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key');\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {}\n  else i = list.indexOf(key);\n  return i > -1;\n}\nfunction mapHas(value) {\n  return has.call(this, this._keys, value);\n}\nfunction sharedSet(key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value;\n  return this;\n}\nfunction sharedClear() {\n  (this._keys || 0).length = this._values.length = 0;\n}\nfunction sharedKeys() {\n  return sharedIterator(this._itp, this._keys);\n}\nfunction sharedValues() {\n  return sharedIterator(this._itp, this._values);\n}\nfunction mapEntries() {\n  return sharedIterator(this._itp, this._keys, this._values);\n}\nfunction sharedIterator(itp, array, array2) {\n  var p = [0];\n  var done = false;\n  itp.push(p);\n  return {\n    next: function next() {\n      var v;\n      var k = p[0];\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k];\n        p[0]++;\n      } else {\n        done = true;\n        itp.splice(itp.indexOf(p), 1);\n      }\n      return { done: done, value: v };\n    }\n  };\n}\nfunction sharedSize() {\n  return this._values.length;\n}\nfunction sharedForEach(callback, context) {\n  var it = this.entries();\n  for (;;) {\n    var r = it.next();\n    if (r.done) break;\n    callback.call(context, r.value[1], r.value[0], this);\n  }\n}\n\nvar MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map;\nfunction HashMap() {\n  this.map_ = new MapImpl();\n}\nHashMap.prototype = new Map$3();\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null;\n};\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value);\n  return value;\n};\nHashMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var it = this.map_.values();\n  var o = it.next();\n  while (!o.done) {\n    arrayList.add(o.value);\n    o = it.next();\n  }\n  return arrayList;\n};\nHashMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  this.map_.entries().forEach(function (entry) {\n    return hashSet.add(entry);\n  });\n  return hashSet;\n};\nHashMap.prototype.size = function () {\n  return this.map_.size();\n};\n\nfunction PrecisionModel() {\n\tthis._modelType = null;\n\tthis._scale = null;\n\tif (arguments.length === 0) {\n\t\tthis._modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tvar modelType = arguments[0];\n\t\t\tthis._modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tvar scale = arguments[0];\n\t\t\tthis._modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tvar pm = arguments[0];\n\t\t\tthis._modelType = pm._modelType;\n\t\t\tthis._scale = pm._scale;\n\t\t}\n\t}\n}\nextend(PrecisionModel.prototype, {\n\tequals: function equals(other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t},\n\tgetScale: function getScale() {\n\t\treturn this._scale;\n\t},\n\tisFloating: function isFloating() {\n\t\treturn this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE;\n\t},\n\tgetType: function getType() {\n\t\treturn this._modelType;\n\t},\n\ttoString: function toString() {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t},\n\tmakePrecise: function makePrecise() {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tvar val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this._modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this._scale) / this._scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar coord = arguments[0];\n\t\t\tif (this._modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t},\n\tgetMaximumSignificantDigits: function getMaximumSignificantDigits() {\n\t\tvar maxSigDigits = 16;\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t},\n\tsetScale: function setScale(scale) {\n\t\tthis._scale = Math.abs(scale);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable, Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PrecisionModel;\n\t}\n});\nPrecisionModel.mostPrecise = function (pm1, pm2) {\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\treturn pm2;\n};\nfunction Type() {\n\tthis._name = null;\n\tvar name = arguments[0];\n\tthis._name = name;\n\tType.nameToTypeMap.put(name, this);\n}\nextend(Type.prototype, {\n\treadResolve: function readResolve() {\n\t\treturn Type.nameToTypeMap.get(this._name);\n\t},\n\ttoString: function toString() {\n\t\treturn this._name;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Type;\n\t}\n});\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n\nfunction GeometryFactory() {\n\tthis._precisionModel = null;\n\tthis._coordinateSequenceFactory = null;\n\tthis._SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tvar coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tvar precisionModel = arguments[0];\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar precisionModel = arguments[0],\n\t\t    SRID = arguments[1];\n\t\tGeometryFactory.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tvar precisionModel = arguments[0],\n\t\t    SRID = arguments[1],\n\t\t    coordinateSequenceFactory = arguments[2];\n\t\tthis._precisionModel = precisionModel;\n\t\tthis._coordinateSequenceFactory = coordinateSequenceFactory;\n\t\tthis._SRID = SRID;\n\t}\n}\nextend(GeometryFactory.prototype, {\n\ttoGeometry: function toGeometry(envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint(null);\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t},\n\tcreateLineString: function createLineString() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn new LineString(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiLineString: function createMultiLineString() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t},\n\tbuildGeometry: function buildGeometry(geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext();) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom.isGeometryCollectionOrDerived()) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t},\n\tcreateMultiPointFromCoords: function createMultiPointFromCoords(coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t},\n\tcreatePoint: function createPoint() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinateSequenceFactory: function getCoordinateSequenceFactory() {\n\t\treturn this._coordinateSequenceFactory;\n\t},\n\tcreatePolygon: function createPolygon() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new Polygon(null, null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tvar shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar shell = arguments[0],\n\t\t\t    holes = arguments[1];\n\t\t\treturn new Polygon(shell, holes, this);\n\t\t}\n\t},\n\tgetSRID: function getSRID() {\n\t\treturn this._SRID;\n\t},\n\tcreateGeometryCollection: function createGeometryCollection() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t},\n\tcreateGeometry: function createGeometry(g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, {\n\t\t\tedit: function edit() {\n\t\t\t\tif (arguments.length === 2) {\n\t\t\t\t\tvar coordSeq = arguments[0];\n\t\t\t\t\treturn this._coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tgetPrecisionModel: function getPrecisionModel() {\n\t\treturn this._precisionModel;\n\t},\n\tcreateLinearRing: function createLinearRing() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn new LinearRing(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiPolygon: function createMultiPolygon() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t},\n\tcreateMultiPoint: function createMultiPoint() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tvar point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tvar coordinates = arguments[0];\n\t\t\t\tif (coordinates === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryFactory;\n\t}\n});\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\treturn multiPolygons.toArray(multiPolygonArray);\n};\nGeometryFactory.toGeometryArray = function (geometries) {\n\tif (geometries === null) return null;\n\tvar geometryArray = new Array(geometries.size()).fill(null);\n\treturn geometries.toArray(geometryArray);\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\n\treturn CoordinateArraySequenceFactory.instance();\n};\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\treturn multiLineStrings.toArray(multiLineStringArray);\n};\nGeometryFactory.toLineStringArray = function (lineStrings) {\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\treturn lineStrings.toArray(lineStringArray);\n};\nGeometryFactory.toMultiPointArray = function (multiPoints) {\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\treturn multiPoints.toArray(multiPointArray);\n};\nGeometryFactory.toLinearRingArray = function (linearRings) {\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\treturn linearRings.toArray(linearRingArray);\n};\nGeometryFactory.toPointArray = function (points) {\n\tvar pointArray = new Array(points.size()).fill(null);\n\treturn points.toArray(pointArray);\n};\nGeometryFactory.toPolygonArray = function (polygons) {\n\tvar polygonArray = new Array(polygons.size()).fill(null);\n\treturn polygons.toArray(polygonArray);\n};\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};function WKTParser(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n}\nextend(WKTParser.prototype, {\n  read: function read(wkt) {\n    var geometry, type, str;\n    wkt = wkt.replace(/[\\n\\r]/g, ' ');\n    var matches = regExes.typeStr.exec(wkt);\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt);\n      matches[2] = undefined;\n    }\n    if (matches) {\n      type = matches[1].toLowerCase();\n      str = matches[2];\n      if (parse[type]) {\n        geometry = parse[type].apply(this, [str]);\n      }\n    }\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt);\n    return geometry;\n  },\n  write: function write(geometry) {\n    return this.extractGeometry(geometry);\n  },\n  extractGeometry: function extractGeometry(geometry) {\n    var type = geometry.getGeometryType().toLowerCase();\n    if (!extract$1[type]) {\n      return null;\n    }\n    var wktType = type.toUpperCase();\n    var data;\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY';\n    } else {\n      data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n    }\n    return data;\n  }\n});\nvar extract$1 = {\n  coordinate: function coordinate(_coordinate) {\n    return _coordinate.x + ' ' + _coordinate.y;\n  },\n  point: function point(_point) {\n    return extract$1.coordinate.call(this, _point._coordinates._coordinates[0]);\n  },\n  multipoint: function multipoint(_multipoint) {\n    var array = [];\n    for (var i = 0, len = _multipoint._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this, [_multipoint._geometries[i]]) + ')');\n    }\n    return array.join(',');\n  },\n  linestring: function linestring(_linestring) {\n    var array = [];\n    for (var i = 0, len = _linestring._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this, [_linestring._points._coordinates[i]]));\n    }\n    return array.join(',');\n  },\n  linearring: function linearring(_linearring) {\n    var array = [];\n    for (var i = 0, len = _linearring._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this, [_linearring._points._coordinates[i]]));\n    }\n    return array.join(',');\n  },\n  multilinestring: function multilinestring(_multilinestring) {\n    var array = [];\n    for (var i = 0, len = _multilinestring._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this, [_multilinestring._geometries[i]]) + ')');\n    }\n    return array.join(',');\n  },\n  polygon: function polygon(_polygon) {\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [_polygon._shell]) + ')');\n    for (var i = 0, len = _polygon._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this, [_polygon._holes[i]]) + ')');\n    }\n    return array.join(',');\n  },\n  multipolygon: function multipolygon(_multipolygon) {\n    var array = [];\n    for (var i = 0, len = _multipolygon._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this, [_multipolygon._geometries[i]]) + ')');\n    }\n    return array.join(',');\n  },\n  geometrycollection: function geometrycollection(collection) {\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',');\n  }\n};\nvar parse = {\n  point: function point(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint();\n    }\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n  },\n  multipoint: function multipoint(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint();\n    }\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse.point.apply(this, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components);\n  },\n  linestring: function linestring(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString();\n    }\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components);\n  },\n  linearring: function linearring(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing();\n    }\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components);\n  },\n  multilinestring: function multilinestring(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString();\n    }\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse.linestring.apply(this, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components);\n  },\n  polygon: function polygon(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon();\n    }\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse.linestring.apply(this, [ring]);\n      linearring = this.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes);\n  },\n  multipolygon: function multipolygon(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon();\n    }\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse.polygon.apply(this, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components);\n  },\n  geometrycollection: function geometrycollection(str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection();\n    }\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components);\n  }\n};\n\nfunction WKTWriter(geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n}\nextend(WKTWriter.prototype, {\n  write: function write(geometry) {\n    return this.parser.write(geometry);\n  }\n});\nextend(WKTWriter, {\n  toLineString: function toLineString(p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented');\n    }\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )';\n  }\n});\n\nfunction LineIntersector() {\n\tthis._result = null;\n\tthis._inputLines = Array(2).fill().map(function () {\n\t\treturn Array(2);\n\t});\n\tthis._intPt = new Array(2).fill(null);\n\tthis._intLineIndex = null;\n\tthis._isProper = null;\n\tthis._pa = null;\n\tthis._pb = null;\n\tthis._precisionModel = null;\n\tthis._intPt[0] = new Coordinate();\n\tthis._intPt[1] = new Coordinate();\n\tthis._pa = this._intPt[0];\n\tthis._pb = this._intPt[1];\n\tthis._result = 0;\n}\nextend(LineIntersector.prototype, {\n\tgetIndexAlongSegment: function getIndexAlongSegment(segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intLineIndex[segmentIndex][intIndex];\n\t},\n\tgetTopologySummary: function getTopologySummary() {\n\t\tvar catBuf = new StringBuffer();\n\t\tif (this.isEndPoint()) catBuf.append(\" endpoint\");\n\t\tif (this._isProper) catBuf.append(\" proper\");\n\t\tif (this.isCollinear()) catBuf.append(\" collinear\");\n\t\treturn catBuf.toString();\n\t},\n\tcomputeIntersection: function computeIntersection(p1, p2, p3, p4) {\n\t\tthis._inputLines[0][0] = p1;\n\t\tthis._inputLines[0][1] = p2;\n\t\tthis._inputLines[1][0] = p3;\n\t\tthis._inputLines[1][1] = p4;\n\t\tthis._result = this.computeIntersect(p1, p2, p3, p4);\n\t},\n\tgetIntersectionNum: function getIntersectionNum() {\n\t\treturn this._result;\n\t},\n\tcomputeIntLineIndex: function computeIntLineIndex() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._intLineIndex === null) {\n\t\t\t\tthis._intLineIndex = Array(2).fill().map(function () {\n\t\t\t\t\treturn Array(2);\n\t\t\t\t});\n\t\t\t\tthis.computeIntLineIndex(0);\n\t\t\t\tthis.computeIntLineIndex(1);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar segmentIndex = arguments[0];\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\n\t\t\tif (dist0 > dist1) {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 0;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 1;\n\t\t\t} else {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 1;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 0;\n\t\t\t}\n\t\t}\n\t},\n\tisProper: function isProper() {\n\t\treturn this.hasIntersection() && this._isProper;\n\t},\n\tsetPrecisionModel: function setPrecisionModel(precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t},\n\tisInteriorIntersection: function isInteriorIntersection() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isInteriorIntersection(0)) return true;\n\t\t\tif (this.isInteriorIntersection(1)) return true;\n\t\t\treturn false;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar inputLineIndex = arguments[0];\n\t\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\t\tif (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\tgetIntersection: function getIntersection(intIndex) {\n\t\treturn this._intPt[intIndex];\n\t},\n\tisEndPoint: function isEndPoint() {\n\t\treturn this.hasIntersection() && !this._isProper;\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this._result !== LineIntersector.NO_INTERSECTION;\n\t},\n\tgetEdgeDistance: function getEdgeDistance(segmentIndex, intIndex) {\n\t\tvar dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n\t\treturn dist;\n\t},\n\tisCollinear: function isCollinear() {\n\t\treturn this._result === LineIntersector.COLLINEAR_INTERSECTION;\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary();\n\t},\n\tgetEndpoint: function getEndpoint(segmentIndex, ptIndex) {\n\t\treturn this._inputLines[segmentIndex][ptIndex];\n\t},\n\tisIntersection: function isIntersection(pt) {\n\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\tif (this._intPt[i].equals2D(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetIntersectionAlongSegment: function getIntersectionAlongSegment(segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intPt[this._intLineIndex[segmentIndex][intIndex]];\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineIntersector;\n\t}\n});\nLineIntersector.computeEdgeDistance = function (p, p0, p1) {\n\tvar dx = Math.abs(p1.x - p0.x);\n\tvar dy = Math.abs(p1.y - p0.y);\n\tvar dist = -1.0;\n\tif (p.equals(p0)) {\n\t\tdist = 0.0;\n\t} else if (p.equals(p1)) {\n\t\tif (dx > dy) dist = dx;else dist = dy;\n\t} else {\n\t\tvar pdx = Math.abs(p.x - p0.x);\n\t\tvar pdy = Math.abs(p.y - p0.y);\n\t\tif (dx > dy) dist = pdx;else dist = pdy;\n\t\tif (dist === 0.0 && !p.equals(p0)) {\n\t\t\tdist = Math.max(pdx, pdy);\n\t\t}\n\t}\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n\treturn dist;\n};\nLineIntersector.nonRobustComputeEdgeDistance = function (p, p1, p2) {\n\tvar dx = p.x - p1.x;\n\tvar dy = p.y - p1.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n\treturn dist;\n};\nLineIntersector.DONT_INTERSECT = 0;\nLineIntersector.DO_INTERSECT = 1;\nLineIntersector.COLLINEAR = 2;\nLineIntersector.NO_INTERSECTION = 0;\nLineIntersector.POINT_INTERSECTION = 1;\nLineIntersector.COLLINEAR_INTERSECTION = 2;\n\nfunction RobustLineIntersector() {\n\tLineIntersector.apply(this);\n}\ninherits$1(RobustLineIntersector, LineIntersector);\nextend(RobustLineIntersector.prototype, {\n\tisInSegmentEnvelopes: function isInSegmentEnvelopes(intPt) {\n\t\tvar env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n\t\tvar env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\n\t},\n\tcomputeIntersection: function computeIntersection() {\n\t\tif (arguments.length === 3) {\n\t\t\tvar p = arguments[0],\n\t\t\t    p1 = arguments[1],\n\t\t\t    p2 = arguments[2];\n\t\t\tthis._isProper = false;\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\n\t\t\t\tif (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n\t\t\t\t\tthis._isProper = true;\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\n\t\t\t\t\t\tthis._isProper = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._result = LineIntersector.POINT_INTERSECTION;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._result = LineIntersector.NO_INTERSECTION;\n\t\t} else return LineIntersector.prototype.computeIntersection.apply(this, arguments);\n\t},\n\tnormalizeToMinimum: function normalizeToMinimum(n1, n2, n3, n4, normPt) {\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n\t\tn1.x -= normPt.x;\n\t\tn1.y -= normPt.y;\n\t\tn2.x -= normPt.x;\n\t\tn2.y -= normPt.y;\n\t\tn3.x -= normPt.x;\n\t\tn3.y -= normPt.y;\n\t\tn4.x -= normPt.x;\n\t\tn4.y -= normPt.y;\n\t},\n\tsafeHCoordinateIntersection: function safeHCoordinateIntersection(p1, p2, q1, q2) {\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotRepresentableException) {\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n\t\t\t} else throw e;\n\t\t} finally {}\n\t\treturn intPt;\n\t},\n\tintersection: function intersection(p1, p2, q1, q2) {\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n\t\t}\n\t\tif (this._precisionModel !== null) {\n\t\t\tthis._precisionModel.makePrecise(intPt);\n\t\t}\n\t\treturn intPt;\n\t},\n\tsmallestInAbsValue: function smallestInAbsValue(x1, x2, x3, x4) {\n\t\tvar x = x1;\n\t\tvar xabs = Math.abs(x);\n\t\tif (Math.abs(x2) < xabs) {\n\t\t\tx = x2;\n\t\t\txabs = Math.abs(x2);\n\t\t}\n\t\tif (Math.abs(x3) < xabs) {\n\t\t\tx = x3;\n\t\t\txabs = Math.abs(x3);\n\t\t}\n\t\tif (Math.abs(x4) < xabs) {\n\t\t\tx = x4;\n\t\t}\n\t\treturn x;\n\t},\n\tcheckDD: function checkDD(p1, p2, q1, q2, intPt) {\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\n\t\t}\n\t},\n\tintersectionWithNormalization: function intersectionWithNormalization(p1, p2, q1, q2) {\n\t\tvar n1 = new Coordinate(p1);\n\t\tvar n2 = new Coordinate(p2);\n\t\tvar n3 = new Coordinate(q1);\n\t\tvar n4 = new Coordinate(q2);\n\t\tvar normPt = new Coordinate();\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n\t\tintPt.x += normPt.x;\n\t\tintPt.y += normPt.y;\n\t\treturn intPt;\n\t},\n\tcomputeCollinearIntersection: function computeCollinearIntersection(p1, p2, q1, q2) {\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\n\t\tif (p1q1p2 && p1q2p2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = q2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (q1p1q2 && q1p2q2) {\n\t\t\tthis._intPt[0] = p1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\treturn LineIntersector.NO_INTERSECTION;\n\t},\n\tnormalizeToEnvCentre: function normalizeToEnvCentre(n00, n01, n10, n11, normPt) {\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\n\t\tnormPt.x = intMidX;\n\t\tnormPt.y = intMidY;\n\t\tn00.x -= normPt.x;\n\t\tn00.y -= normPt.y;\n\t\tn01.x -= normPt.x;\n\t\tn01.y -= normPt.y;\n\t\tn10.x -= normPt.x;\n\t\tn10.y -= normPt.y;\n\t\tn11.x -= normPt.x;\n\t\tn11.y -= normPt.y;\n\t},\n\tcomputeIntersect: function computeIntersect(p1, p2, q1, q2) {\n\t\tthis._isProper = false;\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n\t\tvar Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n\t\tvar Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n\t\tvar Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\t\tif (collinear) {\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\n\t\t}\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n\t\t\tthis._isProper = false;\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p1;\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p2;\n\t\t\t} else if (Pq1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q1);\n\t\t\t} else if (Pq2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q2);\n\t\t\t} else if (Qp1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p1);\n\t\t\t} else if (Qp2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p2);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._isProper = true;\n\t\t\tthis._intPt[0] = this.intersection(p1, p2, q1, q2);\n\t\t}\n\t\treturn LineIntersector.POINT_INTERSECTION;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RobustLineIntersector;\n\t}\n});\nRobustLineIntersector.nearestEndpoint = function (p1, p2, q1, q2) {\n\tvar nearestPt = p1;\n\tvar minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n\tvar dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = p2;\n\t}\n\tdist = CGAlgorithms.distancePointLine(q1, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q1;\n\t}\n\tdist = CGAlgorithms.distancePointLine(q2, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q2;\n\t}\n\treturn nearestPt;\n};\n\nfunction RobustDeterminant() {}\nextend(RobustDeterminant.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RobustDeterminant;\n\t}\n});\nRobustDeterminant.orientationIndex = function (p1, p2, q) {\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dx2 = q.x - p2.x;\n\tvar dy2 = q.y - p2.y;\n\treturn RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2);\n};\nRobustDeterminant.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar sign = null;\n\tvar swap = null;\n\tvar k = null;\n\tsign = 1;\n\tif (x1 === 0.0 || y2 === 0.0) {\n\t\tif (y1 === 0.0 || x2 === 0.0) {\n\t\t\treturn 0;\n\t\t} else if (y1 > 0) {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (y1 === 0.0 || x2 === 0.0) {\n\t\tif (y2 > 0) {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < y1) {\n\t\tif (0.0 < y2) {\n\t\t\tif (y1 <= y2) {\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 <= -y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t} else {\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (0.0 < y2) {\n\t\t\tif (-y1 <= y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t} else {\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 >= y2) {\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < x1) {\n\t\tif (0.0 < x2) {\n\t\t\tif (x1 <= x2) {\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\treturn sign;\n\t\t}\n\t} else {\n\t\tif (0.0 < x2) {\n\t\t\treturn -sign;\n\t\t} else {\n\t\t\tif (x1 >= x2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\tx2 = -x2;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\twhile (true) {\n\t\tk = Math.floor(x2 / x1);\n\t\tx2 = x2 - k * x1;\n\t\ty2 = y2 - k * y1;\n\t\tif (y2 < 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (y2 > y1) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (x1 > x2 + x2) {\n\t\t\tif (y1 < y2 + y2) {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 > y2 + y2) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\tx2 = x1 - x2;\n\t\t\t\ty2 = y1 - y2;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y2 === 0.0) {\n\t\t\tif (x2 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t\tif (x2 === 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tk = Math.floor(x1 / x2);\n\t\tx1 = x1 - k * x2;\n\t\ty1 = y1 - k * y2;\n\t\tif (y1 < 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (y1 > y2) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (x2 > x1 + x1) {\n\t\t\tif (y2 < y1 + y1) {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y2 > y1 + y1) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\tx1 = x2 - x1;\n\t\t\t\ty1 = y2 - y1;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y1 === 0.0) {\n\t\t\tif (x1 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t\tif (x1 === 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t}\n};\n\nfunction RayCrossingCounter() {\n\tthis._p = null;\n\tthis._crossingCount = 0;\n\tthis._isPointOnSegment = false;\n\tvar p = arguments[0];\n\tthis._p = p;\n}\nextend(RayCrossingCounter.prototype, {\n\tcountSegment: function countSegment(p1, p2) {\n\t\tif (p1.x < this._p.x && p2.x < this._p.x) return null;\n\t\tif (this._p.x === p2.x && this._p.y === p2.y) {\n\t\t\tthis._isPointOnSegment = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y === this._p.y && p2.y === this._p.y) {\n\t\t\tvar minx = p1.x;\n\t\t\tvar maxx = p2.x;\n\t\t\tif (minx > maxx) {\n\t\t\t\tminx = p2.x;\n\t\t\t\tmaxx = p1.x;\n\t\t\t}\n\t\t\tif (this._p.x >= minx && this._p.x <= maxx) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n\t\t\tvar x1 = p1.x - this._p.x;\n\t\t\tvar y1 = p1.y - this._p.y;\n\t\t\tvar x2 = p2.x - this._p.x;\n\t\t\tvar y2 = p2.y - this._p.y;\n\t\t\tvar xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n\t\t\tif (xIntSign === 0.0) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (y2 < y1) xIntSign = -xIntSign;\n\t\t\tif (xIntSign > 0.0) {\n\t\t\t\tthis._crossingCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisPointInPolygon: function isPointInPolygon() {\n\t\treturn this.getLocation() !== Location.EXTERIOR;\n\t},\n\tgetLocation: function getLocation() {\n\t\tif (this._isPointOnSegment) return Location.BOUNDARY;\n\t\tif (this._crossingCount % 2 === 1) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tisOnSegment: function isOnSegment() {\n\t\treturn this._isPointOnSegment;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RayCrossingCounter;\n\t}\n});\nRayCrossingCounter.locatePointInRing = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tvar p = arguments[0],\n\t\t    ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tfor (var i = 1; i < ring.size(); i++) {\n\t\t\tring.getCoordinate(i, p1);\n\t\t\tring.getCoordinate(i - 1, p2);\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tvar p = arguments[0],\n\t\t    ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tfor (var i = 1; i < ring.length; i++) {\n\t\t\tvar p1 = ring[i];\n\t\t\tvar p2 = ring[i - 1];\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t}\n};\n\nfunction CGAlgorithms() {}\nextend(CGAlgorithms.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CGAlgorithms;\n\t}\n});\nCGAlgorithms.orientationIndex = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.signedArea = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tvar ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tvar ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\nCGAlgorithms.distanceLineLine = function (A, B, C, D) {\n\tif (A.equals(B)) return CGAlgorithms.distancePointLine(A, C, D);\n\tif (C.equals(D)) return CGAlgorithms.distancePointLine(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B));\n\t}\n\treturn 0.0;\n};\nCGAlgorithms.isPointInRing = function (p, ring) {\n\treturn CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR;\n};\nCGAlgorithms.computeLength = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\nCGAlgorithms.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n\tvar isCCW = false;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nCGAlgorithms.locatePointInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nCGAlgorithms.distancePointLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nCGAlgorithms.computeOrientation = function (p1, p2, q) {\n\treturn CGAlgorithms.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.distancePointLine = function () {\n\tif (arguments.length === 2) {\n\t\tvar p = arguments[0],\n\t\t    line = arguments[1];\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\t\tvar minDistance = p.distance(line[0]);\n\t\tfor (var i = 0; i < line.length - 1; i++) {\n\t\t\tvar dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n\t\t\tif (dist < minDistance) {\n\t\t\t\tminDistance = dist;\n\t\t\t}\n\t\t}\n\t\treturn minDistance;\n\t} else if (arguments.length === 3) {\n\t\tvar p = arguments[0],\n\t\t    A = arguments[1],\n\t\t    B = arguments[2];\n\t\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\t\tif (r <= 0.0) return p.distance(A);\n\t\tif (r >= 1.0) return p.distance(B);\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n};\nCGAlgorithms.isOnLine = function (p, pt) {\n\tvar lineIntersector = new RobustLineIntersector();\n\tfor (var i = 1; i < pt.length; i++) {\n\t\tvar p0 = pt[i - 1];\n\t\tvar p1 = pt[i];\n\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\tif (lineIntersector.hasIntersection()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCGAlgorithms.CLOCKWISE = -1;\nCGAlgorithms.RIGHT = CGAlgorithms.CLOCKWISE;\nCGAlgorithms.COUNTERCLOCKWISE = 1;\nCGAlgorithms.LEFT = CGAlgorithms.COUNTERCLOCKWISE;\nCGAlgorithms.COLLINEAR = 0;\nCGAlgorithms.STRAIGHT = CGAlgorithms.COLLINEAR;\n\nfunction LineSegment() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tif (arguments.length === 0) {\n\t\tLineSegment.call(this, new Coordinate(), new Coordinate());\n\t} else if (arguments.length === 1) {\n\t\tvar ls = arguments[0];\n\t\tLineSegment.call(this, ls.p0, ls.p1);\n\t} else if (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t} else if (arguments.length === 4) {\n\t\tvar x0 = arguments[0],\n\t\t    y0 = arguments[1],\n\t\t    x1 = arguments[2],\n\t\t    y1 = arguments[3];\n\t\tLineSegment.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n\t}\n}\nextend(LineSegment.prototype, {\n\tminX: function minX() {\n\t\treturn Math.min(this.p0.x, this.p1.x);\n\t},\n\torientationIndex: function orientationIndex() {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tvar orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n\t\t\tvar orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n\t\t\treturn 0;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\treturn CGAlgorithms.orientationIndex(this.p0, this.p1, p);\n\t\t}\n\t},\n\ttoGeometry: function toGeometry(geomFactory) {\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\n\t},\n\tisVertical: function isVertical() {\n\t\treturn this.p0.x === this.p1.x;\n\t},\n\tequals: function equals(o) {\n\t\tif (!(o instanceof LineSegment)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar other = o;\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\n\t},\n\tintersection: function intersection(line) {\n\t\tvar li = new RobustLineIntersector();\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\n\t\treturn null;\n\t},\n\tproject: function project() {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n\t\t\tvar r = this.projectionFactor(p);\n\t\t\tvar coord = new Coordinate();\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n\t\t\treturn coord;\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\n\t\t\tvar newp0 = this.project(seg.p0);\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\n\t\t\tvar newp1 = this.project(seg.p1);\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\n\t\t\treturn new LineSegment(newp0, newp1);\n\t\t}\n\t},\n\tnormalize: function normalize() {\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\n\t},\n\tangle: function angle() {\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\tif (i === 0) return this.p0;\n\t\treturn this.p1;\n\t},\n\tdistancePerpendicular: function distancePerpendicular(p) {\n\t\treturn CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1);\n\t},\n\tminY: function minY() {\n\t\treturn Math.min(this.p0.y, this.p1.y);\n\t},\n\tmidPoint: function midPoint() {\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\n\t},\n\tprojectionFactor: function projectionFactor(p) {\n\t\tif (p.equals(this.p0)) return 0.0;\n\t\tif (p.equals(this.p1)) return 1.0;\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = dx * dx + dy * dy;\n\t\tif (len <= 0.0) return Double.NaN;\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n\t\treturn r;\n\t},\n\tclosestPoints: function closestPoints(line) {\n\t\tvar intPt = this.intersection(line);\n\t\tif (intPt !== null) {\n\t\t\treturn [intPt, intPt];\n\t\t}\n\t\tvar closestPt = new Array(2).fill(null);\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar dist = null;\n\t\tvar close00 = this.closestPoint(line.p0);\n\t\tminDistance = close00.distance(line.p0);\n\t\tclosestPt[0] = close00;\n\t\tclosestPt[1] = line.p0;\n\t\tvar close01 = this.closestPoint(line.p1);\n\t\tdist = close01.distance(line.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = close01;\n\t\t\tclosestPt[1] = line.p1;\n\t\t}\n\t\tvar close10 = line.closestPoint(this.p0);\n\t\tdist = close10.distance(this.p0);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p0;\n\t\t\tclosestPt[1] = close10;\n\t\t}\n\t\tvar close11 = line.closestPoint(this.p1);\n\t\tdist = close11.distance(this.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p1;\n\t\t\tclosestPt[1] = close11;\n\t\t}\n\t\treturn closestPt;\n\t},\n\tclosestPoint: function closestPoint(p) {\n\t\tvar factor = this.projectionFactor(p);\n\t\tif (factor > 0 && factor < 1) {\n\t\t\treturn this.project(p);\n\t\t}\n\t\tvar dist0 = this.p0.distance(p);\n\t\tvar dist1 = this.p1.distance(p);\n\t\tif (dist0 < dist1) return this.p0;\n\t\treturn this.p1;\n\t},\n\tmaxX: function maxX() {\n\t\treturn Math.max(this.p0.x, this.p1.x);\n\t},\n\tgetLength: function getLength() {\n\t\treturn this.p0.distance(this.p1);\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tvar comp0 = this.p0.compareTo(other.p0);\n\t\tif (comp0 !== 0) return comp0;\n\t\treturn this.p1.compareTo(other.p1);\n\t},\n\treverse: function reverse() {\n\t\tvar temp = this.p0;\n\t\tthis.p0 = this.p1;\n\t\tthis.p1 = temp;\n\t},\n\tequalsTopo: function equalsTopo(other) {\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n\t},\n\tlineIntersection: function lineIntersection(line) {\n\t\ttry {\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n\t\t\treturn intPt;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t},\n\tmaxY: function maxY() {\n\t\treturn Math.max(this.p0.y, this.p1.y);\n\t},\n\tpointAlongOffset: function pointAlongOffset(segmentLengthFraction, offsetDistance) {\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = 0.0;\n\t\tvar uy = 0.0;\n\t\tif (offsetDistance !== 0.0) {\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n\t\t\tux = offsetDistance * dx / len;\n\t\t\tuy = offsetDistance * dy / len;\n\t\t}\n\t\tvar offsetx = segx - uy;\n\t\tvar offsety = segy + ux;\n\t\tvar coord = new Coordinate(offsetx, offsety);\n\t\treturn coord;\n\t},\n\tsetCoordinates: function setCoordinates() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar ls = arguments[0];\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p0 = arguments[0],\n\t\t\t    p1 = arguments[1];\n\t\t\tthis.p0.x = p0.x;\n\t\t\tthis.p0.y = p0.y;\n\t\t\tthis.p1.x = p1.x;\n\t\t\tthis.p1.y = p1.y;\n\t\t}\n\t},\n\tsegmentFraction: function segmentFraction(inputPt) {\n\t\tvar segFrac = this.projectionFactor(inputPt);\n\t\tif (segFrac < 0.0) segFrac = 0.0;else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n\t\treturn segFrac;\n\t},\n\ttoString: function toString() {\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n\t},\n\tisHorizontal: function isHorizontal() {\n\t\treturn this.p0.y === this.p1.y;\n\t},\n\tdistance: function distance() {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tvar ls = arguments[0];\n\t\t\treturn CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\treturn CGAlgorithms.distancePointLine(p, this.p0, this.p1);\n\t\t}\n\t},\n\tpointAlong: function pointAlong(segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\treturn coord;\n\t},\n\thashCode: function hashCode() {\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n\t\treturn hash0 ^ hash1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineSegment;\n\t}\n});\nLineSegment.midPoint = function (p0, p1) {\n\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n};\nLineSegment.serialVersionUID = 3252005833466256227;\n\nfunction IntersectionMatrix() {\n\tthis._matrix = null;\n\tif (arguments.length === 0) {\n\t\tthis._matrix = Array(3).fill().map(function () {\n\t\t\treturn Array(3);\n\t\t});\n\t\tthis.setAll(Dimension.FALSE);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tvar elements = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.set(elements);\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\n\t\t\tvar other = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR];\n\t\t}\n\t}\n}\nextend(IntersectionMatrix.prototype, {\n\tisIntersects: function isIntersects() {\n\t\treturn !this.isDisjoint();\n\t},\n\tisCovers: function isCovers() {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCoveredBy: function isCoveredBy() {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tset: function set() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar dimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar row = arguments[0],\n\t\t\t    column = arguments[1],\n\t\t\t    dimensionValue = arguments[2];\n\t\t\tthis._matrix[row][column] = dimensionValue;\n\t\t}\n\t},\n\tisContains: function isContains() {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tsetAtLeast: function setAtLeast() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar minimumDimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar row = arguments[0],\n\t\t\t    column = arguments[1],\n\t\t\t    minimumDimensionValue = arguments[2];\n\t\t\tif (this._matrix[row][column] < minimumDimensionValue) {\n\t\t\t\tthis._matrix[row][column] = minimumDimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tsetAtLeastIfValid: function setAtLeastIfValid(row, column, minimumDimensionValue) {\n\t\tif (row >= 0 && column >= 0) {\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\n\t\t}\n\t},\n\tisWithin: function isWithin() {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tisTouches: function isTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]));\n\t\t}\n\t\treturn false;\n\t},\n\tisOverlaps: function isOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\treturn false;\n\t},\n\tisEquals: function isEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer(\"123456789\");\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tbuf.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]));\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tsetAll: function setAll(dimensionValue) {\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tthis._matrix[ai][bi] = dimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tget: function get(row, column) {\n\t\treturn this._matrix[row][column];\n\t},\n\ttranspose: function transpose() {\n\t\tvar temp = this._matrix[1][0];\n\t\tthis._matrix[1][0] = this._matrix[0][1];\n\t\tthis._matrix[0][1] = temp;\n\t\ttemp = this._matrix[2][0];\n\t\tthis._matrix[2][0] = this._matrix[0][2];\n\t\tthis._matrix[0][2] = temp;\n\t\ttemp = this._matrix[2][1];\n\t\tthis._matrix[2][1] = this._matrix[1][2];\n\t\tthis._matrix[1][2] = temp;\n\t\treturn this;\n\t},\n\tmatches: function matches(requiredDimensionSymbols) {\n\t\tif (requiredDimensionSymbols.length !== 9) {\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n\t\t}\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tif (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function add(im) {\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\n\t\t\t}\n\t\t}\n\t},\n\tisDisjoint: function isDisjoint() {\n\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCrosses: function isCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Clonable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntersectionMatrix;\n\t}\n});\nIntersectionMatrix.matches = function () {\n\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n\t\tvar actualDimensionValue = arguments[0],\n\t\t    requiredDimensionSymbol = arguments[1];\n\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n\t\tvar actualDimensionSymbols = arguments[0],\n\t\t    requiredDimensionSymbols = arguments[1];\n\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\n\t\treturn m.matches(requiredDimensionSymbols);\n\t}\n};\nIntersectionMatrix.isTrue = function (actualDimensionValue) {\n\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nfunction Centroid() {\n\tthis._areaBasePt = null;\n\tthis._triangleCent3 = new Coordinate();\n\tthis._areasum2 = 0;\n\tthis._cg3 = new Coordinate();\n\tthis._lineCentSum = new Coordinate();\n\tthis._totalLength = 0.0;\n\tthis._ptCount = 0;\n\tthis._ptCentSum = new Coordinate();\n\tvar geom = arguments[0];\n\tthis._areaBasePt = null;\n\tthis.add(geom);\n}\nextend(Centroid.prototype, {\n\taddPoint: function addPoint(pt) {\n\t\tthis._ptCount += 1;\n\t\tthis._ptCentSum.x += pt.x;\n\t\tthis._ptCentSum.y += pt.y;\n\t},\n\tsetBasePoint: function setBasePoint(basePt) {\n\t\tif (this._areaBasePt === null) this._areaBasePt = basePt;\n\t},\n\taddLineSegments: function addLineSegments(pts) {\n\t\tvar lineLen = 0.0;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segmentLen === 0.0) continue;\n\t\t\tlineLen += segmentLen;\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\n\t\t\tthis._lineCentSum.x += segmentLen * midx;\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\n\t\t\tthis._lineCentSum.y += segmentLen * midy;\n\t\t}\n\t\tthis._totalLength += lineLen;\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n\t},\n\taddHole: function addHole(pts) {\n\t\tvar isPositiveArea = CGAlgorithms.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\tgetCentroid: function getCentroid() {\n\t\tvar cent = new Coordinate();\n\t\tif (Math.abs(this._areasum2) > 0.0) {\n\t\t\tcent.x = this._cg3.x / 3 / this._areasum2;\n\t\t\tcent.y = this._cg3.y / 3 / this._areasum2;\n\t\t} else if (this._totalLength > 0.0) {\n\t\t\tcent.x = this._lineCentSum.x / this._totalLength;\n\t\t\tcent.y = this._lineCentSum.y / this._totalLength;\n\t\t} else if (this._ptCount > 0) {\n\t\t\tcent.x = this._ptCentSum.x / this._ptCount;\n\t\t\tcent.y = this._ptCentSum.y / this._ptCount;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\treturn cent;\n\t},\n\taddShell: function addShell(pts) {\n\t\tif (pts.length > 0) this.setBasePoint(pts[0]);\n\t\tvar isPositiveArea = !CGAlgorithms.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\taddTriangle: function addTriangle(p0, p1, p2, isPositiveArea) {\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\n\t\tCentroid.centroid3(p0, p1, p2, this._triangleCent3);\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\n\t\tthis._cg3.x += sign * area2 * this._triangleCent3.x;\n\t\tthis._cg3.y += sign * area2 * this._triangleCent3.y;\n\t\tthis._areasum2 += sign * area2;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Polygon) {\n\t\t\tvar poly = arguments[0];\n\t\t\tthis.addShell(poly.getExteriorRing().getCoordinates());\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.addHole(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom.isEmpty()) return null;\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.addPoint(geom.getCoordinate());\n\t\t\t} else if (geom instanceof LineString) {\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tvar poly = geom;\n\t\t\t\tthis.add(poly);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Centroid;\n\t}\n});\nCentroid.area2 = function (p1, p2, p3) {\n\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n};\nCentroid.centroid3 = function (p1, p2, p3, c) {\n\tc.x = p1.x + p2.x + p3.x;\n\tc.y = p1.y + p2.y + p3.y;\n\treturn null;\n};\nCentroid.getCentroid = function (geom) {\n\tvar cent = new Centroid(geom);\n\treturn cent.getCentroid();\n};\n\nfunction EmptyStackException(message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\nEmptyStackException.prototype.name = 'EmptyStackException';\n\nfunction Stack$2() {\n  this.array_ = [];\n}\nStack$2.prototype = new List();\nStack$2.prototype.add = function (e) {\n  this.array_.push(e);\n  return true;\n};\nStack$2.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n  return this.array_[index];\n};\nStack$2.prototype.push = function (e) {\n  this.array_.push(e);\n  return e;\n};\nStack$2.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n  return this.array_.pop();\n};\nStack$2.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n  return this.array_[this.array_.length - 1];\n};\nStack$2.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\nStack$2.prototype.isEmpty = function () {\n  return this.empty();\n};\nStack$2.prototype.search = function (o) {\n  return this.array_.indexOf(o);\n};\nStack$2.prototype.size = function () {\n  return this.array_.length;\n};\nStack$2.prototype.toArray = function () {\n  var array = [];\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n  return array;\n};\n\nfunction UniqueCoordinateArrayFilter() {\n\tthis.treeSet = new TreeSet();\n\tthis.list = new ArrayList();\n}\nextend(UniqueCoordinateArrayFilter.prototype, {\n\tfilter: function filter(coord) {\n\t\tif (!this.treeSet.contains(coord)) {\n\t\t\tthis.list.add(coord);\n\t\t\tthis.treeSet.add(coord);\n\t\t}\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\n\t\treturn this.list.toArray(coordinates);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UniqueCoordinateArrayFilter;\n\t}\n});\nUniqueCoordinateArrayFilter.filterCoordinates = function (coords) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tfor (var i = 0; i < coords.length; i++) {\n\t\tfilter.filter(coords[i]);\n\t}\n\treturn filter.getCoordinates();\n};\n\nfunction ConvexHull() {\n\tthis._geomFactory = null;\n\tthis._inputPts = null;\n\tif (arguments.length === 1) {\n\t\tvar geometry = arguments[0];\n\t\tConvexHull.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n\t} else if (arguments.length === 2) {\n\t\tvar pts = arguments[0],\n\t\t    geomFactory = arguments[1];\n\t\tthis._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n\t\tthis._geomFactory = geomFactory;\n\t}\n}\nextend(ConvexHull.prototype, {\n\tpreSort: function preSort(pts) {\n\t\tvar t = null;\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n\t\t\t\tt = pts[0];\n\t\t\t\tpts[0] = pts[i];\n\t\t\t\tpts[i] = t;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n\t\treturn pts;\n\t},\n\tcomputeOctRing: function computeOctRing(inputPts) {\n\t\tvar octPts = this.computeOctPts(inputPts);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.add(octPts, false);\n\t\tif (coordList.size() < 3) {\n\t\t\treturn null;\n\t\t}\n\t\tcoordList.closeRing();\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tlineOrPolygon: function lineOrPolygon(coordinates) {\n\t\tcoordinates = this.cleanRing(coordinates);\n\t\tif (coordinates.length === 3) {\n\t\t\treturn this._geomFactory.createLineString([coordinates[0], coordinates[1]]);\n\t\t}\n\t\tvar linearRing = this._geomFactory.createLinearRing(coordinates);\n\t\treturn this._geomFactory.createPolygon(linearRing, null);\n\t},\n\tcleanRing: function cleanRing(original) {\n\t\tAssert.equals(original[0], original[original.length - 1]);\n\t\tvar cleanedRing = new ArrayList();\n\t\tvar previousDistinctCoordinate = null;\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\n\t\t\tvar currentCoordinate = original[i];\n\t\t\tvar nextCoordinate = original[i + 1];\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcleanedRing.add(currentCoordinate);\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\n\t\t}\n\t\tcleanedRing.add(original[original.length - 1]);\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\n\t},\n\tisBetween: function isBetween(c1, c2, c3) {\n\t\tif (CGAlgorithms.computeOrientation(c1, c2, c3) !== 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (c1.x !== c3.x) {\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (c1.y !== c3.y) {\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\treduce: function reduce(inputPts) {\n\t\tvar polyPts = this.computeOctRing(inputPts);\n\t\tif (polyPts === null) return inputPts;\n\t\tvar reducedSet = new TreeSet();\n\t\tfor (var i = 0; i < polyPts.length; i++) {\n\t\t\treducedSet.add(polyPts[i]);\n\t\t}\n\t\tfor (var i = 0; i < inputPts.length; i++) {\n\t\t\tif (!CGAlgorithms.isPointInRing(inputPts[i], polyPts)) {\n\t\t\t\treducedSet.add(inputPts[i]);\n\t\t\t}\n\t\t}\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\n\t\treturn reducedPts;\n\t},\n\tgetConvexHull: function getConvexHull() {\n\t\tif (this._inputPts.length === 0) {\n\t\t\treturn this._geomFactory.createGeometryCollection(null);\n\t\t}\n\t\tif (this._inputPts.length === 1) {\n\t\t\treturn this._geomFactory.createPoint(this._inputPts[0]);\n\t\t}\n\t\tif (this._inputPts.length === 2) {\n\t\t\treturn this._geomFactory.createLineString(this._inputPts);\n\t\t}\n\t\tvar reducedPts = this._inputPts;\n\t\tif (this._inputPts.length > 50) {\n\t\t\treducedPts = this.reduce(this._inputPts);\n\t\t}\n\t\tvar sortedPts = this.preSort(reducedPts);\n\t\tvar cHS = this.grahamScan(sortedPts);\n\t\tvar cH = this.toCoordinateArray(cHS);\n\t\treturn this.lineOrPolygon(cH);\n\t},\n\tpadArray3: function padArray3(pts) {\n\t\tvar pad = new Array(3).fill(null);\n\t\tfor (var i = 0; i < pad.length; i++) {\n\t\t\tif (i < pts.length) {\n\t\t\t\tpad[i] = pts[i];\n\t\t\t} else pad[i] = pts[0];\n\t\t}\n\t\treturn pad;\n\t},\n\tcomputeOctPts: function computeOctPts(inputPts) {\n\t\tvar pts = new Array(8).fill(null);\n\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\tpts[j] = inputPts[0];\n\t\t}\n\t\tfor (var i = 1; i < inputPts.length; i++) {\n\t\t\tif (inputPts[i].x < pts[0].x) {\n\t\t\t\tpts[0] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n\t\t\t\tpts[1] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y > pts[2].y) {\n\t\t\t\tpts[2] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n\t\t\t\tpts[3] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x > pts[4].x) {\n\t\t\t\tpts[4] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n\t\t\t\tpts[5] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y < pts[6].y) {\n\t\t\t\tpts[6] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n\t\t\t\tpts[7] = inputPts[i];\n\t\t\t}\n\t\t}\n\t\treturn pts;\n\t},\n\ttoCoordinateArray: function toCoordinateArray(stack) {\n\t\tvar coordinates = new Array(stack.size()).fill(null);\n\t\tfor (var i = 0; i < stack.size(); i++) {\n\t\t\tvar coordinate = stack.get(i);\n\t\t\tcoordinates[i] = coordinate;\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgrahamScan: function grahamScan(c) {\n\t\tvar p = null;\n\t\tvar ps = new Stack$2();\n\t\tp = ps.push(c[0]);\n\t\tp = ps.push(c[1]);\n\t\tp = ps.push(c[2]);\n\t\tfor (var i = 3; i < c.length; i++) {\n\t\t\tp = ps.pop();\n\t\t\twhile (!ps.empty() && CGAlgorithms.computeOrientation(ps.peek(), p, c[i]) > 0) {\n\t\t\t\tp = ps.pop();\n\t\t\t}\n\t\t\tp = ps.push(p);\n\t\t\tp = ps.push(c[i]);\n\t\t}\n\t\tp = ps.push(c[0]);\n\t\treturn ps;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConvexHull;\n\t}\n});\nConvexHull.extractCoordinates = function (geom) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tgeom.apply(filter);\n\treturn filter.getCoordinates();\n};\nfunction RadialComparator() {\n\tthis._origin = null;\n\tvar origin = arguments[0];\n\tthis._origin = origin;\n}\nextend(RadialComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar p1 = o1;\n\t\tvar p2 = o2;\n\t\treturn RadialComparator.polarCompare(this._origin, p1, p2);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RadialComparator;\n\t}\n});\nRadialComparator.polarCompare = function (o, p, q) {\n\tvar dxp = p.x - o.x;\n\tvar dyp = p.y - o.y;\n\tvar dxq = q.x - o.x;\n\tvar dyq = q.y - o.y;\n\tvar orient = CGAlgorithms.computeOrientation(o, p, q);\n\tif (orient === CGAlgorithms.COUNTERCLOCKWISE) return 1;\n\tif (orient === CGAlgorithms.CLOCKWISE) return -1;\n\tvar op = dxp * dxp + dyp * dyp;\n\tvar oq = dxq * dxq + dyq * dyq;\n\tif (op < oq) {\n\t\treturn -1;\n\t}\n\tif (op > oq) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\nConvexHull.RadialComparator = RadialComparator;\n\nfunction GeometryTransformer() {\n\tthis._inputGeom = null;\n\tthis._factory = null;\n\tthis._pruneEmptyGeometry = true;\n\tthis._preserveGeometryCollectionType = true;\n\tthis._preserveCollections = false;\n\tthis._preserveType = false;\n}\nextend(GeometryTransformer.prototype, {\n\ttransformPoint: function transformPoint(geom, parent) {\n\t\treturn this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformPolygon: function transformPolygon(geom, parent) {\n\t\tvar isAllValidLinearRings = true;\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n\t\t\tholes.add(hole);\n\t\t}\n\t\tif (isAllValidLinearRings) return this._factory.createPolygon(shell, holes.toArray([]));else {\n\t\t\tvar components = new ArrayList();\n\t\t\tif (shell !== null) components.add(shell);\n\t\t\tcomponents.addAll(holes);\n\t\t\treturn this._factory.buildGeometry(components);\n\t\t}\n\t},\n\tcreateCoordinateSequence: function createCoordinateSequence(coords) {\n\t\treturn this._factory.getCoordinateSequenceFactory().create(coords);\n\t},\n\tgetInputGeometry: function getInputGeometry() {\n\t\treturn this._inputGeom;\n\t},\n\ttransformMultiLineString: function transformMultiLineString(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\treturn this.copy(coords);\n\t},\n\ttransformLineString: function transformLineString(geom, parent) {\n\t\treturn this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformMultiPoint: function transformMultiPoint(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransformMultiPolygon: function transformMultiPolygon(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\tcopy: function copy(seq) {\n\t\treturn seq.copy();\n\t},\n\ttransformGeometryCollection: function transformGeometryCollection(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\tif (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransform: function transform(inputGeom) {\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._factory = inputGeom.getFactory();\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n\t},\n\ttransformLinearRing: function transformLinearRing(geom, parent) {\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n\t\tif (seq === null) return this._factory.createLinearRing(null);\n\t\tvar seqSize = seq.size();\n\t\tif (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq);\n\t\treturn this._factory.createLinearRing(seq);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryTransformer;\n\t}\n});\n\nfunction LineStringSnapper() {\n\tthis._snapTolerance = 0.0;\n\tthis._srcPts = null;\n\tthis._seg = new LineSegment();\n\tthis._allowSnappingToSourceVertices = false;\n\tthis._isClosed = false;\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n\t\tvar srcLine = arguments[0],\n\t\t    snapTolerance = arguments[1];\n\t\tLineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n\t\tvar srcPts = arguments[0],\n\t\t    snapTolerance = arguments[1];\n\t\tthis._srcPts = srcPts;\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\n\t\tthis._snapTolerance = snapTolerance;\n\t}\n}\nextend(LineStringSnapper.prototype, {\n\tsnapVertices: function snapVertices(srcCoords, snapPts) {\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar srcPt = srcCoords.get(i);\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\n\t\t\tif (snapVert !== null) {\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n\t\t\t}\n\t\t}\n\t},\n\tfindSnapForVertex: function findSnapForVertex(pt, snapPts) {\n\t\tfor (var i = 0; i < snapPts.length; i++) {\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\n\t\t\tif (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i];\n\t\t}\n\t\treturn null;\n\t},\n\tsnapTo: function snapTo(snapPts) {\n\t\tvar coordList = new CoordinateList(this._srcPts);\n\t\tthis.snapVertices(coordList, snapPts);\n\t\tthis.snapSegments(coordList, snapPts);\n\t\tvar newPts = coordList.toCoordinateArray();\n\t\treturn newPts;\n\t},\n\tsnapSegments: function snapSegments(srcCoords, snapPts) {\n\t\tif (snapPts.length === 0) return null;\n\t\tvar distinctPtCount = snapPts.length;\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\n\t\t\tvar snapPt = snapPts[i];\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\t\t\tif (index >= 0) {\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\n\t\t\t}\n\t\t}\n\t},\n\tfindSegmentIndexToSnap: function findSegmentIndexToSnap(snapPt, srcCoords) {\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tvar snapIndex = -1;\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\n\t\t\tthis._seg.p0 = srcCoords.get(i);\n\t\t\tthis._seg.p1 = srcCoords.get(i + 1);\n\t\t\tif (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) {\n\t\t\t\tif (this._allowSnappingToSourceVertices) continue;else return -1;\n\t\t\t}\n\t\t\tvar dist = this._seg.distance(snapPt);\n\t\t\tif (dist < this._snapTolerance && dist < minDist) {\n\t\t\t\tminDist = dist;\n\t\t\t\tsnapIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn snapIndex;\n\t},\n\tsetAllowSnappingToSourceVertices: function setAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n\t\tthis._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringSnapper;\n\t}\n});\nLineStringSnapper.isClosed = function (pts) {\n\tif (pts.length <= 1) return false;\n\treturn pts[0].equals2D(pts[pts.length - 1]);\n};\n\nfunction GeometrySnapper() {\n\tthis._srcGeom = null;\n\tvar srcGeom = arguments[0];\n\tthis._srcGeom = srcGeom;\n}\nextend(GeometrySnapper.prototype, {\n\tsnapTo: function snapTo(snapGeom, snapTolerance) {\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\n\t\treturn snapTrans.transform(this._srcGeom);\n\t},\n\tsnapToSelf: function snapToSelf(snapTolerance, cleanResult) {\n\t\tvar snapPts = this.extractTargetCoordinates(this._srcGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n\t\tvar snappedGeom = snapTrans.transform(this._srcGeom);\n\t\tvar result = snappedGeom;\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\n\t\t\tresult = snappedGeom.buffer(0);\n\t\t}\n\t\treturn result;\n\t},\n\tcomputeSnapTolerance: function computeSnapTolerance(ringPts) {\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\n\t\tvar snapTol = minSegLen / 10;\n\t\treturn snapTol;\n\t},\n\textractTargetCoordinates: function extractTargetCoordinates(g) {\n\t\tvar ptSet = new TreeSet();\n\t\tvar pts = g.getCoordinates();\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tptSet.add(pts[i]);\n\t\t}\n\t\treturn ptSet.toArray(new Array(0).fill(null));\n\t},\n\tcomputeMinimumSegmentLength: function computeMinimumSegmentLength(pts) {\n\t\tvar minSegLen = Double.MAX_VALUE;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\n\t\t}\n\t\treturn minSegLen;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometrySnapper;\n\t}\n});\nGeometrySnapper.snap = function (g0, g1, snapTolerance) {\n\tvar snapGeom = new Array(2).fill(null);\n\tvar snapper0 = new GeometrySnapper(g0);\n\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n\tvar snapper1 = new GeometrySnapper(g1);\n\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n\treturn snapGeom;\n};\nGeometrySnapper.computeOverlaySnapTolerance = function () {\n\tif (arguments.length === 1) {\n\t\tvar g = arguments[0];\n\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n\t\tvar pm = g.getPrecisionModel();\n\t\tif (pm.getType() === PrecisionModel.FIXED) {\n\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n\t\t}\n\t\treturn snapTolerance;\n\t} else if (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n\t}\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function (g) {\n\tvar env = g.getEnvelopeInternal();\n\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\n\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n\treturn snapTol;\n};\nGeometrySnapper.snapToSelf = function (geom, snapTolerance, cleanResult) {\n\tvar snapper0 = new GeometrySnapper(geom);\n\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\n};\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\nfunction SnapTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._snapTolerance = null;\n\tthis._snapPts = null;\n\tthis._isSelfSnap = false;\n\tif (arguments.length === 2) {\n\t\tvar snapTolerance = arguments[0],\n\t\t    snapPts = arguments[1];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t} else if (arguments.length === 3) {\n\t\tvar snapTolerance = arguments[0],\n\t\t    snapPts = arguments[1],\n\t\t    isSelfSnap = arguments[2];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t\tthis._isSelfSnap = isSelfSnap;\n\t}\n}\ninherits$1(SnapTransformer, GeometryTransformer);\nextend(SnapTransformer.prototype, {\n\tsnapLine: function snapLine(srcPts, snapPts) {\n\t\tvar snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n\t\tsnapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n\t\treturn snapper.snapTo(snapPts);\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tvar srcPts = coords.toCoordinateArray();\n\t\tvar newPts = this.snapLine(srcPts, this._snapPts);\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SnapTransformer;\n\t}\n});\n\nfunction CommonBits() {\n\tthis._isFirst = true;\n\tthis._commonMantissaBitsCount = 53;\n\tthis._commonBits = 0;\n\tthis._commonSignExp = null;\n}\nextend(CommonBits.prototype, {\n\tgetCommon: function getCommon() {\n\t\treturn Double.longBitsToDouble(this._commonBits);\n\t},\n\tadd: function add(num) {\n\t\tvar numBits = Double.doubleToLongBits(num);\n\t\tif (this._isFirst) {\n\t\t\tthis._commonBits = numBits;\n\t\t\tthis._commonSignExp = CommonBits.signExpBits(this._commonBits);\n\t\t\tthis._isFirst = false;\n\t\t\treturn null;\n\t\t}\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\n\t\tif (numSignExp !== this._commonSignExp) {\n\t\t\tthis._commonBits = 0;\n\t\t\treturn null;\n\t\t}\n\t\tthis._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n\t\tthis._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n\t},\n\ttoString: function toString() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar bits = arguments[0];\n\t\t\tvar x = Double.longBitsToDouble(bits);\n\t\t\tvar numStr = Long.toBinaryString(bits);\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n\t\t\treturn str;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CommonBits;\n\t}\n});\nCommonBits.getBit = function (bits, i) {\n\tvar mask = 1 << i;\n\treturn (bits & mask) !== 0 ? 1 : 0;\n};\nCommonBits.signExpBits = function (num) {\n\treturn num >> 52;\n};\nCommonBits.zeroLowerBits = function (bits, nBits) {\n\tvar invMask = (1 << nBits) - 1;\n\tvar mask = ~invMask;\n\tvar zeroed = bits & mask;\n\treturn zeroed;\n};\nCommonBits.numCommonMostSigMantissaBits = function (num1, num2) {\n\tvar count = 0;\n\tfor (var i = 52; i >= 0; i--) {\n\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n\t\tcount++;\n\t}\n\treturn 52;\n};\n\nfunction CommonBitsRemover() {\n\tthis._commonCoord = null;\n\tthis._ccFilter = new CommonCoordinateFilter();\n}\nextend(CommonBitsRemover.prototype, {\n\taddCommonBits: function addCommonBits(geom) {\n\t\tvar trans = new Translater(this._commonCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t},\n\tremoveCommonBits: function removeCommonBits(geom) {\n\t\tif (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom;\n\t\tvar invCoord = new Coordinate(this._commonCoord);\n\t\tinvCoord.x = -invCoord.x;\n\t\tinvCoord.y = -invCoord.y;\n\t\tvar trans = new Translater(invCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t\treturn geom;\n\t},\n\tgetCommonCoordinate: function getCommonCoordinate() {\n\t\treturn this._commonCoord;\n\t},\n\tadd: function add(geom) {\n\t\tgeom.apply(this._ccFilter);\n\t\tthis._commonCoord = this._ccFilter.getCommonCoordinate();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CommonBitsRemover;\n\t}\n});\nfunction CommonCoordinateFilter() {\n\tthis._commonBitsX = new CommonBits();\n\tthis._commonBitsY = new CommonBits();\n}\nextend(CommonCoordinateFilter.prototype, {\n\tfilter: function filter(coord) {\n\t\tthis._commonBitsX.add(coord.x);\n\t\tthis._commonBitsY.add(coord.y);\n\t},\n\tgetCommonCoordinate: function getCommonCoordinate() {\n\t\treturn new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CommonCoordinateFilter;\n\t}\n});\nfunction Translater() {\n\tthis.trans = null;\n\tvar trans = arguments[0];\n\tthis.trans = trans;\n}\nextend(Translater.prototype, {\n\tfilter: function filter(seq, i) {\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\n\t\tseq.setOrdinate(i, 0, xp);\n\t\tseq.setOrdinate(i, 1, yp);\n\t},\n\tisDone: function isDone() {\n\t\treturn false;\n\t},\n\tisGeometryChanged: function isGeometryChanged() {\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [CoordinateSequenceFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Translater;\n\t}\n});\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\nCommonBitsRemover.Translater = Translater;\n\nfunction GeometryCollectionIterator() {\n\tthis._parent = null;\n\tthis._atStart = null;\n\tthis._max = null;\n\tthis._index = null;\n\tthis._subcollectionIterator = null;\n\tvar parent = arguments[0];\n\tthis._parent = parent;\n\tthis._atStart = true;\n\tthis._index = 0;\n\tthis._max = parent.getNumGeometries();\n}\nextend(GeometryCollectionIterator.prototype, {\n\tnext: function next() {\n\t\tif (this._atStart) {\n\t\t\tthis._atStart = false;\n\t\t\tif (GeometryCollectionIterator.isAtomic(this._parent)) this._index++;\n\t\t\treturn this._parent;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn this._subcollectionIterator.next();\n\t\t\t} else {\n\t\t\t\tthis._subcollectionIterator = null;\n\t\t\t}\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tvar obj = this._parent.getGeometryN(this._index++);\n\t\tif (obj instanceof GeometryCollection) {\n\t\t\tthis._subcollectionIterator = new GeometryCollectionIterator(obj);\n\t\t\treturn this._subcollectionIterator.next();\n\t\t}\n\t\treturn obj;\n\t},\n\tremove: function remove() {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function hasNext() {\n\t\tif (this._atStart) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._subcollectionIterator = null;\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCollectionIterator;\n\t}\n});\nGeometryCollectionIterator.isAtomic = function (geom) {\n\treturn !(geom instanceof GeometryCollection);\n};\n\nfunction PointLocator() {\n\tthis._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n\tthis._isIn = null;\n\tthis._numBoundaries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar boundaryRule = arguments[0];\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n\t\tthis._boundaryRule = boundaryRule;\n\t}\n}\nextend(PointLocator.prototype, {\n\tlocateInternal: function locateInternal() {\n\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n\t\t\tvar p = arguments[0],\n\t\t\t    poly = arguments[1];\n\t\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\t\tvar shell = poly.getExteriorRing();\n\t\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\n\t\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n\t\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\n\t\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\t}\n\t\t\treturn Location.INTERIOR;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n\t\t\tvar p = arguments[0],\n\t\t\t    l = arguments[1];\n\t\t\tif (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\t\tvar pt = l.getCoordinates();\n\t\t\tif (!l.isClosed()) {\n\t\t\t\tif (p.equals(pt[0]) || p.equals(pt[pt.length - 1])) {\n\t\t\t\t\treturn Location.BOUNDARY;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (CGAlgorithms.isOnLine(p, pt)) return Location.INTERIOR;\n\t\t\treturn Location.EXTERIOR;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n\t\t\tvar p = arguments[0],\n\t\t\t    pt = arguments[1];\n\t\t\tvar ptCoord = pt.getCoordinate();\n\t\t\tif (ptCoord.equals2D(p)) return Location.INTERIOR;\n\t\t\treturn Location.EXTERIOR;\n\t\t}\n\t},\n\tlocateInPolygonRing: function locateInPolygonRing(p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn CGAlgorithms.locatePointInRing(p, ring.getCoordinates());\n\t},\n\tintersects: function intersects(p, geom) {\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\n\t},\n\tupdateLocationInfo: function updateLocationInfo(loc) {\n\t\tif (loc === Location.INTERIOR) this._isIn = true;\n\t\tif (loc === Location.BOUNDARY) this._numBoundaries++;\n\t},\n\tcomputeLocation: function computeLocation(p, geom) {\n\t\tif (geom instanceof Point) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t}\n\t\tif (geom instanceof LineString) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\n\t\t} else if (geom instanceof MultiLineString) {\n\t\t\tvar ml = geom;\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\n\t\t\t\tvar l = ml.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, l));\n\t\t\t}\n\t\t} else if (geom instanceof MultiPolygon) {\n\t\t\tvar mpoly = geom;\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, poly));\n\t\t\t}\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\n\t\t\t}\n\t\t}\n\t},\n\tlocate: function locate(p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\tif (geom instanceof LineString) {\n\t\t\treturn this.locateInternal(p, geom);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\treturn this.locateInternal(p, geom);\n\t\t}\n\t\tthis._isIn = false;\n\t\tthis._numBoundaries = 0;\n\t\tthis.computeLocation(p, geom);\n\t\tif (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY;\n\t\tif (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointLocator;\n\t}\n});\n\nfunction Octant() {}\nextend(Octant.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Octant;\n\t}\n});\nOctant.octant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tvar dx = arguments[0],\n\t\t    dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tvar adx = Math.abs(dx);\n\t\tvar ady = Math.abs(dy);\n\t\tif (dx >= 0) {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 0;else return 1;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 7;else return 6;\n\t\t\t}\n\t\t} else {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 3;else return 2;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 4;else return 5;\n\t\t\t}\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n\t\treturn Octant.octant(dx, dy);\n\t}\n};\n\nfunction SegmentString() {}\nextend(SegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {},\n\tsize: function size() {},\n\tgetCoordinate: function getCoordinate(i) {},\n\tisClosed: function isClosed() {},\n\tsetData: function setData(data) {},\n\tgetData: function getData() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentString;\n\t}\n});\n\nfunction BasicSegmentString() {\n\tthis._pts = null;\n\tthis._data = null;\n\tvar pts = arguments[0],\n\t    data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n}\nextend(BasicSegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this._pts;\n\t},\n\tsize: function size() {\n\t\treturn this._pts.length;\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this._pts[i];\n\t},\n\tisClosed: function isClosed() {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t},\n\tgetSegmentOctant: function getSegmentOctant(index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function setData(data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this._data;\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BasicSegmentString;\n\t}\n});\n\nfunction Boundable() {}\nextend(Boundable.prototype, {\n\tgetBounds: function getBounds() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Boundable;\n\t}\n});\n\nfunction ItemBoundable() {\n\tthis._bounds = null;\n\tthis._item = null;\n\tvar bounds = arguments[0],\n\t    item = arguments[1];\n\tthis._bounds = bounds;\n\tthis._item = item;\n}\nextend(ItemBoundable.prototype, {\n\tgetItem: function getItem() {\n\t\treturn this._item;\n\t},\n\tgetBounds: function getBounds() {\n\t\treturn this._bounds;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ItemBoundable;\n\t}\n});\n\nfunction PriorityQueue() {\n\tthis._size = null;\n\tthis._items = null;\n\tthis._size = 0;\n\tthis._items = new ArrayList();\n\tthis._items.add(null);\n}\nextend(PriorityQueue.prototype, {\n\tpoll: function poll() {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this._items.get(1);\n\t\tthis._items.set(1, this._items.get(this._size));\n\t\tthis._size -= 1;\n\t\tthis.reorder(1);\n\t\treturn minItem;\n\t},\n\tsize: function size() {\n\t\treturn this._size;\n\t},\n\treorder: function reorder(hole) {\n\t\tvar child = null;\n\t\tvar tmp = this._items.get(hole);\n\t\tfor (; hole * 2 <= this._size; hole = child) {\n\t\t\tchild = hole * 2;\n\t\t\tif (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++;\n\t\t\tif (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child));else break;\n\t\t}\n\t\tthis._items.set(hole, tmp);\n\t},\n\tclear: function clear() {\n\t\tthis._size = 0;\n\t\tthis._items.clear();\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this._size === 0;\n\t},\n\tadd: function add(x) {\n\t\tthis._items.add(null);\n\t\tthis._size += 1;\n\t\tvar hole = this._size;\n\t\tthis._items.set(0, x);\n\t\tfor (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n\t\t\tthis._items.set(hole, this._items.get(Math.trunc(hole / 2)));\n\t\t}\n\t\tthis._items.set(hole, x);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PriorityQueue;\n\t}\n});\n\nfunction ItemVisitor() {}\nextend(ItemVisitor.prototype, {\n\tvisitItem: function visitItem(item) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ItemVisitor;\n\t}\n});\n\nfunction SpatialIndex() {}\nextend(SpatialIndex.prototype, {\n\tinsert: function insert(itemEnv, item) {},\n\tremove: function remove(itemEnv, item) {},\n\tquery: function query() {\n\t\t\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SpatialIndex;\n\t}\n});\n\nfunction AbstractNode() {\n\tthis._childBoundables = new ArrayList();\n\tthis._bounds = null;\n\tthis._level = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar level = arguments[0];\n\t\tthis._level = level;\n\t}\n}\nextend(AbstractNode.prototype, {\n\tgetLevel: function getLevel() {\n\t\treturn this._level;\n\t},\n\tsize: function size() {\n\t\treturn this._childBoundables.size();\n\t},\n\tgetChildBoundables: function getChildBoundables() {\n\t\treturn this._childBoundables;\n\t},\n\taddChildBoundable: function addChildBoundable(childBoundable) {\n\t\tAssert.isTrue(this._bounds === null);\n\t\tthis._childBoundables.add(childBoundable);\n\t},\n\tisEmpty: function isEmpty() {\n\t\treturn this._childBoundables.isEmpty();\n\t},\n\tgetBounds: function getBounds() {\n\t\tif (this._bounds === null) {\n\t\t\tthis._bounds = this.computeBounds();\n\t\t}\n\t\treturn this._bounds;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn AbstractNode;\n\t}\n});\nAbstractNode.serialVersionUID = 6493722185909573708;\n\nvar Collections = {\n  reverseOrder: function reverseOrder() {\n    return {\n      compare: function compare(a, b) {\n        return b.compareTo(a);\n      }\n    };\n  },\n  min: function min(l) {\n    Collections.sort(l);\n    return l.get(0);\n  },\n  sort: function sort(l, c) {\n    var a = l.toArray();\n    if (c) {\n      Arrays.sort(a, c);\n    } else {\n      Arrays.sort(a);\n    }\n    var i = l.iterator();\n    for (var pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next();\n      i.set(a[pos]);\n    }\n  },\n  singletonList: function singletonList(o) {\n    var arrayList = new ArrayList();\n    arrayList.add(o);\n    return arrayList;\n  }\n};\n\nfunction BoundablePair() {\n\tthis._boundable1 = null;\n\tthis._boundable2 = null;\n\tthis._distance = null;\n\tthis._itemDistance = null;\n\tvar boundable1 = arguments[0],\n\t    boundable2 = arguments[1],\n\t    itemDistance = arguments[2];\n\tthis._boundable1 = boundable1;\n\tthis._boundable2 = boundable2;\n\tthis._itemDistance = itemDistance;\n\tthis._distance = this.distance();\n}\nextend(BoundablePair.prototype, {\n\texpandToQueue: function expandToQueue(priQ, minDistance) {\n\t\tvar isComp1 = BoundablePair.isComposite(this._boundable1);\n\t\tvar isComp2 = BoundablePair.isComposite(this._boundable2);\n\t\tif (isComp1 && isComp2) {\n\t\t\tif (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n\t\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isComp1) {\n\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\treturn null;\n\t\t} else if (isComp2) {\n\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\treturn null;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\n\t},\n\tisLeaves: function isLeaves() {\n\t\treturn !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2));\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar nd = o;\n\t\tif (this._distance < nd._distance) return -1;\n\t\tif (this._distance > nd._distance) return 1;\n\t\treturn 0;\n\t},\n\texpand: function expand(bndComposite, bndOther, priQ, minDistance) {\n\t\tvar children = bndComposite.getChildBoundables();\n\t\tfor (var i = children.iterator(); i.hasNext();) {\n\t\t\tvar child = i.next();\n\t\t\tvar bp = new BoundablePair(child, bndOther, this._itemDistance);\n\t\t\tif (bp.getDistance() < minDistance) {\n\t\t\t\tpriQ.add(bp);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundable: function getBoundable(i) {\n\t\tif (i === 0) return this._boundable1;\n\t\treturn this._boundable2;\n\t},\n\tgetDistance: function getDistance() {\n\t\treturn this._distance;\n\t},\n\tdistance: function distance() {\n\t\tif (this.isLeaves()) {\n\t\t\treturn this._itemDistance.distance(this._boundable1, this._boundable2);\n\t\t}\n\t\treturn this._boundable1.getBounds().distance(this._boundable2.getBounds());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BoundablePair;\n\t}\n});\nBoundablePair.area = function (b) {\n\treturn b.getBounds().getArea();\n};\nBoundablePair.isComposite = function (item) {\n\treturn item instanceof AbstractNode;\n};\n\nfunction AbstractSTRtree() {\n\tthis._root = null;\n\tthis._built = false;\n\tthis._itemBoundables = new ArrayList();\n\tthis._nodeCapacity = null;\n\tif (arguments.length === 0) {\n\t\tAbstractSTRtree.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tvar nodeCapacity = arguments[0];\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n\t\tthis._nodeCapacity = nodeCapacity;\n\t}\n}\nextend(AbstractSTRtree.prototype, {\n\tgetNodeCapacity: function getNodeCapacity() {\n\t\treturn this._nodeCapacity;\n\t},\n\tlastNode: function lastNode(nodes) {\n\t\treturn nodes.get(nodes.size() - 1);\n\t},\n\tsize: function size() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.size(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar size = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tsize += this.size(childBoundable);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tsize += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn size;\n\t\t}\n\t},\n\tremoveItem: function removeItem(node, item) {\n\t\tvar childToRemove = null;\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (childBoundable instanceof ItemBoundable) {\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\n\t\t\t}\n\t\t}\n\t\tif (childToRemove !== null) {\n\t\t\tnode.getChildBoundables().remove(childToRemove);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\titemsTree: function itemsTree() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.build();\n\t\t\tvar valuesTree = this.itemsTree(this._root);\n\t\t\tif (valuesTree === null) return new ArrayList();\n\t\t\treturn valuesTree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar valuesTreeForNode = new ArrayList();\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\n\t\t\treturn valuesTreeForNode;\n\t\t}\n\t},\n\tinsert: function insert(bounds, item) {\n\t\tAssert.isTrue(!this._built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\t\tthis._itemBoundables.add(new ItemBoundable(bounds, item));\n\t},\n\tboundablesAtLevel: function boundablesAtLevel() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar level = arguments[0];\n\t\t\tvar boundables = new ArrayList();\n\t\t\tthis.boundablesAtLevel(level, this._root, boundables);\n\t\t\treturn boundables;\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar level = arguments[0],\n\t\t\t    top = arguments[1],\n\t\t\t    boundables = arguments[2];\n\t\t\tAssert.isTrue(level > -2);\n\t\t\tif (top.getLevel() === level) {\n\t\t\t\tboundables.add(top);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar boundable = i.next();\n\t\t\t\tif (boundable instanceof AbstractNode) {\n\t\t\t\t\tthis.boundablesAtLevel(level, boundable, boundables);\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\n\t\t\t\t\tif (level === -1) {\n\t\t\t\t\t\tboundables.add(boundable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchBounds = arguments[0];\n\t\t\tthis.build();\n\t\t\tvar matches = new ArrayList();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.query(searchBounds, this._root, matches);\n\t\t\t}\n\t\t\treturn matches;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar searchBounds = arguments[0],\n\t\t\t    visitor = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.query(searchBounds, this._root, visitor);\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar searchBounds = arguments[0],\n\t\t\t\t    node = arguments[1],\n\t\t\t\t    visitor = arguments[2];\n\t\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\t\tthis.query(searchBounds, childBoundable, visitor);\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\t\tvisitor.visitItem(childBoundable.getItem());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar searchBounds = arguments[0],\n\t\t\t\t    node = arguments[1],\n\t\t\t\t    matches = arguments[2];\n\t\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\t\tthis.query(searchBounds, childBoundable, matches);\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\t\tmatches.add(childBoundable.getItem());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function build() {\n\t\tif (this._built) return null;\n\t\tthis._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n\t\tthis._itemBoundables = null;\n\t\tthis._built = true;\n\t},\n\tgetRoot: function getRoot() {\n\t\tthis.build();\n\t\treturn this._root;\n\t},\n\tremove: function remove() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar searchBounds = arguments[0],\n\t\t\t    item = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\treturn this.remove(searchBounds, this._root, item);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar searchBounds = arguments[0],\n\t\t\t    node = arguments[1],\n\t\t\t    item = arguments[2];\n\t\t\tvar found = this.removeItem(node, item);\n\t\t\tif (found) return true;\n\t\t\tvar childToPrune = null;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tfound = this.remove(searchBounds, childBoundable, item);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tchildToPrune = childBoundable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (childToPrune !== null) {\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn found;\n\t\t}\n\t},\n\tcreateHigherLevels: function createHigherLevels(boundablesOfALevel, level) {\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\t\tif (parentBoundables.size() === 1) {\n\t\t\treturn parentBoundables.get(0);\n\t\t}\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\n\t},\n\tdepth: function depth() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.depth(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar maxChildDepth = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxChildDepth + 1;\n\t\t}\n\t},\n\tcreateParentBoundables: function createParentBoundables(childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar parentBoundables = new ArrayList();\n\t\tparentBoundables.add(this.createNode(newLevel));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\n\t\t\t}\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tisEmpty: function isEmpty() {\n\t\tif (!this._built) return this._itemBoundables.isEmpty();\n\t\treturn this._root.isEmpty();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn AbstractSTRtree;\n\t}\n});\nAbstractSTRtree.compareDoubles = function (a, b) {\n\treturn a > b ? 1 : a < b ? -1 : 0;\n};\nfunction IntersectsOp$1() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp$1;\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n\nfunction ItemDistance() {}\nextend(ItemDistance.prototype, {\n\tdistance: function distance(item1, item2) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ItemDistance;\n\t}\n});\n\nfunction STRtree() {\n\tif (arguments.length === 0) {\n\t\tSTRtree.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tvar nodeCapacity = arguments[0];\n\t\tAbstractSTRtree.call(this, nodeCapacity);\n\t}\n}\ninherits$1(STRtree, AbstractSTRtree);\nextend(STRtree.prototype, {\n\tcreateParentBoundablesFromVerticalSlices: function createParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n\t\tAssert.isTrue(verticalSlices.length > 0);\n\t\tvar parentBoundables = new ArrayList();\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tcreateNode: function createNode(level) {\n\t\treturn new STRtreeNode(level);\n\t},\n\tsize: function size() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.size.call(this);\n\t\t} else return AbstractSTRtree.prototype.size.apply(this, arguments);\n\t},\n\tinsert: function insert() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar itemEnv = arguments[0],\n\t\t\t    item = arguments[1];\n\t\t\tif (itemEnv.isNull()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tAbstractSTRtree.prototype.insert.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.insert.apply(this, arguments);\n\t},\n\tgetIntersectsOp: function getIntersectsOp() {\n\t\treturn STRtree.intersectsOp;\n\t},\n\tverticalSlices: function verticalSlices(childBoundables, sliceCount) {\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n\t\tvar slices = new Array(sliceCount).fill(null);\n\t\tvar i = childBoundables.iterator();\n\t\tfor (var j = 0; j < sliceCount; j++) {\n\t\t\tslices[j] = new ArrayList();\n\t\t\tvar boundablesAddedToSlice = 0;\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tslices[j].add(childBoundable);\n\t\t\t\tboundablesAddedToSlice++;\n\t\t\t}\n\t\t}\n\t\treturn slices;\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchEnv = arguments[0];\n\t\t\treturn AbstractSTRtree.prototype.query.call(this, searchEnv);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar searchEnv = arguments[0],\n\t\t\t    visitor = arguments[1];\n\t\t\tAbstractSTRtree.prototype.query.call(this, searchEnv, visitor);\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar searchBounds = arguments[0],\n\t\t\t\t    node = arguments[1],\n\t\t\t\t    visitor = arguments[2];\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, visitor);\n\t\t\t} else if (hasInterface(arguments[2], List) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n\t\t\t\tvar searchBounds = arguments[0],\n\t\t\t\t    node = arguments[1],\n\t\t\t\t    matches = arguments[2];\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, matches);\n\t\t\t}\n\t\t}\n\t},\n\tgetComparator: function getComparator() {\n\t\treturn STRtree.yComparator;\n\t},\n\tcreateParentBoundablesFromVerticalSlice: function createParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n\t\treturn AbstractSTRtree.prototype.createParentBoundables.call(this, childBoundables, newLevel);\n\t},\n\tremove: function remove() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar itemEnv = arguments[0],\n\t\t\t    item = arguments[1];\n\t\t\treturn AbstractSTRtree.prototype.remove.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.remove.apply(this, arguments);\n\t},\n\tdepth: function depth() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.depth.call(this);\n\t\t} else return AbstractSTRtree.prototype.depth.apply(this, arguments);\n\t},\n\tcreateParentBoundables: function createParentBoundables(childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n\t},\n\tnearestNeighbour: function nearestNeighbour() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\n\t\t\t\tvar itemDist = arguments[0];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\n\t\t\t\tvar initBndPair = arguments[0];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n\t\t\t\tvar tree = arguments[0],\n\t\t\t\t    itemDist = arguments[1];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n\t\t\t\tvar initBndPair = arguments[0],\n\t\t\t\t    maxDistance = arguments[1];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar minPair = null;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\n\t\t\t\t\t\tminPair = bndPair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar env = arguments[0],\n\t\t\t    item = arguments[1],\n\t\t\t    itemDist = arguments[2];\n\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\treturn this.nearestNeighbour(bp)[0];\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn STRtree;\n\t}\n});\nSTRtree.centreX = function (e) {\n\treturn STRtree.avg(e.getMinX(), e.getMaxX());\n};\nSTRtree.avg = function (a, b) {\n\treturn (a + b) / 2;\n};\nSTRtree.centreY = function (e) {\n\treturn STRtree.avg(e.getMinY(), e.getMaxY());\n};\nfunction STRtreeNode() {\n\tvar level = arguments[0];\n\tAbstractNode.call(this, level);\n}\ninherits$1(STRtreeNode, AbstractNode);\nextend(STRtreeNode.prototype, {\n\tcomputeBounds: function computeBounds() {\n\t\tvar bounds = null;\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (bounds === null) {\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\n\t\t\t} else {\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn STRtreeNode;\n\t}\n});\nSTRtree.STRtreeNode = STRtreeNode;\nSTRtree.serialVersionUID = 259274702368956900;\nSTRtree.xComparator = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tcompare: function compare(o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n\t}\n};\nSTRtree.yComparator = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tcompare: function compare(o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n\t}\n};\nSTRtree.intersectsOp = {\n\tinterfaces_: function interfaces_() {\n\t\treturn [IntersectsOp];\n\t},\n\tintersects: function intersects(aBounds, bBounds) {\n\t\treturn aBounds.intersects(bBounds);\n\t}\n};\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\n\nfunction SegmentPointComparator() {}\nextend(SegmentPointComparator.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentPointComparator;\n\t}\n});\nSegmentPointComparator.relativeSign = function (x0, x1) {\n\tif (x0 < x1) return -1;\n\tif (x0 > x1) return 1;\n\treturn 0;\n};\nSegmentPointComparator.compare = function (octant, p0, p1) {\n\tif (p0.equals2D(p1)) return 0;\n\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\tswitch (octant) {\n\t\tcase 0:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\n\t\tcase 1:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\n\t\tcase 2:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\n\t\tcase 3:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\n\t\tcase 4:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\n\t\tcase 5:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\n\t\tcase 6:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\n\t\tcase 7:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\n\t}\n\tAssert.shouldNeverReachHere(\"invalid octant value\");\n\treturn 0;\n};\nSegmentPointComparator.compareValue = function (compareSign0, compareSign1) {\n\tif (compareSign0 < 0) return -1;\n\tif (compareSign0 > 0) return 1;\n\tif (compareSign1 < 0) return -1;\n\tif (compareSign1 > 0) return 1;\n\treturn 0;\n};\n\nfunction SegmentNode() {\n\tthis._segString = null;\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis._segmentOctant = null;\n\tthis._isInterior = null;\n\tvar segString = arguments[0],\n\t    coord = arguments[1],\n\t    segmentIndex = arguments[2],\n\t    segmentOctant = arguments[3];\n\tthis._segString = segString;\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis._segmentOctant = segmentOctant;\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n}\nextend(SegmentNode.prototype, {\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.coord;\n\t},\n\tprint: function print(out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar other = obj;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.coord.equals2D(other.coord)) return 0;\n\t\treturn SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord);\n\t},\n\tisEndPoint: function isEndPoint(maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\tisInterior: function isInterior() {\n\t\treturn this._isInterior;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentNode;\n\t}\n});\n\nfunction SegmentNodeList() {\n\tthis._nodeMap = new TreeMap();\n\tthis._edge = null;\n\tvar edge = arguments[0];\n\tthis._edge = edge;\n}\nextend(SegmentNodeList.prototype, {\n\tgetSplitCoordinates: function getSplitCoordinates() {\n\t\tvar coordList = new CoordinateList();\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\n\t\t\teiPrev = ei;\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\taddCollapsedNodes: function addCollapsedNodes() {\n\t\tvar collapsedVertexIndexes = new ArrayList();\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n\t\t\tvar vertexIndex = it.next().intValue();\n\t\t\tthis.add(this._edge.getCoordinate(vertexIndex), vertexIndex);\n\t\t}\n\t},\n\tprint: function print(out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\tfindCollapsesFromExistingVertices: function findCollapsesFromExistingVertices(collapsedVertexIndexes) {\n\t\tfor (var i = 0; i < this._edge.size() - 2; i++) {\n\t\t\tvar p0 = this._edge.getCoordinate(i);\n\t\t\tvar p1 = this._edge.getCoordinate(i + 1);\n\t\t\tvar p2 = this._edge.getCoordinate(i + 2);\n\t\t\tif (p0.equals2D(p2)) {\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\n\t\t\t}\n\t\t}\n\t},\n\taddEdgeCoordinates: function addEdgeCoordinates(ei0, ei1, coordList) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tcoordList.add(this._edge.getCoordinate(i));\n\t\t}\n\t\tif (useIntPt1) {\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function addSplitEdges(edgeList) {\n\t\tthis.addEndpoints();\n\t\tthis.addCollapsedNodes();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tfindCollapseIndex: function findCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\t\tif (!ei1.isInterior()) {\n\t\t\tnumVerticesBetween--;\n\t\t}\n\t\tif (numVerticesBetween === 1) {\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tfindCollapsesFromInsertedNodes: function findCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this._edge;\n\t},\n\taddEndpoints: function addEndpoints() {\n\t\tvar maxSegIndex = this._edge.size() - 1;\n\t\tthis.add(this._edge.getCoordinate(0), 0);\n\t\tthis.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n\t},\n\tcreateSplitEdge: function createSplitEdge(ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this._edge.getCoordinate(i);\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n\t\treturn new NodedSegmentString(pts, this._edge.getData());\n\t},\n\tadd: function add(intPt, segmentIndex) {\n\t\tvar eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tcheckSplitEdgesCorrectness: function checkSplitEdgesCorrectness(splitEdges) {\n\t\tvar edgePts = this._edge.getCoordinates();\n\t\tvar split0 = splitEdges.get(0);\n\t\tvar pt0 = split0.getCoordinate(0);\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\n\t\tvar splitnPts = splitn.getCoordinates();\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentNodeList;\n\t}\n});\nfunction NodeVertexIterator() {\n\tthis._nodeList = null;\n\tthis._edge = null;\n\tthis._nodeIt = null;\n\tthis._currNode = null;\n\tthis._nextNode = null;\n\tthis._currSegIndex = 0;\n\tvar nodeList = arguments[0];\n\tthis._nodeList = nodeList;\n\tthis._edge = nodeList.getEdge();\n\tthis._nodeIt = nodeList.iterator();\n\tthis.readNextNode();\n}\nextend(NodeVertexIterator.prototype, {\n\tnext: function next() {\n\t\tif (this._currNode === null) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode === null) return null;\n\t\tif (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n\t\treturn null;\n\t},\n\tremove: function remove() {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function hasNext() {\n\t\tif (this._nextNode === null) return false;\n\t\treturn true;\n\t},\n\treadNextNode: function readNextNode() {\n\t\tif (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next();else this._nextNode = null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeVertexIterator;\n\t}\n});\n\nfunction NodableSegmentString() {}\nextend(NodableSegmentString.prototype, {\n\taddIntersection: function addIntersection(intPt, segmentIndex) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodableSegmentString;\n\t}\n});\n\nfunction NodedSegmentString() {\n\tthis._nodeList = new SegmentNodeList(this);\n\tthis._pts = null;\n\tthis._data = null;\n\tvar pts = arguments[0],\n\t    data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n}\nextend(NodedSegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this._pts;\n\t},\n\tsize: function size() {\n\t\treturn this._pts.length;\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this._pts[i];\n\t},\n\tisClosed: function isClosed() {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t},\n\tgetSegmentOctant: function getSegmentOctant(index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function setData(data) {\n\t\tthis._data = data;\n\t},\n\tsafeOctant: function safeOctant(p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\treturn Octant.octant(p0, p1);\n\t},\n\tgetData: function getData() {\n\t\treturn this._data;\n\t},\n\taddIntersection: function addIntersection() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar intPt = arguments[0],\n\t\t\t    segmentIndex = arguments[1];\n\t\t\tthis.addIntersectionNode(intPt, segmentIndex);\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar li = arguments[0],\n\t\t\t    segmentIndex = arguments[1],\n\t\t\t    geomIndex = arguments[2],\n\t\t\t    intIndex = arguments[3];\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\t\tthis.addIntersection(intPt, segmentIndex);\n\t\t}\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t},\n\tgetNodeList: function getNodeList() {\n\t\treturn this._nodeList;\n\t},\n\taddIntersectionNode: function addIntersectionNode(intPt, segmentIndex) {\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this._pts.length) {\n\t\t\tvar nextPt = this._pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t}\n\t\t}\n\t\tvar ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n\t\treturn ei;\n\t},\n\taddIntersections: function addIntersections(li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [NodableSegmentString];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodedSegmentString;\n\t}\n});\nNodedSegmentString.getNodedSubstrings = function () {\n\tif (arguments.length === 1) {\n\t\tvar segStrings = arguments[0];\n\t\tvar resultEdgelist = new ArrayList();\n\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n\t\treturn resultEdgelist;\n\t} else if (arguments.length === 2) {\n\t\tvar segStrings = arguments[0],\n\t\t    resultEdgelist = arguments[1];\n\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\tvar ss = i.next();\n\t\t\tss.getNodeList().addSplitEdges(resultEdgelist);\n\t\t}\n\t}\n};\n\nfunction MonotoneChainOverlapAction() {\n\tthis.tempEnv1 = new Envelope();\n\tthis.tempEnv2 = new Envelope();\n\tthis._overlapSeg1 = new LineSegment();\n\tthis._overlapSeg2 = new LineSegment();\n}\nextend(MonotoneChainOverlapAction.prototype, {\n\toverlap: function overlap() {\n\t\tif (arguments.length === 2) {\n\t\t\t\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar mc1 = arguments[0],\n\t\t\t    start1 = arguments[1],\n\t\t\t    mc2 = arguments[2],\n\t\t\t    start2 = arguments[3];\n\t\t\tmc1.getLineSegment(start1, this._overlapSeg1);\n\t\t\tmc2.getLineSegment(start2, this._overlapSeg2);\n\t\t\tthis.overlap(this._overlapSeg1, this._overlapSeg2);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainOverlapAction;\n\t}\n});\n\nfunction MonotoneChain() {\n\tthis._pts = null;\n\tthis._start = null;\n\tthis._end = null;\n\tthis._env = null;\n\tthis._context = null;\n\tthis._id = null;\n\tvar pts = arguments[0],\n\t    start = arguments[1],\n\t    end = arguments[2],\n\t    context = arguments[3];\n\tthis._pts = pts;\n\tthis._start = start;\n\tthis._end = end;\n\tthis._context = context;\n}\nextend(MonotoneChain.prototype, {\n\tgetLineSegment: function getLineSegment(index, ls) {\n\t\tls.p0 = this._pts[index];\n\t\tls.p1 = this._pts[index + 1];\n\t},\n\tcomputeSelect: function computeSelect(searchEnv, start0, end0, mcs) {\n\t\tvar p0 = this._pts[start0];\n\t\tvar p1 = this._pts[end0];\n\t\tmcs.tempEnv1.init(p0, p1);\n\t\tif (end0 - start0 === 1) {\n\t\t\tmcs.select(this, start0);\n\t\t\treturn null;\n\t\t}\n\t\tif (!searchEnv.intersects(mcs.tempEnv1)) return null;\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\n\t\tif (start0 < mid) {\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\n\t\t}\n\t\tif (mid < end0) {\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\n\t\t}\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coord = new Array(this._end - this._start + 1).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._start; i <= this._end; i++) {\n\t\t\tcoord[index++] = this._pts[i];\n\t\t}\n\t\treturn coord;\n\t},\n\tcomputeOverlaps: function computeOverlaps(mc, mco) {\n\t\tthis.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n\t},\n\tsetId: function setId(id) {\n\t\tthis._id = id;\n\t},\n\tselect: function select(searchEnv, mcs) {\n\t\tthis.computeSelect(searchEnv, this._start, this._end, mcs);\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\tif (this._env === null) {\n\t\t\tvar p0 = this._pts[this._start];\n\t\t\tvar p1 = this._pts[this._end];\n\t\t\tthis._env = new Envelope(p0, p1);\n\t\t}\n\t\treturn this._env;\n\t},\n\tgetEndIndex: function getEndIndex() {\n\t\treturn this._end;\n\t},\n\tgetStartIndex: function getStartIndex() {\n\t\treturn this._start;\n\t},\n\tgetContext: function getContext() {\n\t\treturn this._context;\n\t},\n\tgetId: function getId() {\n\t\treturn this._id;\n\t},\n\tcomputeOverlapsInternal: function computeOverlapsInternal(start0, end0, mc, start1, end1, mco) {\n\t\tvar p00 = this._pts[start0];\n\t\tvar p01 = this._pts[end0];\n\t\tvar p10 = mc._pts[start1];\n\t\tvar p11 = mc._pts[end1];\n\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\tmco.overlap(this, start0, mc, start1);\n\t\t\treturn null;\n\t\t}\n\t\tmco.tempEnv1.init(p00, p01);\n\t\tmco.tempEnv2.init(p10, p11);\n\t\tif (!mco.tempEnv1.intersects(mco.tempEnv2)) return null;\n\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\tif (start0 < mid0) {\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco);\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco);\n\t\t}\n\t\tif (mid0 < end0) {\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco);\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChain;\n\t}\n});\n\nfunction Quadrant() {}\nextend(Quadrant.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Quadrant;\n\t}\n});\nQuadrant.isNorthern = function (quad) {\n\treturn quad === Quadrant.NE || quad === Quadrant.NW;\n};\nQuadrant.isOpposite = function (quad1, quad2) {\n\tif (quad1 === quad2) return false;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return true;\n\treturn false;\n};\nQuadrant.commonHalfPlane = function (quad1, quad2) {\n\tif (quad1 === quad2) return quad1;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return -1;\n\tvar min = quad1 < quad2 ? quad1 : quad2;\n\tvar max = quad1 > quad2 ? quad1 : quad2;\n\tif (min === 0 && max === 3) return 3;\n\treturn min;\n};\nQuadrant.isInHalfPlane = function (quad, halfPlane) {\n\tif (halfPlane === Quadrant.SE) {\n\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\n\t}\n\treturn quad === halfPlane || quad === halfPlane + 1;\n};\nQuadrant.quadrant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tvar dx = arguments[0],\n\t\t    dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tif (dx >= 0.0) {\n\t\t\tif (dy >= 0.0) return Quadrant.NE;else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (dy >= 0.0) return Quadrant.NW;else return Quadrant.SW;\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\t\tif (p1.x >= p0.x) {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NE;else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NW;else return Quadrant.SW;\n\t\t}\n\t}\n};\nQuadrant.NE = 0;\nQuadrant.NW = 1;\nQuadrant.SW = 2;\nQuadrant.SE = 3;\n\nfunction MonotoneChainBuilder() {}\nextend(MonotoneChainBuilder.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainBuilder;\n\t}\n});\nMonotoneChainBuilder.getChainStartIndices = function (pts) {\n\tvar start = 0;\n\tvar startIndexList = new ArrayList();\n\tstartIndexList.add(new Integer(start));\n\tdo {\n\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\n\t\tstartIndexList.add(new Integer(last));\n\t\tstart = last;\n\t} while (start < pts.length - 1);\n\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n\treturn startIndex;\n};\nMonotoneChainBuilder.findChainEnd = function (pts, start) {\n\tvar safeStart = start;\n\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n\t\tsafeStart++;\n\t}\n\tif (safeStart >= pts.length - 1) {\n\t\treturn pts.length - 1;\n\t}\n\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n\tvar last = start + 1;\n\twhile (last < pts.length) {\n\t\tif (!pts[last - 1].equals2D(pts[last])) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t}\n\t\tlast++;\n\t}\n\treturn last - 1;\n};\nMonotoneChainBuilder.getChains = function () {\n\tif (arguments.length === 1) {\n\t\tvar pts = arguments[0];\n\t\treturn MonotoneChainBuilder.getChains(pts, null);\n\t} else if (arguments.length === 2) {\n\t\tvar pts = arguments[0],\n\t\t    context = arguments[1];\n\t\tvar mcList = new ArrayList();\n\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context);\n\t\t\tmcList.add(mc);\n\t\t}\n\t\treturn mcList;\n\t}\n};\nMonotoneChainBuilder.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n\nfunction Noder() {}\nextend(Noder.prototype, {\n\tcomputeNodes: function computeNodes(segStrings) {},\n\tgetNodedSubstrings: function getNodedSubstrings() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Noder;\n\t}\n});\n\nfunction SinglePassNoder() {\n\tthis._segInt = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar segInt = arguments[0];\n\t\tthis.setSegmentIntersector(segInt);\n\t}\n}\nextend(SinglePassNoder.prototype, {\n\tsetSegmentIntersector: function setSegmentIntersector(segInt) {\n\t\tthis._segInt = segInt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Noder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SinglePassNoder;\n\t}\n});\n\nfunction MCIndexNoder() {\n\tthis._monoChains = new ArrayList();\n\tthis._index = new STRtree();\n\tthis._idCounter = 0;\n\tthis._nodedSegStrings = null;\n\tthis._nOverlaps = 0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar si = arguments[0];\n\t\tSinglePassNoder.call(this, si);\n\t}\n}\ninherits$1(MCIndexNoder, SinglePassNoder);\nextend(MCIndexNoder.prototype, {\n\tgetMonotoneChains: function getMonotoneChains() {\n\t\treturn this._monoChains;\n\t},\n\tgetNodedSubstrings: function getNodedSubstrings() {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t},\n\tgetIndex: function getIndex() {\n\t\treturn this._index;\n\t},\n\tadd: function add(segStr) {\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\t\tfor (var i = segChains.iterator(); i.hasNext();) {\n\t\t\tvar mc = i.next();\n\t\t\tmc.setId(this._idCounter++);\n\t\t\tthis._index.insert(mc.getEnvelope(), mc);\n\t\t\tthis._monoChains.add(mc);\n\t\t}\n\t},\n\tcomputeNodes: function computeNodes(inputSegStrings) {\n\t\tthis._nodedSegStrings = inputSegStrings;\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext();) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t\tthis.intersectChains();\n\t},\n\tintersectChains: function intersectChains() {\n\t\tvar overlapAction = new SegmentOverlapAction(this._segInt);\n\t\tfor (var i = this._monoChains.iterator(); i.hasNext();) {\n\t\t\tvar queryChain = i.next();\n\t\t\tvar overlapChains = this._index.query(queryChain.getEnvelope());\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext();) {\n\t\t\t\tvar testChain = j.next();\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\n\t\t\t\t\tthis._nOverlaps++;\n\t\t\t\t}\n\t\t\t\tif (this._segInt.isDone()) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCIndexNoder;\n\t}\n});\nfunction SegmentOverlapAction() {\n\tMonotoneChainOverlapAction.apply(this);\n\tthis._si = null;\n\tvar si = arguments[0];\n\tthis._si = si;\n}\ninherits$1(SegmentOverlapAction, MonotoneChainOverlapAction);\nextend(SegmentOverlapAction.prototype, {\n\toverlap: function overlap() {\n\t\tif (arguments.length === 4) {\n\t\t\tvar mc1 = arguments[0],\n\t\t\t    start1 = arguments[1],\n\t\t\t    mc2 = arguments[2],\n\t\t\t    start2 = arguments[3];\n\t\t\tvar ss1 = mc1.getContext();\n\t\t\tvar ss2 = mc2.getContext();\n\t\t\tthis._si.processIntersections(ss1, start1, ss2, start2);\n\t\t} else return MonotoneChainOverlapAction.prototype.overlap.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentOverlapAction;\n\t}\n});\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\n\nfunction TopologyException() {\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tvar msg = arguments[0];\n\t\tRuntimeException.call(this, msg);\n\t} else if (arguments.length === 2) {\n\t\tvar msg = arguments[0],\n\t\t    pt = arguments[1];\n\t\tRuntimeException.call(this, TopologyException.msgWithCoord(msg, pt));\n\t\tthis.name = 'TopologyException';\n\t\tthis.pt = new Coordinate(pt);\n\t}\n}\ninherits$1(TopologyException, RuntimeException);\nextend(TopologyException.prototype, {\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyException;\n\t}\n});\nTopologyException.msgWithCoord = function (msg, pt) {\n\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\n\treturn msg;\n};\n\nfunction SegmentIntersector() {}\nextend(SegmentIntersector.prototype, {\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {},\n\tisDone: function isDone() {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentIntersector;\n\t}\n});\n\nfunction InteriorIntersectionFinder() {\n\tthis._findAllIntersections = false;\n\tthis._isCheckEndSegmentsOnly = false;\n\tthis._li = null;\n\tthis._interiorIntersection = null;\n\tthis._intSegments = null;\n\tthis._intersections = new ArrayList();\n\tthis._intersectionCount = 0;\n\tthis._keepIntersections = true;\n\tvar li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersection = null;\n}\nextend(InteriorIntersectionFinder.prototype, {\n\tgetInteriorIntersection: function getInteriorIntersection() {\n\t\treturn this._interiorIntersection;\n\t},\n\tsetCheckEndSegmentsOnly: function setCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n\t\tthis._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n\t},\n\tgetIntersectionSegments: function getIntersectionSegments() {\n\t\treturn this._intSegments;\n\t},\n\tcount: function count() {\n\t\treturn this._intersectionCount;\n\t},\n\tgetIntersections: function getIntersections() {\n\t\treturn this._intersections;\n\t},\n\tsetFindAllIntersections: function setFindAllIntersections(findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t},\n\tsetKeepIntersections: function setKeepIntersections(keepIntersections) {\n\t\tthis._keepIntersections = keepIntersections;\n\t},\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (!this._findAllIntersections && this.hasIntersection()) return null;\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tif (this._isCheckEndSegmentsOnly) {\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n\t\t\tif (!isEndSegPresent) return null;\n\t\t}\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis._intSegments = new Array(4).fill(null);\n\t\t\t\tthis._intSegments[0] = p00;\n\t\t\t\tthis._intSegments[1] = p01;\n\t\t\t\tthis._intSegments[2] = p10;\n\t\t\t\tthis._intSegments[3] = p11;\n\t\t\t\tthis._interiorIntersection = this._li.getIntersection(0);\n\t\t\t\tif (this._keepIntersections) this._intersections.add(this._interiorIntersection);\n\t\t\t\tthis._intersectionCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisEndSegment: function isEndSegment(segStr, index) {\n\t\tif (index === 0) return true;\n\t\tif (index >= segStr.size() - 2) return true;\n\t\treturn false;\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this._interiorIntersection !== null;\n\t},\n\tisDone: function isDone() {\n\t\tif (this._findAllIntersections) return false;\n\t\treturn this._interiorIntersection !== null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorIntersectionFinder;\n\t}\n});\nInteriorIntersectionFinder.createAllIntersectionsFinder = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\treturn finder;\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function (li) {\n\treturn new InteriorIntersectionFinder(li);\n};\nInteriorIntersectionFinder.createIntersectionCounter = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\tfinder.setKeepIntersections(false);\n\treturn finder;\n};\n\nfunction FastNodingValidator() {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tthis._findAllIntersections = false;\n\tthis._segInt = null;\n\tthis._isValid = true;\n\tvar segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n}\nextend(FastNodingValidator.prototype, {\n\texecute: function execute() {\n\t\tif (this._segInt !== null) return null;\n\t\tthis.checkInteriorIntersections();\n\t},\n\tgetIntersections: function getIntersections() {\n\t\treturn this._segInt.getIntersections();\n\t},\n\tisValid: function isValid() {\n\t\tthis.execute();\n\t\treturn this._isValid;\n\t},\n\tsetFindAllIntersections: function setFindAllIntersections(findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t},\n\tcheckInteriorIntersections: function checkInteriorIntersections() {\n\t\tthis._isValid = true;\n\t\tthis._segInt = new InteriorIntersectionFinder(this._li);\n\t\tthis._segInt.setFindAllIntersections(this._findAllIntersections);\n\t\tvar noder = new MCIndexNoder();\n\t\tnoder.setSegmentIntersector(this._segInt);\n\t\tnoder.computeNodes(this._segStrings);\n\t\tif (this._segInt.hasIntersection()) {\n\t\t\tthis._isValid = false;\n\t\t\treturn null;\n\t\t}\n\t},\n\tcheckValid: function checkValid() {\n\t\tthis.execute();\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection());\n\t},\n\tgetErrorMessage: function getErrorMessage() {\n\t\tif (this._isValid) return \"no intersections found\";\n\t\tvar intSegs = this._segInt.getIntersectionSegments();\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn FastNodingValidator;\n\t}\n});\nFastNodingValidator.computeIntersections = function (segStrings) {\n\tvar nv = new FastNodingValidator(segStrings);\n\tnv.setFindAllIntersections(true);\n\tnv.isValid();\n\treturn nv.getIntersections();\n};\n\nfunction EdgeNodingValidator() {\n\tthis._nv = null;\n\tvar edges = arguments[0];\n\tthis._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n}\nextend(EdgeNodingValidator.prototype, {\n\tcheckValid: function checkValid() {\n\t\tthis._nv.checkValid();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeNodingValidator;\n\t}\n});\nEdgeNodingValidator.toSegmentStrings = function (edges) {\n\tvar segStrings = new ArrayList();\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar e = i.next();\n\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n\t}\n\treturn segStrings;\n};\nEdgeNodingValidator.checkValid = function (edges) {\n\tvar validator = new EdgeNodingValidator(edges);\n\tvalidator.checkValid();\n};\n\nfunction GeometryCollectionMapper() {\n\tthis._mapOp = null;\n\tvar mapOp = arguments[0];\n\tthis._mapOp = mapOp;\n}\nextend(GeometryCollectionMapper.prototype, {\n\tmap: function map(gc) {\n\t\tvar mapped = new ArrayList();\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = this._mapOp.map(gc.getGeometryN(i));\n\t\t\tif (!g.isEmpty()) mapped.add(g);\n\t\t}\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCollectionMapper;\n\t}\n});\nGeometryCollectionMapper.map = function (gc, op) {\n\tvar mapper = new GeometryCollectionMapper(op);\n\treturn mapper.map(gc);\n};\n\nfunction Position() {}\nextend(Position.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Position;\n\t}\n});\nPosition.opposite = function (position) {\n\tif (position === Position.LEFT) return Position.RIGHT;\n\tif (position === Position.RIGHT) return Position.LEFT;\n\treturn position;\n};\nPosition.ON = 0;\nPosition.LEFT = 1;\nPosition.RIGHT = 2;\n\nfunction TopologyLocation() {\n\tthis.location = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tvar location = arguments[0];\n\t\t\tthis.init(location.length);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tvar on = arguments[0];\n\t\t\tthis.init(1);\n\t\t\tthis.location[Position.ON] = on;\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\n\t\t\tvar gl = arguments[0];\n\t\t\tthis.init(gl.location.length);\n\t\t\tif (gl !== null) {\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\t\t\tthis.location[i] = gl.location[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tvar on = arguments[0],\n\t\t    left = arguments[1],\n\t\t    right = arguments[2];\n\t\tthis.init(3);\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n}\nextend(TopologyLocation.prototype, {\n\tsetAllLocations: function setAllLocations(locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tthis.location[i] = locValue;\n\t\t}\n\t},\n\tisNull: function isNull() {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== Location.NONE) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tsetAllLocationsIfNull: function setAllLocationsIfNull(locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\n\t\t}\n\t},\n\tisLine: function isLine() {\n\t\treturn this.location.length === 1;\n\t},\n\tmerge: function merge(gl) {\n\t\tif (gl.location.length > this.location.length) {\n\t\t\tvar newLoc = new Array(3).fill(null);\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\n\t\t\tthis.location = newLoc;\n\t\t}\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n\t\t}\n\t},\n\tgetLocations: function getLocations() {\n\t\treturn this.location;\n\t},\n\tflip: function flip() {\n\t\tif (this.location.length <= 1) return null;\n\t\tvar temp = this.location[Position.LEFT];\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\n\t\tthis.location[Position.RIGHT] = temp;\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n\t\treturn buf.toString();\n\t},\n\tsetLocations: function setLocations(on, left, right) {\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t},\n\tget: function get(posIndex) {\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\n\t\treturn Location.NONE;\n\t},\n\tisArea: function isArea() {\n\t\treturn this.location.length > 1;\n\t},\n\tisAnyNull: function isAnyNull() {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tsetLocation: function setLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar locValue = arguments[0];\n\t\t\tthis.setLocation(Position.ON, locValue);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar locIndex = arguments[0],\n\t\t\t    locValue = arguments[1];\n\t\t\tthis.location[locIndex] = locValue;\n\t\t}\n\t},\n\tinit: function init(size) {\n\t\tthis.location = new Array(size).fill(null);\n\t\tthis.setAllLocations(Location.NONE);\n\t},\n\tisEqualOnSide: function isEqualOnSide(le, locIndex) {\n\t\treturn this.location[locIndex] === le.location[locIndex];\n\t},\n\tallPositionsEqual: function allPositionsEqual(loc) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== loc) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyLocation;\n\t}\n});\n\nfunction Label() {\n\tthis.elt = new Array(2).fill(null);\n\tif (arguments.length === 1) {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tvar onLoc = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tvar lbl = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar geomIndex = arguments[0],\n\t\t    onLoc = arguments[1];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[geomIndex].setLocation(onLoc);\n\t} else if (arguments.length === 3) {\n\t\tvar onLoc = arguments[0],\n\t\t    leftLoc = arguments[1],\n\t\t    rightLoc = arguments[2];\n\t\tthis.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t\tthis.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t} else if (arguments.length === 4) {\n\t\tvar geomIndex = arguments[0],\n\t\t    onLoc = arguments[1],\n\t\t    leftLoc = arguments[2],\n\t\t    rightLoc = arguments[3];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\n\t}\n}\nextend(Label.prototype, {\n\tgetGeometryCount: function getGeometryCount() {\n\t\tvar count = 0;\n\t\tif (!this.elt[0].isNull()) count++;\n\t\tif (!this.elt[1].isNull()) count++;\n\t\treturn count;\n\t},\n\tsetAllLocations: function setAllLocations(geomIndex, location) {\n\t\tthis.elt[geomIndex].setAllLocations(location);\n\t},\n\tisNull: function isNull(geomIndex) {\n\t\treturn this.elt[geomIndex].isNull();\n\t},\n\tsetAllLocationsIfNull: function setAllLocationsIfNull() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar location = arguments[0];\n\t\t\tthis.setAllLocationsIfNull(0, location);\n\t\t\tthis.setAllLocationsIfNull(1, location);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    location = arguments[1];\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(location);\n\t\t}\n\t},\n\tisLine: function isLine(geomIndex) {\n\t\treturn this.elt[geomIndex].isLine();\n\t},\n\tmerge: function merge(lbl) {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\n\t\t\t} else {\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tflip: function flip() {\n\t\tthis.elt[0].flip();\n\t\tthis.elt[1].flip();\n\t},\n\tgetLocation: function getLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    posIndex = arguments[1];\n\t\t\treturn this.elt[geomIndex].get(posIndex);\n\t\t}\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.elt[0] !== null) {\n\t\t\tbuf.append(\"A:\");\n\t\t\tbuf.append(this.elt[0].toString());\n\t\t}\n\t\tif (this.elt[1] !== null) {\n\t\t\tbuf.append(\" B:\");\n\t\t\tbuf.append(this.elt[1].toString());\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tisArea: function isArea() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].isArea();\n\t\t}\n\t},\n\tisAnyNull: function isAnyNull(geomIndex) {\n\t\treturn this.elt[geomIndex].isAnyNull();\n\t},\n\tsetLocation: function setLocation() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    location = arguments[1];\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    posIndex = arguments[1],\n\t\t\t    location = arguments[2];\n\t\t\tthis.elt[geomIndex].setLocation(posIndex, location);\n\t\t}\n\t},\n\tisEqualOnSide: function isEqualOnSide(lbl, side) {\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n\t},\n\tallPositionsEqual: function allPositionsEqual(geomIndex, loc) {\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\n\t},\n\ttoLine: function toLine(geomIndex) {\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Label;\n\t}\n});\nLabel.toLineLabel = function (label) {\n\tvar lineLabel = new Label(Location.NONE);\n\tfor (var i = 0; i < 2; i++) {\n\t\tlineLabel.setLocation(i, label.getLocation(i));\n\t}\n\treturn lineLabel;\n};\n\nfunction EdgeRing() {\n\tthis._startDe = null;\n\tthis._maxNodeDegree = -1;\n\tthis._edges = new ArrayList();\n\tthis._pts = new ArrayList();\n\tthis._label = new Label(Location.NONE);\n\tthis._ring = null;\n\tthis._isHole = null;\n\tthis._shell = null;\n\tthis._holes = new ArrayList();\n\tthis._geometryFactory = null;\n\tvar start = arguments[0],\n\t    geometryFactory = arguments[1];\n\tthis._geometryFactory = geometryFactory;\n\tthis.computePoints(start);\n\tthis.computeRing();\n}\nextend(EdgeRing.prototype, {\n\tcomputeRing: function computeRing() {\n\t\tif (this._ring !== null) return null;\n\t\tvar coord = new Array(this._pts.size()).fill(null);\n\t\tfor (var i = 0; i < this._pts.size(); i++) {\n\t\t\tcoord[i] = this._pts.get(i);\n\t\t}\n\t\tthis._ring = this._geometryFactory.createLinearRing(coord);\n\t\tthis._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n\t},\n\tisIsolated: function isIsolated() {\n\t\treturn this._label.getGeometryCount() === 1;\n\t},\n\tcomputePoints: function computePoints(start) {\n\t\tthis._startDe = start;\n\t\tvar de = start;\n\t\tvar isFirstEdge = true;\n\t\tdo {\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\t\t\tthis._edges.add(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tAssert.isTrue(label.isArea());\n\t\t\tthis.mergeLabel(label);\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n\t\t\tisFirstEdge = false;\n\t\t\tthis.setEdgeRing(de, this);\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t},\n\tgetLinearRing: function getLinearRing() {\n\t\treturn this._ring;\n\t},\n\tgetCoordinate: function getCoordinate(i) {\n\t\treturn this._pts.get(i);\n\t},\n\tcomputeMaxNodeDegree: function computeMaxNodeDegree() {\n\t\tthis._maxNodeDegree = 0;\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\n\t\t\tif (degree > this._maxNodeDegree) this._maxNodeDegree = degree;\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t\tthis._maxNodeDegree *= 2;\n\t},\n\taddPoints: function addPoints(edge, isForward, isFirstEdge) {\n\t\tvar edgePts = edge.getCoordinates();\n\t\tif (isForward) {\n\t\t\tvar startIndex = 1;\n\t\t\tif (isFirstEdge) startIndex = 0;\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tvar startIndex = edgePts.length - 2;\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisHole: function isHole() {\n\t\treturn this._isHole;\n\t},\n\tsetInResult: function setInResult() {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tde.getEdge().setInResult(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t},\n\tcontainsPoint: function containsPoint(p) {\n\t\tvar shell = this.getLinearRing();\n\t\tvar env = shell.getEnvelopeInternal();\n\t\tif (!env.contains(p)) return false;\n\t\tif (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) return false;\n\t\tfor (var i = this._holes.iterator(); i.hasNext();) {\n\t\t\tvar hole = i.next();\n\t\t\tif (hole.containsPoint(p)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\taddHole: function addHole(ring) {\n\t\tthis._holes.add(ring);\n\t},\n\tisShell: function isShell() {\n\t\treturn this._shell === null;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this._label;\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this._edges;\n\t},\n\tgetMaxNodeDegree: function getMaxNodeDegree() {\n\t\tif (this._maxNodeDegree < 0) this.computeMaxNodeDegree();\n\t\treturn this._maxNodeDegree;\n\t},\n\tgetShell: function getShell() {\n\t\treturn this._shell;\n\t},\n\tmergeLabel: function mergeLabel() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar deLabel = arguments[0];\n\t\t\tthis.mergeLabel(deLabel, 0);\n\t\t\tthis.mergeLabel(deLabel, 1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar deLabel = arguments[0],\n\t\t\t    geomIndex = arguments[1];\n\t\t\tvar loc = deLabel.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (loc === Location.NONE) return null;\n\t\t\tif (this._label.getLocation(geomIndex) === Location.NONE) {\n\t\t\t\tthis._label.setLocation(geomIndex, loc);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function setShell(shell) {\n\t\tthis._shell = shell;\n\t\tif (shell !== null) shell.addHole(this);\n\t},\n\ttoPolygon: function toPolygon(geometryFactory) {\n\t\tvar holeLR = new Array(this._holes.size()).fill(null);\n\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\tholeLR[i] = this._holes.get(i).getLinearRing();\n\t\t}\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n\t\treturn poly;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeRing;\n\t}\n});\n\nfunction MinimalEdgeRing() {\n\tvar start = arguments[0],\n\t    geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits$1(MinimalEdgeRing, EdgeRing);\nextend(MinimalEdgeRing.prototype, {\n\tsetEdgeRing: function setEdgeRing(de, er) {\n\t\tde.setMinEdgeRing(er);\n\t},\n\tgetNext: function getNext(de) {\n\t\treturn de.getNextMin();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MinimalEdgeRing;\n\t}\n});\n\nfunction MaximalEdgeRing() {\n\tvar start = arguments[0],\n\t    geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits$1(MaximalEdgeRing, EdgeRing);\nextend(MaximalEdgeRing.prototype, {\n\tbuildMinimalRings: function buildMinimalRings() {\n\t\tvar minEdgeRings = new ArrayList();\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tif (de.getMinEdgeRing() === null) {\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this._geometryFactory);\n\t\t\t\tminEdgeRings.add(minEr);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t\treturn minEdgeRings;\n\t},\n\tsetEdgeRing: function setEdgeRing(de, er) {\n\t\tde.setEdgeRing(er);\n\t},\n\tlinkDirectedEdgesForMinimalEdgeRings: function linkDirectedEdgesForMinimalEdgeRings() {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t},\n\tgetNext: function getNext(de) {\n\t\treturn de.getNext();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MaximalEdgeRing;\n\t}\n});\n\nfunction GraphComponent() {\n\tthis._label = null;\n\tthis._isInResult = false;\n\tthis._isCovered = false;\n\tthis._isCoveredSet = false;\n\tthis._isVisited = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar label = arguments[0];\n\t\tthis._label = label;\n\t}\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function setVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tsetInResult: function setInResult(isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tisCovered: function isCovered() {\n\t\treturn this._isCovered;\n\t},\n\tisCoveredSet: function isCoveredSet() {\n\t\treturn this._isCoveredSet;\n\t},\n\tsetLabel: function setLabel(label) {\n\t\tthis._label = label;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this._label;\n\t},\n\tsetCovered: function setCovered(isCovered) {\n\t\tthis._isCovered = isCovered;\n\t\tthis._isCoveredSet = true;\n\t},\n\tupdateIM: function updateIM(im) {\n\t\tAssert.isTrue(this._label.getGeometryCount() >= 2, \"found partial label\");\n\t\tthis.computeIM(im);\n\t},\n\tisInResult: function isInResult() {\n\t\treturn this._isInResult;\n\t},\n\tisVisited: function isVisited() {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GraphComponent;\n\t}\n});\n\nfunction Node() {\n\tGraphComponent.apply(this);\n\tthis._coord = null;\n\tthis._edges = null;\n\tvar coord = arguments[0],\n\t    edges = arguments[1];\n\tthis._coord = coord;\n\tthis._edges = edges;\n\tthis._label = new Label(0, Location.NONE);\n}\ninherits$1(Node, GraphComponent);\nextend(Node.prototype, {\n\tisIncidentEdgeInResult: function isIncidentEdgeInResult() {\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getEdge().isInResult()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisIsolated: function isIsolated() {\n\t\treturn this._label.getGeometryCount() === 1;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._coord;\n\t},\n\tprint: function print(out) {\n\t\tout.println(\"node \" + this._coord + \" lbl: \" + this._label);\n\t},\n\tcomputeIM: function computeIM(im) {},\n\tcomputeMergedLocation: function computeMergedLocation(label2, eltIndex) {\n\t\tvar loc = Location.NONE;\n\t\tloc = this._label.getLocation(eltIndex);\n\t\tif (!label2.isNull(eltIndex)) {\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\n\t\t}\n\t\treturn loc;\n\t},\n\tsetLabel: function setLabel() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar argIndex = arguments[0],\n\t\t\t    onLocation = arguments[1];\n\t\t\tif (this._label === null) {\n\t\t\t\tthis._label = new Label(argIndex, onLocation);\n\t\t\t} else this._label.setLocation(argIndex, onLocation);\n\t\t} else return GraphComponent.prototype.setLabel.apply(this, arguments);\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this._edges;\n\t},\n\tmergeLabel: function mergeLabel() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tvar n = arguments[0];\n\t\t\tthis.mergeLabel(n._label);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tvar label2 = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\n\t\t\t\tvar thisLoc = this._label.getLocation(i);\n\t\t\t\tif (thisLoc === Location.NONE) this._label.setLocation(i, loc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function add(e) {\n\t\tthis._edges.insert(e);\n\t\te.setNode(this);\n\t},\n\tsetLabelBoundary: function setLabelBoundary(argIndex) {\n\t\tif (this._label === null) return null;\n\t\tvar loc = Location.NONE;\n\t\tif (this._label !== null) loc = this._label.getLocation(argIndex);\n\t\tvar newLoc = null;\n\t\tswitch (loc) {\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\tnewLoc = Location.INTERIOR;\n\t\t\t\tbreak;\n\t\t\tcase Location.INTERIOR:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._label.setLocation(argIndex, newLoc);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node;\n\t}\n});\n\nfunction NodeMap() {\n\tthis.nodeMap = new TreeMap();\n\tthis.nodeFact = null;\n\tvar nodeFact = arguments[0];\n\tthis.nodeFact = nodeFact;\n}\nextend(NodeMap.prototype, {\n\tfind: function find(coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\taddNode: function addNode() {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tvar coord = arguments[0];\n\t\t\tvar node = this.nodeMap.get(coord);\n\t\t\tif (node === null) {\n\t\t\t\tnode = this.nodeFact.createNode(coord);\n\t\t\t\tthis.nodeMap.put(coord, node);\n\t\t\t}\n\t\t\treturn node;\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tvar n = arguments[0];\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\n\t\t\tif (node === null) {\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tnode.mergeLabel(n);\n\t\t\treturn node;\n\t\t}\n\t},\n\tprint: function print(out) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar n = it.next();\n\t\t\tn.print(out);\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tvalues: function values() {\n\t\treturn this.nodeMap.values();\n\t},\n\tgetBoundaryNodes: function getBoundaryNodes(geomIndex) {\n\t\tvar bdyNodes = new ArrayList();\n\t\tfor (var i = this.iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n\t\t}\n\t\treturn bdyNodes;\n\t},\n\tadd: function add(e) {\n\t\tvar p = e.getCoordinate();\n\t\tvar n = this.addNode(p);\n\t\tn.add(e);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeMap;\n\t}\n});\n\nfunction EdgeEnd() {\n\tthis._edge = null;\n\tthis._label = null;\n\tthis._node = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._dx = null;\n\tthis._dy = null;\n\tthis._quadrant = null;\n\tif (arguments.length === 1) {\n\t\tvar edge = arguments[0];\n\t\tthis._edge = edge;\n\t} else if (arguments.length === 3) {\n\t\tvar edge = arguments[0],\n\t\t    p0 = arguments[1],\n\t\t    p1 = arguments[2];\n\t\tEdgeEnd.call(this, edge, p0, p1, null);\n\t} else if (arguments.length === 4) {\n\t\tvar edge = arguments[0],\n\t\t    p0 = arguments[1],\n\t\t    p1 = arguments[2],\n\t\t    label = arguments[3];\n\t\tEdgeEnd.call(this, edge);\n\t\tthis.init(p0, p1);\n\t\tthis._label = label;\n\t}\n}\nextend(EdgeEnd.prototype, {\n\tcompareDirection: function compareDirection(e) {\n\t\tif (this._dx === e._dx && this._dy === e._dy) return 0;\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1);\n\t},\n\tgetDy: function getDy() {\n\t\treturn this._dy;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._p0;\n\t},\n\tsetNode: function setNode(node) {\n\t\tthis._node = node;\n\t},\n\tprint: function print(out) {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label);\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar e = obj;\n\t\treturn this.compareDirection(e);\n\t},\n\tgetDirectedCoordinate: function getDirectedCoordinate() {\n\t\treturn this._p1;\n\t},\n\tgetDx: function getDx() {\n\t\treturn this._dx;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this._label;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this._edge;\n\t},\n\tgetQuadrant: function getQuadrant() {\n\t\treturn this._quadrant;\n\t},\n\tgetNode: function getNode() {\n\t\treturn this._node;\n\t},\n\ttoString: function toString() {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\treturn \"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label;\n\t},\n\tcomputeLabel: function computeLabel(boundaryNodeRule) {},\n\tinit: function init(p0, p1) {\n\t\tthis._p0 = p0;\n\t\tthis._p1 = p1;\n\t\tthis._dx = p1.x - p0.x;\n\t\tthis._dy = p1.y - p0.y;\n\t\tthis._quadrant = Quadrant.quadrant(this._dx, this._dy);\n\t\tAssert.isTrue(!(this._dx === 0 && this._dy === 0), \"EdgeEnd with identical endpoints found\");\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEnd;\n\t}\n});\n\nfunction DirectedEdge() {\n\tthis._isForward = null;\n\tthis._isInResult = false;\n\tthis._isVisited = false;\n\tthis._sym = null;\n\tthis._next = null;\n\tthis._nextMin = null;\n\tthis._edgeRing = null;\n\tthis._minEdgeRing = null;\n\tthis._depth = [0, -999, -999];\n\tvar edge = arguments[0],\n\t    isForward = arguments[1];\n\tEdgeEnd.call(this, edge);\n\tthis._isForward = isForward;\n\tif (isForward) {\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\n\t} else {\n\t\tvar n = edge.getNumPoints() - 1;\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n\t}\n\tthis.computeDirectedLabel();\n}\ninherits$1(DirectedEdge, EdgeEnd);\nextend(DirectedEdge.prototype, {\n\tgetNextMin: function getNextMin() {\n\t\treturn this._nextMin;\n\t},\n\tgetDepth: function getDepth(position) {\n\t\treturn this._depth[position];\n\t},\n\tsetVisited: function setVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tcomputeDirectedLabel: function computeDirectedLabel() {\n\t\tthis._label = new Label(this._edge.getLabel());\n\t\tif (!this._isForward) this._label.flip();\n\t},\n\tgetNext: function getNext() {\n\t\treturn this._next;\n\t},\n\tsetDepth: function setDepth(position, depthVal) {\n\t\tif (this._depth[position] !== -999) {\n\t\t\tif (this._depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n\t\t}\n\t\tthis._depth[position] = depthVal;\n\t},\n\tisInteriorAreaEdge: function isInteriorAreaEdge() {\n\t\tvar isInteriorAreaEdge = true;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n\t\t\t\tisInteriorAreaEdge = false;\n\t\t\t}\n\t\t}\n\t\treturn isInteriorAreaEdge;\n\t},\n\tsetNextMin: function setNextMin(nextMin) {\n\t\tthis._nextMin = nextMin;\n\t},\n\tprint: function print(out) {\n\t\tEdgeEnd.prototype.print.call(this, out);\n\t\tout.print(\" \" + this._depth[Position.LEFT] + \"/\" + this._depth[Position.RIGHT]);\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\n\t\tif (this._isInResult) out.print(\" inResult\");\n\t},\n\tsetMinEdgeRing: function setMinEdgeRing(minEdgeRing) {\n\t\tthis._minEdgeRing = minEdgeRing;\n\t},\n\tisLineEdge: function isLineEdge() {\n\t\tvar isLine = this._label.isLine(0) || this._label.isLine(1);\n\t\tvar isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n\t\tvar isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\n\t},\n\tsetEdgeRing: function setEdgeRing(edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t},\n\tgetMinEdgeRing: function getMinEdgeRing() {\n\t\treturn this._minEdgeRing;\n\t},\n\tgetDepthDelta: function getDepthDelta() {\n\t\tvar depthDelta = this._edge.getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\treturn depthDelta;\n\t},\n\tsetInResult: function setInResult(isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tgetSym: function getSym() {\n\t\treturn this._sym;\n\t},\n\tisForward: function isForward() {\n\t\treturn this._isForward;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this._edge;\n\t},\n\tprintEdge: function printEdge(out) {\n\t\tthis.print(out);\n\t\tout.print(\" \");\n\t\tif (this._isForward) this._edge.print(out);else this._edge.printReverse(out);\n\t},\n\tsetSym: function setSym(de) {\n\t\tthis._sym = de;\n\t},\n\tsetVisitedEdge: function setVisitedEdge(isVisited) {\n\t\tthis.setVisited(isVisited);\n\t\tthis._sym.setVisited(isVisited);\n\t},\n\tsetEdgeDepths: function setEdgeDepths(position, depth) {\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\tvar directionFactor = 1;\n\t\tif (position === Position.LEFT) directionFactor = -1;\n\t\tvar oppositePos = Position.opposite(position);\n\t\tvar delta = depthDelta * directionFactor;\n\t\tvar oppositeDepth = depth + delta;\n\t\tthis.setDepth(position, depth);\n\t\tthis.setDepth(oppositePos, oppositeDepth);\n\t},\n\tgetEdgeRing: function getEdgeRing() {\n\t\treturn this._edgeRing;\n\t},\n\tisInResult: function isInResult() {\n\t\treturn this._isInResult;\n\t},\n\tsetNext: function setNext(next) {\n\t\tthis._next = next;\n\t},\n\tisVisited: function isVisited() {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.depthFactor = function (currLocation, nextLocation) {\n\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1;else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n\treturn 0;\n};\n\nfunction NodeFactory() {}\nextend(NodeFactory.prototype, {\n\tcreateNode: function createNode(coord) {\n\t\treturn new Node(coord, null);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeFactory;\n\t}\n});\n\nfunction PlanarGraph() {\n\tthis._edges = new ArrayList();\n\tthis._nodes = null;\n\tthis._edgeEndList = new ArrayList();\n\tif (arguments.length === 0) {\n\t\tthis._nodes = new NodeMap(new NodeFactory());\n\t} else if (arguments.length === 1) {\n\t\tvar nodeFact = arguments[0];\n\t\tthis._nodes = new NodeMap(nodeFact);\n\t}\n}\nextend(PlanarGraph.prototype, {\n\tprintEdges: function printEdges(out) {\n\t\tout.println(\"Edges:\");\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tout.println(\"edge \" + i + \":\");\n\t\t\tvar e = this._edges.get(i);\n\t\t\te.print(out);\n\t\t\te.eiList.print(out);\n\t\t}\n\t},\n\tfind: function find(coord) {\n\t\treturn this._nodes.find(coord);\n\t},\n\taddNode: function addNode() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tvar node = arguments[0];\n\t\t\treturn this._nodes.addNode(node);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar coord = arguments[0];\n\t\t\treturn this._nodes.addNode(coord);\n\t\t}\n\t},\n\tgetNodeIterator: function getNodeIterator() {\n\t\treturn this._nodes.iterator();\n\t},\n\tlinkResultDirectedEdges: function linkResultDirectedEdges() {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t},\n\tdebugPrintln: function debugPrintln(o) {\n\t\tSystem.out.println(o);\n\t},\n\tisBoundaryNode: function isBoundaryNode(geomIndex, coord) {\n\t\tvar node = this._nodes.find(coord);\n\t\tif (node === null) return false;\n\t\tvar label = node.getLabel();\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n\t\treturn false;\n\t},\n\tlinkAllDirectedEdges: function linkAllDirectedEdges() {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkAllDirectedEdges();\n\t\t}\n\t},\n\tmatchInSameDirection: function matchInSameDirection(p0, p1, ep0, ep1) {\n\t\tif (!p0.equals(ep0)) return false;\n\t\tif (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n\t\treturn false;\n\t},\n\tgetEdgeEnds: function getEdgeEnds() {\n\t\treturn this._edgeEndList;\n\t},\n\tdebugPrint: function debugPrint(o) {\n\t\tSystem.out.print(o);\n\t},\n\tgetEdgeIterator: function getEdgeIterator() {\n\t\treturn this._edges.iterator();\n\t},\n\tfindEdgeInSameDirection: function findEdgeInSameDirection(p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinsertEdge: function insertEdge(e) {\n\t\tthis._edges.add(e);\n\t},\n\tfindEdgeEnd: function findEdgeEnd(e) {\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n\t\t\tvar ee = i.next();\n\t\t\tif (ee.getEdge() === e) return ee;\n\t\t}\n\t\treturn null;\n\t},\n\taddEdges: function addEdges(edgesToAdd) {\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tthis._edges.add(e);\n\t\t\tvar de1 = new DirectedEdge(e, true);\n\t\t\tvar de2 = new DirectedEdge(e, false);\n\t\t\tde1.setSym(de2);\n\t\t\tde2.setSym(de1);\n\t\t\tthis.add(de1);\n\t\t\tthis.add(de2);\n\t\t}\n\t},\n\tadd: function add(e) {\n\t\tthis._nodes.add(e);\n\t\tthis._edgeEndList.add(e);\n\t},\n\tgetNodes: function getNodes() {\n\t\treturn this._nodes.values();\n\t},\n\tfindEdge: function findEdge(p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PlanarGraph;\n\t}\n});\nPlanarGraph.linkResultDirectedEdges = function (nodes) {\n\tfor (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n\t\tvar node = nodeit.next();\n\t\tnode.getEdges().linkResultDirectedEdges();\n\t}\n};\n\nfunction PolygonBuilder() {\n\tthis._geometryFactory = null;\n\tthis._shellList = new ArrayList();\n\tvar geometryFactory = arguments[0];\n\tthis._geometryFactory = geometryFactory;\n}\nextend(PolygonBuilder.prototype, {\n\tsortShellsAndHoles: function sortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n\t\tfor (var it = edgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\tfreeHoleList.add(er);\n\t\t\t} else {\n\t\t\t\tshellList.add(er);\n\t\t\t}\n\t\t}\n\t},\n\tcomputePolygons: function computePolygons(shellList) {\n\t\tvar resultPolyList = new ArrayList();\n\t\tfor (var it = shellList.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tvar poly = er.toPolygon(this._geometryFactory);\n\t\t\tresultPolyList.add(poly);\n\t\t}\n\t\treturn resultPolyList;\n\t},\n\tplaceFreeHoles: function placeFreeHoles(shellList, freeHoleList) {\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext();) {\n\t\t\tvar hole = it.next();\n\t\t\tif (hole.getShell() === null) {\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n\t\t\t\thole.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tbuildMinimalEdgeRings: function buildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.getMaxNodeDegree() > 2) {\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\n\t\t\t\tif (shell !== null) {\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\n\t\t\t\t\tshellList.add(shell);\n\t\t\t\t} else {\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tedgeRings.add(er);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\tcontainsPoint: function containsPoint(p) {\n\t\tfor (var it = this._shellList.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.containsPoint(p)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tbuildMaximalEdgeRings: function buildMaximalEdgeRings(dirEdges) {\n\t\tvar maxEdgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\n\t\t\t\tif (de.getEdgeRing() === null) {\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\t\tmaxEdgeRings.add(er);\n\t\t\t\t\ter.setInResult();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxEdgeRings;\n\t},\n\tplacePolygonHoles: function placePolygonHoles(shell, minEdgeRings) {\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\ter.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tgetPolygons: function getPolygons() {\n\t\tvar resultPolyList = this.computePolygons(this._shellList);\n\t\treturn resultPolyList;\n\t},\n\tfindEdgeRingContaining: function findEdgeRingContaining(testEr, shellList) {\n\t\tvar testRing = testEr.getLinearRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext();) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryRing = tryShell.getLinearRing();\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n\t\t\tvar isContained = false;\n\t\t\tif (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t},\n\tfindShell: function findShell(minEdgeRings) {\n\t\tvar shellCount = 0;\n\t\tvar shell = null;\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext();) {\n\t\t\tvar er = it.next();\n\t\t\tif (!er.isHole()) {\n\t\t\t\tshell = er;\n\t\t\t\tshellCount++;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n\t\treturn shell;\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar graph = arguments[0];\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar dirEdges = arguments[0],\n\t\t\t    nodes = arguments[1];\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n\t\t\tvar freeHoleList = new ArrayList();\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n\t\t\tthis.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n\t\t\tthis.placeFreeHoles(this._shellList, freeHoleList);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonBuilder;\n\t}\n});\n\nfunction LineBuilder() {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._ptLocator = null;\n\tthis._lineEdgesList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tvar op = arguments[0],\n\t    geometryFactory = arguments[1],\n\t    ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n\tthis._ptLocator = ptLocator;\n}\nextend(LineBuilder.prototype, {\n\tcollectLines: function collectLines(opCode) {\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tthis.collectLineEdge(de, opCode, this._lineEdgesList);\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList);\n\t\t}\n\t},\n\tlabelIsolatedLine: function labelIsolatedLine(e, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n\t\te.getLabel().setLocation(targetIndex, loc);\n\t},\n\tbuild: function build(opCode) {\n\t\tthis.findCoveredLineEdges();\n\t\tthis.collectLines(opCode);\n\t\tthis.buildLines(opCode);\n\t\treturn this._resultLineList;\n\t},\n\tcollectLineEdge: function collectLineEdge(de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tvar e = de.getEdge();\n\t\tif (de.isLineEdge()) {\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n\t\t\t\tedges.add(e);\n\t\t\t\tde.setVisitedEdge(true);\n\t\t\t}\n\t\t}\n\t},\n\tfindCoveredLineEdges: function findCoveredLineEdges() {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().findCoveredLineEdges();\n\t\t}\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar e = de.getEdge();\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\n\t\t\t\tvar isCovered = this._op.isCoveredByA(de.getCoordinate());\n\t\t\t\te.setCovered(isCovered);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedLines: function labelIsolatedLines(edgesList) {\n\t\tfor (var it = edgesList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0);else this.labelIsolatedLine(e, 1);\n\t\t\t}\n\t\t}\n\t},\n\tbuildLines: function buildLines(opCode) {\n\t\tfor (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tvar line = this._geometryFactory.createLineString(e.getCoordinates());\n\t\t\tthis._resultLineList.add(line);\n\t\t\te.setInResult(true);\n\t\t}\n\t},\n\tcollectBoundaryTouchEdge: function collectBoundaryTouchEdge(de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tif (de.isLineEdge()) return null;\n\t\tif (de.isVisited()) return null;\n\t\tif (de.isInteriorAreaEdge()) return null;\n\t\tif (de.getEdge().isInResult()) return null;\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n\t\t\tedges.add(de.getEdge());\n\t\t\tde.setVisitedEdge(true);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineBuilder;\n\t}\n});\n\nfunction PointBuilder() {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._resultPointList = new ArrayList();\n\tvar op = arguments[0],\n\t    geometryFactory = arguments[1];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n}\nextend(PointBuilder.prototype, {\n\tfilterCoveredNodeToPoint: function filterCoveredNodeToPoint(n) {\n\t\tvar coord = n.getCoordinate();\n\t\tif (!this._op.isCoveredByLA(coord)) {\n\t\t\tvar pt = this._geometryFactory.createPoint(coord);\n\t\t\tthis._resultPointList.add(pt);\n\t\t}\n\t},\n\textractNonCoveredResultNodes: function extractNonCoveredResultNodes(opCode) {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar n = nodeit.next();\n\t\t\tif (n.isInResult()) continue;\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n\t\t\t\tvar label = n.getLabel();\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function build(opCode) {\n\t\tthis.extractNonCoveredResultNodes(opCode);\n\t\treturn this._resultPointList;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointBuilder;\n\t}\n});\n\nfunction PointOnGeometryLocator() {}\nextend(PointOnGeometryLocator.prototype, {\n\tlocate: function locate(p) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointOnGeometryLocator;\n\t}\n});\n\nfunction SimplePointInAreaLocator() {\n\tthis._geom = null;\n\tvar geom = arguments[0];\n\tthis._geom = geom;\n}\nextend(SimplePointInAreaLocator.prototype, {\n\tlocate: function locate(p) {\n\t\treturn SimplePointInAreaLocator.locate(p, this._geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SimplePointInAreaLocator;\n\t}\n});\nSimplePointInAreaLocator.isPointInRing = function (p, ring) {\n\tif (!ring.getEnvelopeInternal().intersects(p)) return false;\n\treturn CGAlgorithms.isPointInRing(p, ring.getCoordinates());\n};\nSimplePointInAreaLocator.containsPointInPolygon = function (p, poly) {\n\tif (poly.isEmpty()) return false;\n\tvar shell = poly.getExteriorRing();\n\tif (!SimplePointInAreaLocator.isPointInRing(p, shell)) return false;\n\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\tvar hole = poly.getInteriorRingN(i);\n\t\tif (SimplePointInAreaLocator.isPointInRing(p, hole)) return false;\n\t}\n\treturn true;\n};\nSimplePointInAreaLocator.containsPoint = function (p, geom) {\n\tif (geom instanceof Polygon) {\n\t\treturn SimplePointInAreaLocator.containsPointInPolygon(p, geom);\n\t} else if (geom instanceof GeometryCollection) {\n\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\twhile (geomi.hasNext()) {\n\t\t\tvar g2 = geomi.next();\n\t\t\tif (g2 !== geom) if (SimplePointInAreaLocator.containsPoint(p, g2)) return true;\n\t\t}\n\t}\n\treturn false;\n};\nSimplePointInAreaLocator.locate = function (p, geom) {\n\tif (geom.isEmpty()) return Location.EXTERIOR;\n\tif (SimplePointInAreaLocator.containsPoint(p, geom)) return Location.INTERIOR;\n\treturn Location.EXTERIOR;\n};\n\nfunction EdgeEndStar() {\n\tthis._edgeMap = new TreeMap();\n\tthis._edgeList = null;\n\tthis._ptInAreaLocation = [Location.NONE, Location.NONE];\n}\nextend(EdgeEndStar.prototype, {\n\tgetNextCW: function getNextCW(ee) {\n\t\tthis.getEdges();\n\t\tvar i = this._edgeList.indexOf(ee);\n\t\tvar iNextCW = i - 1;\n\t\tif (i === 0) iNextCW = this._edgeList.size() - 1;\n\t\treturn this._edgeList.get(iNextCW);\n\t},\n\tpropagateSideLabels: function propagateSideLabels(geomIndex) {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\t\t\tif (label.isArea(geomIndex)) {\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\t\tif (rightLoc !== Location.NONE) {\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\t\t\t\t\tif (leftLoc === Location.NONE) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tcurrLoc = leftLoc;\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\tprint: function print(out) {\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\te.print(out);\n\t\t}\n\t},\n\tisAreaLabelsConsistent: function isAreaLabelsConsistent(geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n\t\treturn this.checkAreaLabelsConsistent(0);\n\t},\n\tcheckAreaLabelsConsistent: function checkAreaLabelsConsistent(geomIndex) {\n\t\tvar edges = this.getEdges();\n\t\tif (edges.size() <= 0) return true;\n\t\tvar lastEdgeIndex = edges.size() - 1;\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (leftLoc === rightLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rightLoc !== currLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrLoc = leftLoc;\n\t\t}\n\t\treturn true;\n\t},\n\tfindIndex: function findIndex(eSearch) {\n\t\tthis.iterator();\n\t\tfor (var i = 0; i < this._edgeList.size(); i++) {\n\t\t\tvar e = this._edgeList.get(i);\n\t\t\tif (e === eSearch) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function iterator() {\n\t\treturn this.getEdges().iterator();\n\t},\n\tgetEdges: function getEdges() {\n\t\tif (this._edgeList === null) {\n\t\t\tthis._edgeList = new ArrayList(this._edgeMap.values());\n\t\t}\n\t\treturn this._edgeList;\n\t},\n\tgetLocation: function getLocation(geomIndex, p, geom) {\n\t\tif (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n\t\t\tthis._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n\t\t}\n\t\treturn this._ptInAreaLocation[geomIndex];\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tbuf.append(\"\\n\");\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tbuf.append(e);\n\t\t\tbuf.append(\"\\n\");\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tcomputeEdgeEndLabels: function computeEdgeEndLabels(boundaryNodeRule) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ee = it.next();\n\t\t\tee.computeLabel(boundaryNodeRule);\n\t\t}\n\t},\n\tcomputeLabelling: function computeLabelling(geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n\t\tthis.propagateSideLabels(0);\n\t\tthis.propagateSideLabels(1);\n\t\tvar hasDimensionalCollapseEdge = [false, false];\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isAnyNull(geomi)) {\n\t\t\t\t\tvar loc = Location.NONE;\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\n\t\t\t\t\t\tloc = Location.EXTERIOR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p = e.getCoordinate();\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDegree: function getDegree() {\n\t\treturn this._edgeMap.size();\n\t},\n\tinsertEdgeEnd: function insertEdgeEnd(e, obj) {\n\t\tthis._edgeMap.put(e, obj);\n\t\tthis._edgeList = null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndStar;\n\t}\n});\n\nfunction DirectedEdgeStar() {\n\tEdgeEndStar.apply(this);\n\tthis._resultAreaEdgeList = null;\n\tthis._label = null;\n\tthis._SCANNING_FOR_INCOMING = 1;\n\tthis._LINKING_TO_OUTGOING = 2;\n}\ninherits$1(DirectedEdgeStar, EdgeEndStar);\nextend(DirectedEdgeStar.prototype, {\n\tlinkResultDirectedEdges: function linkResultDirectedEdges() {\n\t\tthis.getResultAreaEdges();\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\n\t\t\t\t\tincoming.setNext(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNext(firstOut);\n\t\t}\n\t},\n\tinsert: function insert(ee) {\n\t\tvar de = ee;\n\t\tthis.insertEdgeEnd(de, de);\n\t},\n\tgetRightmostEdge: function getRightmostEdge() {\n\t\tvar edges = this.getEdges();\n\t\tvar size = edges.size();\n\t\tif (size < 1) return null;\n\t\tvar de0 = edges.get(0);\n\t\tif (size === 1) return de0;\n\t\tvar deLast = edges.get(size - 1);\n\t\tvar quad0 = de0.getQuadrant();\n\t\tvar quad1 = deLast.getQuadrant();\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0;else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast;else {\n\t\t\tif (de0.getDy() !== 0) return de0;else if (deLast.getDy() !== 0) return deLast;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n\t\treturn null;\n\t},\n\tprint: function print(out) {\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tout.print(\"out \");\n\t\t\tde.print(out);\n\t\t\tout.println();\n\t\t\tout.print(\"in \");\n\t\t\tde.getSym().print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\tgetResultAreaEdges: function getResultAreaEdges() {\n\t\tif (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList;\n\t\tthis._resultAreaEdgeList = new ArrayList();\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de);\n\t\t}\n\t\treturn this._resultAreaEdgeList;\n\t},\n\tupdateLabelling: function updateLabelling(nodeLabel) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n\t\t}\n\t},\n\tlinkAllDirectedEdges: function linkAllDirectedEdges() {\n\t\tthis.getEdges();\n\t\tvar prevOut = null;\n\t\tvar firstIn = null;\n\t\tfor (var i = this._edgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._edgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstIn === null) firstIn = nextIn;\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\n\t\t\tprevOut = nextOut;\n\t\t}\n\t\tfirstIn.setNext(prevOut);\n\t},\n\tcomputeDepths: function computeDepths() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar de = arguments[0];\n\t\t\tvar edgeIndex = this.findIndex(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar startIndex = arguments[0],\n\t\t\t    endIndex = arguments[1],\n\t\t\t    startDepth = arguments[2];\n\t\t\tvar currDepth = startDepth;\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tvar nextDe = this._edgeList.get(i);\n\t\t\t\tvar label = nextDe.getLabel();\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\n\t\t\t}\n\t\t\treturn currDepth;\n\t\t}\n\t},\n\tmergeSymLabels: function mergeSymLabels() {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.merge(de.getSym().getLabel());\n\t\t}\n\t},\n\tlinkMinimalDirectedEdges: function linkMinimalDirectedEdges(er) {\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming.setNextMin(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNextMin(firstOut);\n\t\t}\n\t},\n\tgetOutgoingDegree: function getOutgoingDegree() {\n\t\tif (arguments.length === 0) {\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.isInResult()) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar er = arguments[0];\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t}\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this._label;\n\t},\n\tfindCoveredLineEdges: function findCoveredLineEdges() {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.isLineEdge()) {\n\t\t\t\tif (nextOut.isInResult()) {\n\t\t\t\t\tstartLoc = Location.INTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (nextIn.isInResult()) {\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (nextOut.isLineEdge()) {\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n\t\t\t} else {\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function computeLabelling(geom) {\n\t\tEdgeEndStar.prototype.computeLabelling.call(this, geom);\n\t\tthis._label = new Label(Location.NONE);\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ee = it.next();\n\t\t\tvar e = ee.getEdge();\n\t\t\tvar eLabel = e.getLabel();\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n\nfunction OverlayNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits$1(OverlayNodeFactory, NodeFactory);\nextend(OverlayNodeFactory.prototype, {\n\tcreateNode: function createNode(coord) {\n\t\treturn new Node(coord, new DirectedEdgeStar());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OverlayNodeFactory;\n\t}\n});\n\nfunction MonotoneChain$1() {\n\tthis.mce = null;\n\tthis.chainIndex = null;\n\tvar mce = arguments[0],\n\t    chainIndex = arguments[1];\n\tthis.mce = mce;\n\tthis.chainIndex = chainIndex;\n}\nextend(MonotoneChain$1.prototype, {\n\tcomputeIntersections: function computeIntersections(mc, si) {\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChain$1;\n\t}\n});\n\nfunction SweepLineEvent() {\n\tthis._label = null;\n\tthis._xValue = null;\n\tthis._eventType = null;\n\tthis._insertEvent = null;\n\tthis._deleteEventIndex = null;\n\tthis._obj = null;\n\tif (arguments.length === 2) {\n\t\tvar x = arguments[0],\n\t\t    insertEvent = arguments[1];\n\t\tthis._eventType = SweepLineEvent.DELETE;\n\t\tthis._xValue = x;\n\t\tthis._insertEvent = insertEvent;\n\t} else if (arguments.length === 3) {\n\t\tvar label = arguments[0],\n\t\t    x = arguments[1],\n\t\t    obj = arguments[2];\n\t\tthis._eventType = SweepLineEvent.INSERT;\n\t\tthis._label = label;\n\t\tthis._xValue = x;\n\t\tthis._obj = obj;\n\t}\n}\nextend(SweepLineEvent.prototype, {\n\tisDelete: function isDelete() {\n\t\treturn this._eventType === SweepLineEvent.DELETE;\n\t},\n\tsetDeleteEventIndex: function setDeleteEventIndex(deleteEventIndex) {\n\t\tthis._deleteEventIndex = deleteEventIndex;\n\t},\n\tgetObject: function getObject() {\n\t\treturn this._obj;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar pe = o;\n\t\tif (this._xValue < pe._xValue) return -1;\n\t\tif (this._xValue > pe._xValue) return 1;\n\t\tif (this._eventType < pe._eventType) return -1;\n\t\tif (this._eventType > pe._eventType) return 1;\n\t\treturn 0;\n\t},\n\tgetInsertEvent: function getInsertEvent() {\n\t\treturn this._insertEvent;\n\t},\n\tisInsert: function isInsert() {\n\t\treturn this._eventType === SweepLineEvent.INSERT;\n\t},\n\tisSameLabel: function isSameLabel(ev) {\n\t\tif (this._label === null) return false;\n\t\treturn this._label === ev._label;\n\t},\n\tgetDeleteEventIndex: function getDeleteEventIndex() {\n\t\treturn this._deleteEventIndex;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SweepLineEvent;\n\t}\n});\nSweepLineEvent.INSERT = 1;\nSweepLineEvent.DELETE = 2;\n\nfunction EdgeSetIntersector() {}\nextend(EdgeSetIntersector.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeSetIntersector;\n\t}\n});\n\nfunction SegmentIntersector$1() {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._includeProper = null;\n\tthis._recordIsolated = null;\n\tthis._isSelfIntersection = null;\n\tthis._numIntersections = 0;\n\tthis.numTests = 0;\n\tthis._bdyNodes = null;\n\tthis._isDone = false;\n\tthis._isDoneWhenProperInt = false;\n\tvar li = arguments[0],\n\t    includeProper = arguments[1],\n\t    recordIsolated = arguments[2];\n\tthis._li = li;\n\tthis._includeProper = includeProper;\n\tthis._recordIsolated = recordIsolated;\n}\nextend(SegmentIntersector$1.prototype, {\n\tisTrivialIntersection: function isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (SegmentIntersector$1.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function getProperIntersectionPoint() {\n\t\treturn this._properIntersectionPoint;\n\t},\n\tsetIsDoneIfProperInt: function setIsDoneIfProperInt(isDoneWhenProperInt) {\n\t\tthis._isDoneWhenProperInt = isDoneWhenProperInt;\n\t},\n\thasProperInteriorIntersection: function hasProperInteriorIntersection() {\n\t\treturn this._hasProperInterior;\n\t},\n\tisBoundaryPointInternal: function isBoundaryPointInternal(li, bdyNodes) {\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tvar pt = node.getCoordinate();\n\t\t\tif (li.isIntersection(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\thasProperIntersection: function hasProperIntersection() {\n\t\treturn this._hasProper;\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function isDone() {\n\t\treturn this._isDone;\n\t},\n\tisBoundaryPoint: function isBoundaryPoint(li, bdyNodes) {\n\t\tif (bdyNodes === null) return false;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n\t\treturn false;\n\t},\n\tsetBoundaryNodes: function setBoundaryNodes(bdyNodes0, bdyNodes1) {\n\t\tthis._bdyNodes = new Array(2).fill(null);\n\t\tthis._bdyNodes[0] = bdyNodes0;\n\t\tthis._bdyNodes[1] = bdyNodes1;\n\t},\n\taddIntersections: function addIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._recordIsolated) {\n\t\t\t\te0.setIsolated(false);\n\t\t\t\te1.setIsolated(false);\n\t\t\t}\n\t\t\tthis._numIntersections++;\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\tif (this._includeProper || !this._li.isProper()) {\n\t\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\t}\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis._properIntersectionPoint = this._li.getIntersection(0).copy();\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tif (this._isDoneWhenProperInt) {\n\t\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentIntersector$1;\n\t}\n});\nSegmentIntersector$1.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n\nfunction SimpleMCSweepLineIntersector() {\n\tEdgeSetIntersector.apply(this);\n\tthis.events = new ArrayList();\n\tthis.nOverlaps = null;\n}\ninherits$1(SimpleMCSweepLineIntersector, EdgeSetIntersector);\nextend(SimpleMCSweepLineIntersector.prototype, {\n\tprepareEvents: function prepareEvents() {\n\t\tCollections.sort(this.events);\n\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\tvar ev = this.events.get(i);\n\t\t\tif (ev.isDelete()) {\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeIntersections: function computeIntersections() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar si = arguments[0];\n\t\t\tthis.nOverlaps = 0;\n\t\t\tthis.prepareEvents();\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\t\tvar ev = this.events.get(i);\n\t\t\t\tif (ev.isInsert()) {\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n\t\t\t\t}\n\t\t\t\tif (si.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof SegmentIntersector$1 && hasInterface(arguments[0], List) && hasInterface(arguments[1], List)) {\n\t\t\t\tvar edges0 = arguments[0],\n\t\t\t\t    edges1 = arguments[1],\n\t\t\t\t    si = arguments[2];\n\t\t\t\tthis.addEdges(edges0, edges0);\n\t\t\t\tthis.addEdges(edges1, edges1);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$1) {\n\t\t\t\tvar edges = arguments[0],\n\t\t\t\t    si = arguments[1],\n\t\t\t\t    testAllSegments = arguments[2];\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null);else this.addEdges(edges);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t}\n\t\t}\n\t},\n\taddEdge: function addEdge(edge, edgeSet) {\n\t\tvar mce = edge.getMonotoneChainEdge();\n\t\tvar startIndex = mce.getStartIndexes();\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain$1(mce, i);\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n\t\t\tthis.events.add(insertEvent);\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n\t\t}\n\t},\n\tprocessOverlaps: function processOverlaps(start, end, ev0, si) {\n\t\tvar mc0 = ev0.getObject();\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar ev1 = this.events.get(i);\n\t\t\tif (ev1.isInsert()) {\n\t\t\t\tvar mc1 = ev1.getObject();\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\taddEdges: function addEdges() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar edges = arguments[0];\n\t\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edge);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar edges = arguments[0],\n\t\t\t    edgeSet = arguments[1];\n\t\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edgeSet);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SimpleMCSweepLineIntersector;\n\t}\n});\n\nfunction IntervalRTreeNode$1() {\n\tthis._min = Double.POSITIVE_INFINITY;\n\tthis._max = Double.NEGATIVE_INFINITY;\n}\nextend(IntervalRTreeNode$1.prototype, {\n\tgetMin: function getMin() {\n\t\treturn this._min;\n\t},\n\tintersects: function intersects(queryMin, queryMax) {\n\t\tif (this._min > queryMax || this._max < queryMin) return false;\n\t\treturn true;\n\t},\n\tgetMax: function getMax() {\n\t\treturn this._max;\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalRTreeNode$1;\n\t}\n});\nfunction NodeComparator() {}\nextend(NodeComparator.prototype, {\n\tcompare: function compare(o1, o2) {\n\t\tvar n1 = o1;\n\t\tvar n2 = o2;\n\t\tvar mid1 = (n1._min + n1._max) / 2;\n\t\tvar mid2 = (n2._min + n2._max) / 2;\n\t\tif (mid1 < mid2) return -1;\n\t\tif (mid1 > mid2) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeComparator;\n\t}\n});\nIntervalRTreeNode$1.NodeComparator = NodeComparator;\n\nfunction IntervalRTreeLeafNode() {\n\tIntervalRTreeNode$1.apply(this);\n\tthis._item = null;\n\tvar min = arguments[0],\n\t    max = arguments[1],\n\t    item = arguments[2];\n\tthis._min = min;\n\tthis._max = max;\n\tthis._item = item;\n}\ninherits$1(IntervalRTreeLeafNode, IntervalRTreeNode$1);\nextend(IntervalRTreeLeafNode.prototype, {\n\tquery: function query(queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\n\t\tvisitor.visitItem(this._item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalRTreeLeafNode;\n\t}\n});\n\nfunction IntervalRTreeBranchNode() {\n\tIntervalRTreeNode$1.apply(this);\n\tthis._node1 = null;\n\tthis._node2 = null;\n\tvar n1 = arguments[0],\n\t    n2 = arguments[1];\n\tthis._node1 = n1;\n\tthis._node2 = n2;\n\tthis.buildExtent(this._node1, this._node2);\n}\ninherits$1(IntervalRTreeBranchNode, IntervalRTreeNode$1);\nextend(IntervalRTreeBranchNode.prototype, {\n\tbuildExtent: function buildExtent(n1, n2) {\n\t\tthis._min = Math.min(n1._min, n2._min);\n\t\tthis._max = Math.max(n1._max, n2._max);\n\t},\n\tquery: function query(queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor);\n\t\tif (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalRTreeBranchNode;\n\t}\n});\n\nfunction SortedPackedIntervalRTree() {\n\tthis._leaves = new ArrayList();\n\tthis._root = null;\n\tthis._level = 0;\n}\nextend(SortedPackedIntervalRTree.prototype, {\n\tbuildTree: function buildTree() {\n\t\tCollections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n\t\tvar src = this._leaves;\n\t\tvar temp = null;\n\t\tvar dest = new ArrayList();\n\t\twhile (true) {\n\t\t\tthis.buildLevel(src, dest);\n\t\t\tif (dest.size() === 1) return dest.get(0);\n\t\t\ttemp = src;\n\t\t\tsrc = dest;\n\t\t\tdest = temp;\n\t\t}\n\t},\n\tinsert: function insert(min, max, item) {\n\t\tif (this._root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\t\tthis._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n\t},\n\tquery: function query(min, max, visitor) {\n\t\tthis.init();\n\t\tthis._root.query(min, max, visitor);\n\t},\n\tbuildRoot: function buildRoot() {\n\t\tif (this._root !== null) return null;\n\t\tthis._root = this.buildTree();\n\t},\n\tprintNode: function printNode(node) {\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n\t},\n\tinit: function init() {\n\t\tif (this._root !== null) return null;\n\t\tthis.buildRoot();\n\t},\n\tbuildLevel: function buildLevel(src, dest) {\n\t\tthis._level++;\n\t\tdest.clear();\n\t\tfor (var i = 0; i < src.size(); i += 2) {\n\t\t\tvar n1 = src.get(i);\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\n\t\t\tif (n2 === null) {\n\t\t\t\tdest.add(n1);\n\t\t\t} else {\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n\t\t\t\tdest.add(node);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SortedPackedIntervalRTree;\n\t}\n});\n\nfunction LinearComponentExtracter() {\n\tthis._lines = null;\n\tthis._isForcedToLineString = false;\n\tif (arguments.length === 1) {\n\t\tvar lines = arguments[0];\n\t\tthis._lines = lines;\n\t} else if (arguments.length === 2) {\n\t\tvar lines = arguments[0],\n\t\t    isForcedToLineString = arguments[1];\n\t\tthis._lines = lines;\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t}\n}\nextend(LinearComponentExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (this._isForcedToLineString && geom instanceof LinearRing) {\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\t\t\tthis._lines.add(line);\n\t\t\treturn null;\n\t\t}\n\t\tif (geom instanceof LineString) this._lines.add(geom);\n\t},\n\tsetForceToLineString: function setForceToLineString(isForcedToLineString) {\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearComponentExtracter;\n\t}\n});\nLinearComponentExtracter.getGeometry = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n\t} else if (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    forceToLineString = arguments[1];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\n\t}\n};\nLinearComponentExtracter.getLines = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\treturn LinearComponentExtracter.getLines(geom, false);\n\t} else if (arguments.length === 2) {\n\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tvar geoms = arguments[0],\n\t\t\t    lines = arguments[1];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n\t\t\tvar geom = arguments[0],\n\t\t\t    forceToLineString = arguments[1];\n\t\t\tvar lines = new ArrayList();\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tvar geom = arguments[0],\n\t\t\t    lines = arguments[1];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tlines.add(geom);\n\t\t\t} else {\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines));\n\t\t\t}\n\t\t\treturn lines;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"boolean\" && hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tvar geoms = arguments[0],\n\t\t\t    lines = arguments[1],\n\t\t\t    forceToLineString = arguments[2];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines, forceToLineString);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (typeof arguments[2] === \"boolean\" && arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tvar geom = arguments[0],\n\t\t\t    lines = arguments[1],\n\t\t\t    forceToLineString = arguments[2];\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t}\n\t}\n};\n\nfunction ArrayListVisitor() {\n\tthis._items = new ArrayList();\n}\nextend(ArrayListVisitor.prototype, {\n\tvisitItem: function visitItem(item) {\n\t\tthis._items.add(item);\n\t},\n\tgetItems: function getItems() {\n\t\treturn this._items;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ArrayListVisitor;\n\t}\n});\n\nfunction IndexedPointInAreaLocator() {\n\tthis._index = null;\n\tvar g = arguments[0];\n\tif (!hasInterface(g, Polygonal)) throw new IllegalArgumentException(\"Argument must be Polygonal\");\n\tthis._index = new IntervalIndexedGeometry(g);\n}\nextend(IndexedPointInAreaLocator.prototype, {\n\tlocate: function locate(p) {\n\t\tvar rcc = new RayCrossingCounter(p);\n\t\tvar visitor = new SegmentVisitor(rcc);\n\t\tthis._index.query(p.y, p.y, visitor);\n\t\treturn rcc.getLocation();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IndexedPointInAreaLocator;\n\t}\n});\nfunction SegmentVisitor() {\n\tthis._counter = null;\n\tvar counter = arguments[0];\n\tthis._counter = counter;\n}\nextend(SegmentVisitor.prototype, {\n\tvisitItem: function visitItem(item) {\n\t\tvar seg = item;\n\t\tthis._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SegmentVisitor;\n\t}\n});\nfunction IntervalIndexedGeometry() {\n\tthis._index = new SortedPackedIntervalRTree();\n\tvar geom = arguments[0];\n\tthis.init(geom);\n}\nextend(IntervalIndexedGeometry.prototype, {\n\tinit: function init(geom) {\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = lines.iterator(); i.hasNext();) {\n\t\t\tvar line = i.next();\n\t\t\tvar pts = line.getCoordinates();\n\t\t\tthis.addLine(pts);\n\t\t}\n\t},\n\taddLine: function addLine(pts) {\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\n\t\t\tthis._index.insert(min, max, seg);\n\t\t}\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis._index.query(min, max, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1],\n\t\t\t    visitor = arguments[2];\n\t\t\tthis._index.query(min, max, visitor);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalIndexedGeometry;\n\t}\n});\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\n\nfunction EdgeIntersection() {\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.dist = null;\n\tvar coord = arguments[0],\n\t    segmentIndex = arguments[1],\n\t    dist = arguments[2];\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.dist = dist;\n}\nextend(EdgeIntersection.prototype, {\n\tgetSegmentIndex: function getSegmentIndex() {\n\t\treturn this.segmentIndex;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.coord;\n\t},\n\tprint: function print(out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t\tout.println(\" dist = \" + this.dist);\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar other = obj;\n\t\treturn this.compare(other.segmentIndex, other.dist);\n\t},\n\tisEndPoint: function isEndPoint(maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\ttoString: function toString() {\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n\t},\n\tgetDistance: function getDistance() {\n\t\treturn this.dist;\n\t},\n\tcompare: function compare(segmentIndex, dist) {\n\t\tif (this.segmentIndex < segmentIndex) return -1;\n\t\tif (this.segmentIndex > segmentIndex) return 1;\n\t\tif (this.dist < dist) return -1;\n\t\tif (this.dist > dist) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeIntersection;\n\t}\n});\n\nfunction EdgeIntersectionList() {\n\tthis._nodeMap = new TreeMap();\n\tthis.edge = null;\n\tvar edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(EdgeIntersectionList.prototype, {\n\tprint: function print(out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function addSplitEdges(edgeList) {\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\taddEndpoints: function addEndpoints() {\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n\t},\n\tcreateSplitEdge: function createSplitEdge(ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.pts[i];\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\n\t\treturn new Edge(pts, new Label(this.edge._label));\n\t},\n\tadd: function add(intPt, segmentIndex, dist) {\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tisIntersection: function isIntersection(pt) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ei = it.next();\n\t\t\tif (ei.coord.equals(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeIntersectionList;\n\t}\n});\n\nfunction MonotoneChainIndexer() {}\nextend(MonotoneChainIndexer.prototype, {\n\tgetChainStartIndices: function getChainStartIndices(pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = this.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t},\n\tfindChainEnd: function findChainEnd(pts, start) {\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainIndexer;\n\t}\n});\nMonotoneChainIndexer.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n\nfunction MonotoneChainEdge() {\n\tthis.e = null;\n\tthis.pts = null;\n\tthis.startIndex = null;\n\tthis.env1 = new Envelope();\n\tthis.env2 = new Envelope();\n\tvar e = arguments[0];\n\tthis.e = e;\n\tthis.pts = e.getCoordinates();\n\tvar mcb = new MonotoneChainIndexer();\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\n}\nextend(MonotoneChainEdge.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.pts;\n\t},\n\tgetMaxX: function getMaxX(chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 > x2 ? x1 : x2;\n\t},\n\tgetMinX: function getMinX(chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 < x2 ? x1 : x2;\n\t},\n\tcomputeIntersectsForChain: function computeIntersectsForChain() {\n\t\tif (arguments.length === 4) {\n\t\t\tvar chainIndex0 = arguments[0],\n\t\t\t    mce = arguments[1],\n\t\t\t    chainIndex1 = arguments[2],\n\t\t\t    si = arguments[3];\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n\t\t} else if (arguments.length === 6) {\n\t\t\tvar start0 = arguments[0],\n\t\t\t    end0 = arguments[1],\n\t\t\t    mce = arguments[2],\n\t\t\t    start1 = arguments[3],\n\t\t\t    end1 = arguments[4],\n\t\t\t    ei = arguments[5];\n\t\t\tvar p00 = this.pts[start0];\n\t\t\tvar p01 = this.pts[end0];\n\t\t\tvar p10 = mce.pts[start1];\n\t\t\tvar p11 = mce.pts[end1];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tei.addIntersections(this.e, start0, mce.e, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.env1.init(p00, p01);\n\t\t\tthis.env2.init(p10, p11);\n\t\t\tif (!this.env1.intersects(this.env2)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t}\n\t},\n\tgetStartIndexes: function getStartIndexes() {\n\t\treturn this.startIndex;\n\t},\n\tcomputeIntersects: function computeIntersects(mce, si) {\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainEdge;\n\t}\n});\n\nfunction Depth() {\n\tthis._depth = Array(2).fill().map(function () {\n\t\treturn Array(3);\n\t});\n\tfor (var i = 0; i < 2; i++) {\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tthis._depth[i][j] = Depth.NULL_VALUE;\n\t\t}\n\t}\n}\nextend(Depth.prototype, {\n\tgetDepth: function getDepth(geomIndex, posIndex) {\n\t\treturn this._depth[geomIndex][posIndex];\n\t},\n\tsetDepth: function setDepth(geomIndex, posIndex, depthValue) {\n\t\tthis._depth[geomIndex][posIndex] = depthValue;\n\t},\n\tisNull: function isNull() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\tif (this._depth[i][j] !== Depth.NULL_VALUE) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geomIndex = arguments[0];\n\t\t\treturn this._depth[geomIndex][1] === Depth.NULL_VALUE;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    posIndex = arguments[1];\n\t\t\treturn this._depth[geomIndex][posIndex] === Depth.NULL_VALUE;\n\t\t}\n\t},\n\tnormalize: function normalize() {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!this.isNull(i)) {\n\t\t\t\tvar minDepth = this._depth[i][1];\n\t\t\t\tif (this._depth[i][2] < minDepth) minDepth = this._depth[i][2];\n\t\t\t\tif (minDepth < 0) minDepth = 0;\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar newValue = 0;\n\t\t\t\t\tif (this._depth[i][j] > minDepth) newValue = 1;\n\t\t\t\t\tthis._depth[i][j] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDelta: function getDelta(geomIndex) {\n\t\treturn this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT];\n\t},\n\tgetLocation: function getLocation(geomIndex, posIndex) {\n\t\tif (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n\t\treturn Location.INTERIOR;\n\t},\n\ttoString: function toString() {\n\t\treturn \"A: \" + this._depth[0][1] + \",\" + this._depth[0][2] + \" B: \" + this._depth[1][1] + \",\" + this._depth[1][2];\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar lbl = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n\t\t\t\t\t\tif (this.isNull(i, j)) {\n\t\t\t\t\t\t\tthis._depth[i][j] = Depth.depthAtLocation(loc);\n\t\t\t\t\t\t} else this._depth[i][j] += Depth.depthAtLocation(loc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar geomIndex = arguments[0],\n\t\t\t    posIndex = arguments[1],\n\t\t\t    location = arguments[2];\n\t\t\tif (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Depth;\n\t}\n});\nDepth.depthAtLocation = function (location) {\n\tif (location === Location.EXTERIOR) return 0;\n\tif (location === Location.INTERIOR) return 1;\n\treturn Depth.NULL_VALUE;\n};\nDepth.NULL_VALUE = -1;\n\nfunction Edge() {\n\tGraphComponent.apply(this);\n\tthis.pts = null;\n\tthis._env = null;\n\tthis.eiList = new EdgeIntersectionList(this);\n\tthis._name = null;\n\tthis._mce = null;\n\tthis._isIsolated = true;\n\tthis._depth = new Depth();\n\tthis._depthDelta = 0;\n\tif (arguments.length === 1) {\n\t\tvar pts = arguments[0];\n\t\tEdge.call(this, pts, null);\n\t} else if (arguments.length === 2) {\n\t\tvar pts = arguments[0],\n\t\t    label = arguments[1];\n\t\tthis.pts = pts;\n\t\tthis._label = label;\n\t}\n}\ninherits$1(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tgetDepth: function getDepth() {\n\t\treturn this._depth;\n\t},\n\tgetCollapsedEdge: function getCollapsedEdge() {\n\t\tvar newPts = new Array(2).fill(null);\n\t\tnewPts[0] = this.pts[0];\n\t\tnewPts[1] = this.pts[1];\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this._label));\n\t\treturn newe;\n\t},\n\tisIsolated: function isIsolated() {\n\t\treturn this._isIsolated;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\treturn this.pts;\n\t},\n\tsetIsolated: function setIsolated(isIsolated) {\n\t\tthis._isIsolated = isIsolated;\n\t},\n\tsetName: function setName(name) {\n\t\tthis._name = name;\n\t},\n\tequals: function equals(o) {\n\t\tif (!(o instanceof Edge)) return false;\n\t\tvar e = o;\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tvar isEqualForward = true;\n\t\tvar isEqualReverse = true;\n\t\tvar iRev = this.pts.length;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\tisEqualForward = false;\n\t\t\t}\n\t\t\tif (!this.pts[i].equals2D(e.pts[--iRev])) {\n\t\t\t\tisEqualReverse = false;\n\t\t\t}\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.pts.length > 0) return this.pts[0];\n\t\t\treturn null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar i = arguments[0];\n\t\t\treturn this.pts[i];\n\t\t}\n\t},\n\tprint: function print(out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tout.print(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) out.print(\",\");\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tout.print(\")  \" + this._label + \" \" + this._depthDelta);\n\t},\n\tcomputeIM: function computeIM(im) {\n\t\tEdge.updateIM(this._label, im);\n\t},\n\tisCollapsed: function isCollapsed() {\n\t\tif (!this._label.isArea()) return false;\n\t\tif (this.pts.length !== 3) return false;\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\n\t\treturn false;\n\t},\n\tisClosed: function isClosed() {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetMaximumSegmentIndex: function getMaximumSegmentIndex() {\n\t\treturn this.pts.length - 1;\n\t},\n\tgetDepthDelta: function getDepthDelta() {\n\t\treturn this._depthDelta;\n\t},\n\tgetNumPoints: function getNumPoints() {\n\t\treturn this.pts.length;\n\t},\n\tprintReverse: function printReverse(out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\n\t\t\tout.print(this.pts[i] + \" \");\n\t\t}\n\t\tout.println(\"\");\n\t},\n\tgetMonotoneChainEdge: function getMonotoneChainEdge() {\n\t\tif (this._mce === null) this._mce = new MonotoneChainEdge(this);\n\t\treturn this._mce;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\tif (this._env === null) {\n\t\t\tthis._env = new Envelope();\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\t\tthis._env.expandToInclude(this.pts[i]);\n\t\t\t}\n\t\t}\n\t\treturn this._env;\n\t},\n\taddIntersection: function addIntersection(li, segmentIndex, geomIndex, intIndex) {\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t\tdist = 0.0;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n\t},\n\ttoString: function toString() {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"edge \" + this._name + \": \");\n\t\tbuf.append(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) buf.append(\",\");\n\t\t\tbuf.append(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tbuf.append(\")  \" + this._label + \" \" + this._depthDelta);\n\t\treturn buf.toString();\n\t},\n\tisPointwiseEqual: function isPointwiseEqual(e) {\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsetDepthDelta: function setDepthDelta(depthDelta) {\n\t\tthis._depthDelta = depthDelta;\n\t},\n\tgetEdgeIntersectionList: function getEdgeIntersectionList() {\n\t\treturn this.eiList;\n\t},\n\taddIntersections: function addIntersections(li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Edge;\n\t}\n});\nEdge.updateIM = function () {\n\tif (arguments.length === 2) {\n\t\tvar label = arguments[0],\n\t\t    im = arguments[1];\n\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\t\tif (label.isArea()) {\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n\t\t}\n\t} else return GraphComponent.prototype.updateIM.apply(this, arguments);\n};\n\nfunction GeometryGraph() {\n\tPlanarGraph.apply(this);\n\tthis._parentGeom = null;\n\tthis._lineEdgeMap = new HashMap();\n\tthis._boundaryNodeRule = null;\n\tthis._useBoundaryDeterminationRule = true;\n\tthis._argIndex = null;\n\tthis._boundaryNodes = null;\n\tthis._hasTooFewPoints = false;\n\tthis._invalidPoint = null;\n\tthis._areaPtLocator = null;\n\tthis._ptLocator = new PointLocator();\n\tif (arguments.length === 2) {\n\t\tvar argIndex = arguments[0],\n\t\t    parentGeom = arguments[1];\n\t\tGeometryGraph.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tvar argIndex = arguments[0],\n\t\t    parentGeom = arguments[1],\n\t\t    boundaryNodeRule = arguments[2];\n\t\tthis._argIndex = argIndex;\n\t\tthis._parentGeom = parentGeom;\n\t\tthis._boundaryNodeRule = boundaryNodeRule;\n\t\tif (parentGeom !== null) {\n\t\t\tthis.add(parentGeom);\n\t\t}\n\t}\n}\ninherits$1(GeometryGraph, PlanarGraph);\nextend(GeometryGraph.prototype, {\n\tinsertBoundaryPoint: function insertBoundaryPoint(argIndex, coord) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tvar boundaryCount = 1;\n\t\tvar loc = Location.NONE;\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\tvar newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n\t\tlbl.setLocation(argIndex, newLoc);\n\t},\n\tcomputeSelfNodes: function computeSelfNodes() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar li = arguments[0],\n\t\t\t    computeRingSelfNodes = arguments[1];\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar li = arguments[0],\n\t\t\t    computeRingSelfNodes = arguments[1],\n\t\t\t    isDoneIfProperInt = arguments[2];\n\t\t\tvar si = new SegmentIntersector$1(li, true, false);\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\n\t\t\tvar esi = this.createEdgeSetIntersector();\n\t\t\tvar isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n\t\t\tvar computeAllSegments = computeRingSelfNodes || !isRings;\n\t\t\tesi.computeIntersections(this._edges, si, computeAllSegments);\n\t\t\tthis.addSelfIntersectionNodes(this._argIndex);\n\t\t\treturn si;\n\t\t}\n\t},\n\tcomputeSplitEdges: function computeSplitEdges(edgelist) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\te.eiList.addSplitEdges(edgelist);\n\t\t}\n\t},\n\tcomputeEdgeIntersections: function computeEdgeIntersections(g, li, includeProper) {\n\t\tvar si = new SegmentIntersector$1(li, includeProper, true);\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n\t\tvar esi = this.createEdgeSetIntersector();\n\t\tesi.computeIntersections(this._edges, g._edges, si);\n\t\treturn si;\n\t},\n\tgetGeometry: function getGeometry() {\n\t\treturn this._parentGeom;\n\t},\n\tgetBoundaryNodeRule: function getBoundaryNodeRule() {\n\t\treturn this._boundaryNodeRule;\n\t},\n\thasTooFewPoints: function hasTooFewPoints() {\n\t\treturn this._hasTooFewPoints;\n\t},\n\taddPoint: function addPoint() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tvar p = arguments[0];\n\t\t\tvar coord = p.getCoordinate();\n\t\t\tthis.insertPoint(this._argIndex, coord, Location.INTERIOR);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar pt = arguments[0];\n\t\t\tthis.insertPoint(this._argIndex, pt, Location.INTERIOR);\n\t\t}\n\t},\n\taddPolygon: function addPolygon(p) {\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\taddEdge: function addEdge(e) {\n\t\tthis.insertEdge(e);\n\t\tvar coord = e.getCoordinates();\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t\tthis.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n\t},\n\taddLineString: function addLineString(line) {\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (coord.length < 2) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n\t\tthis._lineEdgeMap.put(line, e);\n\t\tthis.insertEdge(e);\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[0]);\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n\t},\n\tgetInvalidPoint: function getInvalidPoint() {\n\t\treturn this._invalidPoint;\n\t},\n\tgetBoundaryPoints: function getBoundaryPoints() {\n\t\tvar coll = this.getBoundaryNodes();\n\t\tvar pts = new Array(coll.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = coll.iterator(); it.hasNext();) {\n\t\t\tvar node = it.next();\n\t\t\tpts[i++] = node.getCoordinate().copy();\n\t\t}\n\t\treturn pts;\n\t},\n\tgetBoundaryNodes: function getBoundaryNodes() {\n\t\tif (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex);\n\t\treturn this._boundaryNodes;\n\t},\n\taddSelfIntersectionNode: function addSelfIntersectionNode(argIndex, coord, loc) {\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\n\t\tif (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord);else this.insertPoint(argIndex, coord, loc);\n\t},\n\taddPolygonRing: function addPolygonRing(lr, cwLeft, cwRight) {\n\t\tif (lr.isEmpty()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\t\tif (coord.length < 4) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar left = cwLeft;\n\t\tvar right = cwRight;\n\t\tif (CGAlgorithms.isCCW(coord)) {\n\t\t\tleft = cwRight;\n\t\t\tright = cwLeft;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n\t\tthis._lineEdgeMap.put(lr, e);\n\t\tthis.insertEdge(e);\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t},\n\tinsertPoint: function insertPoint(argIndex, coord, onLocation) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tif (lbl === null) {\n\t\t\tn._label = new Label(argIndex, onLocation);\n\t\t} else lbl.setLocation(argIndex, onLocation);\n\t},\n\tcreateEdgeSetIntersector: function createEdgeSetIntersector() {\n\t\treturn new SimpleMCSweepLineIntersector();\n\t},\n\taddSelfIntersectionNodes: function addSelfIntersectionNodes(argIndex) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar g = arguments[0];\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false;\n\t\t\tif (g instanceof Polygon) this.addPolygon(g);else if (g instanceof LineString) this.addLineString(g);else if (g instanceof Point) this.addPoint(g);else if (g instanceof MultiPoint) this.addCollection(g);else if (g instanceof MultiLineString) this.addCollection(g);else if (g instanceof MultiPolygon) this.addCollection(g);else if (g instanceof GeometryCollection) this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t} else return PlanarGraph.prototype.add.apply(this, arguments);\n\t},\n\taddCollection: function addCollection(gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tlocate: function locate(pt) {\n\t\tif (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n\t\t\tif (this._areaPtLocator === null) {\n\t\t\t\tthis._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n\t\t\t}\n\t\t\treturn this._areaPtLocator.locate(pt);\n\t\t}\n\t\treturn this._ptLocator.locate(pt, this._parentGeom);\n\t},\n\tfindEdge: function findEdge() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar line = arguments[0];\n\t\t\treturn this._lineEdgeMap.get(line);\n\t\t} else return PlanarGraph.prototype.findEdge.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryGraph;\n\t}\n});\nGeometryGraph.determineBoundary = function (boundaryNodeRule, boundaryCount) {\n\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n};\n\nfunction GeometryGraphOperation() {\n\tthis._li = new RobustLineIntersector();\n\tthis._resultPrecisionModel = null;\n\tthis._arg = null;\n\tif (arguments.length === 1) {\n\t\tvar g0 = arguments[0];\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\n\t\tthis._arg = new Array(1).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0);\n\t\t\n\t} else if (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1],\n\t\t    boundaryNodeRule = arguments[2];\n\t\tif (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel());else this.setComputationPrecision(g1.getPrecisionModel());\n\t\tthis._arg = new Array(2).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\n\t\tthis._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n\t}\n}\nextend(GeometryGraphOperation.prototype, {\n\tgetArgGeometry: function getArgGeometry(i) {\n\t\treturn this._arg[i].getGeometry();\n\t},\n\tsetComputationPrecision: function setComputationPrecision(pm) {\n\t\tthis._resultPrecisionModel = pm;\n\t\tthis._li.setPrecisionModel(this._resultPrecisionModel);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryGraphOperation;\n\t}\n});\n\nfunction OrientedCoordinateArray() {\n\tthis._pts = null;\n\tthis._orientation = null;\n\tvar pts = arguments[0];\n\tthis._pts = pts;\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\n}\nextend(OrientedCoordinateArray.prototype, {\n\tcompareTo: function compareTo(o1) {\n\t\tvar oca = o1;\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n\t\treturn comp;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OrientedCoordinateArray;\n\t}\n});\nOrientedCoordinateArray.orientation = function (pts) {\n\treturn CoordinateArrays.increasingDirection(pts) === 1;\n};\nOrientedCoordinateArray.compareOriented = function (pts1, orientation1, pts2, orientation2) {\n\tvar dir1 = orientation1 ? 1 : -1;\n\tvar dir2 = orientation2 ? 1 : -1;\n\tvar limit1 = orientation1 ? pts1.length : -1;\n\tvar limit2 = orientation2 ? pts2.length : -1;\n\tvar i1 = orientation1 ? 0 : pts1.length - 1;\n\tvar i2 = orientation2 ? 0 : pts2.length - 1;\n\twhile (true) {\n\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\n\t\tif (compPt !== 0) return compPt;\n\t\ti1 += dir1;\n\t\ti2 += dir2;\n\t\tvar done1 = i1 === limit1;\n\t\tvar done2 = i2 === limit2;\n\t\tif (done1 && !done2) return -1;\n\t\tif (!done1 && done2) return 1;\n\t\tif (done1 && done2) return 0;\n\t}\n};\n\nfunction EdgeList() {\n\tthis._edges = new ArrayList();\n\tthis._ocaMap = new TreeMap();\n}\nextend(EdgeList.prototype, {\n\tprint: function print(out) {\n\t\tout.print(\"MULTILINESTRING ( \");\n\t\tfor (var j = 0; j < this._edges.size(); j++) {\n\t\t\tvar e = this._edges.get(j);\n\t\t\tif (j > 0) out.print(\",\");\n\t\t\tout.print(\"(\");\n\t\t\tvar pts = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tif (i > 0) out.print(\",\");\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\n\t\t\t}\n\t\t\tout.println(\")\");\n\t\t}\n\t\tout.print(\")  \");\n\t},\n\taddAll: function addAll(edgeColl) {\n\t\tfor (var i = edgeColl.iterator(); i.hasNext();) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t},\n\tfindEdgeIndex: function findEdgeIndex(e) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tif (this._edges.get(i).equals(e)) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function iterator() {\n\t\treturn this._edges.iterator();\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this._edges;\n\t},\n\tget: function get(i) {\n\t\treturn this._edges.get(i);\n\t},\n\tfindEqualEdge: function findEqualEdge(e) {\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tvar matchEdge = this._ocaMap.get(oca);\n\t\treturn matchEdge;\n\t},\n\tadd: function add(e) {\n\t\tthis._edges.add(e);\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tthis._ocaMap.put(oca, e);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeList;\n\t}\n});\n\nfunction OverlayOp() {\n\tthis._ptLocator = new PointLocator();\n\tthis._geomFact = null;\n\tthis._resultGeom = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tthis._resultPolyList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tthis._resultPointList = new ArrayList();\n\tvar g0 = arguments[0],\n\t    g1 = arguments[1];\n\tGeometryGraphOperation.call(this, g0, g1);\n\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\tthis._geomFact = g0.getFactory();\n}\ninherits$1(OverlayOp, GeometryGraphOperation);\nextend(OverlayOp.prototype, {\n\tinsertUniqueEdge: function insertUniqueEdge(e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\tvar depth = existingEdge.getDepth();\n\t\t\tif (depth.isNull()) {\n\t\t\t\tdepth.add(existingLabel);\n\t\t\t}\n\t\t\tdepth.add(labelToMerge);\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t}\n\t},\n\tgetGraph: function getGraph() {\n\t\treturn this._graph;\n\t},\n\tcancelDuplicateResultEdges: function cancelDuplicateResultEdges() {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.isInResult() && sym.isInResult()) {\n\t\t\t\tde.setInResult(false);\n\t\t\t\tsym.setInResult(false);\n\t\t\t}\n\t\t}\n\t},\n\tisCoveredByLA: function isCoveredByLA(coord) {\n\t\tif (this.isCovered(coord, this._resultLineList)) return true;\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tcomputeGeometry: function computeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n\t\tvar geomList = new ArrayList();\n\t\tgeomList.addAll(resultPointList);\n\t\tgeomList.addAll(resultLineList);\n\t\tgeomList.addAll(resultPolyList);\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact);\n\t\treturn this._geomFact.buildGeometry(geomList);\n\t},\n\tmergeSymLabels: function mergeSymLabels() {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().mergeSymLabels();\n\t\t}\n\t},\n\tisCovered: function isCovered(coord, geomList) {\n\t\tfor (var it = geomList.iterator(); it.hasNext();) {\n\t\t\tvar geom = it.next();\n\t\t\tvar loc = this._ptLocator.locate(coord, geom);\n\t\t\tif (loc !== Location.EXTERIOR) return true;\n\t\t}\n\t\treturn false;\n\t},\n\treplaceCollapsedEdges: function replaceCollapsedEdges() {\n\t\tvar newEdges = new ArrayList();\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.isCollapsed()) {\n\t\t\t\tit.remove();\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\n\t\t\t}\n\t\t}\n\t\tthis._edgeList.addAll(newEdges);\n\t},\n\tupdateNodeLabelling: function updateNodeLabelling() {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tvar lbl = node.getEdges().getLabel();\n\t\t\tnode.getLabel().merge(lbl);\n\t\t}\n\t},\n\tgetResultGeometry: function getResultGeometry(overlayOpCode) {\n\t\tthis.computeOverlay(overlayOpCode);\n\t\treturn this._resultGeom;\n\t},\n\tinsertUniqueEdges: function insertUniqueEdges(edges) {\n\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis.insertUniqueEdge(e);\n\t\t}\n\t},\n\tcomputeOverlay: function computeOverlay(opCode) {\n\t\tthis.copyPoints(0);\n\t\tthis.copyPoints(1);\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tthis._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n\t\tvar baseSplitEdges = new ArrayList();\n\t\tthis._arg[0].computeSplitEdges(baseSplitEdges);\n\t\tthis._arg[1].computeSplitEdges(baseSplitEdges);\n\t\tthis.insertUniqueEdges(baseSplitEdges);\n\t\tthis.computeLabelsFromDepths();\n\t\tthis.replaceCollapsedEdges();\n\t\tEdgeNodingValidator.checkValid(this._edgeList.getEdges());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tthis.computeLabelling();\n\t\tthis.labelIncompleteNodes();\n\t\tthis.findResultAreaEdges(opCode);\n\t\tthis.cancelDuplicateResultEdges();\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tpolyBuilder.add(this._graph);\n\t\tthis._resultPolyList = polyBuilder.getPolygons();\n\t\tvar lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultLineList = lineBuilder.build(opCode);\n\t\tvar pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultPointList = pointBuilder.build(opCode);\n\t\tthis._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n\t},\n\tlabelIncompleteNode: function labelIncompleteNode(n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setLocation(targetIndex, loc);\n\t},\n\tcopyPoints: function copyPoints(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._graph.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tfindResultAreaEdges: function findResultAreaEdges(opCode) {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelsFromDepths: function computeLabelsFromDepths() {\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar lbl = e.getLabel();\n\t\t\tvar depth = e.getDepth();\n\t\t\tif (!depth.isNull()) {\n\t\t\t\tdepth.normalize();\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\n\t\t\t\t\t\t\tlbl.toLine(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function computeLabelling() {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t\tthis.mergeSymLabels();\n\t\tthis.updateNodeLabelling();\n\t},\n\tlabelIncompleteNodes: function labelIncompleteNodes() {\n\t\tfor (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0);else this.labelIncompleteNode(n, 1);\n\t\t\t}\n\t\t\tn.getEdges().updateLabelling(label);\n\t\t}\n\t},\n\tisCoveredByA: function isCoveredByA(coord) {\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OverlayOp;\n\t}\n});\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n\tvar gov = new OverlayOp(geom0, geom1);\n\tvar geomOv = gov.getResultGeometry(opCode);\n\treturn geomOv;\n};\nOverlayOp.intersection = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory());\n\tif (g.isGeometryCollection()) {\n\t\tvar g2 = other;\n\t\treturn GeometryCollectionMapper.map(g, {\n\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\treturn [MapOp];\n\t\t\t},\n\t\t\tmap: function map(g) {\n\t\t\t\treturn g.intersection(g2);\n\t\t\t}\n\t\t});\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION);\n};\nOverlayOp.symDifference = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE);\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n\tvar dim0 = g0.getDimension();\n\tvar dim1 = g1.getDimension();\n\tvar resultDimension = -1;\n\tswitch (opCode) {\n\t\tcase OverlayOp.INTERSECTION:\n\t\t\tresultDimension = Math.min(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.UNION:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.DIFFERENCE:\n\t\t\tresultDimension = dim0;\n\t\t\tbreak;\n\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t}\n\treturn resultDimension;\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n\tvar result = null;\n\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n\t\tcase -1:\n\t\t\tresult = geomFact.createGeometryCollection(new Array(0).fill(null));\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tresult = geomFact.createPoint();\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tresult = geomFact.createLineString();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = geomFact.createPolygon();\n\t\t\tbreak;\n\t}\n\treturn result;\n};\nOverlayOp.difference = function (g, other) {\n\tif (g.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory());\n\tif (other.isEmpty()) return g.copy();\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE);\n};\nOverlayOp.isResultOfOp = function () {\n\tif (arguments.length === 2) {\n\t\tvar label = arguments[0],\n\t\t    opCode = arguments[1];\n\t\tvar loc0 = label.getLocation(0);\n\t\tvar loc1 = label.getLocation(1);\n\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\n\t} else if (arguments.length === 3) {\n\t\tvar loc0 = arguments[0],\n\t\t    loc1 = arguments[1],\n\t\t    overlayOpCode = arguments[2];\n\t\tif (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\n\t\tif (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\n\t\tswitch (overlayOpCode) {\n\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.UNION:\n\t\t\t\treturn loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t}\n\t\treturn false;\n\t}\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nfunction SnapOverlayOp() {\n\tthis._geom = new Array(2).fill(null);\n\tthis._snapTolerance = null;\n\tthis._cbr = null;\n\tvar g1 = arguments[0],\n\t    g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n\tthis.computeSnapTolerance();\n}\nextend(SnapOverlayOp.prototype, {\n\tselfSnap: function selfSnap(geom) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\tvar snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tremoveCommonBits: function removeCommonBits(geom) {\n\t\tthis._cbr = new CommonBitsRemover();\n\t\tthis._cbr.add(geom[0]);\n\t\tthis._cbr.add(geom[1]);\n\t\tvar remGeom = new Array(2).fill(null);\n\t\tremGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n\t\tremGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n\t\treturn remGeom;\n\t},\n\tprepareResult: function prepareResult(geom) {\n\t\tthis._cbr.addCommonBits(geom);\n\t\treturn geom;\n\t},\n\tgetResultGeometry: function getResultGeometry(opCode) {\n\t\tvar prepGeom = this.snap(this._geom);\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n\t\treturn this.prepareResult(result);\n\t},\n\tcheckValid: function checkValid(g) {\n\t\tif (!g.isValid()) {\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\n\t\t}\n\t},\n\tcomputeSnapTolerance: function computeSnapTolerance() {\n\t\tthis._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n\t},\n\tsnap: function snap(geom) {\n\t\tvar remGeom = this.removeCommonBits(geom);\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SnapOverlayOp;\n\t}\n});\nSnapOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapOverlayOp.union = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapOverlayOp.intersection = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapOverlayOp.difference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n\nfunction SnapIfNeededOverlayOp() {\n\tthis._geom = new Array(2).fill(null);\n\tvar g1 = arguments[0],\n\t    g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n}\nextend(SnapIfNeededOverlayOp.prototype, {\n\tgetResultGeometry: function getResultGeometry(opCode) {\n\t\tvar result = null;\n\t\tvar isSuccess = false;\n\t\tvar savedException = null;\n\t\ttry {\n\t\t\tresult = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\tvar isValid = true;\n\t\t\tif (isValid) isSuccess = true;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tsavedException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (!isSuccess) {\n\t\t\ttry {\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\t\tthrow savedException;\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t}\n\t\treturn result;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SnapIfNeededOverlayOp;\n\t}\n});\nSnapIfNeededOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapIfNeededOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapIfNeededOverlayOp.union = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapIfNeededOverlayOp.intersection = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapIfNeededOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapIfNeededOverlayOp.difference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n\nfunction InteriorPointArea() {\n\tthis._factory = null;\n\tthis._interiorPoint = null;\n\tthis._maxWidth = 0.0;\n\tvar g = arguments[0];\n\tthis._factory = g.getFactory();\n\tthis.add(g);\n}\nextend(InteriorPointArea.prototype, {\n\taddPolygon: function addPolygon(geometry) {\n\t\tif (geometry.isEmpty()) return null;\n\t\tvar intPt = null;\n\t\tvar width = 0;\n\t\tvar bisector = this.horizontalBisector(geometry);\n\t\tif (bisector.getLength() === 0.0) {\n\t\t\twidth = 0;\n\t\t\tintPt = bisector.getCoordinate();\n\t\t} else {\n\t\t\tvar intersections = SnapIfNeededOverlayOp.overlayOp(bisector, geometry, OverlayOp.INTERSECTION);\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n\t\t}\n\t\tif (this._interiorPoint === null || width > this._maxWidth) {\n\t\t\tthis._interiorPoint = intPt;\n\t\t\tthis._maxWidth = width;\n\t\t}\n\t},\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\treturn this._interiorPoint;\n\t},\n\twidestGeometry: function widestGeometry() {\n\t\tif (arguments[0] instanceof GeometryCollection) {\n\t\t\tvar gc = arguments[0];\n\t\t\tif (gc.isEmpty()) {\n\t\t\t\treturn gc;\n\t\t\t}\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn widestGeometry;\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geometry = arguments[0];\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t\treturn this.widestGeometry(geometry);\n\t\t}\n\t},\n\thorizontalBisector: function horizontalBisector(geometry) {\n\t\tvar envelope = geometry.getEnvelopeInternal();\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\n\t\treturn this._factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n\t},\n\tadd: function add(geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\tthis.addPolygon(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorPointArea;\n\t}\n});\nInteriorPointArea.centre = function (envelope) {\n\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n};\nInteriorPointArea.avg = function (a, b) {\n\treturn (a + b) / 2.0;\n};\nfunction SafeBisectorFinder() {\n\tthis._poly = null;\n\tthis._centreY = null;\n\tthis._hiY = Double.MAX_VALUE;\n\tthis._loY = -Double.MAX_VALUE;\n\tvar poly = arguments[0];\n\tthis._poly = poly;\n\tthis._hiY = poly.getEnvelopeInternal().getMaxY();\n\tthis._loY = poly.getEnvelopeInternal().getMinY();\n\tthis._centreY = InteriorPointArea.avg(this._loY, this._hiY);\n}\nextend(SafeBisectorFinder.prototype, {\n\tupdateInterval: function updateInterval(y) {\n\t\tif (y <= this._centreY) {\n\t\t\tif (y > this._loY) this._loY = y;\n\t\t} else if (y > this._centreY) {\n\t\t\tif (y < this._hiY) {\n\t\t\t\tthis._hiY = y;\n\t\t\t}\n\t\t}\n\t},\n\tgetBisectorY: function getBisectorY() {\n\t\tthis.process(this._poly.getExteriorRing());\n\t\tfor (var i = 0; i < this._poly.getNumInteriorRing(); i++) {\n\t\t\tthis.process(this._poly.getInteriorRingN(i));\n\t\t}\n\t\tvar bisectY = InteriorPointArea.avg(this._hiY, this._loY);\n\t\treturn bisectY;\n\t},\n\tprocess: function process(line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tfor (var i = 0; i < seq.size(); i++) {\n\t\t\tvar y = seq.getY(i);\n\t\t\tthis.updateInterval(y);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SafeBisectorFinder;\n\t}\n});\nSafeBisectorFinder.getBisectorY = function (poly) {\n\tvar finder = new SafeBisectorFinder(poly);\n\treturn finder.getBisectorY();\n};\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\n\nfunction InteriorPointLine() {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tvar g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.addInterior(g);\n\tif (this._interiorPoint === null) this.addEndpoints(g);\n}\nextend(InteriorPointLine.prototype, {\n\taddEndpoints: function addEndpoints() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tthis.add(pts[0]);\n\t\t\tthis.add(pts[pts.length - 1]);\n\t\t}\n\t},\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\treturn this._interiorPoint;\n\t},\n\taddInterior: function addInterior() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addInterior(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\n\t\t\t\tthis.add(pts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function add(point) {\n\t\tvar dist = point.distance(this._centroid);\n\t\tif (dist < this._minDistance) {\n\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\tthis._minDistance = dist;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorPointLine;\n\t}\n});\n\nfunction InteriorPointPoint() {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tvar g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.add(g);\n}\nextend(InteriorPointPoint.prototype, {\n\tgetInteriorPoint: function getInteriorPoint() {\n\t\treturn this._interiorPoint;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.add(geom.getCoordinate());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar point = arguments[0];\n\t\t\tvar dist = point.distance(this._centroid);\n\t\t\tif (dist < this._minDistance) {\n\t\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\t\tthis._minDistance = dist;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorPointPoint;\n\t}\n});\n\nfunction MonotoneChainSelectAction() {\n\tthis.tempEnv1 = new Envelope();\n\tthis.selectedSegment = new LineSegment();\n}\nextend(MonotoneChainSelectAction.prototype, {\n\tselect: function select() {\n\t\tif (arguments.length === 1) {\n\t\t\t\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar mc = arguments[0],\n\t\t\t    startIndex = arguments[1];\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\n\t\t\tthis.select(this.selectedSegment);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MonotoneChainSelectAction;\n\t}\n});\n\nfunction NodeBase() {\n\tthis._items = new ArrayList();\n\tthis._subnode = [null, null];\n}\nextend(NodeBase.prototype, {\n\thasChildren: function hasChildren() {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function isPrunable() {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function addAllItems(items) {\n\t\titems.addAll(this._items);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(items);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\tsize: function size() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t},\n\taddAllItemsFromOverlapping: function addAllItemsFromOverlapping(interval, resultItems) {\n\t\tif (interval !== null && !this.isSearchMatch(interval)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tif (this._subnode[0] !== null) this._subnode[0].addAllItemsFromOverlapping(interval, resultItems);\n\t\tif (this._subnode[1] !== null) this._subnode[1].addAllItemsFromOverlapping(interval, resultItems);\n\t},\n\thasItems: function hasItems() {\n\t\treturn !this._items.isEmpty();\n\t},\n\tremove: function remove(itemInterval, item) {\n\t\tif (!this.isSearchMatch(itemInterval)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemInterval, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t},\n\tgetItems: function getItems() {\n\t\treturn this._items;\n\t},\n\tdepth: function depth() {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tnodeSize: function nodeSize() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].nodeSize();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tadd: function add(item) {\n\t\tthis._items.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (interval, centre) {\n\tvar subnodeIndex = -1;\n\tif (interval.min >= centre) subnodeIndex = 1;\n\tif (interval.max <= centre) subnodeIndex = 0;\n\treturn subnodeIndex;\n};\n\nfunction Interval() {\n\tthis.min = null;\n\tthis.max = null;\n\tif (arguments.length === 0) {\n\t\tthis.min = 0.0;\n\t\tthis.max = 0.0;\n\t} else if (arguments.length === 1) {\n\t\tvar interval = arguments[0];\n\t\tthis.init(interval.min, interval.max);\n\t} else if (arguments.length === 2) {\n\t\tvar min = arguments[0],\n\t\t    max = arguments[1];\n\t\tthis.init(min, max);\n\t}\n}\nextend(Interval.prototype, {\n\texpandToInclude: function expandToInclude(interval) {\n\t\tif (interval.max > this.max) this.max = interval.max;\n\t\tif (interval.min < this.min) this.min = interval.min;\n\t},\n\tgetWidth: function getWidth() {\n\t\treturn this.max - this.min;\n\t},\n\toverlaps: function overlaps() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar interval = arguments[0];\n\t\t\treturn this.overlaps(interval.min, interval.max);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1];\n\t\t\tif (this.min > max || this.max < min) return false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetMin: function getMin() {\n\t\treturn this.min;\n\t},\n\ttoString: function toString() {\n\t\treturn \"[\" + this.min + \", \" + this.max + \"]\";\n\t},\n\tcontains: function contains() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Interval) {\n\t\t\t\tvar interval = arguments[0];\n\t\t\t\treturn this.contains(interval.min, interval.max);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn p >= this.min && p <= this.max;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar min = arguments[0],\n\t\t\t    max = arguments[1];\n\t\t\treturn min >= this.min && max <= this.max;\n\t\t}\n\t},\n\tinit: function init(min, max) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tif (min > max) {\n\t\t\tthis.min = max;\n\t\t\tthis.max = min;\n\t\t}\n\t},\n\tgetMax: function getMax() {\n\t\treturn this.max;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Interval;\n\t}\n});\n\nfunction DoubleBits() {}\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023;\n};\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp);\n};\nfunction CVTFWD(NumW, Qty) {\n  var Sign;\n  var Expo;\n  var Mant;\n  var Bin;\n  var Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  };\n  var ExW = {\n    32: 8,\n    64: 11\n  }[NumW];\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0;\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW];\n      if (Sign) {\n        Bin.d += 1 << NumW / 4 - 1;\n      }\n      Expo = Math.pow(2, ExW) - 1;\n      Mant = 0;\n    }\n  }\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW];\n    Mant = Math.abs(Qty);\n    while (Mant >= 2) {\n      Expo++;\n      Mant /= 2;\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--;\n      Mant *= 2;\n    }\n    if (Expo <= 0) {\n      Mant /= 2;\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      };\n      Expo = Math.pow(2, ExW) - 1;\n      Mant = 0;\n    }\n  }\n  return Expo;\n}\n\nfunction Key() {\n\tthis._pt = 0.0;\n\tthis._level = 0;\n\tthis._interval = null;\n\tvar interval = arguments[0];\n\tthis.computeKey(interval);\n}\nextend(Key.prototype, {\n\tgetInterval: function getInterval() {\n\t\treturn this._interval;\n\t},\n\tgetLevel: function getLevel() {\n\t\treturn this._level;\n\t},\n\tcomputeKey: function computeKey(itemInterval) {\n\t\tthis._level = Key.computeLevel(itemInterval);\n\t\tthis._interval = new Interval();\n\t\tthis.computeInterval(this._level, itemInterval);\n\t\twhile (!this._interval.contains(itemInterval)) {\n\t\t\tthis._level += 1;\n\t\t\tthis.computeInterval(this._level, itemInterval);\n\t\t}\n\t},\n\tcomputeInterval: function computeInterval(level, itemInterval) {\n\t\tvar size = DoubleBits.powerOf2(level);\n\t\tthis._pt = Math.floor(itemInterval.getMin() / size) * size;\n\t\tthis._interval.init(this._pt, this._pt + size);\n\t},\n\tgetPoint: function getPoint() {\n\t\treturn this._pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Key;\n\t}\n});\nKey.computeLevel = function (interval) {\n\tvar dx = interval.getWidth();\n\tvar level = DoubleBits.exponent(dx) + 1;\n\treturn level;\n};\n\nfunction Node$1() {\n\tNodeBase.apply(this);\n\tthis._interval = null;\n\tthis._centre = null;\n\tthis._level = null;\n\tvar interval = arguments[0],\n\t    level = arguments[1];\n\tthis._interval = interval;\n\tthis._level = level;\n\tthis._centre = (interval.getMin() + interval.getMax()) / 2;\n}\ninherits$1(Node$1, NodeBase);\nextend(Node$1.prototype, {\n\tgetInterval: function getInterval() {\n\t\treturn this._interval;\n\t},\n\tfind: function find(searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this._centre);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchInterval);\n\t\t}\n\t\treturn this;\n\t},\n\tinsert: function insert(node) {\n\t\tAssert.isTrue(this._interval === null || this._interval.contains(node._interval));\n\t\tvar index = NodeBase.getSubnodeIndex(node._interval, this._centre);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insert(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t},\n\tisSearchMatch: function isSearchMatch(itemInterval) {\n\t\treturn itemInterval.overlaps(this._interval);\n\t},\n\tgetSubnode: function getSubnode(index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t},\n\tgetNode: function getNode(searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this._centre);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchInterval);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function createSubnode(index) {\n\t\tvar min = 0.0;\n\t\tvar max = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tmin = this._interval.getMin();\n\t\t\t\tmax = this._centre;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmin = this._centre;\n\t\t\t\tmax = this._interval.getMax();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar subInt = new Interval(min, max);\n\t\tvar node = new Node$1(subInt, this._level - 1);\n\t\treturn node;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node$1;\n\t}\n});\nNode$1.createNode = function (itemInterval) {\n\tvar key = new Key(itemInterval);\n\tvar node = new Node$1(key.getInterval(), key.getLevel());\n\treturn node;\n};\nNode$1.createExpanded = function (node, addInterval) {\n\tvar expandInt = new Interval(addInterval);\n\tif (node !== null) expandInt.expandToInclude(node._interval);\n\tvar largerNode = Node$1.createNode(expandInt);\n\tif (node !== null) largerNode.insert(node);\n\treturn largerNode;\n};\n\nfunction IntervalSize() {}\nextend(IntervalSize.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntervalSize;\n\t}\n});\nIntervalSize.isZeroWidth = function (min, max) {\n\tvar width = max - min;\n\tif (width === 0.0) return true;\n\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\n\tvar scaledInterval = width / maxAbs;\n\tvar level = DoubleBits.exponent(scaledInterval);\n\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\n};\nIntervalSize.MIN_BINARY_EXPONENT = -50;\n\nfunction Root() {\n\tNodeBase.apply(this);\n}\ninherits$1(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function insert(itemInterval, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemInterval, Root.origin);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getInterval().contains(itemInterval)) {\n\t\t\tvar largerNode = Node$1.createExpanded(node, itemInterval);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemInterval, item);\n\t},\n\tisSearchMatch: function isSearchMatch(interval) {\n\t\treturn true;\n\t},\n\tinsertContained: function insertContained(tree, itemInterval, item) {\n\t\tAssert.isTrue(tree.getInterval().contains(itemInterval));\n\t\tvar isZeroArea = IntervalSize.isZeroWidth(itemInterval.getMin(), itemInterval.getMax());\n\t\tvar node = null;\n\t\tif (isZeroArea) node = tree.find(itemInterval);else node = tree.getNode(itemInterval);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Root;\n\t}\n});\nRoot.origin = 0.0;\n\nfunction Bintree() {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root();\n}\nextend(Bintree.prototype, {\n\tsize: function size() {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t},\n\tinsert: function insert(itemInterval, item) {\n\t\tthis.collectStats(itemInterval);\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this._minExtent);\n\t\tthis._root.insert(insertInterval, item);\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tvar x = arguments[0];\n\t\t\t\treturn this.query(new Interval(x, x));\n\t\t\t} else if (arguments[0] instanceof Interval) {\n\t\t\t\tvar interval = arguments[0];\n\t\t\t\tvar foundItems = new ArrayList();\n\t\t\t\tthis.query(interval, foundItems);\n\t\t\t\treturn foundItems;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar interval = arguments[0],\n\t\t\t    foundItems = arguments[1];\n\t\t\tthis._root.addAllItemsFromOverlapping(interval, foundItems);\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems.iterator();\n\t},\n\tremove: function remove(itemInterval, item) {\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this._minExtent);\n\t\treturn this._root.remove(insertInterval, item);\n\t},\n\tcollectStats: function collectStats(interval) {\n\t\tvar del = interval.getWidth();\n\t\tif (del < this._minExtent && del > 0.0) this._minExtent = del;\n\t},\n\tdepth: function depth() {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t},\n\tnodeSize: function nodeSize() {\n\t\tif (this._root !== null) return this._root.nodeSize();\n\t\treturn 0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Bintree;\n\t}\n});\nBintree.ensureExtent = function (itemInterval, minExtent) {\n\tvar min = itemInterval.getMin();\n\tvar max = itemInterval.getMax();\n\tif (min !== max) return itemInterval;\n\tif (min === max) {\n\t\tmin = min - minExtent / 2.0;\n\t\tmax = min + minExtent / 2.0;\n\t}\n\treturn new Interval(min, max);\n};\n\nfunction PointInRing() {}\nextend(PointInRing.prototype, {\n\tisInside: function isInside(pt) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointInRing;\n\t}\n});\n\nfunction MCPointInRing() {\n\tthis._ring = null;\n\tthis._tree = null;\n\tthis._crossings = 0;\n\tthis._interval = new Interval();\n\tvar ring = arguments[0];\n\tthis._ring = ring;\n\tthis.buildIndex();\n}\nextend(MCPointInRing.prototype, {\n\ttestLineSegment: function testLineSegment(p, seg) {\n\t\tvar xInt = null;\n\t\tvar x1 = null;\n\t\tvar y1 = null;\n\t\tvar x2 = null;\n\t\tvar y2 = null;\n\t\tvar p1 = seg.p0;\n\t\tvar p2 = seg.p1;\n\t\tx1 = p1.x - p.x;\n\t\ty1 = p1.y - p.y;\n\t\tx2 = p2.x - p.x;\n\t\ty2 = p2.y - p.y;\n\t\tif (y1 > 0 && y2 <= 0 || y2 > 0 && y1 <= 0) {\n\t\t\txInt = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2) / (y2 - y1);\n\t\t\tif (0.0 < xInt) {\n\t\t\t\tthis._crossings++;\n\t\t\t}\n\t\t}\n\t},\n\tbuildIndex: function buildIndex() {\n\t\tthis._tree = new Bintree();\n\t\tvar pts = CoordinateArrays.removeRepeatedPoints(this._ring.getCoordinates());\n\t\tvar mcList = MonotoneChainBuilder.getChains(pts);\n\t\tfor (var i = 0; i < mcList.size(); i++) {\n\t\t\tvar mc = mcList.get(i);\n\t\t\tvar mcEnv = mc.getEnvelope();\n\t\t\tthis._interval.min = mcEnv.getMinY();\n\t\t\tthis._interval.max = mcEnv.getMaxY();\n\t\t\tthis._tree.insert(this._interval, mc);\n\t\t}\n\t},\n\ttestMonotoneChain: function testMonotoneChain(rayEnv, mcSelecter, mc) {\n\t\tmc.select(rayEnv, mcSelecter);\n\t},\n\tisInside: function isInside(pt) {\n\t\tthis._crossings = 0;\n\t\tvar rayEnv = new Envelope(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, pt.y, pt.y);\n\t\tthis._interval.min = pt.y;\n\t\tthis._interval.max = pt.y;\n\t\tvar segs = this._tree.query(this._interval);\n\t\tvar mcSelecter = new MCSelecter(this, pt);\n\t\tfor (var i = segs.iterator(); i.hasNext();) {\n\t\t\tvar mc = i.next();\n\t\t\tthis.testMonotoneChain(rayEnv, mcSelecter, mc);\n\t\t}\n\t\tif (this._crossings % 2 === 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [PointInRing];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCPointInRing;\n\t}\n});\nfunction MCSelecter() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.mcp = null;\n\tthis.p = null;\n\tvar mcp = arguments[0],\n\t    p = arguments[1];\n\tthis.mcp = mcp;\n\tthis.p = p;\n}\ninherits$1(MCSelecter, MonotoneChainSelectAction);\nextend(MCSelecter.prototype, {\n\tselect: function select() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar ls = arguments[0];\n\t\t\tthis.mcp.testLineSegment(this.p, ls);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCSelecter;\n\t}\n});\nMCPointInRing.MCSelecter = MCSelecter;\n\nfunction Angle() {}\nextend(Angle.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Angle;\n\t}\n});\nAngle.toDegrees = function (radians) {\n\treturn radians * 180 / Math.PI;\n};\nAngle.normalize = function (angle) {\n\twhile (angle > Math.PI) {\n\t\tangle -= Angle.PI_TIMES_2;\n\t}while (angle <= -Math.PI) {\n\t\tangle += Angle.PI_TIMES_2;\n\t}return angle;\n};\nAngle.angle = function () {\n\tif (arguments.length === 1) {\n\t\tvar p = arguments[0];\n\t\treturn Math.atan2(p.y, p.x);\n\t} else if (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\treturn Math.atan2(dy, dx);\n\t}\n};\nAngle.isAcute = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod > 0;\n};\nAngle.isObtuse = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod < 0;\n};\nAngle.interiorAngle = function (p0, p1, p2) {\n\tvar anglePrev = Angle.angle(p1, p0);\n\tvar angleNext = Angle.angle(p1, p2);\n\treturn Math.abs(angleNext - anglePrev);\n};\nAngle.normalizePositive = function (angle) {\n\tif (angle < 0.0) {\n\t\twhile (angle < 0.0) {\n\t\t\tangle += Angle.PI_TIMES_2;\n\t\t}if (angle >= Angle.PI_TIMES_2) angle = 0.0;\n\t} else {\n\t\twhile (angle >= Angle.PI_TIMES_2) {\n\t\t\tangle -= Angle.PI_TIMES_2;\n\t\t}if (angle < 0.0) angle = 0.0;\n\t}\n\treturn angle;\n};\nAngle.angleBetween = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\treturn Angle.diff(a1, a2);\n};\nAngle.diff = function (ang1, ang2) {\n\tvar delAngle = null;\n\tif (ang1 < ang2) {\n\t\tdelAngle = ang2 - ang1;\n\t} else {\n\t\tdelAngle = ang1 - ang2;\n\t}\n\tif (delAngle > Math.PI) {\n\t\tdelAngle = 2 * Math.PI - delAngle;\n\t}\n\treturn delAngle;\n};\nAngle.toRadians = function (angleDegrees) {\n\treturn angleDegrees * Math.PI / 180.0;\n};\nAngle.getTurn = function (ang1, ang2) {\n\tvar crossproduct = Math.sin(ang2 - ang1);\n\tif (crossproduct > 0) {\n\t\treturn Angle.COUNTERCLOCKWISE;\n\t}\n\tif (crossproduct < 0) {\n\t\treturn Angle.CLOCKWISE;\n\t}\n\treturn Angle.NONE;\n};\nAngle.angleBetweenOriented = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\tvar angDel = a2 - a1;\n\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\treturn angDel;\n};\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\nAngle.PI_OVER_2 = Math.PI / 2.0;\nAngle.PI_OVER_4 = Math.PI / 4.0;\nAngle.COUNTERCLOCKWISE = CGAlgorithms.COUNTERCLOCKWISE;\nAngle.CLOCKWISE = CGAlgorithms.CLOCKWISE;\nAngle.NONE = CGAlgorithms.COLLINEAR;\n\nfunction Triangle$1() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.p2 = null;\n\tvar p0 = arguments[0],\n\t    p1 = arguments[1],\n\t    p2 = arguments[2];\n\tthis.p0 = p0;\n\tthis.p1 = p1;\n\tthis.p2 = p2;\n}\nextend(Triangle$1.prototype, {\n\tarea: function area() {\n\t\treturn Triangle$1.area(this.p0, this.p1, this.p2);\n\t},\n\tsignedArea: function signedArea() {\n\t\treturn Triangle$1.signedArea(this.p0, this.p1, this.p2);\n\t},\n\tinterpolateZ: function interpolateZ(p) {\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n\t\treturn Triangle$1.interpolateZ(p, this.p0, this.p1, this.p2);\n\t},\n\tlongestSideLength: function longestSideLength() {\n\t\treturn Triangle$1.longestSideLength(this.p0, this.p1, this.p2);\n\t},\n\tisAcute: function isAcute() {\n\t\treturn Triangle$1.isAcute(this.p0, this.p1, this.p2);\n\t},\n\tcircumcentre: function circumcentre() {\n\t\treturn Triangle$1.circumcentre(this.p0, this.p1, this.p2);\n\t},\n\tarea3D: function area3D() {\n\t\treturn Triangle$1.area3D(this.p0, this.p1, this.p2);\n\t},\n\tcentroid: function centroid() {\n\t\treturn Triangle$1.centroid(this.p0, this.p1, this.p2);\n\t},\n\tinCentre: function inCentre() {\n\t\treturn Triangle$1.inCentre(this.p0, this.p1, this.p2);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Triangle$1;\n\t}\n});\nTriangle$1.area = function (a, b, c) {\n\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n};\nTriangle$1.signedArea = function (a, b, c) {\n\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n};\nTriangle$1.det = function (m00, m01, m10, m11) {\n\treturn m00 * m11 - m01 * m10;\n};\nTriangle$1.interpolateZ = function (p, v0, v1, v2) {\n\tvar x0 = v0.x;\n\tvar y0 = v0.y;\n\tvar a = v1.x - x0;\n\tvar b = v2.x - x0;\n\tvar c = v1.y - y0;\n\tvar d = v2.y - y0;\n\tvar det = a * d - b * c;\n\tvar dx = p.x - x0;\n\tvar dy = p.y - y0;\n\tvar t = (d * dx - b * dy) / det;\n\tvar u = (-c * dx + a * dy) / det;\n\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\treturn z;\n};\nTriangle$1.longestSideLength = function (a, b, c) {\n\tvar lenAB = a.distance(b);\n\tvar lenBC = b.distance(c);\n\tvar lenCA = c.distance(a);\n\tvar maxLen = lenAB;\n\tif (lenBC > maxLen) maxLen = lenBC;\n\tif (lenCA > maxLen) maxLen = lenCA;\n\treturn maxLen;\n};\nTriangle$1.isAcute = function (a, b, c) {\n\tif (!Angle.isAcute(a, b, c)) return false;\n\tif (!Angle.isAcute(b, c, a)) return false;\n\tif (!Angle.isAcute(c, a, b)) return false;\n\treturn true;\n};\nTriangle$1.circumcentre = function (a, b, c) {\n\tvar cx = c.x;\n\tvar cy = c.y;\n\tvar ax = a.x - cx;\n\tvar ay = a.y - cy;\n\tvar bx = b.x - cx;\n\tvar by = b.y - cy;\n\tvar denom = 2 * Triangle$1.det(ax, ay, bx, by);\n\tvar numx = Triangle$1.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n\tvar numy = Triangle$1.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n\tvar ccx = cx - numx / denom;\n\tvar ccy = cy + numy / denom;\n\treturn new Coordinate(ccx, ccy);\n};\nTriangle$1.perpendicularBisector = function (a, b) {\n\tvar dx = b.x - a.x;\n\tvar dy = b.y - a.y;\n\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n\treturn new HCoordinate(l1, l2);\n};\nTriangle$1.angleBisector = function (a, b, c) {\n\tvar len0 = b.distance(a);\n\tvar len2 = b.distance(c);\n\tvar frac = len0 / (len0 + len2);\n\tvar dx = c.x - a.x;\n\tvar dy = c.y - a.y;\n\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n\treturn splitPt;\n};\nTriangle$1.area3D = function (a, b, c) {\n\tvar ux = b.x - a.x;\n\tvar uy = b.y - a.y;\n\tvar uz = b.z - a.z;\n\tvar vx = c.x - a.x;\n\tvar vy = c.y - a.y;\n\tvar vz = c.z - a.z;\n\tvar crossx = uy * vz - uz * vy;\n\tvar crossy = uz * vx - ux * vz;\n\tvar crossz = ux * vy - uy * vx;\n\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n\tvar area3D = Math.sqrt(absSq) / 2;\n\treturn area3D;\n};\nTriangle$1.centroid = function (a, b, c) {\n\tvar x = (a.x + b.x + c.x) / 3;\n\tvar y = (a.y + b.y + c.y) / 3;\n\treturn new Coordinate(x, y);\n};\nTriangle$1.inCentre = function (a, b, c) {\n\tvar len0 = b.distance(c);\n\tvar len1 = a.distance(c);\n\tvar len2 = a.distance(b);\n\tvar circum = len0 + len1 + len2;\n\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n\treturn new Coordinate(inCentreX, inCentreY);\n};\n\nfunction MinimumBoundingCircle() {\n\tthis._input = null;\n\tthis._extremalPts = null;\n\tthis._centre = null;\n\tthis._radius = 0.0;\n\tvar geom = arguments[0];\n\tthis._input = geom;\n}\nextend(MinimumBoundingCircle.prototype, {\n\tgetRadius: function getRadius() {\n\t\tthis.compute();\n\t\treturn this._radius;\n\t},\n\tgetDiameter: function getDiameter() {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetExtremalPoints: function getExtremalPoints() {\n\t\tthis.compute();\n\t\treturn this._extremalPts;\n\t},\n\tcomputeCirclePoints: function computeCirclePoints() {\n\t\tif (this._input.isEmpty()) {\n\t\t\tthis._extremalPts = new Array(0).fill(null);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._input.getNumPoints() === 1) {\n\t\t\tvar pts = this._input.getCoordinates();\n\t\t\tthis._extremalPts = [new Coordinate(pts[0])];\n\t\t\treturn null;\n\t\t}\n\t\tvar convexHull = this._input.convexHull();\n\t\tvar hullPts = convexHull.getCoordinates();\n\t\tvar pts = hullPts;\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n\t\t}\n\t\tif (pts.length <= 2) {\n\t\t\tthis._extremalPts = CoordinateArrays.copyDeep(pts);\n\t\t\treturn null;\n\t\t}\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\n\t\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q)];\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\n\t\t\t\tP = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\n\t\t\t\tQ = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n\t},\n\tcompute: function compute() {\n\t\tif (this._extremalPts !== null) return null;\n\t\tthis.computeCirclePoints();\n\t\tthis.computeCentre();\n\t\tif (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0]);\n\t},\n\tgetFarthestPoints: function getFarthestPoints() {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[this._extremalPts.length - 1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetCircle: function getCircle() {\n\t\tthis.compute();\n\t\tif (this._centre === null) return this._input.getFactory().createPolygon();\n\t\tvar centrePoint = this._input.getFactory().createPoint(this._centre);\n\t\tif (this._radius === 0.0) return centrePoint;\n\t\treturn centrePoint.buffer(this._radius);\n\t},\n\tgetCentre: function getCentre() {\n\t\tthis.compute();\n\t\treturn this._centre;\n\t},\n\tcomputeCentre: function computeCentre() {\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\tthis._centre = null;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis._centre = this._extremalPts[0];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis._centre = Triangle$1.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2]);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MinimumBoundingCircle;\n\t}\n});\nMinimumBoundingCircle.pointWitMinAngleWithX = function (pts, P) {\n\tvar minSin = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tvar dx = p.x - P.x;\n\t\tvar dy = p.y - P.y;\n\t\tif (dy < 0) dy = -dy;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar sin = dy / len;\n\t\tif (sin < minSin) {\n\t\t\tminSin = sin;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\nMinimumBoundingCircle.lowestPoint = function (pts) {\n\tvar min = pts[0];\n\tfor (var i = 1; i < pts.length; i++) {\n\t\tif (pts[i].y < min.y) min = pts[i];\n\t}\n\treturn min;\n};\nMinimumBoundingCircle.pointWithMinAngleWithSegment = function (pts, P, Q) {\n\tvar minAng = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tif (p === Q) continue;\n\t\tvar ang = Angle.angleBetween(P, p, Q);\n\t\tif (ang < minAng) {\n\t\t\tminAng = ang;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\n\nfunction MinimumDiameter() {\n\tthis._inputGeom = null;\n\tthis._isConvex = null;\n\tthis._convexHullPts = null;\n\tthis._minBaseSeg = new LineSegment();\n\tthis._minWidthPt = null;\n\tthis._minPtIndex = null;\n\tthis._minWidth = 0.0;\n\tif (arguments.length === 1) {\n\t\tvar inputGeom = arguments[0];\n\t\tMinimumDiameter.call(this, inputGeom, false);\n\t} else if (arguments.length === 2) {\n\t\tvar inputGeom = arguments[0],\n\t\t    isConvex = arguments[1];\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._isConvex = isConvex;\n\t}\n}\nextend(MinimumDiameter.prototype, {\n\tgetWidthCoordinate: function getWidthCoordinate() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidthPt;\n\t},\n\tgetSupportingSegment: function getSupportingSegment() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1]);\n\t},\n\tgetDiameter: function getDiameter() {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString(null);\n\t\tvar basePt = this._minBaseSeg.project(this._minWidthPt);\n\t\treturn this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt]);\n\t},\n\tcomputeWidthConvex: function computeWidthConvex(convexGeom) {\n\t\tif (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates();else this._convexHullPts = convexGeom.getCoordinates();\n\t\tif (this._convexHullPts.length === 0) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = null;\n\t\t\tthis._minBaseSeg = null;\n\t\t} else if (this._convexHullPts.length === 1) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[0];\n\t\t} else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[1];\n\t\t} else this.computeConvexRingMinDiameter(this._convexHullPts);\n\t},\n\tcomputeConvexRingMinDiameter: function computeConvexRingMinDiameter(pts) {\n\t\tthis._minWidth = Double.MAX_VALUE;\n\t\tvar currMaxIndex = 1;\n\t\tvar seg = new LineSegment();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n\t\t}\n\t},\n\tcomputeMinimumDiameter: function computeMinimumDiameter() {\n\t\tif (this._minWidthPt !== null) return null;\n\t\tif (this._isConvex) this.computeWidthConvex(this._inputGeom);else {\n\t\t\tvar convexGeom = new ConvexHull(this._inputGeom).getConvexHull();\n\t\t\tthis.computeWidthConvex(convexGeom);\n\t\t}\n\t},\n\tgetLength: function getLength() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidth;\n\t},\n\tfindMaxPerpDistance: function findMaxPerpDistance(pts, seg, startIndex) {\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n\t\tvar nextPerpDistance = maxPerpDistance;\n\t\tvar maxIndex = startIndex;\n\t\tvar nextIndex = maxIndex;\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\n\t\t\tmaxPerpDistance = nextPerpDistance;\n\t\t\tmaxIndex = nextIndex;\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n\t\t}\n\t\tif (maxPerpDistance < this._minWidth) {\n\t\t\tthis._minPtIndex = maxIndex;\n\t\t\tthis._minWidth = maxPerpDistance;\n\t\t\tthis._minWidthPt = pts[this._minPtIndex];\n\t\t\tthis._minBaseSeg = new LineSegment(seg);\n\t\t}\n\t\treturn maxIndex;\n\t},\n\tgetMinimumRectangle: function getMinimumRectangle() {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidth === 0.0) {\n\t\t\tif (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) {\n\t\t\t\treturn this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0);\n\t\t\t}\n\t\t\treturn this._minBaseSeg.toGeometry(this._inputGeom.getFactory());\n\t\t}\n\t\tvar dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x;\n\t\tvar dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y;\n\t\tvar minPara = Double.MAX_VALUE;\n\t\tvar maxPara = -Double.MAX_VALUE;\n\t\tvar minPerp = Double.MAX_VALUE;\n\t\tvar maxPerp = -Double.MAX_VALUE;\n\t\tfor (var i = 0; i < this._convexHullPts.length; i++) {\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i]);\n\t\t\tif (paraC > maxPara) maxPara = paraC;\n\t\t\tif (paraC < minPara) minPara = paraC;\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i]);\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\n\t\t\tif (perpC < minPerp) minPerp = perpC;\n\t\t}\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\n\t\tvar shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\t\treturn this._inputGeom.getFactory().createPolygon(shell, null);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MinimumDiameter;\n\t}\n});\nMinimumDiameter.nextIndex = function (pts, index) {\n\tindex++;\n\tif (index >= pts.length) index = 0;\n\treturn index;\n};\nMinimumDiameter.computeC = function (a, b, p) {\n\treturn a * p.y - b * p.x;\n};\nMinimumDiameter.getMinimumDiameter = function (geom) {\n\treturn new MinimumDiameter(geom).getDiameter();\n};\nMinimumDiameter.getMinimumRectangle = function (geom) {\n\treturn new MinimumDiameter(geom).getMinimumRectangle();\n};\nMinimumDiameter.computeSegmentForLine = function (a, b, c) {\n\tvar p0 = null;\n\tvar p1 = null;\n\tif (Math.abs(b) > Math.abs(a)) {\n\t\tp0 = new Coordinate(0.0, c / b);\n\t\tp1 = new Coordinate(1.0, c / b - a / b);\n\t} else {\n\t\tp0 = new Coordinate(c / a, 0.0);\n\t\tp1 = new Coordinate(c / a - b / a, 1.0);\n\t}\n\treturn new LineSegment(p0, p1);\n};\n\nfunction Densifier() {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tvar inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(Densifier.prototype, {\n\tgetResultGeometry: function getResultGeometry() {\n\t\treturn new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom);\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Densifier;\n\t}\n});\nDensifier.densifyPoints = function (pts, distanceTolerance, precModel) {\n\tvar seg = new LineSegment();\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[i + 1];\n\t\tcoordList.add(seg.p0, false);\n\t\tvar len = seg.getLength();\n\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\t\tif (densifiedSegCount > 1) {\n\t\t\tvar densifiedSegLen = len / densifiedSegCount;\n\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\n\t\t\t\tvar segFract = j * densifiedSegLen / len;\n\t\t\t\tvar p = seg.pointAlong(segFract);\n\t\t\t\tprecModel.makePrecise(p);\n\t\t\t\tcoordList.add(p, false);\n\t\t\t}\n\t\t}\n\t}\n\tcoordList.add(pts[pts.length - 1], false);\n\treturn coordList.toCoordinateArray();\n};\nDensifier.densify = function (geom, distanceTolerance) {\n\tvar densifier = new Densifier(geom);\n\tdensifier.setDistanceTolerance(distanceTolerance);\n\treturn densifier.getResultGeometry();\n};\nfunction DensifyTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.distanceTolerance = null;\n\tvar distanceTolerance = arguments[0];\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits$1(DensifyTransformer, GeometryTransformer);\nextend(DensifyTransformer.prototype, {\n\ttransformMultiPolygon: function transformMultiPolygon(geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformPolygon: function transformPolygon(geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn roughGeom;\n\t\t}\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\t\tif (parent instanceof LineString && newPts.length === 1) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tcreateValidArea: function createValidArea(roughAreaGeom) {\n\t\treturn roughAreaGeom.buffer(0.0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DensifyTransformer;\n\t}\n});\nDensifier.DensifyTransformer = DensifyTransformer;\n\nfunction HalfEdge() {\n\tthis._orig = null;\n\tthis._sym = null;\n\tthis._next = null;\n\tvar orig = arguments[0];\n\tthis._orig = orig;\n}\nextend(HalfEdge.prototype, {\n\tfind: function find(dest) {\n\t\tvar oNext = this;\n\t\tdo {\n\t\t\tif (oNext === null) return null;\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\n\t\t\toNext = oNext.oNext();\n\t\t} while (oNext !== this);\n\t\treturn null;\n\t},\n\tdest: function dest() {\n\t\treturn this._sym._orig;\n\t},\n\toNext: function oNext() {\n\t\treturn this._sym._next;\n\t},\n\tinsert: function insert(e) {\n\t\tif (this.oNext() === this) {\n\t\t\tthis.insertAfter(e);\n\t\t\treturn null;\n\t\t}\n\t\tvar ecmp = this.compareTo(e);\n\t\tvar ePrev = this;\n\t\tdo {\n\t\t\tvar oNext = ePrev.oNext();\n\t\t\tvar cmp = oNext.compareTo(e);\n\t\t\tif (cmp !== ecmp || oNext === this) {\n\t\t\t\tePrev.insertAfter(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tePrev = oNext;\n\t\t} while (ePrev !== this);\n\t\tAssert.shouldNeverReachHere();\n\t},\n\tinsertAfter: function insertAfter(e) {\n\t\tAssert.equals(this._orig, e.orig());\n\t\tvar save = this.oNext();\n\t\tthis._sym.setNext(e);\n\t\te.sym().setNext(save);\n\t},\n\tdegree: function degree() {\n\t\tvar degree = 0;\n\t\tvar e = this;\n\t\tdo {\n\t\t\tdegree++;\n\t\t\te = e.oNext();\n\t\t} while (e !== this);\n\t\treturn degree;\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar p0 = arguments[0],\n\t\t\t    p1 = arguments[1];\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n\t\t}\n\t},\n\tdeltaY: function deltaY() {\n\t\treturn this._sym._orig.y - this._orig.y;\n\t},\n\tsym: function sym() {\n\t\treturn this._sym;\n\t},\n\tprev: function prev() {\n\t\treturn this._sym.next()._sym;\n\t},\n\tcompareAngularDirection: function compareAngularDirection(e) {\n\t\tvar dx = this.deltaX();\n\t\tvar dy = this.deltaY();\n\t\tvar dx2 = e.deltaX();\n\t\tvar dy2 = e.deltaY();\n\t\tif (dx === dx2 && dy === dy2) return 0;\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\n\t\tif (quadrant > quadrant2) return 1;\n\t\tif (quadrant < quadrant2) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e._orig, e.dest(), this.dest());\n\t},\n\tprevNode: function prevNode() {\n\t\tvar e = this;\n\t\twhile (e.degree() === 2) {\n\t\t\te = e.prev();\n\t\t\tif (e === this) return null;\n\t\t}\n\t\treturn e;\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar e = obj;\n\t\tvar comp = this.compareAngularDirection(e);\n\t\treturn comp;\n\t},\n\tnext: function next() {\n\t\treturn this._next;\n\t},\n\tsetSym: function setSym(e) {\n\t\tthis._sym = e;\n\t},\n\torig: function orig() {\n\t\treturn this._orig;\n\t},\n\ttoString: function toString() {\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n\t},\n\tsetNext: function setNext(e) {\n\t\tthis._next = e;\n\t},\n\tinit: function init(e) {\n\t\tthis.setSym(e);\n\t\te.setSym(this);\n\t\tthis.setNext(e);\n\t\te.setNext(this);\n\t},\n\tdeltaX: function deltaX() {\n\t\treturn this._sym._orig.x - this._orig.x;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HalfEdge;\n\t}\n});\nHalfEdge.init = function (e0, e1) {\n\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n\te0.init(e1);\n\treturn e0;\n};\nHalfEdge.create = function (p0, p1) {\n\tvar e0 = new HalfEdge(p0);\n\tvar e1 = new HalfEdge(p1);\n\te0.init(e1);\n\treturn e0;\n};\n\nfunction MarkHalfEdge() {\n\tthis._isMarked = false;\n\tvar orig = arguments[0];\n\tHalfEdge.call(this, orig);\n}\ninherits$1(MarkHalfEdge, HalfEdge);\nextend(MarkHalfEdge.prototype, {\n\tmark: function mark() {\n\t\tthis._isMarked = true;\n\t},\n\tsetMark: function setMark(isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tisMarked: function isMarked() {\n\t\treturn this._isMarked;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MarkHalfEdge;\n\t}\n});\nMarkHalfEdge.setMarkBoth = function (e, isMarked) {\n\te.setMark(isMarked);\n\te.sym().setMark(isMarked);\n};\nMarkHalfEdge.isMarked = function (e) {\n\treturn e.isMarked();\n};\nMarkHalfEdge.setMark = function (e, isMarked) {\n\te.setMark(isMarked);\n};\nMarkHalfEdge.markBoth = function (e) {\n\te.mark();\n\te.sym().mark();\n};\nMarkHalfEdge.mark = function (e) {\n\te.mark();\n};\n\nfunction EdgeGraph() {\n\tthis._vertexMap = new HashMap();\n}\nextend(EdgeGraph.prototype, {\n\tinsert: function insert(orig, dest, eAdj) {\n\t\tvar e = this.create(orig, dest);\n\t\tif (eAdj !== null) {\n\t\t\teAdj.insert(e);\n\t\t} else {\n\t\t\tthis._vertexMap.put(orig, e);\n\t\t}\n\t\tvar eAdjDest = this._vertexMap.get(dest);\n\t\tif (eAdjDest !== null) {\n\t\t\teAdjDest.insert(e.sym());\n\t\t} else {\n\t\t\tthis._vertexMap.put(dest, e.sym());\n\t\t}\n\t\treturn e;\n\t},\n\tcreate: function create(p0, p1) {\n\t\tvar e0 = this.createEdge(p0);\n\t\tvar e1 = this.createEdge(p1);\n\t\tHalfEdge.init(e0, e1);\n\t\treturn e0;\n\t},\n\tcreateEdge: function createEdge(orig) {\n\t\treturn new HalfEdge(orig);\n\t},\n\taddEdge: function addEdge(orig, dest) {\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\t\tvar eAdj = this._vertexMap.get(orig);\n\t\tvar eSame = null;\n\t\tif (eAdj !== null) {\n\t\t\teSame = eAdj.find(dest);\n\t\t}\n\t\tif (eSame !== null) {\n\t\t\treturn eSame;\n\t\t}\n\t\tvar e = this.insert(orig, dest, eAdj);\n\t\treturn e;\n\t},\n\tgetVertexEdges: function getVertexEdges() {\n\t\treturn this._vertexMap.values();\n\t},\n\tfindEdge: function findEdge(orig, dest) {\n\t\tvar e = this._vertexMap.get(orig);\n\t\tif (e === null) return null;\n\t\treturn e.find(dest);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeGraph;\n\t}\n});\nEdgeGraph.isValidEdge = function (orig, dest) {\n\tvar cmp = dest.compareTo(orig);\n\treturn cmp !== 0;\n};\n\nfunction DissolveHalfEdge() {\n\tthis._isStart = false;\n\tvar orig = arguments[0];\n\tMarkHalfEdge.call(this, orig);\n}\ninherits$1(DissolveHalfEdge, MarkHalfEdge);\nextend(DissolveHalfEdge.prototype, {\n\tsetStart: function setStart() {\n\t\tthis._isStart = true;\n\t},\n\tisStart: function isStart() {\n\t\treturn this._isStart;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DissolveHalfEdge;\n\t}\n});\n\nfunction DissolveEdgeGraph() {\n\tEdgeGraph.apply(this);\n}\ninherits$1(DissolveEdgeGraph, EdgeGraph);\nextend(DissolveEdgeGraph.prototype, {\n\tcreateEdge: function createEdge(p0) {\n\t\treturn new DissolveHalfEdge(p0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DissolveEdgeGraph;\n\t}\n});\n\nfunction LineDissolver() {\n\tthis._result = null;\n\tthis._factory = null;\n\tthis._graph = null;\n\tthis._lines = new ArrayList();\n\tthis._nodeEdgeStack = new Stack$2();\n\tthis._ringStartEdge = null;\n\tthis._graph = new DissolveEdgeGraph();\n}\nextend(LineDissolver.prototype, {\n\taddLine: function addLine(line) {\n\t\tthis._lines.add(this._factory.createLineString(line.toCoordinateArray()));\n\t},\n\tupdateRingStartEdge: function updateRingStartEdge(e) {\n\t\tif (!e.isStart()) {\n\t\t\te = e.sym();\n\t\t\tif (!e.isStart()) return null;\n\t\t}\n\t\tif (this._ringStartEdge === null) {\n\t\t\tthis._ringStartEdge = e;\n\t\t\treturn null;\n\t\t}\n\t\tif (e.orig().compareTo(this._ringStartEdge.orig()) < 0) {\n\t\t\tthis._ringStartEdge = e;\n\t\t}\n\t},\n\tgetResult: function getResult() {\n\t\tif (this._result === null) this.computeResult();\n\t\treturn this._result;\n\t},\n\tprocess: function process(e) {\n\t\tvar eNode = e.prevNode();\n\t\tif (eNode === null) eNode = e;\n\t\tthis.stackEdges(eNode);\n\t\tthis.buildLines();\n\t},\n\tbuildRing: function buildRing(eStartRing) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStartRing;\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStartRing) break;\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.addLine(line);\n\t},\n\tbuildLine: function buildLine(eStart) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStart;\n\t\tthis._ringStartEdge = null;\n\t\tMarkHalfEdge.markBoth(e);\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tthis.updateRingStartEdge(e);\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStart) {\n\t\t\t\tthis.buildRing(this._ringStartEdge);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t\tMarkHalfEdge.markBoth(e);\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.stackEdges(e.sym());\n\t\tthis.addLine(line);\n\t},\n\tstackEdges: function stackEdges(node) {\n\t\tvar e = node;\n\t\tdo {\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e);\n\t\t\te = e.oNext();\n\t\t} while (e !== node);\n\t},\n\tcomputeResult: function computeResult() {\n\t\tvar edges = this._graph.getVertexEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.process(e);\n\t\t}\n\t\tthis._result = this._factory.buildGeometry(this._lines);\n\t},\n\tbuildLines: function buildLines() {\n\t\twhile (!this._nodeEdgeStack.empty()) {\n\t\t\tvar e = this._nodeEdgeStack.pop();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.buildLine(e);\n\t\t}\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function filter(component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geometries = arguments[0];\n\t\t\tfor (var i = geometries.iterator(); i.hasNext();) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tvar seq = lineString.getCoordinateSequence();\n\t\t\tvar doneStart = false;\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\n\t\t\t\tvar e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\t\t\t\tif (e === null) continue;\n\t\t\t\tif (!doneStart) {\n\t\t\t\t\te.setStart();\n\t\t\t\t\tdoneStart = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineDissolver;\n\t}\n});\nLineDissolver.dissolve = function (g) {\n\tvar d = new LineDissolver();\n\td.add(g);\n\treturn d.getResult();\n};\n\nfunction NodeBase$1() {\n\tthis._items = new ArrayList();\n\tthis._subnode = new Array(4).fill(null);\n}\nextend(NodeBase$1.prototype, {\n\thasChildren: function hasChildren() {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function isPrunable() {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function addAllItems(resultItems) {\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(resultItems);\n\t\t\t}\n\t\t}\n\t\treturn resultItems;\n\t},\n\tgetNodeCount: function getNodeCount() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tsize: function size() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t},\n\taddAllItemsFromOverlapping: function addAllItemsFromOverlapping(searchEnv, resultItems) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n\t\t\t}\n\t\t}\n\t},\n\tvisitItems: function visitItems(searchEnv, visitor) {\n\t\tfor (var i = this._items.iterator(); i.hasNext();) {\n\t\t\tvisitor.visitItem(i.next());\n\t\t}\n\t},\n\thasItems: function hasItems() {\n\t\treturn !this._items.isEmpty();\n\t},\n\tremove: function remove(itemEnv, item) {\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemEnv, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t},\n\tvisit: function visit(searchEnv, visitor) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tthis.visitItems(searchEnv, visitor);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].visit(searchEnv, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tgetItems: function getItems() {\n\t\treturn this._items;\n\t},\n\tdepth: function depth() {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tisEmpty: function isEmpty() {\n\t\tvar isEmpty = true;\n\t\tif (!this._items.isEmpty()) isEmpty = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tif (!this._subnode[i].isEmpty()) isEmpty = false;\n\t\t\t}\n\t\t}\n\t\treturn isEmpty;\n\t},\n\tadd: function add(item) {\n\t\tthis._items.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeBase$1;\n\t}\n});\nNodeBase$1.getSubnodeIndex = function (env, centrex, centrey) {\n\tvar subnodeIndex = -1;\n\tif (env.getMinX() >= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\n\t}\n\tif (env.getMaxX() <= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\n\t}\n\treturn subnodeIndex;\n};\n\nfunction Key$1() {\n\tthis._pt = new Coordinate();\n\tthis._level = 0;\n\tthis._env = null;\n\tvar itemEnv = arguments[0];\n\tthis.computeKey(itemEnv);\n}\nextend(Key$1.prototype, {\n\tgetLevel: function getLevel() {\n\t\treturn this._level;\n\t},\n\tcomputeKey: function computeKey() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar itemEnv = arguments[0];\n\t\t\tthis._level = Key$1.computeQuadLevel(itemEnv);\n\t\t\tthis._env = new Envelope();\n\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\twhile (!this._env.contains(itemEnv)) {\n\t\t\t\tthis._level += 1;\n\t\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar level = arguments[0],\n\t\t\t    itemEnv = arguments[1];\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\n\t\t\tthis._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\n\t\t\tthis._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\n\t\t\tthis._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize);\n\t\t}\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn this._env;\n\t},\n\tgetCentre: function getCentre() {\n\t\treturn new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2);\n\t},\n\tgetPoint: function getPoint() {\n\t\treturn this._pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Key$1;\n\t}\n});\nKey$1.computeQuadLevel = function (env) {\n\tvar dx = env.getWidth();\n\tvar dy = env.getHeight();\n\tvar dMax = dx > dy ? dx : dy;\n\tvar level = DoubleBits.exponent(dMax) + 1;\n\treturn level;\n};\n\nfunction Node$2() {\n\tNodeBase$1.apply(this);\n\tthis._env = null;\n\tthis._centrex = null;\n\tthis._centrey = null;\n\tthis._level = null;\n\tvar env = arguments[0],\n\t    level = arguments[1];\n\tthis._env = env;\n\tthis._level = level;\n\tthis._centrex = (env.getMinX() + env.getMaxX()) / 2;\n\tthis._centrey = (env.getMinY() + env.getMaxY()) / 2;\n}\ninherits$1(Node$2, NodeBase$1);\nextend(Node$2.prototype, {\n\tfind: function find(searchEnv) {\n\t\tvar subnodeIndex = NodeBase$1.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchEnv);\n\t\t}\n\t\treturn this;\n\t},\n\tisSearchMatch: function isSearchMatch(searchEnv) {\n\t\treturn this._env.intersects(searchEnv);\n\t},\n\tgetSubnode: function getSubnode(index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn this._env;\n\t},\n\tgetNode: function getNode(searchEnv) {\n\t\tvar subnodeIndex = NodeBase$1.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchEnv);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function createSubnode(index) {\n\t\tvar minx = 0.0;\n\t\tvar maxx = 0.0;\n\t\tvar miny = 0.0;\n\t\tvar maxy = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\n\t\tvar node = new Node$2(sqEnv, this._level - 1);\n\t\treturn node;\n\t},\n\tinsertNode: function insertNode(node) {\n\t\tAssert.isTrue(this._env === null || this._env.contains(node._env));\n\t\tvar index = NodeBase$1.getSubnodeIndex(node._env, this._centrex, this._centrey);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insertNode(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node$2;\n\t}\n});\nNode$2.createNode = function (env) {\n\tvar key = new Key$1(env);\n\tvar node = new Node$2(key.getEnvelope(), key.getLevel());\n\treturn node;\n};\nNode$2.createExpanded = function (node, addEnv) {\n\tvar expandEnv = new Envelope(addEnv);\n\tif (node !== null) expandEnv.expandToInclude(node._env);\n\tvar largerNode = Node$2.createNode(expandEnv);\n\tif (node !== null) largerNode.insertNode(node);\n\treturn largerNode;\n};\n\nfunction Root$1() {\n\tNodeBase$1.apply(this);\n}\ninherits$1(Root$1, NodeBase$1);\nextend(Root$1.prototype, {\n\tinsert: function insert(itemEnv, item) {\n\t\tvar index = NodeBase$1.getSubnodeIndex(itemEnv, Root$1.origin.x, Root$1.origin.y);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\n\t\t\tvar largerNode = Node$2.createExpanded(node, itemEnv);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemEnv, item);\n\t},\n\tisSearchMatch: function isSearchMatch(searchEnv) {\n\t\treturn true;\n\t},\n\tinsertContained: function insertContained(tree, itemEnv, item) {\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n\t\tvar node = null;\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv);else node = tree.getNode(itemEnv);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Root$1;\n\t}\n});\nRoot$1.origin = new Coordinate(0.0, 0.0);\n\nfunction Quadtree() {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root$1();\n}\nextend(Quadtree.prototype, {\n\tsize: function size() {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t},\n\tinsert: function insert(itemEnv, item) {\n\t\tthis.collectStats(itemEnv);\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\tthis._root.insert(insertEnv, item);\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar searchEnv = arguments[0];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.query(searchEnv, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar searchEnv = arguments[0],\n\t\t\t    visitor = arguments[1];\n\t\t\tthis._root.visit(searchEnv, visitor);\n\t\t}\n\t},\n\tqueryAll: function queryAll() {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems;\n\t},\n\tremove: function remove(itemEnv, item) {\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\treturn this._root.remove(posEnv, item);\n\t},\n\tcollectStats: function collectStats(itemEnv) {\n\t\tvar delX = itemEnv.getWidth();\n\t\tif (delX < this._minExtent && delX > 0.0) this._minExtent = delX;\n\t\tvar delY = itemEnv.getHeight();\n\t\tif (delY < this._minExtent && delY > 0.0) this._minExtent = delY;\n\t},\n\tdepth: function depth() {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t},\n\tisEmpty: function isEmpty() {\n\t\tif (this._root === null) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Quadtree;\n\t}\n});\nQuadtree.ensureExtent = function (itemEnv, minExtent) {\n\tvar minx = itemEnv.getMinX();\n\tvar maxx = itemEnv.getMaxX();\n\tvar miny = itemEnv.getMinY();\n\tvar maxy = itemEnv.getMaxY();\n\tif (minx !== maxx && miny !== maxy) return itemEnv;\n\tif (minx === maxx) {\n\t\tminx = minx - minExtent / 2.0;\n\t\tmaxx = minx + minExtent / 2.0;\n\t}\n\tif (miny === maxy) {\n\t\tminy = miny - minExtent / 2.0;\n\t\tmaxy = miny + minExtent / 2.0;\n\t}\n\treturn new Envelope(minx, maxx, miny, maxy);\n};\nQuadtree.serialVersionUID = -7461163625812743604;\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\nfunction GeoJSONParser(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n}\nextend(GeoJSONParser.prototype, {\n  read: function read(json) {\n    var obj;\n    if (typeof json === 'string') {\n      obj = JSON.parse(json);\n    } else {\n      obj = json;\n    }\n    var type = obj.type;\n    if (!parse$1[type]) {\n      throw new Error('Unknown GeoJSON type: ' + obj.type);\n    }\n    if (geometryTypes.indexOf(type) !== -1) {\n      return parse$1[type].apply(this, [obj.coordinates]);\n    } else if (type === 'GeometryCollection') {\n      return parse$1[type].apply(this, [obj.geometries]);\n    }\n    return parse$1[type].apply(this, [obj]);\n  },\n  write: function write(geometry) {\n    var type = geometry.getGeometryType();\n    if (!extract$2[type]) {\n      throw new Error('Geometry is not supported');\n    }\n    return extract$2[type].apply(this, [geometry]);\n  }\n});\nvar parse$1 = {\n  Feature: function Feature(obj) {\n    var feature = {};\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse$1[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type);\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n    if (obj.bbox) {\n      feature.bbox = parse$1.bbox.apply(this, [obj.bbox]);\n    }\n    return feature;\n  },\n  FeatureCollection: function FeatureCollection(obj) {\n    var featureCollection = {};\n    if (obj.features) {\n      featureCollection.features = [];\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this.read(obj.features[i]));\n      }\n    }\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n    return featureCollection;\n  },\n  coordinates: function coordinates(array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates;\n  },\n  bbox: function bbox(array) {\n    return this.geometryFactory.createLinearRing([new Coordinate(array[0], array[1]), new Coordinate(array[2], array[1]), new Coordinate(array[2], array[3]), new Coordinate(array[0], array[3]), new Coordinate(array[0], array[1])]);\n  },\n  Point: function Point(array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate);\n  },\n  MultiPoint: function MultiPoint(array) {\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse$1.Point.apply(this, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points);\n  },\n  LineString: function LineString(array) {\n    var coordinates = parse$1.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates);\n  },\n  MultiLineString: function MultiLineString(array) {\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse$1.LineString.apply(this, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings);\n  },\n  Polygon: function Polygon(array) {\n    var shellCoordinates = parse$1.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse$1.coordinates.apply(this, [hole]);\n      var linearRing = this.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes);\n  },\n  MultiPolygon: function MultiPolygon(array) {\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse$1.Polygon.apply(this, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons);\n  },\n  GeometryCollection: function GeometryCollection(array) {\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries);\n  }\n};\nvar extract$2 = {\n  coordinate: function coordinate(_coordinate) {\n    return [_coordinate.x, _coordinate.y];\n  },\n  Point: function Point(point) {\n    var array = extract$2.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    };\n  },\n  MultiPoint: function MultiPoint(multipoint) {\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract$2.Point.apply(this, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    };\n  },\n  LineString: function LineString(linestring) {\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract$2.coordinate.apply(this, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    };\n  },\n  MultiLineString: function MultiLineString(multilinestring) {\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract$2.LineString.apply(this, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    };\n  },\n  Polygon: function Polygon(polygon) {\n    var array = [];\n    var shellGeoJson = extract$2.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract$2.LineString.apply(this, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    };\n  },\n  MultiPolygon: function MultiPolygon(multipolygon) {\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract$2.Polygon.apply(this, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    };\n  },\n  GeometryCollection: function GeometryCollection(collection) {\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract$2[type].apply(this, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    };\n  }\n};\n\nfunction GeoJSONReader(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n}\nextend(GeoJSONReader.prototype, {\n  read: function read(geoJson) {\n    var geometry = this.parser.read(geoJson);\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry);\n    }\n    return geometry;\n  },\n  reducePrecision: function reducePrecision(geometry) {\n    var i, len;\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate);\n    } else if (geometry.points) {\n      for (i = 0, len = geometry.points.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points[i]);\n      }\n    } else if (geometry.geometries) {\n      for (i = 0, len = geometry.geometries.length; i < len; i++) {\n        this.reducePrecision(geometry.geometries[i]);\n      }\n    }\n  }\n});\n\nfunction GeoJSONWriter() {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n}\nextend(GeoJSONWriter.prototype, {\n  write: function write(geometry) {\n    return this.parser.write(geometry);\n  }\n});\n\nfunction WKTReader(geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new WKTParser(this.geometryFactory);\n}\nextend(WKTReader.prototype, {\n  read: function read(wkt) {\n    var geometry = this.parser.read(wkt);\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry);\n    }\n    return geometry;\n  },\n  reducePrecision: function reducePrecision(geometry) {\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate);\n    } else if (geometry._points) {\n      for (var i = 0, len = geometry._points._coordinates.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry._points._coordinates[i]);\n      }\n    } else if (geometry._geometries) {\n      for (var i = 0, len = geometry._geometries.length; i < len; i++) {\n        this.reducePrecision(geometry._geometries[i]);\n      }\n    }\n  }\n});\n\nfunction p2c(p) {\n  return [p.x, p.y];\n}\nfunction OL3Parser(geometryFactory, olReference) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.ol = olReference || typeof ol !== 'undefined' && ol;\n}\nextend(OL3Parser.prototype, {\n  read: function read(geometry) {\n    var ol = this.ol;\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry);\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry);\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry);\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry);\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry);\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry);\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry);\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry);\n    }\n  },\n  convertFromPoint: function convertFromPoint(point) {\n    var coordinates = point.getCoordinates();\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]));\n  },\n  convertFromLineString: function convertFromLineString(lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1]);\n    }));\n  },\n  convertFromLinearRing: function convertFromLinearRing(linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1]);\n    }));\n  },\n  convertFromPolygon: function convertFromPolygon(polygon) {\n    var linearRings = polygon.getLinearRings();\n    var shell = null;\n    var holes = [];\n    for (var i = 0; i < linearRings.length; i++) {\n      var linearRing = this.convertFromLinearRing(linearRings[i]);\n      if (i === 0) {\n        shell = linearRing;\n      } else {\n        holes.push(linearRing);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes);\n  },\n  convertFromMultiPoint: function convertFromMultiPoint(multiPoint) {\n    var points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point);\n    }, this);\n    return this.geometryFactory.createMultiPoint(points);\n  },\n  convertFromMultiLineString: function convertFromMultiLineString(multiLineString) {\n    var lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString);\n    }, this);\n    return this.geometryFactory.createMultiLineString(lineStrings);\n  },\n  convertFromMultiPolygon: function convertFromMultiPolygon(multiPolygon) {\n    var polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon);\n    }, this);\n    return this.geometryFactory.createMultiPolygon(polygons);\n  },\n  convertFromCollection: function convertFromCollection(collection) {\n    var geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry);\n    }, this);\n    return this.geometryFactory.createGeometryCollection(geometries);\n  },\n  write: function write(geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate());\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry);\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry);\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry);\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry);\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry);\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry);\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry);\n    }\n  },\n  convertToPoint: function convertToPoint(coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y]);\n  },\n  convertToLineString: function convertToLineString(lineString) {\n    var points = lineString.points.coordinates.map(p2c);\n    return new this.ol.geom.LineString(points);\n  },\n  convertToLinearRing: function convertToLinearRing(linearRing) {\n    var points = linearRing.points.coordinates.map(p2c);\n    return new this.ol.geom.LinearRing(points);\n  },\n  convertToPolygon: function convertToPolygon(polygon) {\n    var rings = [polygon.shell.points.coordinates.map(p2c)];\n    for (var i = 0; i < polygon.holes.length; i++) {\n      rings.push(polygon.holes[i].points.coordinates.map(p2c));\n    }\n    return new this.ol.geom.Polygon(rings);\n  },\n  convertToMultiPoint: function convertToMultiPoint(multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c));\n  },\n  convertToMultiLineString: function convertToMultiLineString(multiLineString) {\n    var lineStrings = [];\n    for (var i = 0; i < multiLineString.geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString.geometries[i]).getCoordinates());\n    }\n    return new this.ol.geom.MultiLineString(lineStrings);\n  },\n  convertToMultiPolygon: function convertToMultiPolygon(multiPolygon) {\n    var polygons = [];\n    for (var i = 0; i < multiPolygon.geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon.geometries[i]).getCoordinates());\n    }\n    return new this.ol.geom.MultiPolygon(polygons);\n  },\n  convertToCollection: function convertToCollection(geometryCollection) {\n    var geometries = [];\n    for (var i = 0; i < geometryCollection.geometries.length; i++) {\n      var geometry = geometryCollection.geometries[i];\n      geometries.push(this.write(geometry));\n    }\n    return new this.ol.geom.GeometryCollection(geometries);\n  }\n});\n\nfunction ScaledNoder() {\n\tthis._noder = null;\n\tthis._scaleFactor = null;\n\tthis._offsetX = null;\n\tthis._offsetY = null;\n\tthis._isScaled = false;\n\tif (arguments.length === 2) {\n\t\tvar noder = arguments[0],\n\t\t    scaleFactor = arguments[1];\n\t\tScaledNoder.call(this, noder, scaleFactor, 0, 0);\n\t} else if (arguments.length === 4) {\n\t\tvar noder = arguments[0],\n\t\t    scaleFactor = arguments[1];\n\t\tthis._noder = noder;\n\t\tthis._scaleFactor = scaleFactor;\n\t\tthis._isScaled = !this.isIntegerPrecision();\n\t}\n}\nextend(ScaledNoder.prototype, {\n\trescale: function rescale() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar segStrings = arguments[0];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.rescale(ss.getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tvar p0 = null;\n\t\t\tvar p1 = null;\n\t\t\tif (pts.length === 2) {\n\t\t\t\tp0 = new Coordinate(pts[0]);\n\t\t\t\tp1 = new Coordinate(pts[1]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tpts[i].x = pts[i].x / this._scaleFactor + this._offsetX;\n\t\t\t\tpts[i].y = pts[i].y / this._scaleFactor + this._offsetY;\n\t\t\t}\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\n\t\t\t\tSystem.out.println(pts);\n\t\t\t}\n\t\t}\n\t},\n\tscale: function scale() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar segStrings = arguments[0];\n\t\t\tvar nodedSegmentStrings = new ArrayList();\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n\t\t\t}\n\t\t\treturn nodedSegmentStrings;\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tvar pts = arguments[0];\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].z);\n\t\t\t}\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n\t\t\treturn roundPtsNoDup;\n\t\t}\n\t},\n\tisIntegerPrecision: function isIntegerPrecision() {\n\t\treturn this._scaleFactor === 1.0;\n\t},\n\tgetNodedSubstrings: function getNodedSubstrings() {\n\t\tvar splitSS = this._noder.getNodedSubstrings();\n\t\tif (this._isScaled) this.rescale(splitSS);\n\t\treturn splitSS;\n\t},\n\tcomputeNodes: function computeNodes(inputSegStrings) {\n\t\tvar intSegStrings = inputSegStrings;\n\t\tif (this._isScaled) intSegStrings = this.scale(inputSegStrings);\n\t\tthis._noder.computeNodes(intSegStrings);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Noder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ScaledNoder;\n\t}\n});\n\nfunction IsSimpleOp() {\n\tthis._inputGeom = null;\n\tthis._isClosedEndpointsInInterior = true;\n\tthis._nonSimpleLocation = null;\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tthis._inputGeom = geom;\n\t} else if (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    boundaryNodeRule = arguments[1];\n\t\tthis._inputGeom = geom;\n\t\tthis._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n\t}\n}\nextend(IsSimpleOp.prototype, {\n\tisSimpleMultiPoint: function isSimpleMultiPoint(mp) {\n\t\tif (mp.isEmpty()) return true;\n\t\tvar points = new TreeSet();\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar pt = mp.getGeometryN(i);\n\t\t\tvar p = pt.getCoordinate();\n\t\t\tif (points.contains(p)) {\n\t\t\t\tthis._nonSimpleLocation = p;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tpoints.add(p);\n\t\t}\n\t\treturn true;\n\t},\n\tisSimplePolygonal: function isSimplePolygonal(geom) {\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = rings.iterator(); i.hasNext();) {\n\t\t\tvar ring = i.next();\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasClosedEndpointIntersection: function hasClosedEndpointIntersection(graph) {\n\t\tvar endPoints = new TreeMap();\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tvar isClosed = e.isClosed();\n\t\t\tvar p0 = e.getCoordinate(0);\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\n\t\t}\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext();) {\n\t\t\tvar eiInfo = i.next();\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\n\t\t\t\tthis._nonSimpleLocation = eiInfo.getCoordinate();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetNonSimpleLocation: function getNonSimpleLocation() {\n\t\treturn this._nonSimpleLocation;\n\t},\n\tisSimpleLinearGeometry: function isSimpleLinearGeometry(geom) {\n\t\tif (geom.isEmpty()) return true;\n\t\tvar graph = new GeometryGraph(0, geom);\n\t\tvar li = new RobustLineIntersector();\n\t\tvar si = graph.computeSelfNodes(li, true);\n\t\tif (!si.hasIntersection()) return true;\n\t\tif (si.hasProperIntersection()) {\n\t\t\tthis._nonSimpleLocation = si.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\n\t\tif (this._isClosedEndpointsInInterior) {\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasNonEndpointIntersection: function hasNonEndpointIntersection(graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\n\t\t\t\t\tthis._nonSimpleLocation = ei.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\taddEndpoint: function addEndpoint(endPoints, p, isClosed) {\n\t\tvar eiInfo = endPoints.get(p);\n\t\tif (eiInfo === null) {\n\t\t\teiInfo = new EndpointInfo(p);\n\t\t\tendPoints.put(p, eiInfo);\n\t\t}\n\t\teiInfo.addEndpoint(isClosed);\n\t},\n\tcomputeSimple: function computeSimple(geom) {\n\t\tthis._nonSimpleLocation = null;\n\t\tif (geom.isEmpty()) return true;\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n\t\treturn true;\n\t},\n\tisSimple: function isSimple() {\n\t\tthis._nonSimpleLocation = null;\n\t\treturn this.computeSimple(this._inputGeom);\n\t},\n\tisSimpleGeometryCollection: function isSimpleGeometryCollection(geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.computeSimple(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IsSimpleOp;\n\t}\n});\nfunction EndpointInfo() {\n\tthis.pt = null;\n\tthis.isClosed = null;\n\tthis.degree = null;\n\tvar pt = arguments[0];\n\tthis.pt = pt;\n\tthis.isClosed = false;\n\tthis.degree = 0;\n}\nextend(EndpointInfo.prototype, {\n\taddEndpoint: function addEndpoint(isClosed) {\n\t\tthis.degree++;\n\t\tthis.isClosed |= isClosed;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EndpointInfo;\n\t}\n});\nIsSimpleOp.EndpointInfo = EndpointInfo;\n\nfunction BufferParameters() {\n\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\tthis._endCapStyle = BufferParameters.CAP_ROUND;\n\tthis._joinStyle = BufferParameters.JOIN_ROUND;\n\tthis._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n\tthis._isSingleSided = false;\n\tthis._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar quadrantSegments = arguments[0];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t} else if (arguments.length === 2) {\n\t\tvar quadrantSegments = arguments[0],\n\t\t    endCapStyle = arguments[1];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t} else if (arguments.length === 4) {\n\t\tvar quadrantSegments = arguments[0],\n\t\t    endCapStyle = arguments[1],\n\t\t    joinStyle = arguments[2],\n\t\t    mitreLimit = arguments[3];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t\tthis.setJoinStyle(joinStyle);\n\t\tthis.setMitreLimit(mitreLimit);\n\t}\n}\nextend(BufferParameters.prototype, {\n\tgetEndCapStyle: function getEndCapStyle() {\n\t\treturn this._endCapStyle;\n\t},\n\tisSingleSided: function isSingleSided() {\n\t\treturn this._isSingleSided;\n\t},\n\tsetQuadrantSegments: function setQuadrantSegments(quadSegs) {\n\t\tthis._quadrantSegments = quadSegs;\n\t\tif (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL;\n\t\tif (this._quadrantSegments < 0) {\n\t\t\tthis._joinStyle = BufferParameters.JOIN_MITRE;\n\t\t\tthis._mitreLimit = Math.abs(this._quadrantSegments);\n\t\t}\n\t\tif (quadSegs <= 0) {\n\t\t\tthis._quadrantSegments = 1;\n\t\t}\n\t\tif (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n\t\t\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\t\t}\n\t},\n\tgetJoinStyle: function getJoinStyle() {\n\t\treturn this._joinStyle;\n\t},\n\tsetJoinStyle: function setJoinStyle(joinStyle) {\n\t\tthis._joinStyle = joinStyle;\n\t},\n\tsetSimplifyFactor: function setSimplifyFactor(simplifyFactor) {\n\t\tthis._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n\t},\n\tgetSimplifyFactor: function getSimplifyFactor() {\n\t\treturn this._simplifyFactor;\n\t},\n\tgetQuadrantSegments: function getQuadrantSegments() {\n\t\treturn this._quadrantSegments;\n\t},\n\tsetEndCapStyle: function setEndCapStyle(endCapStyle) {\n\t\tthis._endCapStyle = endCapStyle;\n\t},\n\tgetMitreLimit: function getMitreLimit() {\n\t\treturn this._mitreLimit;\n\t},\n\tsetMitreLimit: function setMitreLimit(mitreLimit) {\n\t\tthis._mitreLimit = mitreLimit;\n\t},\n\tsetSingleSided: function setSingleSided(isSingleSided) {\n\t\tthis._isSingleSided = isSingleSided;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferParameters;\n\t}\n});\nBufferParameters.bufferDistanceError = function (quadSegs) {\n\tvar alpha = Math.PI / 2.0 / quadSegs;\n\treturn 1 - Math.cos(alpha / 2.0);\n};\nBufferParameters.CAP_ROUND = 1;\nBufferParameters.CAP_FLAT = 2;\nBufferParameters.CAP_SQUARE = 3;\nBufferParameters.JOIN_ROUND = 1;\nBufferParameters.JOIN_MITRE = 2;\nBufferParameters.JOIN_BEVEL = 3;\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n\nfunction RightmostEdgeFinder() {\n\tthis._minIndex = -1;\n\tthis._minCoord = null;\n\tthis._minDe = null;\n\tthis._orientedDe = null;\n}\nextend(RightmostEdgeFinder.prototype, {\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._minCoord;\n\t},\n\tgetRightmostSide: function getRightmostSide(de, index) {\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\t\tif (side < 0) {\n\t\t\tthis._minCoord = null;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\treturn side;\n\t},\n\tfindRightmostEdgeAtVertex: function findRightmostEdgeAtVertex() {\n\t\tvar pts = this._minDe.getEdge().getCoordinates();\n\t\tAssert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n\t\tvar pPrev = pts[this._minIndex - 1];\n\t\tvar pNext = pts[this._minIndex + 1];\n\t\tvar orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n\t\tvar usePrev = false;\n\t\tif (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t} else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t}\n\t\tif (usePrev) {\n\t\t\tthis._minIndex = this._minIndex - 1;\n\t\t}\n\t},\n\tgetRightmostSideOfSegment: function getRightmostSideOfSegment(de, i) {\n\t\tvar e = de.getEdge();\n\t\tvar coord = e.getCoordinates();\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\n\t\tvar pos = Position.LEFT;\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n\t\treturn pos;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this._orientedDe;\n\t},\n\tcheckForRightmostCoordinate: function checkForRightmostCoordinate(de) {\n\t\tvar coord = de.getEdge().getCoordinates();\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\n\t\t\tif (this._minCoord === null || coord[i].x > this._minCoord.x) {\n\t\t\t\tthis._minDe = de;\n\t\t\t\tthis._minIndex = i;\n\t\t\t\tthis._minCoord = coord[i];\n\t\t\t}\n\t\t}\n\t},\n\tfindRightmostEdgeAtNode: function findRightmostEdgeAtNode() {\n\t\tvar node = this._minDe.getNode();\n\t\tvar star = node.getEdges();\n\t\tthis._minDe = star.getRightmostEdge();\n\t\tif (!this._minDe.isForward()) {\n\t\t\tthis._minDe = this._minDe.getSym();\n\t\t\tthis._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n\t\t}\n\t},\n\tfindEdge: function findEdge(dirEdgeList) {\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isForward()) continue;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\tAssert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\t\tif (this._minIndex === 0) {\n\t\t\tthis.findRightmostEdgeAtNode();\n\t\t} else {\n\t\t\tthis.findRightmostEdgeAtVertex();\n\t\t}\n\t\tthis._orientedDe = this._minDe;\n\t\tvar rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n\t\tif (rightmostSide === Position.LEFT) {\n\t\t\tthis._orientedDe = this._minDe.getSym();\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RightmostEdgeFinder;\n\t}\n});\n\nfunction LinkedList() {\n  this.array_ = [];\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift();\n};\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0;\n};\n\nfunction BufferSubgraph() {\n\tthis._finder = null;\n\tthis._dirEdgeList = new ArrayList();\n\tthis._nodes = new ArrayList();\n\tthis._rightMostCoord = null;\n\tthis._env = null;\n\tthis._finder = new RightmostEdgeFinder();\n}\nextend(BufferSubgraph.prototype, {\n\tclearVisitedEdges: function clearVisitedEdges() {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tde.setVisited(false);\n\t\t}\n\t},\n\tgetRightmostCoordinate: function getRightmostCoordinate() {\n\t\treturn this._rightMostCoord;\n\t},\n\tcomputeNodeDepth: function computeNodeDepth(n) {\n\t\tvar startEdge = null;\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\n\t\t\t\tstartEdge = de;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n\t\tn.getEdges().computeDepths(startEdge);\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tde.setVisited(true);\n\t\t\tthis.copySymDepths(de);\n\t\t}\n\t},\n\tcomputeDepth: function computeDepth(outsideDepth) {\n\t\tthis.clearVisitedEdges();\n\t\tvar de = this._finder.getEdge();\n\t\tvar n = de.getNode();\n\t\tvar label = de.getLabel();\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\n\t\tthis.copySymDepths(de);\n\t\tthis.computeDepths(de);\n\t},\n\tcreate: function create(node) {\n\t\tthis.addReachable(node);\n\t\tthis._finder.findEdge(this._dirEdgeList);\n\t\tthis._rightMostCoord = this._finder.getCoordinate();\n\t},\n\tfindResultEdges: function findResultEdges() {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeDepths: function computeDepths(startEdge) {\n\t\tvar nodesVisited = new HashSet();\n\t\tvar nodeQueue = new LinkedList();\n\t\tvar startNode = startEdge.getNode();\n\t\tnodeQueue.addLast(startNode);\n\t\tnodesVisited.add(startNode);\n\t\tstartEdge.setVisited(true);\n\t\twhile (!nodeQueue.isEmpty()) {\n\t\t\tvar n = nodeQueue.removeFirst();\n\t\t\tnodesVisited.add(n);\n\t\t\tthis.computeNodeDepth(n);\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym.isVisited()) continue;\n\t\t\t\tvar adjNode = sym.getNode();\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\n\t\t\t\t\tnodeQueue.addLast(adjNode);\n\t\t\t\t\tnodesVisited.add(adjNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar graph = o;\n\t\tif (this._rightMostCoord.x < graph._rightMostCoord.x) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this._rightMostCoord.x > graph._rightMostCoord.x) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\tif (this._env === null) {\n\t\t\tvar edgeEnv = new Envelope();\n\t\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n\t\t\t\tvar dirEdge = it.next();\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._env = edgeEnv;\n\t\t}\n\t\treturn this._env;\n\t},\n\taddReachable: function addReachable(startNode) {\n\t\tvar nodeStack = new Stack$2();\n\t\tnodeStack.add(startNode);\n\t\twhile (!nodeStack.empty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tthis.add(node, nodeStack);\n\t\t}\n\t},\n\tcopySymDepths: function copySymDepths(de) {\n\t\tvar sym = de.getSym();\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n\t},\n\tadd: function add(node, nodeStack) {\n\t\tnode.setVisited(true);\n\t\tthis._nodes.add(node);\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tthis._dirEdgeList.add(de);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar symNode = sym.getNode();\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\n\t\t}\n\t},\n\tgetNodes: function getNodes() {\n\t\treturn this._nodes;\n\t},\n\tgetDirectedEdges: function getDirectedEdges() {\n\t\treturn this._dirEdgeList;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferSubgraph;\n\t}\n});\n\nfunction BufferInputLineSimplifier() {\n\tthis._inputLine = null;\n\tthis._distanceTol = null;\n\tthis._isDeleted = null;\n\tthis._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n\tvar inputLine = arguments[0];\n\tthis._inputLine = inputLine;\n}\nextend(BufferInputLineSimplifier.prototype, {\n\tisDeletable: function isDeletable(i0, i1, i2, distanceTol) {\n\t\tvar p0 = this._inputLine[i0];\n\t\tvar p1 = this._inputLine[i1];\n\t\tvar p2 = this._inputLine[i2];\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n\t},\n\tdeleteShallowConcavities: function deleteShallowConcavities() {\n\t\tvar index = 1;\n\t\tvar maxIndex = this._inputLine.length - 1;\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\tvar isChanged = false;\n\t\twhile (lastIndex < this._inputLine.length) {\n\t\t\tvar isMiddleVertexDeleted = false;\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n\t\t\t\tthis._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n\t\t\t\tisMiddleVertexDeleted = true;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex;else index = midIndex;\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\t}\n\t\treturn isChanged;\n\t},\n\tisShallowConcavity: function isShallowConcavity(p0, p1, p2, distanceTol) {\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n\t\tvar isAngleToSimplify = orientation === this._angleOrientation;\n\t\tif (!isAngleToSimplify) return false;\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tisShallowSampled: function isShallowSampled(p0, p2, i0, i2, distanceTol) {\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n\t\tif (inc <= 0) inc = 1;\n\t\tfor (var i = i0; i < i2; i += inc) {\n\t\t\tif (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisConcave: function isConcave(p0, p1, p2) {\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n\t\tvar isConcave = orientation === this._angleOrientation;\n\t\treturn isConcave;\n\t},\n\tsimplify: function simplify(distanceTol) {\n\t\tthis._distanceTol = Math.abs(distanceTol);\n\t\tif (distanceTol < 0) this._angleOrientation = CGAlgorithms.CLOCKWISE;\n\t\tthis._isDeleted = new Array(this._inputLine.length).fill(null);\n\t\tvar isChanged = false;\n\t\tdo {\n\t\t\tisChanged = this.deleteShallowConcavities();\n\t\t} while (isChanged);\n\t\treturn this.collapseLine();\n\t},\n\tfindNextNonDeletedIndex: function findNextNonDeletedIndex(index) {\n\t\tvar next = index + 1;\n\t\twhile (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) {\n\t\t\tnext++;\n\t\t}return next;\n\t},\n\tisShallow: function isShallow(p0, p1, p2, distanceTol) {\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tcollapseLine: function collapseLine() {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._inputLine.length; i++) {\n\t\t\tif (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i]);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferInputLineSimplifier;\n\t}\n});\nBufferInputLineSimplifier.simplify = function (inputLine, distanceTol) {\n\tvar simp = new BufferInputLineSimplifier(inputLine);\n\treturn simp.simplify(distanceTol);\n};\nBufferInputLineSimplifier.INIT = 0;\nBufferInputLineSimplifier.DELETE = 1;\nBufferInputLineSimplifier.KEEP = 1;\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n\nfunction OffsetSegmentString() {\n\tthis._ptList = null;\n\tthis._precisionModel = null;\n\tthis._minimimVertexDistance = 0.0;\n\tthis._ptList = new ArrayList();\n}\nextend(OffsetSegmentString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\tvar coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\t\treturn coord;\n\t},\n\tsetPrecisionModel: function setPrecisionModel(precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t},\n\taddPt: function addPt(pt) {\n\t\tvar bufPt = new Coordinate(pt);\n\t\tthis._precisionModel.makePrecise(bufPt);\n\t\tif (this.isRedundant(bufPt)) return null;\n\t\tthis._ptList.add(bufPt);\n\t},\n\treverse: function reverse() {},\n\taddPts: function addPts(pt, isForward) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisRedundant: function isRedundant(pt) {\n\t\tif (this._ptList.size() < 1) return false;\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar ptDist = pt.distance(lastPt);\n\t\tif (ptDist < this._minimimVertexDistance) return true;\n\t\treturn false;\n\t},\n\ttoString: function toString() {\n\t\tvar fact = new GeometryFactory();\n\t\tvar line = fact.createLineString(this.getCoordinates());\n\t\treturn line.toString();\n\t},\n\tcloseRing: function closeRing() {\n\t\tif (this._ptList.size() < 1) return null;\n\t\tvar startPt = new Coordinate(this._ptList.get(0));\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar last2Pt = null;\n\t\tif (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2);\n\t\tif (startPt.equals(lastPt)) return null;\n\t\tthis._ptList.add(startPt);\n\t},\n\tsetMinimumVertexDistance: function setMinimumVertexDistance(minimimVertexDistance) {\n\t\tthis._minimimVertexDistance = minimimVertexDistance;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetSegmentString;\n\t}\n});\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n\nfunction OffsetSegmentGenerator() {\n\tthis._maxCurveSegmentError = 0.0;\n\tthis._filletAngleQuantum = null;\n\tthis._closingSegLengthFactor = 1;\n\tthis._segList = null;\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tthis._li = null;\n\tthis._s0 = null;\n\tthis._s1 = null;\n\tthis._s2 = null;\n\tthis._seg0 = new LineSegment();\n\tthis._seg1 = new LineSegment();\n\tthis._offset0 = new LineSegment();\n\tthis._offset1 = new LineSegment();\n\tthis._side = 0;\n\tthis._hasNarrowConcaveAngle = false;\n\tvar precisionModel = arguments[0],\n\t    bufParams = arguments[1],\n\t    distance = arguments[2];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n\tthis._li = new RobustLineIntersector();\n\tthis._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n\tthis.init(distance);\n}\nextend(OffsetSegmentGenerator.prototype, {\n\taddNextSegment: function addNextSegment(p, addStartPoint) {\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._s2 = p;\n\t\tthis._seg0.setCoordinates(this._s0, this._s1);\n\t\tthis.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n\t\tthis._seg1.setCoordinates(this._s1, this._s2);\n\t\tthis.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n\t\tif (this._s1.equals(this._s2)) return null;\n\t\tvar orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n\t\tvar outsideTurn = orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT || orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT;\n\t\tif (orientation === 0) {\n\t\t\tthis.addCollinear(addStartPoint);\n\t\t} else if (outsideTurn) {\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\n\t\t} else {\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\n\t\t}\n\t},\n\taddLineEndCap: function addLineEndCap(p0, p1) {\n\t\tvar seg = new LineSegment(p0, p1);\n\t\tvar offsetL = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n\t\tvar offsetR = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tvar angle = Math.atan2(dy, dx);\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_FLAT:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\t\t\t\tthis._segList.addPt(squareCapLOffset);\n\t\t\t\tthis._segList.addPt(squareCapROffset);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tvar pts = this._segList.getCoordinates();\n\t\treturn pts;\n\t},\n\taddMitreJoin: function addMitreJoin(p, offset0, offset1, distance) {\n\t\tvar isMitreWithinLimit = true;\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n\t\t\tif (mitreRatio > this._bufParams.getMitreLimit()) isMitreWithinLimit = false;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {\n\t\t\t\tintPt = new Coordinate(0, 0);\n\t\t\t\tisMitreWithinLimit = false;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (isMitreWithinLimit) {\n\t\t\tthis._segList.addPt(intPt);\n\t\t} else {\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n\t\t}\n\t},\n\taddFilletCorner: function addFilletCorner(p, p0, p1, direction, radius) {\n\t\tvar dx0 = p0.x - p.x;\n\t\tvar dy0 = p0.y - p.y;\n\t\tvar startAngle = Math.atan2(dy0, dx0);\n\t\tvar dx1 = p1.x - p.x;\n\t\tvar dy1 = p1.y - p.y;\n\t\tvar endAngle = Math.atan2(dy1, dx1);\n\t\tif (direction === CGAlgorithms.CLOCKWISE) {\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n\t\t} else {\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n\t\t}\n\t\tthis._segList.addPt(p0);\n\t\tthis.addFilletArc(p, startAngle, endAngle, direction, radius);\n\t\tthis._segList.addPt(p1);\n\t},\n\taddOutsideTurn: function addOutsideTurn(orientation, addStartPoint) {\n\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\tthis.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n\t\t} else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n\t\t\tthis.addBevelJoin(this._offset0, this._offset1);\n\t\t} else {\n\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\tthis.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t}\n\t},\n\tcreateSquare: function createSquare(p) {\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n\t\tthis._segList.closeRing();\n\t},\n\taddSegments: function addSegments(pt, isForward) {\n\t\tthis._segList.addPts(pt, isForward);\n\t},\n\taddFirstSegment: function addFirstSegment() {\n\t\tthis._segList.addPt(this._offset1.p0);\n\t},\n\taddLastSegment: function addLastSegment() {\n\t\tthis._segList.addPt(this._offset1.p1);\n\t},\n\tinitSideSegments: function initSideSegments(s1, s2, side) {\n\t\tthis._s1 = s1;\n\t\tthis._s2 = s2;\n\t\tthis._side = side;\n\t\tthis._seg1.setCoordinates(s1, s2);\n\t\tthis.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n\t},\n\taddLimitedMitreJoin: function addLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n\t\tvar basePt = this._seg0.p1;\n\t\tvar ang0 = Angle.angle(basePt, this._seg0.p0);\n\t\tvar ang1 = Angle.angle(basePt, this._seg1.p1);\n\t\tvar angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n\t\tvar angDiffHalf = angDiff / 2;\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\n\t\tvar mitreDist = mitreLimit * distance;\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n\t\tvar bevelHalfLen = distance - bevelDelta;\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\t\tif (this._side === Position.LEFT) {\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t} else {\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t}\n\t},\n\tcomputeOffsetSegment: function computeOffsetSegment(seg, side, distance, offset) {\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\n\t\tvar dx = seg.p1.x - seg.p0.x;\n\t\tvar dy = seg.p1.y - seg.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = sideSign * distance * dx / len;\n\t\tvar uy = sideSign * distance * dy / len;\n\t\toffset.p0.x = seg.p0.x - uy;\n\t\toffset.p0.y = seg.p0.y + ux;\n\t\toffset.p1.x = seg.p1.x - uy;\n\t\toffset.p1.y = seg.p1.y + ux;\n\t},\n\taddFilletArc: function addFilletArc(p, startAngle, endAngle, direction, radius) {\n\t\tvar directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\n\t\tvar nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n\t\tif (nSegs < 1) return null;\n\t\tvar initAngle = null,\n\t\t    currAngleInc = null;\n\t\tinitAngle = 0.0;\n\t\tcurrAngleInc = totalAngle / nSegs;\n\t\tvar currAngle = initAngle;\n\t\tvar pt = new Coordinate();\n\t\twhile (currAngle < totalAngle) {\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\n\t\t\tthis._segList.addPt(pt);\n\t\t\tcurrAngle += currAngleInc;\n\t\t}\n\t},\n\taddInsideTurn: function addInsideTurn(orientation, addStartPoint) {\n\t\tthis._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis._segList.addPt(this._li.getIntersection(0));\n\t\t} else {\n\t\t\tthis._hasNarrowConcaveAngle = true;\n\t\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t} else {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t\tif (this._closingSegLengthFactor > 0) {\n\t\t\t\t\tvar mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid0);\n\t\t\t\t\tvar mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._segList.addPt(this._s1);\n\t\t\t\t}\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t}\n\t\t}\n\t},\n\tcreateCircle: function createCircle(p) {\n\t\tvar pt = new Coordinate(p.x + this._distance, p.y);\n\t\tthis._segList.addPt(pt);\n\t\tthis.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n\t\tthis._segList.closeRing();\n\t},\n\taddBevelJoin: function addBevelJoin(offset0, offset1) {\n\t\tthis._segList.addPt(offset0.p1);\n\t\tthis._segList.addPt(offset1.p0);\n\t},\n\tinit: function init(distance) {\n\t\tthis._distance = distance;\n\t\tthis._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n\t\tthis._segList = new OffsetSegmentString();\n\t\tthis._segList.setPrecisionModel(this._precisionModel);\n\t\tthis._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n\t},\n\taddCollinear: function addCollinear(addStartPoint) {\n\t\tthis._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n\t\tvar numInt = this._li.getIntersectionNum();\n\t\tif (numInt >= 2) {\n\t\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t} else {\n\t\t\t\tthis.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n\t\t\t}\n\t\t}\n\t},\n\tcloseRing: function closeRing() {\n\t\tthis._segList.closeRing();\n\t},\n\thasNarrowConcaveAngle: function hasNarrowConcaveAngle() {\n\t\treturn this._hasNarrowConcaveAngle;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetSegmentGenerator;\n\t}\n});\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n\nfunction OffsetCurveBuilder() {\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tvar precisionModel = arguments[0],\n\t    bufParams = arguments[1];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n}\nextend(OffsetCurveBuilder.prototype, {\n\tgetOffsetCurve: function getOffsetCurve(inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance === 0.0) return null;\n\t\tvar isRightSide = distance < 0.0;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\n\t\t}\n\t\tvar curvePts = segGen.getCoordinates();\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\n\t\treturn curvePts;\n\t},\n\tcomputeSingleSidedBufferCurve: function computeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tsegGen.addSegments(inputPts, true);\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tsegGen.addSegments(inputPts, false);\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.closeRing();\n\t},\n\tcomputeRingBufferCurve: function computeRingBufferCurve(inputPts, side, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (side === Position.RIGHT) distTol = -distTol;\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n = simp.length - 1;\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\n\t\tfor (var i = 1; i <= n; i++) {\n\t\t\tvar addStartPoint = i !== 1;\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\n\t\t}\n\t\tsegGen.closeRing();\n\t},\n\tcomputeLineBufferCurve: function computeLineBufferCurve(inputPts, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n1 = simp1.length - 1;\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\tvar n2 = simp2.length - 1;\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\n\t\tsegGen.closeRing();\n\t},\n\tcomputePointCurve: function computePointCurve(pt, segGen) {\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tsegGen.createCircle(pt);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tsegGen.createSquare(pt);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetLineCurve: function getLineCurve(inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance < 0.0 && !this._bufParams.isSingleSided()) return null;\n\t\tif (distance === 0.0) return null;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tif (this._bufParams.isSingleSided()) {\n\t\t\t\tvar isRightSide = distance < 0.0;\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\n\t\t}\n\t\tvar lineCoord = segGen.getCoordinates();\n\t\treturn lineCoord;\n\t},\n\tgetBufferParameters: function getBufferParameters() {\n\t\treturn this._bufParams;\n\t},\n\tsimplifyTolerance: function simplifyTolerance(bufDistance) {\n\t\treturn bufDistance * this._bufParams.getSimplifyFactor();\n\t},\n\tgetRingCurve: function getRingCurve(inputPts, side, distance) {\n\t\tthis._distance = distance;\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\t\tif (distance === 0.0) {\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\n\t\t}\n\t\tvar segGen = this.getSegGen(distance);\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\n\t\treturn segGen.getCoordinates();\n\t},\n\tcomputeOffsetCurve: function computeOffsetCurve(inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t},\n\tgetSegGen: function getSegGen(distance) {\n\t\treturn new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetCurveBuilder;\n\t}\n});\nOffsetCurveBuilder.copyCoordinates = function (pts) {\n\tvar copy = new Array(pts.length).fill(null);\n\tfor (var i = 0; i < copy.length; i++) {\n\t\tcopy[i] = new Coordinate(pts[i]);\n\t}\n\treturn copy;\n};\n\nfunction SubgraphDepthLocater() {\n\tthis._subgraphs = null;\n\tthis._seg = new LineSegment();\n\tthis._cga = new CGAlgorithms();\n\tvar subgraphs = arguments[0];\n\tthis._subgraphs = subgraphs;\n}\nextend(SubgraphDepthLocater.prototype, {\n\tfindStabbedSegments: function findStabbedSegments() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar stabbingRayLeftPt = arguments[0];\n\t\t\tvar stabbedSegments = new ArrayList();\n\t\t\tfor (var i = this._subgraphs.iterator(); i.hasNext();) {\n\t\t\t\tvar bsg = i.next();\n\t\t\t\tvar env = bsg.getEnvelope();\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n\t\t\t}\n\t\t\treturn stabbedSegments;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge) {\n\t\t\t\tvar stabbingRayLeftPt = arguments[0],\n\t\t\t\t    dirEdge = arguments[1],\n\t\t\t\t    stabbedSegments = arguments[2];\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tthis._seg.p0 = pts[i];\n\t\t\t\t\tthis._seg.p1 = pts[i + 1];\n\t\t\t\t\tif (this._seg.p0.y > this._seg.p1.y) this._seg.reverse();\n\t\t\t\t\tvar maxx = Math.max(this._seg.p0.x, this._seg.p1.x);\n\t\t\t\t\tif (maxx < stabbingRayLeftPt.x) continue;\n\t\t\t\t\tif (this._seg.isHorizontal()) continue;\n\t\t\t\t\tif (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue;\n\t\t\t\t\tif (CGAlgorithms.computeOrientation(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === CGAlgorithms.RIGHT) continue;\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\n\t\t\t\t\tif (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n\t\t\t\t\tvar ds = new DepthSegment(this._seg, depth);\n\t\t\t\t\tstabbedSegments.add(ds);\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && arguments[0] instanceof Coordinate && hasInterface(arguments[1], List)) {\n\t\t\t\tvar stabbingRayLeftPt = arguments[0],\n\t\t\t\t    dirEdges = arguments[1],\n\t\t\t\t    stabbedSegments = arguments[2];\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\t\t\t\tvar de = i.next();\n\t\t\t\t\tif (!de.isForward()) continue;\n\t\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDepth: function getDepth(p) {\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\n\t\tif (stabbedSegments.size() === 0) return 0;\n\t\tvar ds = Collections.min(stabbedSegments);\n\t\treturn ds._leftDepth;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SubgraphDepthLocater;\n\t}\n});\nfunction DepthSegment() {\n\tthis._upwardSeg = null;\n\tthis._leftDepth = null;\n\tvar seg = arguments[0],\n\t    depth = arguments[1];\n\tthis._upwardSeg = new LineSegment(seg);\n\tthis._leftDepth = depth;\n}\nextend(DepthSegment.prototype, {\n\tcompareTo: function compareTo(obj) {\n\t\tvar other = obj;\n\t\tif (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1;\n\t\tif (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1;\n\t\tvar orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\torientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\treturn this._upwardSeg.compareTo(other._upwardSeg);\n\t},\n\tcompareX: function compareX(seg0, seg1) {\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\n\t\tif (compare0 !== 0) return compare0;\n\t\treturn seg0.p1.compareTo(seg1.p1);\n\t},\n\ttoString: function toString() {\n\t\treturn this._upwardSeg.toString();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DepthSegment;\n\t}\n});\nSubgraphDepthLocater.DepthSegment = DepthSegment;\n\nfunction OffsetCurveSetBuilder() {\n\tthis._inputGeom = null;\n\tthis._distance = null;\n\tthis._curveBuilder = null;\n\tthis._curveList = new ArrayList();\n\tvar inputGeom = arguments[0],\n\t    distance = arguments[1],\n\t    curveBuilder = arguments[2];\n\tthis._inputGeom = inputGeom;\n\tthis._distance = distance;\n\tthis._curveBuilder = curveBuilder;\n}\nextend(OffsetCurveSetBuilder.prototype, {\n\taddPoint: function addPoint(p) {\n\t\tif (this._distance <= 0.0) return null;\n\t\tvar coord = p.getCoordinates();\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddPolygon: function addPolygon(p) {\n\t\tvar offsetDistance = this._distance;\n\t\tvar offsetSide = Position.LEFT;\n\t\tif (this._distance < 0.0) {\n\t\t\toffsetDistance = -this._distance;\n\t\t\toffsetSide = Position.RIGHT;\n\t\t}\n\t\tvar shell = p.getExteriorRing();\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n\t\tif (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null;\n\t\tif (this._distance <= 0.0 && shellCoord.length < 3) return null;\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n\t\t\tif (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue;\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\tisTriangleErodedCompletely: function isTriangleErodedCompletely(triangleCoord, bufferDistance) {\n\t\tvar tri = new Triangle$1(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n\t\tvar inCentre = tri.inCentre();\n\t\tvar distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n\t\treturn distToCentre < Math.abs(bufferDistance);\n\t},\n\taddLineString: function addLineString(line) {\n\t\tif (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddCurve: function addCurve(coord, leftLoc, rightLoc) {\n\t\tif (coord === null || coord.length < 2) return null;\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\t\tthis._curveList.add(e);\n\t},\n\tgetCurves: function getCurves() {\n\t\tthis.add(this._inputGeom);\n\t\treturn this._curveList;\n\t},\n\taddPolygonRing: function addPolygonRing(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n\t\tvar leftLoc = cwLeftLoc;\n\t\tvar rightLoc = cwRightLoc;\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n\t\t\tleftLoc = cwRightLoc;\n\t\t\trightLoc = cwLeftLoc;\n\t\t\tside = Position.opposite(side);\n\t\t}\n\t\tvar curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\n\t},\n\tadd: function add(g) {\n\t\tif (g.isEmpty()) return null;\n\t\tif (g instanceof Polygon) this.addPolygon(g);else if (g instanceof LineString) this.addLineString(g);else if (g instanceof Point) this.addPoint(g);else if (g instanceof MultiPoint) this.addCollection(g);else if (g instanceof MultiLineString) this.addCollection(g);else if (g instanceof MultiPolygon) this.addCollection(g);else if (g instanceof GeometryCollection) this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());\n\t},\n\tisErodedCompletely: function isErodedCompletely(ring, bufferDistance) {\n\t\tvar ringCoord = ring.getCoordinates();\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n\t\tvar env = ring.getEnvelopeInternal();\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n\t\treturn false;\n\t},\n\taddCollection: function addCollection(gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn OffsetCurveSetBuilder;\n\t}\n});\n\nfunction IntersectionAdder() {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._hasInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numInteriorIntersections = 0;\n\tthis.numProperIntersections = 0;\n\tthis.numTests = 0;\n\tvar li = arguments[0];\n\tthis._li = li;\n}\nextend(IntersectionAdder.prototype, {\n\tisTrivialIntersection: function isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function getProperIntersectionPoint() {\n\t\treturn this._properIntersectionPoint;\n\t},\n\thasProperInteriorIntersection: function hasProperInteriorIntersection() {\n\t\treturn this._hasProperInterior;\n\t},\n\tgetLineIntersector: function getLineIntersector() {\n\t\treturn this._li;\n\t},\n\thasProperIntersection: function hasProperIntersection() {\n\t\treturn this._hasProper;\n\t},\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis.numIntersections++;\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis.numInteriorIntersections++;\n\t\t\t\tthis._hasInterior = true;\n\t\t\t}\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis.numProperIntersections++;\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tthis._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\thasIntersection: function hasIntersection() {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function isDone() {\n\t\treturn false;\n\t},\n\thasInteriorIntersection: function hasInteriorIntersection() {\n\t\treturn this._hasInterior;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IntersectionAdder;\n\t}\n});\nIntersectionAdder.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n\nfunction BufferBuilder() {\n\tthis._bufParams = null;\n\tthis._workingPrecisionModel = null;\n\tthis._workingNoder = null;\n\tthis._geomFact = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tvar bufParams = arguments[0];\n\tthis._bufParams = bufParams;\n}\nextend(BufferBuilder.prototype, {\n\tsetWorkingPrecisionModel: function setWorkingPrecisionModel(pm) {\n\t\tthis._workingPrecisionModel = pm;\n\t},\n\tinsertUniqueEdge: function insertUniqueEdge(e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\n\t\t\tvar newDelta = existingDelta + mergeDelta;\n\t\t\texistingEdge.setDepthDelta(newDelta);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n\t\t}\n\t},\n\tbuildSubgraphs: function buildSubgraphs(subgraphList, polyBuilder) {\n\t\tvar processedGraphs = new ArrayList();\n\t\tfor (var i = subgraphList.iterator(); i.hasNext();) {\n\t\t\tvar subgraph = i.next();\n\t\t\tvar p = subgraph.getRightmostCoordinate();\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\n\t\t\tvar outsideDepth = locater.getDepth(p);\n\t\t\tsubgraph.computeDepth(outsideDepth);\n\t\t\tsubgraph.findResultEdges();\n\t\t\tprocessedGraphs.add(subgraph);\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n\t\t}\n\t},\n\tcreateSubgraphs: function createSubgraphs(graph) {\n\t\tvar subgraphList = new ArrayList();\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isVisited()) {\n\t\t\t\tvar subgraph = new BufferSubgraph();\n\t\t\t\tsubgraph.create(node);\n\t\t\t\tsubgraphList.add(subgraph);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\n\t\treturn subgraphList;\n\t},\n\tcreateEmptyResultGeometry: function createEmptyResultGeometry() {\n\t\tvar emptyGeom = this._geomFact.createPolygon();\n\t\treturn emptyGeom;\n\t},\n\tgetNoder: function getNoder(precisionModel) {\n\t\tif (this._workingNoder !== null) return this._workingNoder;\n\t\tvar noder = new MCIndexNoder();\n\t\tvar li = new RobustLineIntersector();\n\t\tli.setPrecisionModel(precisionModel);\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\n\t\treturn noder;\n\t},\n\tbuffer: function buffer(g, distance) {\n\t\tvar precisionModel = this._workingPrecisionModel;\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\n\t\tthis._geomFact = g.getFactory();\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\n\t\tif (bufferSegStrList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\n\t\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tvar subgraphList = this.createSubgraphs(this._graph);\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\n\t\tvar resultPolyList = polyBuilder.getPolygons();\n\t\tif (resultPolyList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tvar resultGeom = this._geomFact.buildGeometry(resultPolyList);\n\t\treturn resultGeom;\n\t},\n\tcomputeNodedEdges: function computeNodedEdges(bufferSegStrList, precisionModel) {\n\t\tvar noder = this.getNoder(precisionModel);\n\t\tnoder.computeNodes(bufferSegStrList);\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext();) {\n\t\t\tvar segStr = i.next();\n\t\t\tvar pts = segStr.getCoordinates();\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n\t\t\tvar oldLabel = segStr.getData();\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n\t\t\tthis.insertUniqueEdge(edge);\n\t\t}\n\t},\n\tsetNoder: function setNoder(noder) {\n\t\tthis._workingNoder = noder;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferBuilder;\n\t}\n});\nBufferBuilder.depthDelta = function (label) {\n\tvar lLoc = label.getLocation(0, Position.LEFT);\n\tvar rLoc = label.getLocation(0, Position.RIGHT);\n\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1;else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n\treturn 0;\n};\nBufferBuilder.convertSegStrings = function (it) {\n\tvar fact = new GeometryFactory();\n\tvar lines = new ArrayList();\n\twhile (it.hasNext()) {\n\t\tvar ss = it.next();\n\t\tvar line = fact.createLineString(ss.getCoordinates());\n\t\tlines.add(line);\n\t}\n\treturn fact.buildGeometry(lines);\n};\n\nfunction NodingValidator() {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tvar segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n}\nextend(NodingValidator.prototype, {\n\tcheckEndPtVertexIntersections: function checkEndPtVertexIntersections() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this._segStrings);\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar testPt = arguments[0],\n\t\t\t    segStrings = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckInteriorIntersections: function checkInteriorIntersections() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss0 = i.next();\n\t\t\t\tfor (var j = this._segStrings.iterator(); j.hasNext();) {\n\t\t\t\t\tvar ss1 = j.next();\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar ss0 = arguments[0],\n\t\t\t    ss1 = arguments[1];\n\t\t\tvar pts0 = ss0.getCoordinates();\n\t\t\tvar pts1 = ss1.getCoordinates();\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, i0, ss1, i1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tvar e0 = arguments[0],\n\t\t\t    segIndex0 = arguments[1],\n\t\t\t    e1 = arguments[2],\n\t\t\t    segIndex1 = arguments[3];\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\t\tif (this._li.hasIntersection()) {\n\t\t\t\tif (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckValid: function checkValid() {\n\t\tthis.checkEndPtVertexIntersections();\n\t\tthis.checkInteriorIntersections();\n\t\tthis.checkCollapses();\n\t},\n\tcheckCollapses: function checkCollapses() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext();) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.checkCollapses(ss);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar ss = arguments[0];\n\t\t\tvar pts = ss.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n\t\t\t}\n\t\t}\n\t},\n\thasInteriorIntersection: function hasInteriorIntersection(li, p0, p1) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tvar intPt = li.getIntersection(i);\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tcheckCollapse: function checkCollapse(p0, p1, p2) {\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodingValidator;\n\t}\n});\nNodingValidator.fact = new GeometryFactory();\n\nfunction HotPixel() {\n\tthis._li = null;\n\tthis._pt = null;\n\tthis._originalPt = null;\n\tthis._ptScaled = null;\n\tthis._p0Scaled = null;\n\tthis._p1Scaled = null;\n\tthis._scaleFactor = null;\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tthis._corner = new Array(4).fill(null);\n\tthis._safeEnv = null;\n\tvar pt = arguments[0],\n\t    scaleFactor = arguments[1],\n\t    li = arguments[2];\n\tthis._originalPt = pt;\n\tthis._pt = pt;\n\tthis._scaleFactor = scaleFactor;\n\tthis._li = li;\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\tif (scaleFactor !== 1.0) {\n\t\tthis._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n\t\tthis._p0Scaled = new Coordinate();\n\t\tthis._p1Scaled = new Coordinate();\n\t}\n\tthis.initCorners(this._pt);\n}\nextend(HotPixel.prototype, {\n\tintersectsScaled: function intersectsScaled(p0, p1) {\n\t\tvar segMinx = Math.min(p0.x, p1.x);\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\n\t\tvar segMiny = Math.min(p0.y, p1.y);\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\n\t\tvar isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n\t\tif (isOutsidePixelEnv) return false;\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n\t\treturn intersects;\n\t},\n\tinitCorners: function initCorners(pt) {\n\t\tvar tolerance = 0.5;\n\t\tthis._minx = pt.x - tolerance;\n\t\tthis._maxx = pt.x + tolerance;\n\t\tthis._miny = pt.y - tolerance;\n\t\tthis._maxy = pt.y + tolerance;\n\t\tthis._corner[0] = new Coordinate(this._maxx, this._maxy);\n\t\tthis._corner[1] = new Coordinate(this._minx, this._maxy);\n\t\tthis._corner[2] = new Coordinate(this._minx, this._miny);\n\t\tthis._corner[3] = new Coordinate(this._maxx, this._miny);\n\t},\n\tintersects: function intersects(p0, p1) {\n\t\tif (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n\t\tthis.copyScaled(p0, this._p0Scaled);\n\t\tthis.copyScaled(p1, this._p1Scaled);\n\t\treturn this.intersectsScaled(this._p0Scaled, this._p1Scaled);\n\t},\n\tscale: function scale(val) {\n\t\treturn Math.round(val * this._scaleFactor);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._originalPt;\n\t},\n\tcopyScaled: function copyScaled(p, pScaled) {\n\t\tpScaled.x = this.scale(p.x);\n\t\tpScaled.y = this.scale(p.y);\n\t},\n\tgetSafeEnvelope: function getSafeEnvelope() {\n\t\tif (this._safeEnv === null) {\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n\t\t\tthis._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n\t\t}\n\t\treturn this._safeEnv;\n\t},\n\tintersectsPixelClosure: function intersectsPixelClosure(p0, p1) {\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tintersectsToleranceSquare: function intersectsToleranceSquare(p0, p1) {\n\t\tvar intersectsLeft = false;\n\t\tvar intersectsBottom = false;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.isProper()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsLeft = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsBottom = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (intersectsLeft && intersectsBottom) return true;\n\t\tif (p0.equals(this._pt)) return true;\n\t\tif (p1.equals(this._pt)) return true;\n\t\treturn false;\n\t},\n\taddSnappedNode: function addSnappedNode(segStr, segIndex) {\n\t\tvar p0 = segStr.getCoordinate(segIndex);\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\n\t\tif (this.intersects(p0, p1)) {\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HotPixel;\n\t}\n});\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n\nfunction MCIndexPointSnapper() {\n\tthis._index = null;\n\tvar index = arguments[0];\n\tthis._index = index;\n}\nextend(MCIndexPointSnapper.prototype, {\n\tsnap: function snap() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar hotPixel = arguments[0];\n\t\t\treturn this.snap(hotPixel, null, -1);\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar hotPixel = arguments[0],\n\t\t\t    parentEdge = arguments[1],\n\t\t\t    hotPixelVertexIndex = arguments[2];\n\t\t\tvar pixelEnv = hotPixel.getSafeEnvelope();\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\n\t\t\tthis._index.query(pixelEnv, {\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [ItemVisitor];\n\t\t\t\t},\n\t\t\t\tvisitItem: function visitItem(item) {\n\t\t\t\t\tvar testChain = item;\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCIndexPointSnapper;\n\t}\n});\nfunction HotPixelSnapAction() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis._hotPixel = null;\n\tthis._parentEdge = null;\n\tthis._hotPixelVertexIndex = null;\n\tthis._isNodeAdded = false;\n\tvar hotPixel = arguments[0],\n\t    parentEdge = arguments[1],\n\t    hotPixelVertexIndex = arguments[2];\n\tthis._hotPixel = hotPixel;\n\tthis._parentEdge = parentEdge;\n\tthis._hotPixelVertexIndex = hotPixelVertexIndex;\n}\ninherits$1(HotPixelSnapAction, MonotoneChainSelectAction);\nextend(HotPixelSnapAction.prototype, {\n\tisNodeAdded: function isNodeAdded() {\n\t\treturn this._isNodeAdded;\n\t},\n\tselect: function select() {\n\t\tif (arguments.length === 2) {\n\t\t\tvar mc = arguments[0],\n\t\t\t    startIndex = arguments[1];\n\t\t\tvar ss = mc.getContext();\n\t\t\tif (this._parentEdge !== null) {\n\t\t\t\tif (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) return null;\n\t\t\t}\n\t\t\tthis._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn HotPixelSnapAction;\n\t}\n});\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\n\nfunction InteriorIntersectionFinderAdder() {\n\tthis._li = null;\n\tthis._interiorIntersections = null;\n\tvar li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersections = new ArrayList();\n}\nextend(InteriorIntersectionFinderAdder.prototype, {\n\tprocessIntersections: function processIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tfor (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n\t\t\t\t\tthis._interiorIntersections.add(this._li.getIntersection(intIndex));\n\t\t\t\t}\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t}\n\t\t}\n\t},\n\tisDone: function isDone() {\n\t\treturn false;\n\t},\n\tgetInteriorIntersections: function getInteriorIntersections() {\n\t\treturn this._interiorIntersections;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function getClass() {\n\t\treturn InteriorIntersectionFinderAdder;\n\t}\n});\n\nfunction MCIndexSnapRounder() {\n\tthis._pm = null;\n\tthis._li = null;\n\tthis._scaleFactor = null;\n\tthis._noder = null;\n\tthis._pointSnapper = null;\n\tthis._nodedSegStrings = null;\n\tvar pm = arguments[0];\n\tthis._pm = pm;\n\tthis._li = new RobustLineIntersector();\n\tthis._li.setPrecisionModel(pm);\n\tthis._scaleFactor = pm.getScale();\n}\nextend(MCIndexSnapRounder.prototype, {\n\tcheckCorrectness: function checkCorrectness(inputSegmentStrings) {\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n\t\tvar nv = new NodingValidator(resultSegStrings);\n\t\ttry {\n\t\t\tnv.checkValid();\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tex.printStackTrace();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetNodedSubstrings: function getNodedSubstrings() {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t},\n\tsnapRound: function snapRound(segStrings, li) {\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\n\t\tthis.computeIntersectionSnaps(intersections);\n\t\tthis.computeVertexSnaps(segStrings);\n\t},\n\tfindInteriorIntersections: function findInteriorIntersections(segStrings, li) {\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\t\tthis._noder.setSegmentIntersector(intFinderAdder);\n\t\tthis._noder.computeNodes(segStrings);\n\t\treturn intFinderAdder.getInteriorIntersections();\n\t},\n\tcomputeVertexSnaps: function computeVertexSnaps() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar edges = arguments[0];\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext();) {\n\t\t\t\tvar edge0 = i0.next();\n\t\t\t\tthis.computeVertexSnaps(edge0);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\n\t\t\tvar e = arguments[0];\n\t\t\tvar pts0 = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li);\n\t\t\t\tvar isNodeAdded = this._pointSnapper.snap(hotPixel, e, i);\n\t\t\t\tif (isNodeAdded) {\n\t\t\t\t\te.addIntersection(pts0[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeNodes: function computeNodes(inputSegmentStrings) {\n\t\tthis._nodedSegStrings = inputSegmentStrings;\n\t\tthis._noder = new MCIndexNoder();\n\t\tthis._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n\t\tthis.snapRound(inputSegmentStrings, this._li);\n\t},\n\tcomputeIntersectionSnaps: function computeIntersectionSnaps(snapPts) {\n\t\tfor (var it = snapPts.iterator(); it.hasNext();) {\n\t\t\tvar snapPt = it.next();\n\t\t\tvar hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li);\n\t\t\tthis._pointSnapper.snap(hotPixel);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Noder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn MCIndexSnapRounder;\n\t}\n});\n\nfunction BufferOp() {\n\tthis._argGeom = null;\n\tthis._distance = null;\n\tthis._bufParams = new BufferParameters();\n\tthis._resultGeometry = null;\n\tthis._saveException = null;\n\tif (arguments.length === 1) {\n\t\tvar g = arguments[0];\n\t\tthis._argGeom = g;\n\t} else if (arguments.length === 2) {\n\t\tvar g = arguments[0],\n\t\t    bufParams = arguments[1];\n\t\tthis._argGeom = g;\n\t\tthis._bufParams = bufParams;\n\t}\n}\nextend(BufferOp.prototype, {\n\tbufferFixedPrecision: function bufferFixedPrecision(fixedPM) {\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\n\t\tbufBuilder.setNoder(noder);\n\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t},\n\tbufferReducedPrecision: function bufferReducedPrecision() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof TopologyException) {\n\t\t\t\t\t\tthis._saveException = ex;\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tif (this._resultGeometry !== null) return null;\n\t\t\t}\n\t\t\tthrow this._saveException;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar precisionDigits = arguments[0];\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n\t\t\tthis.bufferFixedPrecision(fixedPM);\n\t\t}\n\t},\n\tcomputeGeometry: function computeGeometry() {\n\t\tthis.bufferOriginalPrecision();\n\t\tif (this._resultGeometry !== null) return null;\n\t\tvar argPM = this._argGeom.getFactory().getPrecisionModel();\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM);else this.bufferReducedPrecision();\n\t},\n\tsetQuadrantSegments: function setQuadrantSegments(quadrantSegments) {\n\t\tthis._bufParams.setQuadrantSegments(quadrantSegments);\n\t},\n\tbufferOriginalPrecision: function bufferOriginalPrecision() {\n\t\ttry {\n\t\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tthis._saveException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetResultGeometry: function getResultGeometry(distance) {\n\t\tthis._distance = distance;\n\t\tthis.computeGeometry();\n\t\treturn this._resultGeometry;\n\t},\n\tsetEndCapStyle: function setEndCapStyle(endCapStyle) {\n\t\tthis._bufParams.setEndCapStyle(endCapStyle);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BufferOp;\n\t}\n});\nBufferOp.bufferOp = function () {\n\tif (arguments.length === 2) {\n\t\tvar g = arguments[0],\n\t\t    distance = arguments[1];\n\t\tvar gBuf = new BufferOp(g);\n\t\tvar geomBuf = gBuf.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t} else if (arguments.length === 3) {\n\t\tif (Number.isInteger(arguments[2]) && arguments[0] instanceof Geometry && typeof arguments[1] === \"number\") {\n\t\t\tvar g = arguments[0],\n\t\t\t    distance = arguments[1],\n\t\t\t    quadrantSegments = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g);\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t} else if (arguments[2] instanceof BufferParameters && arguments[0] instanceof Geometry && typeof arguments[1] === \"number\") {\n\t\t\tvar g = arguments[0],\n\t\t\t    distance = arguments[1],\n\t\t\t    params = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g, params);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t}\n\t} else if (arguments.length === 4) {\n\t\tvar g = arguments[0],\n\t\t    distance = arguments[1],\n\t\t    quadrantSegments = arguments[2],\n\t\t    endCapStyle = arguments[3];\n\t\tvar bufOp = new BufferOp(g);\n\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\tbufOp.setEndCapStyle(endCapStyle);\n\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t}\n};\nBufferOp.precisionScaleFactor = function (g, distance, maxPrecisionDigits) {\n\tvar env = g.getEnvelopeInternal();\n\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\n\tvar bufEnvMax = envMax + 2 * expandByDistance;\n\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\n\treturn scaleFactor;\n};\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\nBufferOp.MAX_PRECISION_DIGITS = 12;\n\nfunction PolygonExtracter() {\n\tthis._comps = null;\n\tvar comps = arguments[0];\n\tthis._comps = comps;\n}\nextend(PolygonExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof Polygon) this._comps.add(geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonExtracter;\n\t}\n});\nPolygonExtracter.getPolygons = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    list = arguments[1];\n\t\tif (geom instanceof Polygon) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PolygonExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n\nfunction GeometryLocation() {\n\tthis._component = null;\n\tthis._segIndex = null;\n\tthis._pt = null;\n\tif (arguments.length === 2) {\n\t\tvar component = arguments[0],\n\t\t    pt = arguments[1];\n\t\tGeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n\t} else if (arguments.length === 3) {\n\t\tvar component = arguments[0],\n\t\t    segIndex = arguments[1],\n\t\t    pt = arguments[2];\n\t\tthis._component = component;\n\t\tthis._segIndex = segIndex;\n\t\tthis._pt = pt;\n\t}\n}\nextend(GeometryLocation.prototype, {\n\tisInsideArea: function isInsideArea() {\n\t\treturn this._segIndex === GeometryLocation.INSIDE_AREA;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._pt;\n\t},\n\tgetGeometryComponent: function getGeometryComponent() {\n\t\treturn this._component;\n\t},\n\tgetSegmentIndex: function getSegmentIndex() {\n\t\treturn this._segIndex;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryLocation;\n\t}\n});\nGeometryLocation.INSIDE_AREA = -1;\n\nfunction PointExtracter() {\n\tthis._pts = null;\n\tvar pts = arguments[0];\n\tthis._pts = pts;\n}\nextend(PointExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof Point) this._pts.add(geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointExtracter;\n\t}\n});\nPointExtracter.getPoints = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tif (geom instanceof Point) {\n\t\t\treturn Collections.singletonList(geom);\n\t\t}\n\t\treturn PointExtracter.getPoints(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    list = arguments[1];\n\t\tif (geom instanceof Point) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PointExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n\nfunction ConnectedElementLocationFilter() {\n\tthis._locations = null;\n\tvar locations = arguments[0];\n\tthis._locations = locations;\n}\nextend(ConnectedElementLocationFilter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConnectedElementLocationFilter;\n\t}\n});\nConnectedElementLocationFilter.getLocations = function (geom) {\n\tvar locations = new ArrayList();\n\tgeom.apply(new ConnectedElementLocationFilter(locations));\n\treturn locations;\n};\n\nfunction DistanceOp() {\n\tthis._geom = null;\n\tthis._terminateDistance = 0.0;\n\tthis._ptLocator = new PointLocator();\n\tthis._minDistanceLocation = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tif (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tDistanceOp.call(this, g0, g1, 0.0);\n\t} else if (arguments.length === 3) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1],\n\t\t    terminateDistance = arguments[2];\n\t\tthis._geom = new Array(2).fill(null);\n\t\tthis._geom[0] = g0;\n\t\tthis._geom[1] = g1;\n\t\tthis._terminateDistance = terminateDistance;\n\t}\n}\nextend(DistanceOp.prototype, {\n\tcomputeContainmentDistance: function computeContainmentDistance() {\n\t\tif (arguments.length === 0) {\n\t\t\tvar locPtPoly = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar polyGeomIndex = arguments[0],\n\t\t\t    locPtPoly = arguments[1];\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\n\t\t\tvar polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n\t\t\tif (polys.size() > 0) {\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, locPtPoly);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) {\n\t\t\t\t\tthis._minDistanceLocation[locationsIndex] = locPtPoly[0];\n\t\t\t\t\tthis._minDistanceLocation[polyGeomIndex] = locPtPoly[1];\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && hasInterface(arguments[0], List) && hasInterface(arguments[1], List)) {\n\t\t\t\tvar locs = arguments[0],\n\t\t\t\t    polys = arguments[1],\n\t\t\t\t    locPtPoly = arguments[2];\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\n\t\t\t\t\tvar loc = locs.get(i);\n\t\t\t\t\tfor (var j = 0; j < polys.size(); j++) {\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, polys.get(j), locPtPoly);\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon) {\n\t\t\t\tvar ptLoc = arguments[0],\n\t\t\t\t    poly = arguments[1],\n\t\t\t\t    locPtPoly = arguments[2];\n\t\t\t\tvar pt = ptLoc.getCoordinate();\n\t\t\t\tif (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n\t\t\t\t\tthis._minDistance = 0.0;\n\t\t\t\t\tlocPtPoly[0] = ptLoc;\n\t\t\t\t\tlocPtPoly[1] = new GeometryLocation(poly, pt);\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistanceLinesPoints: function computeMinDistanceLinesPoints(lines, points, locGeom) {\n\t\tfor (var i = 0; i < lines.size(); i++) {\n\t\t\tvar line = lines.get(i);\n\t\t\tfor (var j = 0; j < points.size(); j++) {\n\t\t\t\tvar pt = points.get(j);\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeFacetDistance: function computeFacetDistance() {\n\t\tvar locGeom = new Array(2).fill(null);\n\t\tvar lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n\t\tvar lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n\t\tvar pts0 = PointExtracter.getPoints(this._geom[0]);\n\t\tvar pts1 = PointExtracter.getPoints(this._geom[1]);\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n\t\tthis.updateMinDistance(locGeom, true);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t},\n\tnearestLocations: function nearestLocations() {\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistanceLocation;\n\t},\n\tupdateMinDistance: function updateMinDistance(locGeom, flip) {\n\t\tif (locGeom[0] === null) return null;\n\t\tif (flip) {\n\t\t\tthis._minDistanceLocation[0] = locGeom[1];\n\t\t\tthis._minDistanceLocation[1] = locGeom[0];\n\t\t} else {\n\t\t\tthis._minDistanceLocation[0] = locGeom[0];\n\t\t\tthis._minDistanceLocation[1] = locGeom[1];\n\t\t}\n\t},\n\tnearestPoints: function nearestPoints() {\n\t\tthis.computeMinDistance();\n\t\tvar nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n\t\treturn nearestPts;\n\t},\n\tcomputeMinDistance: function computeMinDistance() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._minDistanceLocation !== null) return null;\n\t\t\tthis._minDistanceLocation = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance();\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeFacetDistance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && arguments[0] instanceof LineString && arguments[1] instanceof Point) {\n\t\t\t\tvar line = arguments[0],\n\t\t\t\t    pt = arguments[1],\n\t\t\t\t    locGeom = arguments[2];\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line.getCoordinates();\n\t\t\t\tvar coord = pt.getCoordinate();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tvar dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && arguments[0] instanceof LineString && arguments[1] instanceof LineString) {\n\t\t\t\tvar line0 = arguments[0],\n\t\t\t\t    line1 = arguments[1],\n\t\t\t\t    locGeom = arguments[2];\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line0.getCoordinates();\n\t\t\t\tvar coord1 = line1.getCoordinates();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\n\t\t\t\t\t\tvar dist = CGAlgorithms.distanceLineLine(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\t\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\n\t\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n\t\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistancePoints: function computeMinDistancePoints(points0, points1, locGeom) {\n\t\tfor (var i = 0; i < points0.size(); i++) {\n\t\t\tvar pt0 = points0.get(i);\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\n\t\t\t\tvar pt1 = points1.get(j);\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n\t\t\t\t}\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tdistance: function distance() {\n\t\tif (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n\t\tif (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0;\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistance;\n\t},\n\tcomputeMinDistanceLines: function computeMinDistanceLines(lines0, lines1, locGeom) {\n\t\tfor (var i = 0; i < lines0.size(); i++) {\n\t\t\tvar line0 = lines0.get(i);\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\n\t\t\t\tvar line1 = lines1.get(j);\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DistanceOp;\n\t}\n});\nDistanceOp.distance = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.distance();\n};\nDistanceOp.isWithinDistance = function (g0, g1, distance) {\n\tvar distOp = new DistanceOp(g0, g1, distance);\n\treturn distOp.distance() <= distance;\n};\nDistanceOp.nearestPoints = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.nearestPoints();\n};\n\nfunction EdgeString() {\n\tthis._factory = null;\n\tthis._directedEdges = new ArrayList();\n\tthis._coordinates = null;\n\tvar factory = arguments[0];\n\tthis._factory = factory;\n}\nextend(EdgeString.prototype, {\n\tgetCoordinates: function getCoordinates() {\n\t\tif (this._coordinates === null) {\n\t\t\tvar forwardDirectedEdges = 0;\n\t\t\tvar reverseDirectedEdges = 0;\n\t\t\tvar coordinateList = new CoordinateList();\n\t\t\tfor (var i = this._directedEdges.iterator(); i.hasNext();) {\n\t\t\t\tvar directedEdge = i.next();\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\n\t\t\t\t\tforwardDirectedEdges++;\n\t\t\t\t} else {\n\t\t\t\t\treverseDirectedEdges++;\n\t\t\t\t}\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n\t\t\t}\n\t\t\tthis._coordinates = coordinateList.toCoordinateArray();\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\n\t\t\t\tCoordinateArrays.reverse(this._coordinates);\n\t\t\t}\n\t\t}\n\t\treturn this._coordinates;\n\t},\n\ttoLineString: function toLineString() {\n\t\treturn this._factory.createLineString(this.getCoordinates());\n\t},\n\tadd: function add(directedEdge) {\n\t\tthis._directedEdges.add(directedEdge);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeString;\n\t}\n});\n\nfunction GraphComponent$1() {\n\tthis._isMarked = false;\n\tthis._isVisited = false;\n\tthis._data = null;\n}\nextend(GraphComponent$1.prototype, {\n\tsetVisited: function setVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tisMarked: function isMarked() {\n\t\treturn this._isMarked;\n\t},\n\tsetData: function setData(data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this._data;\n\t},\n\tsetMarked: function setMarked(isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tgetContext: function getContext() {\n\t\treturn this._data;\n\t},\n\tisVisited: function isVisited() {\n\t\treturn this._isVisited;\n\t},\n\tsetContext: function setContext(data) {\n\t\tthis._data = data;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GraphComponent$1;\n\t}\n});\nGraphComponent$1.getComponentWithVisitedState = function (i, visitedState) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tif (comp.isVisited() === visitedState) return comp;\n\t}\n\treturn null;\n};\nGraphComponent$1.setVisited = function (i, visited) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setVisited(visited);\n\t}\n};\nGraphComponent$1.setMarked = function (i, marked) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setMarked(marked);\n\t}\n};\n\nfunction DirectedEdge$1() {\n\tGraphComponent$1.apply(this);\n\tthis._parentEdge = null;\n\tthis._from = null;\n\tthis._to = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._sym = null;\n\tthis._edgeDirection = null;\n\tthis._quadrant = null;\n\tthis._angle = null;\n\tvar from = arguments[0],\n\t    to = arguments[1],\n\t    directionPt = arguments[2],\n\t    edgeDirection = arguments[3];\n\tthis._from = from;\n\tthis._to = to;\n\tthis._edgeDirection = edgeDirection;\n\tthis._p0 = from.getCoordinate();\n\tthis._p1 = directionPt;\n\tvar dx = this._p1.x - this._p0.x;\n\tvar dy = this._p1.y - this._p0.y;\n\tthis._quadrant = Quadrant.quadrant(dx, dy);\n\tthis._angle = Math.atan2(dy, dx);\n}\ninherits$1(DirectedEdge$1, GraphComponent$1);\nextend(DirectedEdge$1.prototype, {\n\tisRemoved: function isRemoved() {\n\t\treturn this._parentEdge === null;\n\t},\n\tcompareDirection: function compareDirection(e) {\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._from.getCoordinate();\n\t},\n\tprint: function print(out) {\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + this._angle);\n\t},\n\tgetDirectionPt: function getDirectionPt() {\n\t\treturn this._p1;\n\t},\n\tgetAngle: function getAngle() {\n\t\treturn this._angle;\n\t},\n\tcompareTo: function compareTo(obj) {\n\t\tvar de = obj;\n\t\treturn this.compareDirection(de);\n\t},\n\tgetFromNode: function getFromNode() {\n\t\treturn this._from;\n\t},\n\tgetSym: function getSym() {\n\t\treturn this._sym;\n\t},\n\tsetEdge: function setEdge(parentEdge) {\n\t\tthis._parentEdge = parentEdge;\n\t},\n\tremove: function remove() {\n\t\tthis._sym = null;\n\t\tthis._parentEdge = null;\n\t},\n\tgetEdge: function getEdge() {\n\t\treturn this._parentEdge;\n\t},\n\tgetQuadrant: function getQuadrant() {\n\t\treturn this._quadrant;\n\t},\n\tsetSym: function setSym(sym) {\n\t\tthis._sym = sym;\n\t},\n\tgetToNode: function getToNode() {\n\t\treturn this._to;\n\t},\n\tgetEdgeDirection: function getEdgeDirection() {\n\t\treturn this._edgeDirection;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdge$1;\n\t}\n});\nDirectedEdge$1.toEdges = function (dirEdges) {\n\tvar edges = new ArrayList();\n\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\tedges.add(i.next()._parentEdge);\n\t}\n\treturn edges;\n};\n\nfunction LineMergeDirectedEdge() {\n\tvar from = arguments[0],\n\t    to = arguments[1],\n\t    directionPt = arguments[2],\n\t    edgeDirection = arguments[3];\n\tDirectedEdge$1.call(this, from, to, directionPt, edgeDirection);\n}\ninherits$1(LineMergeDirectedEdge, DirectedEdge$1);\nextend(LineMergeDirectedEdge.prototype, {\n\tgetNext: function getNext() {\n\t\tif (this.getToNode().getDegree() !== 2) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\n\t\t}\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMergeDirectedEdge;\n\t}\n});\n\nfunction Edge$1() {\n\tGraphComponent$1.apply(this);\n\tthis._dirEdge = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tvar de0 = arguments[0],\n\t\t    de1 = arguments[1];\n\t\tthis.setDirectedEdges(de0, de1);\n\t}\n}\ninherits$1(Edge$1, GraphComponent$1);\nextend(Edge$1.prototype, {\n\tisRemoved: function isRemoved() {\n\t\treturn this._dirEdge === null;\n\t},\n\tsetDirectedEdges: function setDirectedEdges(de0, de1) {\n\t\tthis._dirEdge = [de0, de1];\n\t\tde0.setEdge(this);\n\t\tde1.setEdge(this);\n\t\tde0.setSym(de1);\n\t\tde1.setSym(de0);\n\t\tde0.getFromNode().addOutEdge(de0);\n\t\tde1.getFromNode().addOutEdge(de1);\n\t},\n\tgetDirEdge: function getDirEdge() {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tvar i = arguments[0];\n\t\t\treturn this._dirEdge[i];\n\t\t} else if (arguments[0] instanceof Node$3) {\n\t\t\tvar fromNode = arguments[0];\n\t\t\tif (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0];\n\t\t\tif (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1];\n\t\t\treturn null;\n\t\t}\n\t},\n\tremove: function remove() {\n\t\tthis._dirEdge = null;\n\t},\n\tgetOppositeNode: function getOppositeNode(node) {\n\t\tif (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode();\n\t\tif (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode();\n\t\treturn null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Edge$1;\n\t}\n});\n\nfunction DirectedEdgeStar$1() {\n\tthis._outEdges = new ArrayList();\n\tthis._sorted = false;\n}\nextend(DirectedEdgeStar$1.prototype, {\n\tgetNextEdge: function getNextEdge(dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i + 1));\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\titerator: function iterator() {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges.iterator();\n\t},\n\tsortEdges: function sortEdges() {\n\t\tif (!this._sorted) {\n\t\t\tCollections.sort(this._outEdges);\n\t\t\tthis._sorted = true;\n\t\t}\n\t},\n\tremove: function remove(de) {\n\t\tthis._outEdges.remove(de);\n\t},\n\tgetEdges: function getEdges() {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges;\n\t},\n\tgetNextCWEdge: function getNextCWEdge(dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i - 1));\n\t},\n\tgetIndex: function getIndex() {\n\t\tif (arguments[0] instanceof Edge$1) {\n\t\t\tvar edge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de.getEdge() === edge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar dirEdge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de === dirEdge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tvar i = arguments[0];\n\t\t\tvar modi = i % this._outEdges.size();\n\t\t\tif (modi < 0) modi += this._outEdges.size();\n\t\t\treturn modi;\n\t\t}\n\t},\n\tadd: function add(de) {\n\t\tthis._outEdges.add(de);\n\t\tthis._sorted = false;\n\t},\n\tgetDegree: function getDegree() {\n\t\treturn this._outEdges.size();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DirectedEdgeStar$1;\n\t}\n});\n\nfunction Node$3() {\n\tGraphComponent$1.apply(this);\n\tthis._pt = null;\n\tthis._deStar = null;\n\tif (arguments.length === 1) {\n\t\tvar pt = arguments[0];\n\t\tNode$3.call(this, pt, new DirectedEdgeStar$1());\n\t} else if (arguments.length === 2) {\n\t\tvar pt = arguments[0],\n\t\t    deStar = arguments[1];\n\t\tthis._pt = pt;\n\t\tthis._deStar = deStar;\n\t}\n}\ninherits$1(Node$3, GraphComponent$1);\nextend(Node$3.prototype, {\n\tisRemoved: function isRemoved() {\n\t\treturn this._pt === null;\n\t},\n\taddOutEdge: function addOutEdge(de) {\n\t\tthis._deStar.add(de);\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._pt;\n\t},\n\tgetOutEdges: function getOutEdges() {\n\t\treturn this._deStar;\n\t},\n\tremove: function remove() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis._pt = null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar de = arguments[0];\n\t\t\tthis._deStar.remove(de);\n\t\t}\n\t},\n\tgetIndex: function getIndex(edge) {\n\t\treturn this._deStar.getIndex(edge);\n\t},\n\tgetDegree: function getDegree() {\n\t\treturn this._deStar.getDegree();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Node$3;\n\t}\n});\nNode$3.getEdgesBetween = function (node0, node1) {\n\tvar edges0 = DirectedEdge$1.toEdges(node0.getOutEdges().getEdges());\n\tvar commonEdges = new HashSet(edges0);\n\tvar edges1 = DirectedEdge$1.toEdges(node1.getOutEdges().getEdges());\n\tcommonEdges.retainAll(edges1);\n\treturn commonEdges;\n};\n\nfunction LineMergeEdge() {\n\tEdge$1.apply(this);\n\tthis._line = null;\n\tvar line = arguments[0];\n\tthis._line = line;\n}\ninherits$1(LineMergeEdge, Edge$1);\nextend(LineMergeEdge.prototype, {\n\tgetLine: function getLine() {\n\t\treturn this._line;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMergeEdge;\n\t}\n});\n\nfunction NodeMap$1() {\n\tthis._nodeMap = new TreeMap();\n}\nextend(NodeMap$1.prototype, {\n\tfind: function find(coord) {\n\t\treturn this._nodeMap.get(coord);\n\t},\n\titerator: function iterator() {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\tremove: function remove(pt) {\n\t\treturn this._nodeMap.remove(pt);\n\t},\n\tvalues: function values() {\n\t\treturn this._nodeMap.values();\n\t},\n\tadd: function add(n) {\n\t\tthis._nodeMap.put(n.getCoordinate(), n);\n\t\treturn n;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NodeMap$1;\n\t}\n});\n\nfunction PlanarGraph$1() {\n\tthis._edges = new HashSet();\n\tthis._dirEdges = new HashSet();\n\tthis._nodeMap = new NodeMap$1();\n}\nextend(PlanarGraph$1.prototype, {\n\tfindNodesOfDegree: function findNodesOfDegree(degree) {\n\t\tvar nodesFound = new ArrayList();\n\t\tfor (var i = this.nodeIterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\n\t\t}\n\t\treturn nodesFound;\n\t},\n\tdirEdgeIterator: function dirEdgeIterator() {\n\t\treturn this._dirEdges.iterator();\n\t},\n\tedgeIterator: function edgeIterator() {\n\t\treturn this._edges.iterator();\n\t},\n\tremove: function remove() {\n\t\tif (arguments[0] instanceof Edge$1) {\n\t\t\tvar edge = arguments[0];\n\t\t\tthis.remove(edge.getDirEdge(0));\n\t\t\tthis.remove(edge.getDirEdge(1));\n\t\t\tthis._edges.remove(edge);\n\t\t\tedge.remove();\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar de = arguments[0];\n\t\t\tvar sym = de.getSym();\n\t\t\tif (sym !== null) sym.setSym(null);\n\t\t\tde.getFromNode().remove(de);\n\t\t\tde.remove();\n\t\t\tthis._dirEdges.remove(de);\n\t\t} else if (arguments[0] instanceof Node$3) {\n\t\t\tvar node = arguments[0];\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) this.remove(sym);\n\t\t\t\tthis._dirEdges.remove(de);\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tif (edge !== null) {\n\t\t\t\t\tthis._edges.remove(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._nodeMap.remove(node.getCoordinate());\n\t\t\tnode.remove();\n\t\t}\n\t},\n\tfindNode: function findNode(pt) {\n\t\treturn this._nodeMap.find(pt);\n\t},\n\tgetEdges: function getEdges() {\n\t\treturn this._edges;\n\t},\n\tnodeIterator: function nodeIterator() {\n\t\treturn this._nodeMap.iterator();\n\t},\n\tcontains: function contains() {\n\t\tif (arguments[0] instanceof Edge$1) {\n\t\t\tvar e = arguments[0];\n\t\t\treturn this._edges.contains(e);\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar de = arguments[0];\n\t\t\treturn this._dirEdges.contains(de);\n\t\t}\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Node$3) {\n\t\t\tvar node = arguments[0];\n\t\t\tthis._nodeMap.add(node);\n\t\t} else if (arguments[0] instanceof Edge$1) {\n\t\t\tvar edge = arguments[0];\n\t\t\tthis._edges.add(edge);\n\t\t\tthis.add(edge.getDirEdge(0));\n\t\t\tthis.add(edge.getDirEdge(1));\n\t\t} else if (arguments[0] instanceof DirectedEdge$1) {\n\t\t\tvar dirEdge = arguments[0];\n\t\t\tthis._dirEdges.add(dirEdge);\n\t\t}\n\t},\n\tgetNodes: function getNodes() {\n\t\treturn this._nodeMap.values();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PlanarGraph$1;\n\t}\n});\n\nfunction LineMergeGraph() {\n\tPlanarGraph$1.apply(this);\n}\ninherits$1(LineMergeGraph, PlanarGraph$1);\nextend(LineMergeGraph.prototype, {\n\taddEdge: function addEdge(lineString) {\n\t\tif (lineString.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n\t\tif (coordinates.length <= 1) return null;\n\t\tvar startCoordinate = coordinates[0];\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\n\t\tvar startNode = this.getNode(startCoordinate);\n\t\tvar endNode = this.getNode(endCoordinate);\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n\t\tvar edge = new LineMergeEdge(lineString);\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\n\t\tthis.add(edge);\n\t},\n\tgetNode: function getNode(coordinate) {\n\t\tvar node = this.findNode(coordinate);\n\t\tif (node === null) {\n\t\t\tnode = new Node$3(coordinate);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMergeGraph;\n\t}\n});\n\nfunction LineMerger() {\n\tthis._graph = new LineMergeGraph();\n\tthis._mergedLineStrings = null;\n\tthis._factory = null;\n\tthis._edgeStrings = null;\n}\nextend(LineMerger.prototype, {\n\tbuildEdgeStringsForUnprocessedNodes: function buildEdgeStringsForUnprocessedNodes() {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isMarked()) {\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForNonDegree2Nodes: function buildEdgeStringsForNonDegree2Nodes() {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext();) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() !== 2) {\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForObviousStartNodes: function buildEdgeStringsForObviousStartNodes() {\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\n\t},\n\tgetMergedLineStrings: function getMergedLineStrings() {\n\t\tthis.merge();\n\t\treturn this._mergedLineStrings;\n\t},\n\tbuildEdgeStringsStartingAt: function buildEdgeStringsStartingAt(node) {\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext();) {\n\t\t\tvar directedEdge = i.next();\n\t\t\tif (directedEdge.getEdge().isMarked()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n\t\t}\n\t},\n\tmerge: function merge() {\n\t\tif (this._mergedLineStrings !== null) {\n\t\t\treturn null;\n\t\t}\n\t\tGraphComponent$1.setMarked(this._graph.nodeIterator(), false);\n\t\tGraphComponent$1.setMarked(this._graph.edgeIterator(), false);\n\t\tthis._edgeStrings = new ArrayList();\n\t\tthis.buildEdgeStringsForObviousStartNodes();\n\t\tthis.buildEdgeStringsForIsolatedLoops();\n\t\tthis._mergedLineStrings = new ArrayList();\n\t\tfor (var i = this._edgeStrings.iterator(); i.hasNext();) {\n\t\t\tvar edgeString = i.next();\n\t\t\tthis._mergedLineStrings.add(edgeString.toLineString());\n\t\t}\n\t},\n\tbuildEdgeStringStartingWith: function buildEdgeStringStartingWith(start) {\n\t\tvar edgeString = new EdgeString(this._factory);\n\t\tvar current = start;\n\t\tdo {\n\t\t\tedgeString.add(current);\n\t\t\tcurrent.getEdge().setMarked(true);\n\t\t\tcurrent = current.getNext();\n\t\t} while (current !== null && current !== start);\n\t\treturn edgeString;\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function filter(component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geometries = arguments[0];\n\t\t\tthis._mergedLineStrings = null;\n\t\t\tfor (var i = geometries.iterator(); i.hasNext();) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tthis._graph.addEdge(lineString);\n\t\t}\n\t},\n\tbuildEdgeStringsForIsolatedLoops: function buildEdgeStringsForIsolatedLoops() {\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineMerger;\n\t}\n});\n\nfunction PolygonizeDirectedEdge() {\n\tthis._edgeRing = null;\n\tthis._next = null;\n\tthis._label = -1;\n\tvar from = arguments[0],\n\t    to = arguments[1],\n\t    directionPt = arguments[2],\n\t    edgeDirection = arguments[3];\n\tDirectedEdge$1.call(this, from, to, directionPt, edgeDirection);\n}\ninherits$1(PolygonizeDirectedEdge, DirectedEdge$1);\nextend(PolygonizeDirectedEdge.prototype, {\n\tgetNext: function getNext() {\n\t\treturn this._next;\n\t},\n\tisInRing: function isInRing() {\n\t\treturn this._edgeRing !== null;\n\t},\n\tsetRing: function setRing(edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t},\n\tsetLabel: function setLabel(label) {\n\t\tthis._label = label;\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this._label;\n\t},\n\tsetNext: function setNext(next) {\n\t\tthis._next = next;\n\t},\n\tgetRing: function getRing() {\n\t\treturn this._edgeRing;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonizeDirectedEdge;\n\t}\n});\n\nfunction PolygonizeEdge() {\n\tEdge$1.apply(this);\n\tthis._line = null;\n\tvar line = arguments[0];\n\tthis._line = line;\n}\ninherits$1(PolygonizeEdge, Edge$1);\nextend(PolygonizeEdge.prototype, {\n\tgetLine: function getLine() {\n\t\treturn this._line;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonizeEdge;\n\t}\n});\n\nfunction ConnectedInteriorTester() {\n\tthis._geometryFactory = new GeometryFactory();\n\tthis._geomGraph = null;\n\tthis._disconnectedRingcoord = null;\n\tvar geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n}\nextend(ConnectedInteriorTester.prototype, {\n\tvisitInteriorRing: function visitInteriorRing(ring, graph) {\n\t\tvar pts = ring.getCoordinates();\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\n\t\tvar de = graph.findEdgeEnd(e);\n\t\tvar intDe = null;\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de;\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de.getSym();\n\t\t}\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n\t\tthis.visitLinkedDirectedEdges(intDe);\n\t},\n\tvisitShellInteriors: function visitShellInteriors(g, graph) {\n\t\tif (g instanceof Polygon) {\n\t\t\tvar p = g;\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t}\n\t\tif (g instanceof MultiPolygon) {\n\t\t\tvar mp = g;\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\t\tvar p = mp.getGeometryN(i);\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._disconnectedRingcoord;\n\t},\n\tsetInteriorEdgesInResult: function setInteriorEdgesInResult(graph) {\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tvisitLinkedDirectedEdges: function visitLinkedDirectedEdges(start) {\n\t\tvar startDe = start;\n\t\tvar de = start;\n\t\tdo {\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\n\t\t\tde.setVisited(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== startDe);\n\t},\n\tbuildEdgeRings: function buildEdgeRings(dirEdges) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext();) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\n\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tedgeRings.addAll(minEdgeRings);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\thasUnvisitedShellEdge: function hasUnvisitedShellEdge(edgeRings) {\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\n\t\t\tvar er = edgeRings.get(i);\n\t\t\tif (er.isHole()) continue;\n\t\t\tvar edges = er.getEdges();\n\t\t\tvar de = edges.get(0);\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\n\t\t\t\tde = edges.get(j);\n\t\t\t\tif (!de.isVisited()) {\n\t\t\t\t\tthis._disconnectedRingcoord = de.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisInteriorsConnected: function isInteriorsConnected() {\n\t\tvar splitEdges = new ArrayList();\n\t\tthis._geomGraph.computeSplitEdges(splitEdges);\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tgraph.addEdges(splitEdges);\n\t\tthis.setInteriorEdgesInResult(graph);\n\t\tgraph.linkResultDirectedEdges();\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n\t\tthis.visitShellInteriors(this._geomGraph.getGeometry(), graph);\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConnectedInteriorTester;\n\t}\n});\nConnectedInteriorTester.findDifferentPoint = function (coord, pt) {\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (!coord[i].equals(pt)) return coord[i];\n\t}\n\treturn null;\n};\n\nfunction EdgeEndBuilder() {}\nextend(EdgeEndBuilder.prototype, {\n\tcreateEdgeEndForNext: function createEdgeEndForNext(edge, l, eiCurr, eiNext) {\n\t\tvar iNext = eiCurr.segmentIndex + 1;\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\n\t\tvar pNext = edge.getCoordinate(iNext);\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n\t\tl.add(e);\n\t},\n\tcreateEdgeEndForPrev: function createEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n\t\tvar iPrev = eiCurr.segmentIndex;\n\t\tif (eiCurr.dist === 0.0) {\n\t\t\tif (iPrev === 0) return null;\n\t\t\tiPrev--;\n\t\t}\n\t\tvar pPrev = edge.getCoordinate(iPrev);\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n\t\tvar label = new Label(edge.getLabel());\n\t\tlabel.flip();\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n\t\tl.add(e);\n\t},\n\tcomputeEdgeEnds: function computeEdgeEnds() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar edges = arguments[0];\n\t\t\tvar l = new ArrayList();\n\t\t\tfor (var i = edges; i.hasNext();) {\n\t\t\t\tvar e = i.next();\n\t\t\t\tthis.computeEdgeEnds(e, l);\n\t\t\t}\n\t\t\treturn l;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar edge = arguments[0],\n\t\t\t    l = arguments[1];\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\n\t\t\teiList.addEndpoints();\n\t\t\tvar it = eiList.iterator();\n\t\t\tvar eiPrev = null;\n\t\t\tvar eiCurr = null;\n\t\t\tif (!it.hasNext()) return null;\n\t\t\tvar eiNext = it.next();\n\t\t\tdo {\n\t\t\t\teiPrev = eiCurr;\n\t\t\t\teiCurr = eiNext;\n\t\t\t\teiNext = null;\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\n\t\t\t\tif (eiCurr !== null) {\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\n\t\t\t\t\tthis.createEdgeEndForNext(edge, l, eiCurr, eiNext);\n\t\t\t\t}\n\t\t\t} while (eiCurr !== null);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndBuilder;\n\t}\n});\n\nfunction EdgeEndBundle() {\n\tthis._edgeEnds = new ArrayList();\n\tif (arguments.length === 1) {\n\t\tvar e = arguments[0];\n\t\tEdgeEndBundle.call(this, null, e);\n\t} else if (arguments.length === 2) {\n\t\tvar boundaryNodeRule = arguments[0],\n\t\t    e = arguments[1];\n\t\tEdgeEnd.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\n\t\tthis.insert(e);\n\t}\n}\ninherits$1(EdgeEndBundle, EdgeEnd);\nextend(EdgeEndBundle.prototype, {\n\tinsert: function insert(e) {\n\t\tthis._edgeEnds.add(e);\n\t},\n\tprint: function print(out) {\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this._label);\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar ee = it.next();\n\t\t\tee.print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\titerator: function iterator() {\n\t\treturn this._edgeEnds.iterator();\n\t},\n\tgetEdgeEnds: function getEdgeEnds() {\n\t\treturn this._edgeEnds;\n\t},\n\tcomputeLabelOn: function computeLabelOn(geomIndex, boundaryNodeRule) {\n\t\tvar boundaryCount = 0;\n\t\tvar foundInterior = false;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\n\t\t}\n\t\tvar loc = Location.NONE;\n\t\tif (foundInterior) loc = Location.INTERIOR;\n\t\tif (boundaryCount > 0) {\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n\t\t}\n\t\tthis._label.setLocation(geomIndex, loc);\n\t},\n\tcomputeLabelSide: function computeLabelSide(geomIndex, side) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) {\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\n\t\t\t\tif (loc === Location.INTERIOR) {\n\t\t\t\t\tthis._label.setLocation(geomIndex, side, Location.INTERIOR);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (loc === Location.EXTERIOR) this._label.setLocation(geomIndex, side, Location.EXTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tgetLabel: function getLabel() {\n\t\treturn this._label;\n\t},\n\tcomputeLabelSides: function computeLabelSides(geomIndex) {\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\n\t},\n\tupdateIM: function updateIM(im) {\n\t\tEdge.updateIM(this._label, im);\n\t},\n\tcomputeLabel: function computeLabel(boundaryNodeRule) {\n\t\tvar isArea = false;\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) isArea = true;\n\t\t}\n\t\tif (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE);else this._label = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\n\t\t\tif (isArea) this.computeLabelSides(i);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndBundle;\n\t}\n});\n\nfunction EdgeEndBundleStar() {\n\tEdgeEndStar.apply(this);\n}\ninherits$1(EdgeEndBundleStar, EdgeEndStar);\nextend(EdgeEndBundleStar.prototype, {\n\tupdateIM: function updateIM(im) {\n\t\tfor (var it = this.iterator(); it.hasNext();) {\n\t\t\tvar esb = it.next();\n\t\t\tesb.updateIM(im);\n\t\t}\n\t},\n\tinsert: function insert(e) {\n\t\tvar eb = this._edgeMap.get(e);\n\t\tif (eb === null) {\n\t\t\teb = new EdgeEndBundle(e);\n\t\t\tthis.insertEdgeEnd(e, eb);\n\t\t} else {\n\t\t\teb.insert(e);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeEndBundleStar;\n\t}\n});\n\nfunction RelateNode() {\n\tvar coord = arguments[0],\n\t    edges = arguments[1];\n\tNode.call(this, coord, edges);\n}\ninherits$1(RelateNode, Node);\nextend(RelateNode.prototype, {\n\tupdateIMFromEdges: function updateIMFromEdges(im) {\n\t\tthis._edges.updateIM(im);\n\t},\n\tcomputeIM: function computeIM(im) {\n\t\tim.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateNode;\n\t}\n});\n\nfunction RelateNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits$1(RelateNodeFactory, NodeFactory);\nextend(RelateNodeFactory.prototype, {\n\tcreateNode: function createNode(coord) {\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateNodeFactory;\n\t}\n});\n\nfunction RelateNodeGraph() {\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n}\nextend(RelateNodeGraph.prototype, {\n\tinsertEdgeEnds: function insertEdgeEnds(ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t},\n\tgetNodeIterator: function getNodeIterator() {\n\t\treturn this._nodes.iterator();\n\t},\n\tcopyNodesAndLabels: function copyNodesAndLabels(geomGraph, argIndex) {\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext();) {\n\t\t\tvar graphNode = nodeIt.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tbuild: function build(geomGraph) {\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n\t\tthis.insertEdgeEnds(eeList);\n\t},\n\tcomputeIntersectionNodes: function computeIntersectionNodes(geomGraph, argIndex) {\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext();) {\n\t\t\tvar e = edgeIt.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateNodeGraph;\n\t}\n});\n\nfunction ConsistentAreaTester() {\n\tthis._li = new RobustLineIntersector();\n\tthis._geomGraph = null;\n\tthis._nodeGraph = new RelateNodeGraph();\n\tthis._invalidPoint = null;\n\tvar geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n}\nextend(ConsistentAreaTester.prototype, {\n\tisNodeEdgeAreaLabelsConsistent: function isNodeEdgeAreaLabelsConsistent() {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n\t\t\t\tthis._invalidPoint = node.getCoordinate().copy();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetInvalidPoint: function getInvalidPoint() {\n\t\treturn this._invalidPoint;\n\t},\n\thasDuplicateRings: function hasDuplicateRings() {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext();) {\n\t\t\t\tvar eeb = i.next();\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\n\t\t\t\t\tthis._invalidPoint = eeb.getEdge().getCoordinate(0);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisNodeConsistentArea: function isNodeConsistentArea() {\n\t\tvar intersector = this._geomGraph.computeSelfNodes(this._li, true, true);\n\t\tif (intersector.hasProperIntersection()) {\n\t\t\tthis._invalidPoint = intersector.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tthis._nodeGraph.build(this._geomGraph);\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConsistentAreaTester;\n\t}\n});\n\nfunction IndexedNestedRingTester() {\n\tthis._graph = null;\n\tthis._rings = new ArrayList();\n\tthis._totalEnv = new Envelope();\n\tthis._index = null;\n\tthis._nestedPt = null;\n\tvar graph = arguments[0];\n\tthis._graph = graph;\n}\nextend(IndexedNestedRingTester.prototype, {\n\tbuildIndex: function buildIndex() {\n\t\tthis._index = new STRtree();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar ring = this._rings.get(i);\n\t\t\tvar env = ring.getEnvelopeInternal();\n\t\t\tthis._index.insert(env, ring);\n\t\t}\n\t},\n\tgetNestedPoint: function getNestedPoint() {\n\t\treturn this._nestedPt;\n\t},\n\tisNonNested: function isNonNested() {\n\t\tthis.buildIndex();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar innerRing = this._rings.get(i);\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\n\t\t\tvar results = this._index.query(innerRing.getEnvelopeInternal());\n\t\t\tfor (var j = 0; j < results.size(); j++) {\n\t\t\t\tvar searchRing = results.get(j);\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\n\t\t\t\tif (innerRing === searchRing) continue;\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph);\n\t\t\t\tif (innerRingPt === null) continue;\n\t\t\t\tvar isInside = CGAlgorithms.isPointInRing(innerRingPt, searchRingPts);\n\t\t\t\tif (isInside) {\n\t\t\t\t\tthis._nestedPt = innerRingPt;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function add(ring) {\n\t\tthis._rings.add(ring);\n\t\tthis._totalEnv.expandToInclude(ring.getEnvelopeInternal());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IndexedNestedRingTester;\n\t}\n});\n\nfunction TopologyValidationError() {\n\tthis._errorType = null;\n\tthis._pt = null;\n\tif (arguments.length === 1) {\n\t\tvar errorType = arguments[0];\n\t\tTopologyValidationError.call(this, errorType, null);\n\t} else if (arguments.length === 2) {\n\t\tvar errorType = arguments[0],\n\t\t    pt = arguments[1];\n\t\tthis._errorType = errorType;\n\t\tif (pt !== null) this._pt = pt.copy();\n\t}\n}\nextend(TopologyValidationError.prototype, {\n\tgetErrorType: function getErrorType() {\n\t\treturn this._errorType;\n\t},\n\tgetMessage: function getMessage() {\n\t\treturn TopologyValidationError.errMsg[this._errorType];\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._pt;\n\t},\n\ttoString: function toString() {\n\t\tvar locStr = \"\";\n\t\tif (this._pt !== null) locStr = \" at or near point \" + this._pt;\n\t\treturn this.getMessage() + locStr;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyValidationError;\n\t}\n});\nTopologyValidationError.ERROR = 0;\nTopologyValidationError.REPEATED_POINT = 1;\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\nTopologyValidationError.NESTED_HOLES = 3;\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\nTopologyValidationError.SELF_INTERSECTION = 5;\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\nTopologyValidationError.NESTED_SHELLS = 7;\nTopologyValidationError.DUPLICATE_RINGS = 8;\nTopologyValidationError.TOO_FEW_POINTS = 9;\nTopologyValidationError.INVALID_COORDINATE = 10;\nTopologyValidationError.RING_NOT_CLOSED = 11;\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n\nfunction IsValidOp() {\n\tthis._parentGeometry = null;\n\tthis._isSelfTouchingRingFormingHoleValid = false;\n\tthis._validErr = null;\n\tvar parentGeometry = arguments[0];\n\tthis._parentGeometry = parentGeometry;\n}\nextend(IsValidOp.prototype, {\n\tcheckInvalidCoordinates: function checkInvalidCoordinates() {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tvar coords = arguments[0];\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\n\t\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tvar poly = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesNotNested: function checkHolesNotNested(p, graph) {\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar innerHole = p.getInteriorRingN(i);\n\t\t\tnestedTester.add(innerHole);\n\t\t}\n\t\tvar isNonNested = nestedTester.isNonNested();\n\t\tif (!isNonNested) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n\t\t}\n\t},\n\tcheckConsistentArea: function checkConsistentArea(graph) {\n\t\tvar cat = new ConsistentAreaTester(graph);\n\t\tvar isValidArea = cat.isNodeConsistentArea();\n\t\tif (!isValidArea) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t\tif (cat.hasDuplicateRings()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n\t\t}\n\t},\n\tisValid: function isValid() {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr === null;\n\t},\n\tcheckShellInsideHole: function checkShellInsideHole(shell, hole, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar holePts = hole.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\t\tif (shellPt !== null) {\n\t\t\tvar insideHole = CGAlgorithms.isPointInRing(shellPt, holePts);\n\t\t\tif (!insideHole) {\n\t\t\t\treturn shellPt;\n\t\t\t}\n\t\t}\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\t\tif (holePt !== null) {\n\t\t\tvar insideShell = CGAlgorithms.isPointInRing(holePt, shellPts);\n\t\t\tif (insideShell) {\n\t\t\t\treturn holePt;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n\t\treturn null;\n\t},\n\tcheckNoSelfIntersectingRings: function checkNoSelfIntersectingRings(graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t},\n\tcheckConnectedInteriors: function checkConnectedInteriors(graph) {\n\t\tvar cit = new ConnectedInteriorTester(graph);\n\t\tif (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n\t},\n\tcheckNoSelfIntersectingRing: function checkNoSelfIntersectingRing(eiList) {\n\t\tvar nodeSet = new TreeSet();\n\t\tvar isFirst = true;\n\t\tfor (var i = eiList.iterator(); i.hasNext();) {\n\t\t\tvar ei = i.next();\n\t\t\tif (isFirst) {\n\t\t\t\tisFirst = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nodeSet.contains(ei.coord)) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tnodeSet.add(ei.coord);\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesInShell: function checkHolesInShell(p, graph) {\n\t\tvar shell = p.getExteriorRing();\n\t\tvar pir = new MCPointInRing(shell);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n\t\t\tif (holePt === null) return null;\n\t\t\tvar outside = !pir.isInside(holePt);\n\t\t\tif (outside) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckTooFewPoints: function checkTooFewPoints(graph) {\n\t\tif (graph.hasTooFewPoints()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetValidationError: function getValidationError() {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr;\n\t},\n\tcheckValid: function checkValid() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tvar g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof MultiPoint) {\n\t\t\tvar g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\tvar g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRing(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar li = new RobustLineIntersector();\n\t\t\tgraph.computeSelfNodes(li, true, true);\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tvar g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRings(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkHolesInShell(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkHolesNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\n\t\t\tvar g = arguments[0];\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkInvalidCoordinates(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t\tthis.checkClosedRings(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesInShell(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesNotNested(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkShellsNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\n\t\t\tvar gc = arguments[0];\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tthis.checkValid(g);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar g = arguments[0];\n\t\t\tthis._validErr = null;\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof Point) this.checkValid(g);else if (g instanceof MultiPoint) this.checkValid(g);else if (g instanceof LinearRing) this.checkValid(g);else if (g instanceof LineString) this.checkValid(g);else if (g instanceof Polygon) this.checkValid(g);else if (g instanceof MultiPolygon) this.checkValid(g);else if (g instanceof GeometryCollection) this.checkValid(g);else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t}\n\t},\n\tsetSelfTouchingRingFormingHoleValid: function setSelfTouchingRingFormingHoleValid(isValid) {\n\t\tthis._isSelfTouchingRingFormingHoleValid = isValid;\n\t},\n\tcheckShellNotNested: function checkShellNotNested(shell, p, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar polyShell = p.getExteriorRing();\n\t\tvar polyPts = polyShell.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n\t\tif (shellPt === null) return null;\n\t\tvar insidePolyShell = CGAlgorithms.isPointInRing(shellPt, polyPts);\n\t\tif (!insidePolyShell) return null;\n\t\tif (p.getNumInteriorRing() <= 0) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n\t\t\treturn null;\n\t\t}\n\t\tvar badNestedPt = null;\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\n\t\t\tif (badNestedPt === null) return null;\n\t\t}\n\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n\t},\n\tcheckClosedRings: function checkClosedRings(poly) {\n\t\tthis.checkClosedRing(poly.getExteriorRing());\n\t\tif (this._validErr !== null) return null;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t},\n\tcheckClosedRing: function checkClosedRing(ring) {\n\t\tif (!ring.isClosed()) {\n\t\t\tvar pt = null;\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n\t\t}\n\t},\n\tcheckShellsNotNested: function checkShellsNotNested(mp, graph) {\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar p = mp.getGeometryN(i);\n\t\t\tvar shell = p.getExteriorRing();\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\n\t\t\t\tif (i === j) continue;\n\t\t\t\tvar p2 = mp.getGeometryN(j);\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IsValidOp;\n\t}\n});\nIsValidOp.findPtNotNode = function (testCoords, searchRing, graph) {\n\tvar searchEdge = graph.findEdge(searchRing);\n\tvar eiList = searchEdge.getEdgeIntersectionList();\n\tfor (var i = 0; i < testCoords.length; i++) {\n\t\tvar pt = testCoords[i];\n\t\tif (!eiList.isIntersection(pt)) return pt;\n\t}\n\treturn null;\n};\nIsValidOp.isValid = function () {\n\tif (arguments[0] instanceof Geometry) {\n\t\tvar geom = arguments[0];\n\t\tvar isValidOp = new IsValidOp(geom);\n\t\treturn isValidOp.isValid();\n\t} else if (arguments[0] instanceof Coordinate) {\n\t\tvar coord = arguments[0];\n\t\tif (Double.isNaN(coord.x)) return false;\n\t\tif (Double.isInfinite(coord.x)) return false;\n\t\tif (Double.isNaN(coord.y)) return false;\n\t\tif (Double.isInfinite(coord.y)) return false;\n\t\treturn true;\n\t}\n};\n\nfunction EdgeRing$1() {\n\tthis._factory = null;\n\tthis._deList = new ArrayList();\n\tthis._lowestEdge = null;\n\tthis._ring = null;\n\tthis._ringPts = null;\n\tthis._holes = null;\n\tthis._shell = null;\n\tthis._isHole = null;\n\tthis._isProcessed = false;\n\tthis._isIncludedSet = false;\n\tthis._isIncluded = false;\n\tvar factory = arguments[0];\n\tthis._factory = factory;\n}\nextend(EdgeRing$1.prototype, {\n\tisIncluded: function isIncluded() {\n\t\treturn this._isIncluded;\n\t},\n\tgetCoordinates: function getCoordinates() {\n\t\tif (this._ringPts === null) {\n\t\t\tvar coordList = new CoordinateList();\n\t\t\tfor (var i = this._deList.iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tEdgeRing$1.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n\t\t\t}\n\t\t\tthis._ringPts = coordList.toCoordinateArray();\n\t\t}\n\t\treturn this._ringPts;\n\t},\n\tisIncludedSet: function isIncludedSet() {\n\t\treturn this._isIncludedSet;\n\t},\n\tisValid: function isValid() {\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length <= 3) return false;\n\t\tthis.getRing();\n\t\treturn IsValidOp.isValid(this._ring);\n\t},\n\tbuild: function build(startDE) {\n\t\tvar de = startDE;\n\t\tdo {\n\t\t\tthis.add(de);\n\t\t\tde.setRing(this);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t},\n\tisOuterHole: function isOuterHole() {\n\t\tif (!this._isHole) return false;\n\t\treturn !this.hasShell();\n\t},\n\tgetPolygon: function getPolygon() {\n\t\tvar holeLR = null;\n\t\tif (this._holes !== null) {\n\t\t\tholeLR = new Array(this._holes.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\t\tholeLR[i] = this._holes.get(i);\n\t\t\t}\n\t\t}\n\t\tvar poly = this._factory.createPolygon(this._ring, holeLR);\n\t\treturn poly;\n\t},\n\tisHole: function isHole() {\n\t\treturn this._isHole;\n\t},\n\tisProcessed: function isProcessed() {\n\t\treturn this._isProcessed;\n\t},\n\taddHole: function addHole() {\n\t\tif (arguments[0] instanceof LinearRing) {\n\t\t\tvar hole = arguments[0];\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t} else if (arguments[0] instanceof EdgeRing$1) {\n\t\t\tvar holeER = arguments[0];\n\t\t\tholeER.setShell(this);\n\t\t\tvar hole = holeER.getRing();\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t}\n\t},\n\tsetIncluded: function setIncluded(isIncluded) {\n\t\tthis._isIncluded = isIncluded;\n\t\tthis._isIncludedSet = true;\n\t},\n\tgetOuterHole: function getOuterHole() {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjRing = de.getSym().getRing();\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\n\t\t}\n\t\treturn null;\n\t},\n\tcomputeHole: function computeHole() {\n\t\tvar ring = this.getRing();\n\t\tthis._isHole = CGAlgorithms.isCCW(ring.getCoordinates());\n\t},\n\thasShell: function hasShell() {\n\t\treturn this._shell !== null;\n\t},\n\tisOuterShell: function isOuterShell() {\n\t\treturn this.getOuterHole() !== null;\n\t},\n\tgetLineString: function getLineString() {\n\t\tthis.getCoordinates();\n\t\treturn this._factory.createLineString(this._ringPts);\n\t},\n\ttoString: function toString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n\t},\n\tgetShell: function getShell() {\n\t\tif (this.isHole()) return this._shell;\n\t\treturn this;\n\t},\n\tadd: function add(de) {\n\t\tthis._deList.add(de);\n\t},\n\tgetRing: function getRing() {\n\t\tif (this._ring !== null) return this._ring;\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length < 3) System.out.println(this._ringPts);\n\t\ttry {\n\t\t\tthis._ring = this._factory.createLinearRing(this._ringPts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tSystem.out.println(this._ringPts);\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn this._ring;\n\t},\n\tupdateIncluded: function updateIncluded() {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function setShell(shell) {\n\t\tthis._shell = shell;\n\t},\n\tsetProcessed: function setProcessed(isProcessed) {\n\t\tthis._isProcessed = isProcessed;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EdgeRing$1;\n\t}\n});\nEdgeRing$1.findDirEdgesInRing = function (startDE) {\n\tvar de = startDE;\n\tvar edges = new ArrayList();\n\tdo {\n\t\tedges.add(de);\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn edges;\n};\nEdgeRing$1.addEdge = function (coords, isForward, coordList) {\n\tif (isForward) {\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t} else {\n\t\tfor (var i = coords.length - 1; i >= 0; i--) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t}\n};\nEdgeRing$1.findEdgeRingContaining = function (testEr, shellList) {\n\tvar testRing = testEr.getRing();\n\tvar testEnv = testRing.getEnvelopeInternal();\n\tvar testPt = testRing.getCoordinateN(0);\n\tvar minShell = null;\n\tvar minShellEnv = null;\n\tfor (var it = shellList.iterator(); it.hasNext();) {\n\t\tvar tryShell = it.next();\n\t\tvar tryShellRing = tryShell.getRing();\n\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\n\t\tif (tryShellEnv.equals(testEnv)) continue;\n\t\tif (!tryShellEnv.contains(testEnv)) continue;\n\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n\t\tvar isContained = false;\n\t\tif (CGAlgorithms.isPointInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\t\tif (isContained) {\n\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\n\t\t\t\tminShell = tryShell;\n\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\n\t\t\t}\n\t\t}\n\t}\n\treturn minShell;\n};\nfunction EnvelopeComparator() {}\nextend(EnvelopeComparator.prototype, {\n\tcompare: function compare(obj0, obj1) {\n\t\tvar r0 = obj0;\n\t\tvar r1 = obj1;\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EnvelopeComparator;\n\t}\n});\nEdgeRing$1.EnvelopeComparator = EnvelopeComparator;\n\nfunction PolygonizeGraph() {\n\tPlanarGraph$1.apply(this);\n\tthis._factory = null;\n\tvar factory = arguments[0];\n\tthis._factory = factory;\n}\ninherits$1(PolygonizeGraph, PlanarGraph$1);\nextend(PolygonizeGraph.prototype, {\n\tfindEdgeRing: function findEdgeRing(startDE) {\n\t\tvar er = new EdgeRing$1(this._factory);\n\t\ter.build(startDE);\n\t\treturn er;\n\t},\n\tcomputeDepthParity: function computeDepthParity() {\n\t\tif (arguments.length === 0) {\n\t\t\twhile (true) {\n\t\t\t\tvar de = null;\n\t\t\t\tif (de === null) return null;\n\t\t\t\tthis.computeDepthParity(de);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar de = arguments[0];\n\t\t}\n\t},\n\tcomputeNextCWEdges: function computeNextCWEdges() {\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext();) {\n\t\t\tvar node = iNode.next();\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\n\t\t}\n\t},\n\taddEdge: function addEdge(line) {\n\t\tif (line.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (linePts.length < 2) {\n\t\t\treturn null;\n\t\t}\n\t\tvar startPt = linePts[0];\n\t\tvar endPt = linePts[linePts.length - 1];\n\t\tvar nStart = this.getNode(startPt);\n\t\tvar nEnd = this.getNode(endPt);\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n\t\tvar edge = new PolygonizeEdge(line);\n\t\tedge.setDirectedEdges(de0, de1);\n\t\tthis.add(edge);\n\t},\n\tdeleteCutEdges: function deleteCutEdges() {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tvar cutLines = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.getLabel() === sym.getLabel()) {\n\t\t\t\tde.setMarked(true);\n\t\t\t\tsym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tcutLines.add(e.getLine());\n\t\t\t}\n\t\t}\n\t\treturn cutLines;\n\t},\n\tgetEdgeRings: function getEdgeRings() {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.label(this._dirEdges, -1);\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\n\t\tvar edgeRingList = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.isInRing()) continue;\n\t\t\tvar er = this.findEdgeRing(de);\n\t\t\tedgeRingList.add(er);\n\t\t}\n\t\treturn edgeRingList;\n\t},\n\tgetNode: function getNode(pt) {\n\t\tvar node = this.findNode(pt);\n\t\tif (node === null) {\n\t\t\tnode = new Node$3(pt);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tconvertMaximalToMinimalEdgeRings: function convertMaximalToMinimalEdgeRings(ringEdges) {\n\t\tfor (var i = ringEdges.iterator(); i.hasNext();) {\n\t\t\tvar de = i.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n\t\t\tif (intNodes === null) continue;\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext();) {\n\t\t\t\tvar node = iNode.next();\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\n\t\t\t}\n\t\t}\n\t},\n\tdeleteDangles: function deleteDangles() {\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\n\t\tvar dangleLines = new HashSet();\n\t\tvar nodeStack = new Stack$2();\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext();) {\n\t\t\tnodeStack.push(i.next());\n\t\t}\n\t\twhile (!nodeStack.isEmpty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext();) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tde.setMarked(true);\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tdangleLines.add(e.getLine());\n\t\t\t\tvar toNode = de.getToNode();\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n\t\t\t}\n\t\t}\n\t\treturn dangleLines;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PolygonizeGraph;\n\t}\n});\nPolygonizeGraph.findLabeledEdgeRings = function (dirEdges) {\n\tvar edgeRingStarts = new ArrayList();\n\tvar currLabel = 1;\n\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tif (de.isMarked()) continue;\n\t\tif (de.getLabel() >= 0) continue;\n\t\tedgeRingStarts.add(de);\n\t\tvar edges = EdgeRing$1.findDirEdgesInRing(de);\n\t\tPolygonizeGraph.label(edges, currLabel);\n\t\tcurrLabel++;\n\t}\n\treturn edgeRingStarts;\n};\nPolygonizeGraph.getDegreeNonDeleted = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tif (!de.isMarked()) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.deleteAllEdges = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tde.setMarked(true);\n\t\tvar sym = de.getSym();\n\t\tif (sym !== null) sym.setMarked(true);\n\t}\n};\nPolygonizeGraph.label = function (dirEdges, label) {\n\tfor (var i = dirEdges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tde.setLabel(label);\n\t}\n};\nPolygonizeGraph.computeNextCWEdges = function (node) {\n\tvar deStar = node.getOutEdges();\n\tvar startDE = null;\n\tvar prevDE = null;\n\tfor (var i = deStar.getEdges().iterator(); i.hasNext();) {\n\t\tvar outDE = i.next();\n\t\tif (outDE.isMarked()) continue;\n\t\tif (startDE === null) startDE = outDE;\n\t\tif (prevDE !== null) {\n\t\t\tvar sym = prevDE.getSym();\n\t\t\tsym.setNext(outDE);\n\t\t}\n\t\tprevDE = outDE;\n\t}\n\tif (prevDE !== null) {\n\t\tvar sym = prevDE.getSym();\n\t\tsym.setNext(startDE);\n\t}\n};\nPolygonizeGraph.computeNextCCWEdges = function (node, label) {\n\tvar deStar = node.getOutEdges();\n\tvar firstOutDE = null;\n\tvar prevInDE = null;\n\tvar edges = deStar.getEdges();\n\tfor (var i = edges.size() - 1; i >= 0; i--) {\n\t\tvar de = edges.get(i);\n\t\tvar sym = de.getSym();\n\t\tvar outDE = null;\n\t\tif (de.getLabel() === label) outDE = de;\n\t\tvar inDE = null;\n\t\tif (sym.getLabel() === label) inDE = sym;\n\t\tif (outDE === null && inDE === null) continue;\n\t\tif (inDE !== null) {\n\t\t\tprevInDE = inDE;\n\t\t}\n\t\tif (outDE !== null) {\n\t\t\tif (prevInDE !== null) {\n\t\t\t\tprevInDE.setNext(outDE);\n\t\t\t\tprevInDE = null;\n\t\t\t}\n\t\t\tif (firstOutDE === null) firstOutDE = outDE;\n\t\t}\n\t}\n\tif (prevInDE !== null) {\n\t\tAssert.isTrue(firstOutDE !== null);\n\t\tprevInDE.setNext(firstOutDE);\n\t}\n};\nPolygonizeGraph.getDegree = function (node, label) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\tvar de = i.next();\n\t\tif (de.getLabel() === label) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.findIntersectionNodes = function (startDE, label) {\n\tvar de = startDE;\n\tvar intNodes = null;\n\tdo {\n\t\tvar node = de.getFromNode();\n\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\n\t\t\tif (intNodes === null) intNodes = new ArrayList();\n\t\t\tintNodes.add(node);\n\t\t}\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn intNodes;\n};\n\nfunction Polygonizer() {\n\tthis._lineStringAdder = new LineStringAdder(this);\n\tthis._graph = null;\n\tthis._dangles = new ArrayList();\n\tthis._cutEdges = new ArrayList();\n\tthis._invalidRingLines = new ArrayList();\n\tthis._holeList = null;\n\tthis._shellList = null;\n\tthis._polyList = null;\n\tthis._isCheckingRingsValid = true;\n\tthis._extractOnlyPolygonal = null;\n\tthis._geomFactory = null;\n\tif (arguments.length === 0) {\n\t\tPolygonizer.call(this, false);\n\t} else if (arguments.length === 1) {\n\t\tvar extractOnlyPolygonal = arguments[0];\n\t\tthis._extractOnlyPolygonal = extractOnlyPolygonal;\n\t}\n}\nextend(Polygonizer.prototype, {\n\tgetGeometry: function getGeometry() {\n\t\tif (this._geomFactory === null) this._geomFactory = new GeometryFactory();\n\t\tthis.polygonize();\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\treturn this._geomFactory.buildGeometry(this._polyList);\n\t\t}\n\t\treturn this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList));\n\t},\n\tgetInvalidRingLines: function getInvalidRingLines() {\n\t\tthis.polygonize();\n\t\treturn this._invalidRingLines;\n\t},\n\tfindValidRings: function findValidRings(edgeRingList, validEdgeRingList, invalidRingList) {\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext();) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isValid()) validEdgeRingList.add(er);else invalidRingList.add(er.getLineString());\n\t\t}\n\t},\n\tpolygonize: function polygonize() {\n\t\tif (this._polyList !== null) return null;\n\t\tthis._polyList = new ArrayList();\n\t\tif (this._graph === null) return null;\n\t\tthis._dangles = this._graph.deleteDangles();\n\t\tthis._cutEdges = this._graph.deleteCutEdges();\n\t\tvar edgeRingList = this._graph.getEdgeRings();\n\t\tvar validEdgeRingList = new ArrayList();\n\t\tthis._invalidRingLines = new ArrayList();\n\t\tif (this._isCheckingRingsValid) {\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines);\n\t\t} else {\n\t\t\tvalidEdgeRingList = edgeRingList;\n\t\t}\n\t\tthis.findShellsAndHoles(validEdgeRingList);\n\t\tPolygonizer.assignHolesToShells(this._holeList, this._shellList);\n\t\tCollections.sort(this._shellList, new EdgeRing$1.EnvelopeComparator());\n\t\tvar includeAll = true;\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\tPolygonizer.findDisjointShells(this._shellList);\n\t\t\tincludeAll = false;\n\t\t}\n\t\tthis._polyList = Polygonizer.extractPolygons(this._shellList, includeAll);\n\t},\n\tgetDangles: function getDangles() {\n\t\tthis.polygonize();\n\t\treturn this._dangles;\n\t},\n\tgetCutEdges: function getCutEdges() {\n\t\tthis.polygonize();\n\t\treturn this._cutEdges;\n\t},\n\tgetPolygons: function getPolygons() {\n\t\tthis.polygonize();\n\t\treturn this._polyList;\n\t},\n\tadd: function add() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geomList = arguments[0];\n\t\t\tfor (var i = geomList.iterator(); i.hasNext();) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tvar line = arguments[0];\n\t\t\tthis._geomFactory = line.getFactory();\n\t\t\tif (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory);\n\t\t\tthis._graph.addEdge(line);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar g = arguments[0];\n\t\t\tg.apply(this._lineStringAdder);\n\t\t}\n\t},\n\tsetCheckRingsValid: function setCheckRingsValid(isCheckingRingsValid) {\n\t\tthis._isCheckingRingsValid = isCheckingRingsValid;\n\t},\n\tfindShellsAndHoles: function findShellsAndHoles(edgeRingList) {\n\t\tthis._holeList = new ArrayList();\n\t\tthis._shellList = new ArrayList();\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext();) {\n\t\t\tvar er = i.next();\n\t\t\ter.computeHole();\n\t\t\tif (er.isHole()) this._holeList.add(er);else this._shellList.add(er);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Polygonizer;\n\t}\n});\nPolygonizer.findOuterShells = function (shellList) {\n\tfor (var i = shellList.iterator(); i.hasNext();) {\n\t\tvar er = i.next();\n\t\tvar outerHoleER = er.getOuterHole();\n\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\n\t\t\ter.setIncluded(true);\n\t\t\touterHoleER.setProcessed(true);\n\t\t}\n\t}\n};\nPolygonizer.extractPolygons = function (shellList, includeAll) {\n\tvar polyList = new ArrayList();\n\tfor (var i = shellList.iterator(); i.hasNext();) {\n\t\tvar er = i.next();\n\t\tif (includeAll || er.isIncluded()) {\n\t\t\tpolyList.add(er.getPolygon());\n\t\t}\n\t}\n\treturn polyList;\n};\nPolygonizer.assignHolesToShells = function (holeList, shellList) {\n\tfor (var i = holeList.iterator(); i.hasNext();) {\n\t\tvar holeER = i.next();\n\t\tPolygonizer.assignHoleToShell(holeER, shellList);\n\t}\n};\nPolygonizer.assignHoleToShell = function (holeER, shellList) {\n\tvar shell = EdgeRing$1.findEdgeRingContaining(holeER, shellList);\n\tif (shell !== null) {\n\t\tshell.addHole(holeER);\n\t}\n};\nPolygonizer.findDisjointShells = function (shellList) {\n\tPolygonizer.findOuterShells(shellList);\n\tvar isMoreToScan = null;\n\tdo {\n\t\tisMoreToScan = false;\n\t\tfor (var i = shellList.iterator(); i.hasNext();) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isIncludedSet()) continue;\n\t\t\ter.updateIncluded();\n\t\t\tif (!er.isIncludedSet()) {\n\t\t\t\tisMoreToScan = true;\n\t\t\t}\n\t\t}\n\t} while (isMoreToScan);\n};\nfunction LineStringAdder() {\n\tthis.p = null;\n\tvar p = arguments[0];\n\tthis.p = p;\n}\nextend(LineStringAdder.prototype, {\n\tfilter: function filter(g) {\n\t\tif (g instanceof LineString) this.p.add(g);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringAdder;\n\t}\n});\nPolygonizer.LineStringAdder = LineStringAdder;\n\nfunction RelateComputer() {\n\tthis._li = new RobustLineIntersector();\n\tthis._ptLocator = new PointLocator();\n\tthis._arg = null;\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n\tthis._im = null;\n\tthis._isolatedEdges = new ArrayList();\n\tthis._invalidPoint = null;\n\tvar arg = arguments[0];\n\tthis._arg = arg;\n}\nextend(RelateComputer.prototype, {\n\tinsertEdgeEnds: function insertEdgeEnds(ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t},\n\tcomputeProperIntersectionIM: function computeProperIntersectionIM(intersector, im) {\n\t\tvar dimA = this._arg[0].getGeometry().getDimension();\n\t\tvar dimB = this._arg[1].getGeometry().getDimension();\n\t\tvar hasProper = intersector.hasProperIntersection();\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\n\t\tif (dimA === 2 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\n\t\t} else if (dimA === 2 && dimB === 1) {\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n\t\t} else if (dimA === 1 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n\t\t} else if (dimA === 1 && dimB === 1) {\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n\t\t}\n\t},\n\tlabelIsolatedEdges: function labelIsolatedEdges(thisIndex, targetIndex) {\n\t\tfor (var ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext();) {\n\t\t\tvar e = ei.next();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry());\n\t\t\t\tthis._isolatedEdges.add(e);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedEdge: function labelIsolatedEdge(e, targetIndex, target) {\n\t\tif (target.getDimension() > 0) {\n\t\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), target);\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\n\t\t} else {\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n\t\t}\n\t},\n\tcomputeIM: function computeIM() {\n\t\tvar im = new IntersectionMatrix();\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\t\tif (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n\t\t\tthis.computeDisjointIM(im);\n\t\t\treturn im;\n\t\t}\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tvar intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false);\n\t\tthis.computeIntersectionNodes(0);\n\t\tthis.computeIntersectionNodes(1);\n\t\tthis.copyNodesAndLabels(0);\n\t\tthis.copyNodesAndLabels(1);\n\t\tthis.labelIsolatedNodes();\n\t\tthis.computeProperIntersectionIM(intersector, im);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee0);\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee1);\n\t\tthis.labelNodeEdges();\n\t\tthis.labelIsolatedEdges(0, 1);\n\t\tthis.labelIsolatedEdges(1, 0);\n\t\tthis.updateIM(im);\n\t\treturn im;\n\t},\n\tlabelNodeEdges: function labelNodeEdges() {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext();) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t},\n\tcopyNodesAndLabels: function copyNodesAndLabels(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tlabelIntersectionNodes: function labelIntersectionNodes(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.find(ei.coord);\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNode: function labelIsolatedNode(n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\n\t},\n\tcomputeIntersectionNodes: function computeIntersectionNodes(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext();) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNodes: function labelIsolatedNodes() {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext();) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0);else this.labelIsolatedNode(n, 1);\n\t\t\t}\n\t\t}\n\t},\n\tupdateIM: function updateIM(im) {\n\t\tfor (var ei = this._isolatedEdges.iterator(); ei.hasNext();) {\n\t\t\tvar e = ei.next();\n\t\t\te.updateIM(im);\n\t\t}\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext();) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.updateIM(im);\n\t\t\tnode.updateIMFromEdges(im);\n\t\t}\n\t},\n\tcomputeDisjointIM: function computeDisjointIM(im) {\n\t\tvar ga = this._arg[0].getGeometry();\n\t\tif (!ga.isEmpty()) {\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n\t\t}\n\t\tvar gb = this._arg[1].getGeometry();\n\t\tif (!gb.isEmpty()) {\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateComputer;\n\t}\n});\n\nfunction RectangleContains() {\n\tthis._rectEnv = null;\n\tvar rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleContains.prototype, {\n\tisContainedInBoundary: function isContainedInBoundary(geom) {\n\t\tif (geom instanceof Polygon) return false;\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisLineSegmentContainedInBoundary: function isLineSegmentContainedInBoundary(p0, p1) {\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\t\tif (p0.x === p1.x) {\n\t\t\tif (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true;\n\t\t} else if (p0.y === p1.y) {\n\t\t\tif (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisLineStringContainedInBoundary: function isLineStringContainedInBoundary(line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\n\t\t\tseq.getCoordinate(i, p0);\n\t\t\tseq.getCoordinate(i + 1, p1);\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisPointContainedInBoundary: function isPointContainedInBoundary() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tvar point = arguments[0];\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar pt = arguments[0];\n\t\t\treturn pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY();\n\t\t}\n\t},\n\tcontains: function contains(geom) {\n\t\tif (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false;\n\t\tif (this.isContainedInBoundary(geom)) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleContains;\n\t}\n});\nRectangleContains.contains = function (rectangle, b) {\n\tvar rc = new RectangleContains(rectangle);\n\treturn rc.contains(b);\n};\n\nfunction RectangleLineIntersector() {\n\tthis._li = new RobustLineIntersector();\n\tthis._rectEnv = null;\n\tthis._diagUp0 = null;\n\tthis._diagUp1 = null;\n\tthis._diagDown0 = null;\n\tthis._diagDown1 = null;\n\tvar rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n\tthis._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n\tthis._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n\tthis._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n\tthis._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n}\nextend(RectangleLineIntersector.prototype, {\n\tintersects: function intersects(p0, p1) {\n\t\tvar segEnv = new Envelope(p0, p1);\n\t\tif (!this._rectEnv.intersects(segEnv)) return false;\n\t\tif (this._rectEnv.intersects(p0)) return true;\n\t\tif (this._rectEnv.intersects(p1)) return true;\n\t\tif (p0.compareTo(p1) > 0) {\n\t\t\tvar tmp = p0;\n\t\t\tp0 = p1;\n\t\t\tp1 = tmp;\n\t\t}\n\t\tvar isSegUpwards = false;\n\t\tif (p1.y > p0.y) isSegUpwards = true;\n\t\tif (isSegUpwards) {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1);\n\t\t} else {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1);\n\t\t}\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleLineIntersector;\n\t}\n});\n\nfunction ShortCircuitedGeometryVisitor() {\n\tthis._isDone = false;\n}\nextend(ShortCircuitedGeometryVisitor.prototype, {\n\tapplyTo: function applyTo(geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n\t\t\tvar element = geom.getGeometryN(i);\n\t\t\tif (!(element instanceof GeometryCollection)) {\n\t\t\t\tthis.visit(element);\n\t\t\t\tif (this.isDone()) {\n\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else this.applyTo(element);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ShortCircuitedGeometryVisitor;\n\t}\n});\n\nfunction RectangleIntersects() {\n\tthis._rectangle = null;\n\tthis._rectEnv = null;\n\tvar rectangle = arguments[0];\n\tthis._rectangle = rectangle;\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleIntersects.prototype, {\n\tintersects: function intersects(geom) {\n\t\tif (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this._rectEnv);\n\t\tvisitor.applyTo(geom);\n\t\tif (visitor.intersects()) return true;\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this._rectangle);\n\t\tecpVisitor.applyTo(geom);\n\t\tif (ecpVisitor.containsPoint()) return true;\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle);\n\t\triVisitor.applyTo(geom);\n\t\tif (riVisitor.intersects()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleIntersects;\n\t}\n});\nRectangleIntersects.intersects = function (rectangle, b) {\n\tvar rp = new RectangleIntersects(rectangle);\n\treturn rp.intersects(b);\n};\nfunction EnvelopeIntersectsVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectEnv = null;\n\tthis._intersects = false;\n\tvar rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n}\ninherits$1(EnvelopeIntersectsVisitor, ShortCircuitedGeometryVisitor);\nextend(EnvelopeIntersectsVisitor.prototype, {\n\tisDone: function isDone() {\n\t\treturn this._intersects === true;\n\t},\n\tvisit: function visit(element) {\n\t\tvar elementEnv = element.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._rectEnv.contains(elementEnv)) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t},\n\tintersects: function intersects() {\n\t\treturn this._intersects;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn EnvelopeIntersectsVisitor;\n\t}\n});\nfunction GeometryContainsPointVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectSeq = null;\n\tthis._rectEnv = null;\n\tthis._containsPoint = false;\n\tvar rectangle = arguments[0];\n\tthis._rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\ninherits$1(GeometryContainsPointVisitor, ShortCircuitedGeometryVisitor);\nextend(GeometryContainsPointVisitor.prototype, {\n\tisDone: function isDone() {\n\t\treturn this._containsPoint === true;\n\t},\n\tvisit: function visit(geom) {\n\t\tif (!(geom instanceof Polygon)) return null;\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar rectPt = new Coordinate();\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis._rectSeq.getCoordinate(i, rectPt);\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n\t\t\t\tthis._containsPoint = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcontainsPoint: function containsPoint() {\n\t\treturn this._containsPoint;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryContainsPointVisitor;\n\t}\n});\nfunction RectangleIntersectsSegmentVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectEnv = null;\n\tthis._rectIntersector = null;\n\tthis._hasIntersection = false;\n\tthis._p0 = new Coordinate();\n\tthis._p1 = new Coordinate();\n\tvar rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n\tthis._rectIntersector = new RectangleLineIntersector(this._rectEnv);\n}\ninherits$1(RectangleIntersectsSegmentVisitor, ShortCircuitedGeometryVisitor);\nextend(RectangleIntersectsSegmentVisitor.prototype, {\n\tintersects: function intersects() {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function isDone() {\n\t\treturn this._hasIntersection === true;\n\t},\n\tvisit: function visit(geom) {\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tthis.checkIntersectionWithLineStrings(lines);\n\t},\n\tcheckIntersectionWithLineStrings: function checkIntersectionWithLineStrings(lines) {\n\t\tfor (var i = lines.iterator(); i.hasNext();) {\n\t\t\tvar testLine = i.next();\n\t\t\tthis.checkIntersectionWithSegments(testLine);\n\t\t\tif (this._hasIntersection) return null;\n\t\t}\n\t},\n\tcheckIntersectionWithSegments: function checkIntersectionWithSegments(testLine) {\n\t\tvar seq1 = testLine.getCoordinateSequence();\n\t\tfor (var j = 1; j < seq1.size(); j++) {\n\t\t\tseq1.getCoordinate(j - 1, this._p0);\n\t\t\tseq1.getCoordinate(j, this._p1);\n\t\t\tif (this._rectIntersector.intersects(this._p0, this._p1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RectangleIntersectsSegmentVisitor;\n\t}\n});\n\nfunction RelateOp() {\n\tthis._relate = null;\n\tif (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t} else if (arguments.length === 3) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1],\n\t\t    boundaryNodeRule = arguments[2];\n\t\tGeometryGraphOperation.call(this, g0, g1, boundaryNodeRule);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t}\n}\ninherits$1(RelateOp, GeometryGraphOperation);\nextend(RelateOp.prototype, {\n\tgetIntersectionMatrix: function getIntersectionMatrix() {\n\t\treturn this._relate.computeIM();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn RelateOp;\n\t}\n});\nRelateOp.covers = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn true;\n\t}\n\treturn RelateOp.relate(g1, g2).isCovers();\n};\nRelateOp.intersects = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g1, g2);\n\t}\n\tif (g2.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g2, g1);\n\t}\n\treturn RelateOp.relate(g1, g2).isIntersects();\n};\nRelateOp.touches = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isTouches(g1.getDimension(), g2.getDimension());\n};\nRelateOp.within = function (g1, g2) {\n\treturn g2.contains(g1);\n};\nRelateOp.coveredBy = function (g1, g2) {\n\treturn RelateOp.covers(g2, g1);\n};\nRelateOp.relate = function () {\n\tif (arguments.length === 2) {\n\t\tvar a = arguments[0],\n\t\t    b = arguments[1];\n\t\tvar relOp = new RelateOp(a, b);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"string\" && arguments[0] instanceof Geometry && arguments[1] instanceof Geometry) {\n\t\t\tvar g1 = arguments[0],\n\t\t\t    g2 = arguments[1],\n\t\t\t    intersectionPattern = arguments[2];\n\t\t\treturn RelateOp.relateWithCheck(g1, g2).matches(intersectionPattern);\n\t\t} else if (hasInterface(arguments[2], BoundaryNodeRule) && arguments[0] instanceof Geometry && arguments[1] instanceof Geometry) {\n\t\t\tvar a = arguments[0],\n\t\t\t    b = arguments[1],\n\t\t\t    boundaryNodeRule = arguments[2];\n\t\t\tvar relOp = new RelateOp(a, b, boundaryNodeRule);\n\t\t\tvar im = relOp.getIntersectionMatrix();\n\t\t\treturn im;\n\t\t}\n\t}\n};\nRelateOp.overlaps = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isOverlaps(g1.getDimension(), g2.getDimension());\n};\nRelateOp.disjoint = function (g1, g2) {\n\treturn !g1.intersects(g2);\n};\nRelateOp.relateWithCheck = function (g1, g2) {\n\tg1.checkNotGeometryCollection(g1);\n\tg1.checkNotGeometryCollection(g2);\n\treturn RelateOp.relate(g1, g2);\n};\nRelateOp.crosses = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(g1, g2).isCrosses(g1.getDimension(), g2.getDimension());\n};\nRelateOp.contains = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleContains.contains(g1, g2);\n\t}\n\treturn RelateOp.relate(g1, g2).isContains();\n};\n\nfunction GeometryCombiner() {\n\tthis._geomFactory = null;\n\tthis._skipEmpty = false;\n\tthis._inputGeoms = null;\n\tvar geoms = arguments[0];\n\tthis._geomFactory = GeometryCombiner.extractFactory(geoms);\n\tthis._inputGeoms = geoms;\n}\nextend(GeometryCombiner.prototype, {\n\textractElements: function extractElements(geom, elems) {\n\t\tif (geom === null) return null;\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elemGeom = geom.getGeometryN(i);\n\t\t\tif (this._skipEmpty && elemGeom.isEmpty()) continue;\n\t\t\telems.add(elemGeom);\n\t\t}\n\t},\n\tcombine: function combine() {\n\t\tvar elems = new ArrayList();\n\t\tfor (var i = this._inputGeoms.iterator(); i.hasNext();) {\n\t\t\tvar g = i.next();\n\t\t\tthis.extractElements(g, elems);\n\t\t}\n\t\tif (elems.size() === 0) {\n\t\t\tif (this._geomFactory !== null) {\n\t\t\t\treturn this._geomFactory.createGeometryCollection(null);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(elems);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryCombiner;\n\t}\n});\nGeometryCombiner.combine = function () {\n\tif (arguments.length === 1) {\n\t\tvar geoms = arguments[0];\n\t\tvar combiner = new GeometryCombiner(geoms);\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 2) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 3) {\n\t\tvar g0 = arguments[0],\n\t\t    g1 = arguments[1],\n\t\t    g2 = arguments[2];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\n\t\treturn combiner.combine();\n\t}\n};\nGeometryCombiner.extractFactory = function (geoms) {\n\tif (geoms.isEmpty()) return null;\n\treturn geoms.iterator().next().getFactory();\n};\nGeometryCombiner.createList = function () {\n\tif (arguments.length === 2) {\n\t\tvar obj0 = arguments[0],\n\t\t    obj1 = arguments[1];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\treturn list;\n\t} else if (arguments.length === 3) {\n\t\tvar obj0 = arguments[0],\n\t\t    obj1 = arguments[1],\n\t\t    obj2 = arguments[2];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\tlist.add(obj2);\n\t\treturn list;\n\t}\n};\n\nfunction CascadedPolygonUnion() {\n\tthis._inputPolys = null;\n\tthis._geomFactory = null;\n\tvar polys = arguments[0];\n\tthis._inputPolys = polys;\n\tif (this._inputPolys === null) this._inputPolys = new ArrayList();\n}\nextend(CascadedPolygonUnion.prototype, {\n\treduceToGeometries: function reduceToGeometries(geomTree) {\n\t\tvar geoms = new ArrayList();\n\t\tfor (var i = geomTree.iterator(); i.hasNext();) {\n\t\t\tvar o = i.next();\n\t\t\tvar geom = null;\n\t\t\tif (hasInterface(o, List)) {\n\t\t\t\tgeom = this.unionTree(o);\n\t\t\t} else if (o instanceof Geometry) {\n\t\t\t\tgeom = o;\n\t\t\t}\n\t\t\tgeoms.add(geom);\n\t\t}\n\t\treturn geoms;\n\t},\n\textractByEnvelope: function extractByEnvelope(env, geom, disjointGeoms) {\n\t\tvar intersectingGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem);else disjointGeoms.add(elem);\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(intersectingGeoms);\n\t},\n\tunionOptimized: function unionOptimized(g0, g1) {\n\t\tvar g0Env = g0.getEnvelopeInternal();\n\t\tvar g1Env = g1.getEnvelopeInternal();\n\t\tif (!g0Env.intersects(g1Env)) {\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\n\t\t\treturn combo;\n\t\t}\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n\t\tvar commonEnv = g0Env.intersection(g1Env);\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n\t},\n\tunion: function union() {\n\t\tif (this._inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n\t\tif (this._inputPolys.isEmpty()) return null;\n\t\tthis._geomFactory = this._inputPolys.iterator().next().getFactory();\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\t\tfor (var i = this._inputPolys.iterator(); i.hasNext();) {\n\t\t\tvar item = i.next();\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\n\t\t}\n\t\tthis._inputPolys = null;\n\t\tvar itemTree = index.itemsTree();\n\t\tvar unionAll = this.unionTree(itemTree);\n\t\treturn unionAll;\n\t},\n\tbinaryUnion: function binaryUnion() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar geoms = arguments[0];\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\n\t\t} else if (arguments.length === 3) {\n\t\t\tvar geoms = arguments[0],\n\t\t\t    start = arguments[1],\n\t\t\t    end = arguments[2];\n\t\t\tif (end - start <= 1) {\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(geoms, start);\n\t\t\t\treturn this.unionSafe(g0, null);\n\t\t\t} else if (end - start === 2) {\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\n\t\t\t} else {\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\n\t\t\t\tvar g0 = this.binaryUnion(geoms, start, mid);\n\t\t\t\tvar g1 = this.binaryUnion(geoms, mid, end);\n\t\t\t\treturn this.unionSafe(g0, g1);\n\t\t\t}\n\t\t}\n\t},\n\trepeatedUnion: function repeatedUnion(geoms) {\n\t\tvar union = null;\n\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\tvar g = i.next();\n\t\t\tif (union === null) union = g.copy();else union = union.union(g);\n\t\t}\n\t\treturn union;\n\t},\n\tunionSafe: function unionSafe(g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g0 === null) return g1.copy();\n\t\tif (g1 === null) return g0.copy();\n\t\treturn this.unionOptimized(g0, g1);\n\t},\n\tunionActual: function unionActual(g0, g1) {\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n\t},\n\tunionTree: function unionTree(geomTree) {\n\t\tvar geoms = this.reduceToGeometries(geomTree);\n\t\tvar union = this.binaryUnion(geoms);\n\t\treturn union;\n\t},\n\tunionUsingEnvelopeIntersection: function unionUsingEnvelopeIntersection(g0, g1, common) {\n\t\tvar disjointPolys = new ArrayList();\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n\t\tvar union = this.unionActual(g0Int, g1Int);\n\t\tdisjointPolys.add(union);\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function bufferUnion() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tvar factory = geoms.get(0).getFactory();\n\t\t\tvar gColl = factory.buildGeometry(geoms);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar g0 = arguments[0],\n\t\t\t    g1 = arguments[1];\n\t\t\tvar factory = g0.getFactory();\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn CascadedPolygonUnion;\n\t}\n});\nCascadedPolygonUnion.restrictToPolygons = function (g) {\n\tif (hasInterface(g, Polygonal)) {\n\t\treturn g;\n\t}\n\tvar polygons = PolygonExtracter.getPolygons(g);\n\tif (polygons.size() === 1) return polygons.get(0);\n\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n};\nCascadedPolygonUnion.getGeometry = function (list, index) {\n\tif (index >= list.size()) return null;\n\treturn list.get(index);\n};\nCascadedPolygonUnion.union = function (polys) {\n\tvar op = new CascadedPolygonUnion(polys);\n\treturn op.union();\n};\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n\nfunction PointGeometryUnion() {\n\tthis._pointGeom = null;\n\tthis._otherGeom = null;\n\tthis._geomFact = null;\n\tvar pointGeom = arguments[0],\n\t    otherGeom = arguments[1];\n\tthis._pointGeom = pointGeom;\n\tthis._otherGeom = otherGeom;\n\tthis._geomFact = otherGeom.getFactory();\n}\nextend(PointGeometryUnion.prototype, {\n\tunion: function union() {\n\t\tvar locater = new PointLocator();\n\t\tvar exteriorCoords = new TreeSet();\n\t\tfor (var i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n\t\t\tvar point = this._pointGeom.getGeometryN(i);\n\t\t\tvar coord = point.getCoordinate();\n\t\t\tvar loc = locater.locate(coord, this._otherGeom);\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n\t\t}\n\t\tif (exteriorCoords.size() === 0) return this._otherGeom;\n\t\tvar ptComp = null;\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\t\tif (coords.length === 1) {\n\t\t\tptComp = this._geomFact.createPoint(coords[0]);\n\t\t} else {\n\t\t\tptComp = this._geomFact.createMultiPointFromCoords(coords);\n\t\t}\n\t\treturn GeometryCombiner.combine(ptComp, this._otherGeom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PointGeometryUnion;\n\t}\n});\nPointGeometryUnion.union = function (pointGeom, otherGeom) {\n\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\n\treturn unioner.union();\n};\n\nfunction GeometryExtracter() {\n\tthis._sortIndex = -1;\n\tthis._comps = null;\n\tvar sortIndex = arguments[0],\n\t    comps = arguments[1];\n\tthis._sortIndex = sortIndex;\n\tthis._comps = comps;\n}\nextend(GeometryExtracter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (this._sortIndex === -1 || geom.getSortIndex() === this._sortIndex) this._comps.add(geom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryExtracter;\n\t}\n});\nGeometryExtracter.extract = function () {\n\tif (arguments.length === 2) {\n\t\tvar geom = arguments[0],\n\t\t    sortIndex = arguments[1];\n\t\treturn GeometryExtracter.extract(geom, sortIndex, new ArrayList());\n\t} else if (arguments.length === 3) {\n\t\tvar geom = arguments[0],\n\t\t    sortIndex = arguments[1],\n\t\t    list = arguments[2];\n\t\tif (geom.getSortIndex() === sortIndex) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new GeometryExtracter(sortIndex, list));\n\t\t}\n\t\treturn list;\n\t}\n};\n\nfunction UnaryUnionOp() {\n\tthis._polygons = new ArrayList();\n\tthis._lines = new ArrayList();\n\tthis._points = new ArrayList();\n\tthis._geomFact = null;\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tthis.extract(geoms);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tthis.extract(geom);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar geoms = arguments[0],\n\t\t    geomFact = arguments[1];\n\t\tthis._geomFact = geomFact;\n\t\tthis.extract(geoms);\n\t}\n}\nextend(UnaryUnionOp.prototype, {\n\tunionNoOpt: function unionNoOpt(g0) {\n\t\tvar empty = this._geomFact.createPoint();\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n\t},\n\tunionWithNull: function unionWithNull(g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g1 === null) return g0;\n\t\tif (g0 === null) return g1;\n\t\treturn g0.union(g1);\n\t},\n\textract: function extract() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext();) {\n\t\t\t\tvar geom = i.next();\n\t\t\t\tthis.extract(geom);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tif (this._geomFact === null) this._geomFact = geom.getFactory();\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_POLYGON, this._polygons);\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_LINESTRING, this._lines);\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_POINT, this._points);\n\t\t}\n\t},\n\tunion: function union() {\n\t\tif (this._geomFact === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar unionPoints = null;\n\t\tif (this._points.size() > 0) {\n\t\t\tvar ptGeom = this._geomFact.buildGeometry(this._points);\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\n\t\t}\n\t\tvar unionLines = null;\n\t\tif (this._lines.size() > 0) {\n\t\t\tvar lineGeom = this._geomFact.buildGeometry(this._lines);\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\n\t\t}\n\t\tvar unionPolygons = null;\n\t\tif (this._polygons.size() > 0) {\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this._polygons);\n\t\t}\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\n\t\tvar union = null;\n\t\tif (unionPoints === null) union = unionLA;else if (unionLA === null) union = unionPoints;else union = PointGeometryUnion.union(unionPoints, unionLA);\n\t\tif (union === null) return this._geomFact.createGeometryCollection();\n\t\treturn union;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UnaryUnionOp;\n\t}\n});\nUnaryUnionOp.union = function () {\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tvar geoms = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geoms);\n\t\t\treturn op.union();\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geom);\n\t\t\treturn op.union();\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar geoms = arguments[0],\n\t\t    geomFact = arguments[1];\n\t\tvar op = new UnaryUnionOp(geoms, geomFact);\n\t\treturn op.union();\n\t}\n};\n\nfunction UnionInteracting() {\n\tthis._geomFactory = null;\n\tthis._g0 = null;\n\tthis._g1 = null;\n\tthis._interacts0 = null;\n\tthis._interacts1 = null;\n\tvar g0 = arguments[0],\n\t    g1 = arguments[1];\n\tthis._g0 = g0;\n\tthis._g1 = g1;\n\tthis._geomFactory = g0.getFactory();\n\tthis._interacts0 = new Array(g0.getNumGeometries()).fill(null);\n\tthis._interacts1 = new Array(g1.getNumGeometries()).fill(null);\n}\nextend(UnionInteracting.prototype, {\n\textractElements: function extractElements(geom, interacts, isInteracting) {\n\t\tvar extractedGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (interacts[i] === isInteracting) extractedGeoms.add(elem);\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(extractedGeoms);\n\t},\n\tcomputeInteracting: function computeInteracting() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < this._g0.getNumGeometries(); i++) {\n\t\t\t\tvar elem = this._g0.getGeometryN(i);\n\t\t\t\tthis._interacts0[i] = this.computeInteracting(elem);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar elem0 = arguments[0];\n\t\t\tvar interactsWithAny = false;\n\t\t\tfor (var i = 0; i < this._g1.getNumGeometries(); i++) {\n\t\t\t\tvar elem1 = this._g1.getGeometryN(i);\n\t\t\t\tvar interacts = elem1.getEnvelopeInternal().intersects(elem0.getEnvelopeInternal());\n\t\t\t\tif (interacts) this._interacts1[i] = true;\n\t\t\t\tif (interacts) interactsWithAny = true;\n\t\t\t}\n\t\t\treturn interactsWithAny;\n\t\t}\n\t},\n\tunion: function union() {\n\t\tthis.computeInteracting();\n\t\tvar int0 = this.extractElements(this._g0, this._interacts0, true);\n\t\tvar int1 = this.extractElements(this._g1, this._interacts1, true);\n\t\tif (int0.isEmpty() || int1.isEmpty()) {\n\t\t\tSystem.out.println(\"found empty!\");\n\t\t}\n\t\tvar union = int0.union(int1);\n\t\tvar disjoint0 = this.extractElements(this._g0, this._interacts0, false);\n\t\tvar disjoint1 = this.extractElements(this._g1, this._interacts1, false);\n\t\tvar overallUnion = GeometryCombiner.combine(union, disjoint0, disjoint1);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function bufferUnion(g0, g1) {\n\t\tvar factory = g0.getFactory();\n\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\tvar unionAll = gColl.buffer(0.0);\n\t\treturn unionAll;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UnionInteracting;\n\t}\n});\nUnionInteracting.union = function (g0, g1) {\n\tvar uue = new UnionInteracting(g0, g1);\n\treturn uue.union();\n};\n\nfunction UnionOp() {}\nextend(UnionOp.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn UnionOp;\n\t}\n});\nUnionOp.union = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n};\n\nfunction PrecisionReducerCoordinateOperation() {\n\tGeometryEditor.CoordinateOperation.apply(this);\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tvar targetPM = arguments[0],\n\t    removeCollapsed = arguments[1];\n\tthis._targetPM = targetPM;\n\tthis._removeCollapsed = removeCollapsed;\n}\ninherits$1(PrecisionReducerCoordinateOperation, GeometryEditor.CoordinateOperation);\nextend(PrecisionReducerCoordinateOperation.prototype, {\n\teditCoordinates: function editCoordinates(coordinates, geom) {\n\t\tif (coordinates.length === 0) return null;\n\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tvar coord = new Coordinate(coordinates[i]);\n\t\t\tthis._targetPM.makePrecise(coord);\n\t\t\treducedCoords[i] = coord;\n\t\t}\n\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n\t\tvar minLength = 0;\n\t\tif (geom instanceof LineString) minLength = 2;\n\t\tif (geom instanceof LinearRing) minLength = 4;\n\t\tvar collapsedCoords = reducedCoords;\n\t\tif (this._removeCollapsed) collapsedCoords = null;\n\t\tif (noRepeatedCoords.length < minLength) {\n\t\t\treturn collapsedCoords;\n\t\t}\n\t\treturn noRepeatedCoords;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn PrecisionReducerCoordinateOperation;\n\t}\n});\n\nfunction GeometryPrecisionReducer() {\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tthis._changePrecisionModel = false;\n\tthis._isPointwise = false;\n\tvar pm = arguments[0];\n\tthis._targetPM = pm;\n}\nextend(GeometryPrecisionReducer.prototype, {\n\tfixPolygonalTopology: function fixPolygonalTopology(geom) {\n\t\tvar geomToBuffer = geom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tgeomToBuffer = this.changePM(geom, this._targetPM);\n\t\t}\n\t\tvar bufGeom = geomToBuffer.buffer(0);\n\t\tvar finalGeom = bufGeom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tfinalGeom = this.changePM(bufGeom, geom.getPrecisionModel());\n\t\t}\n\t\treturn finalGeom;\n\t},\n\treducePointwise: function reducePointwise(geom) {\n\t\tvar geomEdit = null;\n\t\tif (this._changePrecisionModel) {\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this._targetPM);\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\n\t\t} else geomEdit = new GeometryEditor();\n\t\tvar finalRemoveCollapsed = this._removeCollapsed;\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed));\n\t\treturn reduceGeom;\n\t},\n\tchangePM: function changePM(geom, newPM) {\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n\t},\n\tsetRemoveCollapsedComponents: function setRemoveCollapsedComponents(removeCollapsed) {\n\t\tthis._removeCollapsed = removeCollapsed;\n\t},\n\tcreateFactory: function createFactory(inputFactory, pm) {\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n\t\treturn newFactory;\n\t},\n\tsetChangePrecisionModel: function setChangePrecisionModel(changePrecisionModel) {\n\t\tthis._changePrecisionModel = changePrecisionModel;\n\t},\n\treduce: function reduce(geom) {\n\t\tvar reducePW = this.reducePointwise(geom);\n\t\tif (this._isPointwise) return reducePW;\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\n\t\tif (reducePW.isValid()) return reducePW;\n\t\treturn this.fixPolygonalTopology(reducePW);\n\t},\n\tsetPointwise: function setPointwise(isPointwise) {\n\t\tthis._isPointwise = isPointwise;\n\t},\n\tcreateEditor: function createEditor(geomFactory, newPM) {\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\n\t\tvar geomEdit = new GeometryEditor(newFactory);\n\t\treturn geomEdit;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn GeometryPrecisionReducer;\n\t}\n});\nGeometryPrecisionReducer.reduce = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treturn reducer.reduce(g);\n};\nGeometryPrecisionReducer.reducePointwise = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treducer.setPointwise(true);\n\treturn reducer.reduce(g);\n};\n\nfunction DouglasPeuckerLineSimplifier() {\n\tthis._pts = null;\n\tthis._usePt = null;\n\tthis._distanceTolerance = null;\n\tthis._seg = new LineSegment();\n\tvar pts = arguments[0];\n\tthis._pts = pts;\n}\nextend(DouglasPeuckerLineSimplifier.prototype, {\n\tsimplifySection: function simplifySection(i, j) {\n\t\tif (i + 1 === j) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._seg.p0 = this._pts[i];\n\t\tthis._seg.p1 = this._pts[j];\n\t\tvar maxDistance = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar distance = this._seg.distance(this._pts[k]);\n\t\t\tif (distance > maxDistance) {\n\t\t\t\tmaxDistance = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tif (maxDistance <= this._distanceTolerance) {\n\t\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\t\tthis._usePt[k] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simplifySection(i, maxIndex);\n\t\t\tthis.simplifySection(maxIndex, j);\n\t\t}\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function simplify() {\n\t\tthis._usePt = new Array(this._pts.length).fill(null);\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tthis._usePt[i] = true;\n\t\t}\n\t\tthis.simplifySection(0, this._pts.length - 1);\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tif (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]));\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DouglasPeuckerLineSimplifier;\n\t}\n});\nDouglasPeuckerLineSimplifier.simplify = function (pts, distanceTolerance) {\n\tvar simp = new DouglasPeuckerLineSimplifier(pts);\n\tsimp.setDistanceTolerance(distanceTolerance);\n\treturn simp.simplify();\n};\n\nfunction DouglasPeuckerSimplifier() {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tthis._isEnsureValidTopology = true;\n\tvar inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(DouglasPeuckerSimplifier.prototype, {\n\tsetEnsureValid: function setEnsureValid(isEnsureValidTopology) {\n\t\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\t},\n\tgetResultGeometry: function getResultGeometry() {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\treturn new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom);\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DouglasPeuckerSimplifier;\n\t}\n});\nDouglasPeuckerSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new DouglasPeuckerSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction DPTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._isEnsureValidTopology = true;\n\tthis._distanceTolerance = null;\n\tvar isEnsureValidTopology = arguments[0],\n\t    distanceTolerance = arguments[1];\n\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\tthis._distanceTolerance = distanceTolerance;\n}\ninherits$1(DPTransformer, GeometryTransformer);\nextend(DPTransformer.prototype, {\n\ttransformPolygon: function transformPolygon(geom, parent) {\n\t\tif (geom.isEmpty()) return null;\n\t\tvar rawGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn rawGeom;\n\t\t}\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\tcreateValidArea: function createValidArea(rawAreaGeom) {\n\t\tif (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n\t\treturn rawAreaGeom;\n\t},\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = null;\n\t\tif (inputPts.length === 0) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t} else {\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\ttransformMultiPolygon: function transformMultiPolygon(geom, parent) {\n\t\tvar rawGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\ttransformLinearRing: function transformLinearRing(geom, parent) {\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\n\t\tvar simpResult = GeometryTransformer.prototype.transformLinearRing.call(this, geom, parent);\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n\t\t\n\t\treturn simpResult;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DPTransformer;\n\t}\n});\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\n\nfunction TaggedLineSegment() {\n\tthis._parent = null;\n\tthis._index = null;\n\tif (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tTaggedLineSegment.call(this, p0, p1, null, -1);\n\t} else if (arguments.length === 4) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1],\n\t\t    parent = arguments[2],\n\t\t    index = arguments[3];\n\t\tLineSegment.call(this, p0, p1);\n\t\tthis._parent = parent;\n\t\tthis._index = index;\n\t}\n}\ninherits$1(TaggedLineSegment, LineSegment);\nextend(TaggedLineSegment.prototype, {\n\tgetIndex: function getIndex() {\n\t\treturn this._index;\n\t},\n\tgetParent: function getParent() {\n\t\treturn this._parent;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLineSegment;\n\t}\n});\n\nfunction TaggedLineString() {\n\tthis._parentLine = null;\n\tthis._segs = null;\n\tthis._resultSegs = new ArrayList();\n\tthis._minimumSize = null;\n\tif (arguments.length === 1) {\n\t\tvar parentLine = arguments[0];\n\t\tTaggedLineString.call(this, parentLine, 2);\n\t} else if (arguments.length === 2) {\n\t\tvar parentLine = arguments[0],\n\t\t    minimumSize = arguments[1];\n\t\tthis._parentLine = parentLine;\n\t\tthis._minimumSize = minimumSize;\n\t\tthis.init();\n\t}\n}\nextend(TaggedLineString.prototype, {\n\taddToResult: function addToResult(seg) {\n\t\tthis._resultSegs.add(seg);\n\t},\n\tasLineString: function asLineString() {\n\t\treturn this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs));\n\t},\n\tgetResultSize: function getResultSize() {\n\t\tvar resultSegsSize = this._resultSegs.size();\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n\t},\n\tgetParent: function getParent() {\n\t\treturn this._parentLine;\n\t},\n\tgetSegment: function getSegment(i) {\n\t\treturn this._segs[i];\n\t},\n\tgetParentCoordinates: function getParentCoordinates() {\n\t\treturn this._parentLine.getCoordinates();\n\t},\n\tgetMinimumSize: function getMinimumSize() {\n\t\treturn this._minimumSize;\n\t},\n\tasLinearRing: function asLinearRing() {\n\t\treturn this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs));\n\t},\n\tgetSegments: function getSegments() {\n\t\treturn this._segs;\n\t},\n\tinit: function init() {\n\t\tvar pts = this._parentLine.getCoordinates();\n\t\tthis._segs = new Array(pts.length - 1).fill(null);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i);\n\t\t\tthis._segs[i] = seg;\n\t\t}\n\t},\n\tgetResultCoordinates: function getResultCoordinates() {\n\t\treturn TaggedLineString.extractCoordinates(this._resultSegs);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLineString;\n\t}\n});\nTaggedLineString.extractCoordinates = function (segs) {\n\tvar pts = new Array(segs.size() + 1).fill(null);\n\tvar seg = null;\n\tfor (var i = 0; i < segs.size(); i++) {\n\t\tseg = segs.get(i);\n\t\tpts[i] = seg.p0;\n\t}\n\tpts[pts.length - 1] = seg.p1;\n\treturn pts;\n};\n\nfunction LineSegmentIndex() {\n\tthis._index = new Quadtree();\n}\nextend(LineSegmentIndex.prototype, {\n\tremove: function remove(seg) {\n\t\tthis._index.remove(new Envelope(seg.p0, seg.p1), seg);\n\t},\n\tadd: function add() {\n\t\tif (arguments[0] instanceof TaggedLineString) {\n\t\t\tvar line = arguments[0];\n\t\t\tvar segs = line.getSegments();\n\t\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\t\tvar seg = segs[i];\n\t\t\t\tthis.add(seg);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tthis._index.insert(new Envelope(seg.p0, seg.p1), seg);\n\t\t}\n\t},\n\tquery: function query(querySeg) {\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\n\t\tthis._index.query(env, visitor);\n\t\tvar itemsFound = visitor.getItems();\n\t\treturn itemsFound;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineSegmentIndex;\n\t}\n});\nfunction LineSegmentVisitor() {\n\tthis._querySeg = null;\n\tthis._items = new ArrayList();\n\tvar querySeg = arguments[0];\n\tthis._querySeg = querySeg;\n}\nextend(LineSegmentVisitor.prototype, {\n\tvisitItem: function visitItem(item) {\n\t\tvar seg = item;\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item);\n\t},\n\tgetItems: function getItems() {\n\t\treturn this._items;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineSegmentVisitor;\n\t}\n});\n\nfunction TaggedLineStringSimplifier() {\n\tthis._li = new RobustLineIntersector();\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._line = null;\n\tthis._linePts = null;\n\tthis._distanceTolerance = 0.0;\n\tvar inputIndex = arguments[0],\n\t    outputIndex = arguments[1];\n\tthis._inputIndex = inputIndex;\n\tthis._outputIndex = outputIndex;\n}\nextend(TaggedLineStringSimplifier.prototype, {\n\tflatten: function flatten(start, end) {\n\t\tvar p0 = this._linePts[start];\n\t\tvar p1 = this._linePts[end];\n\t\tvar newSeg = new LineSegment(p0, p1);\n\t\tthis.remove(this._line, start, end);\n\t\tthis._outputIndex.add(newSeg);\n\t\treturn newSeg;\n\t},\n\thasBadIntersection: function hasBadIntersection(parentLine, sectionIndex, candidateSeg) {\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n\t\treturn false;\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplifySection: function simplifySection(i, j, depth) {\n\t\tdepth += 1;\n\t\tvar sectionIndex = new Array(2).fill(null);\n\t\tif (i + 1 === j) {\n\t\t\tvar newSeg = this._line.getSegment(i);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tvar isValidToSimplify = true;\n\t\tif (this._line.getResultSize() < this._line.getMinimumSize()) {\n\t\t\tvar worstCaseSize = depth + 1;\n\t\t\tif (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false;\n\t\t}\n\t\tvar distance = new Array(1).fill(null);\n\t\tvar furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance);\n\t\tif (distance[0] > this._distanceTolerance) isValidToSimplify = false;\n\t\tvar candidateSeg = new LineSegment();\n\t\tcandidateSeg.p0 = this._linePts[i];\n\t\tcandidateSeg.p1 = this._linePts[j];\n\t\tsectionIndex[0] = i;\n\t\tsectionIndex[1] = j;\n\t\tif (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\t\tif (isValidToSimplify) {\n\t\t\tvar newSeg = this.flatten(i, j);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\n\t},\n\thasBadOutputIntersection: function hasBadOutputIntersection(candidateSeg) {\n\t\tvar querySegs = this._outputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext();) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tfindFurthestPoint: function findFurthestPoint(pts, i, j, maxDistance) {\n\t\tvar seg = new LineSegment();\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[j];\n\t\tvar maxDist = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar midPt = pts[k];\n\t\t\tvar distance = seg.distance(midPt);\n\t\t\tif (distance > maxDist) {\n\t\t\t\tmaxDist = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tmaxDistance[0] = maxDist;\n\t\treturn maxIndex;\n\t},\n\tsimplify: function simplify(line) {\n\t\tthis._line = line;\n\t\tthis._linePts = line.getParentCoordinates();\n\t\tthis.simplifySection(0, this._linePts.length - 1, 0);\n\t},\n\tremove: function remove(line, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar seg = line.getSegment(i);\n\t\t\tthis._inputIndex.remove(seg);\n\t\t}\n\t},\n\thasInteriorIntersection: function hasInteriorIntersection(seg0, seg1) {\n\t\tthis._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\t\treturn this._li.isInteriorIntersection();\n\t},\n\thasBadInputIntersection: function hasBadInputIntersection(parentLine, sectionIndex, candidateSeg) {\n\t\tvar querySegs = this._inputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext();) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLineStringSimplifier;\n\t}\n});\nTaggedLineStringSimplifier.isInLineSection = function (line, sectionIndex, seg) {\n\tif (seg.getParent() !== line.getParent()) return false;\n\tvar segIndex = seg.getIndex();\n\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n\treturn false;\n};\n\nfunction TaggedLinesSimplifier() {\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._distanceTolerance = 0.0;\n}\nextend(TaggedLinesSimplifier.prototype, {\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function simplify(taggedLines) {\n\t\tfor (var i = taggedLines.iterator(); i.hasNext();) {\n\t\t\tthis._inputIndex.add(i.next());\n\t\t}\n\t\tfor (var i = taggedLines.iterator(); i.hasNext();) {\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex);\n\t\t\ttlss.setDistanceTolerance(this._distanceTolerance);\n\t\t\ttlss.simplify(i.next());\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TaggedLinesSimplifier;\n\t}\n});\n\nfunction TopologyPreservingSimplifier() {\n\tthis._inputGeom = null;\n\tthis._lineSimplifier = new TaggedLinesSimplifier();\n\tthis._linestringMap = null;\n\tvar inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(TopologyPreservingSimplifier.prototype, {\n\tgetResultGeometry: function getResultGeometry() {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\tthis._linestringMap = new HashMap();\n\t\tthis._inputGeom.apply(new LineStringMapBuilderFilter(this));\n\t\tthis._lineSimplifier.simplify(this._linestringMap.values());\n\t\tvar result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom);\n\t\treturn result;\n\t},\n\tsetDistanceTolerance: function setDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._lineSimplifier.setDistanceTolerance(distanceTolerance);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TopologyPreservingSimplifier;\n\t}\n});\nTopologyPreservingSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new TopologyPreservingSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction LineStringTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._linestringMap = null;\n\tvar linestringMap = arguments[0];\n\tthis._linestringMap = linestringMap;\n}\ninherits$1(LineStringTransformer, GeometryTransformer);\nextend(LineStringTransformer.prototype, {\n\ttransformCoordinates: function transformCoordinates(coords, parent) {\n\t\tif (coords.size() === 0) return null;\n\t\tif (parent instanceof LineString) {\n\t\t\tvar taggedLine = this._linestringMap.get(parent);\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\n\t\t}\n\t\treturn GeometryTransformer.prototype.transformCoordinates.call(this, coords, parent);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringTransformer;\n\t}\n});\nfunction LineStringMapBuilderFilter() {\n\tthis.tps = null;\n\tvar tps = arguments[0];\n\tthis.tps = tps;\n}\nextend(LineStringMapBuilderFilter.prototype, {\n\tfilter: function filter(geom) {\n\t\tif (geom instanceof LineString) {\n\t\t\tvar line = geom;\n\t\t\tif (line.isEmpty()) return null;\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\n\t\t\tthis.tps._linestringMap.put(line, taggedLine);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LineStringMapBuilderFilter;\n\t}\n});\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\n\nfunction SplitSegment() {\n\tthis._seg = null;\n\tthis._segLen = null;\n\tthis._splitPt = null;\n\tthis._minimumLen = 0.0;\n\tvar seg = arguments[0];\n\tthis._seg = seg;\n\tthis._segLen = seg.getLength();\n}\nextend(SplitSegment.prototype, {\n\tsplitAt: function splitAt() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar pt = arguments[0];\n\t\t\tvar minFrac = this._minimumLen / this._segLen;\n\t\t\tif (pt.distance(this._seg.p0) < this._minimumLen) {\n\t\t\t\tthis._splitPt = this._seg.pointAlong(minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (pt.distance(this._seg.p1) < this._minimumLen) {\n\t\t\t\tthis._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._splitPt = pt;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar length = arguments[0],\n\t\t\t    endPt = arguments[1];\n\t\t\tvar actualLen = this.getConstrainedLength(length);\n\t\t\tvar frac = actualLen / this._segLen;\n\t\t\tif (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac);else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac);\n\t\t}\n\t},\n\tsetMinimumLength: function setMinimumLength(minLen) {\n\t\tthis._minimumLen = minLen;\n\t},\n\tgetConstrainedLength: function getConstrainedLength(len) {\n\t\tif (len < this._minimumLen) return this._minimumLen;\n\t\treturn len;\n\t},\n\tgetSplitPoint: function getSplitPoint() {\n\t\treturn this._splitPt;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn SplitSegment;\n\t}\n});\nSplitSegment.pointAlongReverse = function (seg, segmentLengthFraction) {\n\tvar coord = new Coordinate();\n\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n\treturn coord;\n};\n\nfunction ConstraintSplitPointFinder() {}\nextend(ConstraintSplitPointFinder.prototype, {\n\tfindSplitPoint: function findSplitPoint(seg, encroachPt) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConstraintSplitPointFinder;\n\t}\n});\n\nfunction NonEncroachingSplitPointFinder() {}\nextend(NonEncroachingSplitPointFinder.prototype, {\n\tfindSplitPoint: function findSplitPoint(seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar segLen = lineSeg.getLength();\n\t\tvar midPtLen = segLen / 2;\n\t\tvar splitSeg = new SplitSegment(lineSeg);\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n\t\tvar maxSplitLen = nonEncroachDiam;\n\t\tif (maxSplitLen > midPtLen) {\n\t\t\tmaxSplitLen = midPtLen;\n\t\t}\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\n\t\tsplitSeg.splitAt(projPt);\n\t\treturn splitSeg.getSplitPoint();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [ConstraintSplitPointFinder];\n\t},\n\tgetClass: function getClass() {\n\t\treturn NonEncroachingSplitPointFinder;\n\t}\n});\nNonEncroachingSplitPointFinder.projectedSplitPoint = function (seg, encroachPt) {\n\tvar lineSeg = seg.getLineSegment();\n\tvar projPt = lineSeg.project(encroachPt);\n\treturn projPt;\n};\n\nfunction TrianglePredicate() {}\nextend(TrianglePredicate.prototype, {\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TrianglePredicate;\n\t}\n});\nTrianglePredicate.triArea = function (a, b, c) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n};\nTrianglePredicate.isInCircleDDNormalized = function (a, b, c, p) {\n\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\n\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\n\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\n\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\n\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\n\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\n\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.checkRobustInCircle = function (a, b, c, p) {\n\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n\tvar circumCentre = Triangle$1.circumcentre(a, b, c);\n\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n\t\tSystem.out.println();\n\t}\n};\nTrianglePredicate.isInCircleDDFast = function (a, b, c, p) {\n\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleCC = function (a, b, c, p) {\n\tvar cc = Triangle$1.circumcentre(a, b, c);\n\tvar ccRadius = a.distance(cc);\n\tvar pRadiusDiff = p.distance(cc) - ccRadius;\n\treturn pRadiusDiff <= 0;\n};\nTrianglePredicate.isInCircleNormalized = function (a, b, c, p) {\n\tvar adx = a.x - p.x;\n\tvar ady = a.y - p.y;\n\tvar bdx = b.x - p.x;\n\tvar bdy = b.y - p.y;\n\tvar cdx = c.x - p.x;\n\tvar cdy = c.y - p.y;\n\tvar abdet = adx * bdy - bdx * ady;\n\tvar bcdet = bdx * cdy - cdx * bdy;\n\tvar cadet = cdx * ady - adx * cdy;\n\tvar alift = adx * adx + ady * ady;\n\tvar blift = bdx * bdx + bdy * bdy;\n\tvar clift = cdx * cdx + cdy * cdy;\n\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\n\treturn disc > 0;\n};\nTrianglePredicate.isInCircleDDSlow = function (a, b, c, p) {\n\tvar px = DD.valueOf(p.x);\n\tvar py = DD.valueOf(p.y);\n\tvar ax = DD.valueOf(a.x);\n\tvar ay = DD.valueOf(a.y);\n\tvar bx = DD.valueOf(b.x);\n\tvar by = DD.valueOf(b.y);\n\tvar cx = DD.valueOf(c.x);\n\tvar cy = DD.valueOf(c.y);\n\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleNonRobust = function (a, b, c, p) {\n\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleRobust = function (a, b, c, p) {\n\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\n};\nTrianglePredicate.triAreaDDSlow = function (ax, ay, bx, by, cx, cy) {\n\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n};\nTrianglePredicate.triAreaDDFast = function (a, b, c) {\n\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n\treturn t1.selfSubtract(t2);\n};\n\nfunction Vertex() {\n\tthis._p = null;\n\tif (arguments.length === 1) {\n\t\tvar _p = arguments[0];\n\t\tthis._p = new Coordinate(_p);\n\t} else if (arguments.length === 2) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1];\n\t\tthis._p = new Coordinate(_x, _y);\n\t} else if (arguments.length === 3) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1],\n\t\t    _z = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y, _z);\n\t}\n}\nextend(Vertex.prototype, {\n\tcircleCenter: function circleCenter(b, c) {\n\t\tvar a = new Vertex(this.getX(), this.getY());\n\t\tvar cab = this.bisector(a, b);\n\t\tvar cbc = this.bisector(b, c);\n\t\tvar hcc = new HCoordinate(cab, cbc);\n\t\tvar cc = null;\n\t\ttry {\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\n\t\t} catch (nre) {\n\t\t\tif (nre instanceof NotRepresentableException) {\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n\t\t\t\tSystem.err.println(nre);\n\t\t\t} else throw nre;\n\t\t} finally {}\n\t\treturn cc;\n\t},\n\tdot: function dot(v) {\n\t\treturn this._p.x * v.getX() + this._p.y * v.getY();\n\t},\n\tmagn: function magn() {\n\t\treturn Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y);\n\t},\n\tgetZ: function getZ() {\n\t\treturn this._p.z;\n\t},\n\tbisector: function bisector(a, b) {\n\t\tvar dx = b.getX() - a.getX();\n\t\tvar dy = b.getY() - a.getY();\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t},\n\tequals: function equals() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar _x = arguments[0];\n\t\t\tif (this._p.x === _x.getX() && this._p.y === _x.getY()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar _x = arguments[0],\n\t\t\t    tolerance = arguments[1];\n\t\t\tif (this._p.distance(_x.getCoordinate()) < tolerance) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._p;\n\t},\n\tisInCircle: function isInCircle(a, b, c) {\n\t\treturn TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p);\n\t},\n\tinterpolateZValue: function interpolateZValue(v0, v1, v2) {\n\t\tvar x0 = v0.getX();\n\t\tvar y0 = v0.getY();\n\t\tvar a = v1.getX() - x0;\n\t\tvar b = v2.getX() - x0;\n\t\tvar c = v1.getY() - y0;\n\t\tvar d = v2.getY() - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = this.getX() - x0;\n\t\tvar dy = this.getY() - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n\t\treturn z;\n\t},\n\tmidPoint: function midPoint(a) {\n\t\tvar xm = (this._p.x + a.getX()) / 2.0;\n\t\tvar ym = (this._p.y + a.getY()) / 2.0;\n\t\tvar zm = (this._p.z + a.getZ()) / 2.0;\n\t\treturn new Vertex(xm, ym, zm);\n\t},\n\trightOf: function rightOf(e) {\n\t\treturn this.isCCW(e.dest(), e.orig());\n\t},\n\tisCCW: function isCCW(b, c) {\n\t\treturn (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0;\n\t},\n\tgetX: function getX() {\n\t\treturn this._p.x;\n\t},\n\tcrossProduct: function crossProduct(v) {\n\t\treturn this._p.x * v.getY() - this._p.y * v.getX();\n\t},\n\tsetZ: function setZ(_z) {\n\t\tthis._p.z = _z;\n\t},\n\ttimes: function times(c) {\n\t\treturn new Vertex(c * this._p.x, c * this._p.y);\n\t},\n\tcross: function cross() {\n\t\treturn new Vertex(this._p.y, -this._p.x);\n\t},\n\tleftOf: function leftOf(e) {\n\t\treturn this.isCCW(e.orig(), e.dest());\n\t},\n\ttoString: function toString() {\n\t\treturn \"POINT (\" + this._p.x + \" \" + this._p.y + \")\";\n\t},\n\tsub: function sub(v) {\n\t\treturn new Vertex(this._p.x - v.getX(), this._p.y - v.getY());\n\t},\n\tgetY: function getY() {\n\t\treturn this._p.y;\n\t},\n\tclassify: function classify(p0, p1) {\n\t\tvar p2 = this;\n\t\tvar a = p1.sub(p0);\n\t\tvar b = p2.sub(p0);\n\t\tvar sa = a.crossProduct(b);\n\t\tif (sa > 0.0) return Vertex.LEFT;\n\t\tif (sa < 0.0) return Vertex.RIGHT;\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\n\t\treturn Vertex.BETWEEN;\n\t},\n\tsum: function sum(v) {\n\t\treturn new Vertex(this._p.x + v.getX(), this._p.y + v.getY());\n\t},\n\tdistance: function distance(v1, v2) {\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n\t},\n\tcircumRadiusRatio: function circumRadiusRatio(b, c) {\n\t\tvar x = this.circleCenter(b, c);\n\t\tvar radius = this.distance(x, b);\n\t\tvar edgeLength = this.distance(this, b);\n\t\tvar el = this.distance(b, c);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\tel = this.distance(c, this);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\treturn radius / edgeLength;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Vertex;\n\t}\n});\nVertex.interpolateZ = function () {\n\tif (arguments.length === 3) {\n\t\tvar p = arguments[0],\n\t\t    p0 = arguments[1],\n\t\t    p1 = arguments[2];\n\t\tvar segLen = p0.distance(p1);\n\t\tvar ptLen = p.distance(p0);\n\t\tvar dz = p1.z - p0.z;\n\t\tvar pz = p0.z + dz * (ptLen / segLen);\n\t\treturn pz;\n\t} else if (arguments.length === 4) {\n\t\tvar p = arguments[0],\n\t\t    v0 = arguments[1],\n\t\t    v1 = arguments[2],\n\t\t    v2 = arguments[3];\n\t\tvar x0 = v0.x;\n\t\tvar y0 = v0.y;\n\t\tvar a = v1.x - x0;\n\t\tvar b = v2.x - x0;\n\t\tvar c = v1.y - y0;\n\t\tvar d = v2.y - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = p.x - x0;\n\t\tvar dy = p.y - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\treturn z;\n\t}\n};\nVertex.LEFT = 0;\nVertex.RIGHT = 1;\nVertex.BEYOND = 2;\nVertex.BEHIND = 3;\nVertex.BETWEEN = 4;\nVertex.ORIGIN = 5;\nVertex.DESTINATION = 6;\n\nfunction ConstraintVertex() {\n\tthis._isOnConstraint = null;\n\tthis._constraint = null;\n\tvar p = arguments[0];\n\tVertex.call(this, p);\n}\ninherits$1(ConstraintVertex, Vertex);\nextend(ConstraintVertex.prototype, {\n\tgetConstraint: function getConstraint() {\n\t\treturn this._constraint;\n\t},\n\tsetOnConstraint: function setOnConstraint(isOnConstraint) {\n\t\tthis._isOnConstraint = isOnConstraint;\n\t},\n\tmerge: function merge(other) {\n\t\tif (other._isOnConstraint) {\n\t\t\tthis._isOnConstraint = true;\n\t\t\tthis._constraint = other._constraint;\n\t\t}\n\t},\n\tisOnConstraint: function isOnConstraint() {\n\t\treturn this._isOnConstraint;\n\t},\n\tsetConstraint: function setConstraint(constraint) {\n\t\tthis._isOnConstraint = true;\n\t\tthis._constraint = constraint;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConstraintVertex;\n\t}\n});\n\nfunction QuadEdge() {\n\tthis._rot = null;\n\tthis._vertex = null;\n\tthis._next = null;\n\tthis._data = null;\n}\nextend(QuadEdge.prototype, {\n\tequalsNonOriented: function equalsNonOriented(qe) {\n\t\tif (this.equalsOriented(qe)) return true;\n\t\tif (this.equalsOriented(qe.sym())) return true;\n\t\treturn false;\n\t},\n\ttoLineSegment: function toLineSegment() {\n\t\treturn new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate());\n\t},\n\tdest: function dest() {\n\t\treturn this.sym().orig();\n\t},\n\toNext: function oNext() {\n\t\treturn this._next;\n\t},\n\tequalsOriented: function equalsOriented(qe) {\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n\t\treturn false;\n\t},\n\tdNext: function dNext() {\n\t\treturn this.sym().oNext().sym();\n\t},\n\tlPrev: function lPrev() {\n\t\treturn this._next.sym();\n\t},\n\trPrev: function rPrev() {\n\t\treturn this.sym().oNext();\n\t},\n\trot: function rot() {\n\t\treturn this._rot;\n\t},\n\toPrev: function oPrev() {\n\t\treturn this._rot._next._rot;\n\t},\n\tsym: function sym() {\n\t\treturn this._rot._rot;\n\t},\n\tsetOrig: function setOrig(o) {\n\t\tthis._vertex = o;\n\t},\n\tlNext: function lNext() {\n\t\treturn this.invRot().oNext().rot();\n\t},\n\tgetLength: function getLength() {\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\n\t},\n\tinvRot: function invRot() {\n\t\treturn this._rot.sym();\n\t},\n\tsetDest: function setDest(d) {\n\t\tthis.sym().setOrig(d);\n\t},\n\tsetData: function setData(data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this._data;\n\t},\n\tdelete: function _delete() {\n\t\tthis._rot = null;\n\t},\n\torig: function orig() {\n\t\treturn this._vertex;\n\t},\n\trNext: function rNext() {\n\t\treturn this._rot._next.invRot();\n\t},\n\ttoString: function toString() {\n\t\tvar p0 = this._vertex.getCoordinate();\n\t\tvar p1 = this.dest().getCoordinate();\n\t\treturn WKTWriter.toLineString(p0, p1);\n\t},\n\tisLive: function isLive() {\n\t\treturn this._rot !== null;\n\t},\n\tgetPrimary: function getPrimary() {\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this;else return this.sym();\n\t},\n\tdPrev: function dPrev() {\n\t\treturn this.invRot().oNext().invRot();\n\t},\n\tsetNext: function setNext(next) {\n\t\tthis._next = next;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn QuadEdge;\n\t}\n});\nQuadEdge.makeEdge = function (o, d) {\n\tvar q0 = new QuadEdge();\n\tvar q1 = new QuadEdge();\n\tvar q2 = new QuadEdge();\n\tvar q3 = new QuadEdge();\n\tq0._rot = q1;\n\tq1._rot = q2;\n\tq2._rot = q3;\n\tq3._rot = q0;\n\tq0.setNext(q0);\n\tq1.setNext(q3);\n\tq2.setNext(q2);\n\tq3.setNext(q1);\n\tvar base = q0;\n\tbase.setOrig(o);\n\tbase.setDest(d);\n\treturn base;\n};\nQuadEdge.swap = function (e) {\n\tvar a = e.oPrev();\n\tvar b = e.sym().oPrev();\n\tQuadEdge.splice(e, a);\n\tQuadEdge.splice(e.sym(), b);\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b.lNext());\n\te.setOrig(a.dest());\n\te.setDest(b.dest());\n};\nQuadEdge.splice = function (a, b) {\n\tvar alpha = a.oNext().rot();\n\tvar beta = b.oNext().rot();\n\tvar t1 = b.oNext();\n\tvar t2 = a.oNext();\n\tvar t3 = beta.oNext();\n\tvar t4 = alpha.oNext();\n\ta.setNext(t1);\n\tb.setNext(t2);\n\talpha.setNext(t3);\n\tbeta.setNext(t4);\n};\nQuadEdge.connect = function (a, b) {\n\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b);\n\treturn e;\n};\n\nfunction IncrementalDelaunayTriangulator() {\n\tthis._subdiv = null;\n\tthis._isUsingTolerance = false;\n\tvar subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis._isUsingTolerance = subdiv.getTolerance() > 0.0;\n}\nextend(IncrementalDelaunayTriangulator.prototype, {\n\tinsertSite: function insertSite(v) {\n\t\tvar e = this._subdiv.locate(v);\n\t\tif (this._subdiv.isVertexOfEdge(e, v)) {\n\t\t\treturn e;\n\t\t} else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n\t\t\te = e.oPrev();\n\t\t\tthis._subdiv.delete(e.oNext());\n\t\t}\n\t\tvar base = this._subdiv.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this._subdiv.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\tdo {\n\t\t\tvar t = e.oPrev();\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n\t\t\t\tQuadEdge.swap(e);\n\t\t\t\te = e.oPrev();\n\t\t\t} else if (e.oNext() === startEdge) {\n\t\t\t\treturn base;\n\t\t\t} else {\n\t\t\t\te = e.oNext().lPrev();\n\t\t\t}\n\t\t} while (true);\n\t},\n\tinsertSites: function insertSites(vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext();) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn IncrementalDelaunayTriangulator;\n\t}\n});\n\nfunction QuadEdgeLocator() {}\nextend(QuadEdgeLocator.prototype, {\n\tlocate: function locate(v) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn QuadEdgeLocator;\n\t}\n});\n\nfunction LastFoundQuadEdgeLocator() {\n\tthis._subdiv = null;\n\tthis._lastEdge = null;\n\tvar subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis.init();\n}\nextend(LastFoundQuadEdgeLocator.prototype, {\n\tinit: function init() {\n\t\tthis._lastEdge = this.findEdge();\n\t},\n\tlocate: function locate(v) {\n\t\tif (!this._lastEdge.isLive()) {\n\t\t\tthis.init();\n\t\t}\n\t\tvar e = this._subdiv.locateFromEdge(v, this._lastEdge);\n\t\tthis._lastEdge = e;\n\t\treturn e;\n\t},\n\tfindEdge: function findEdge() {\n\t\tvar edges = this._subdiv.getEdges();\n\t\treturn edges.iterator().next();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [QuadEdgeLocator];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LastFoundQuadEdgeLocator;\n\t}\n});\n\nfunction LocateFailureException() {\n\tthis._seg = null;\n\tif (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tvar msg = arguments[0];\n\t\t\tRuntimeException.call(this, msg);\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tvar seg = arguments[0];\n\t\t\tRuntimeException.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n\t\t\tthis._seg = new LineSegment(seg);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tvar msg = arguments[0],\n\t\t    seg = arguments[1];\n\t\tRuntimeException.call(this, LocateFailureException.msgWithSpatial(msg, seg));\n\t\tthis._seg = new LineSegment(seg);\n\t}\n}\ninherits$1(LocateFailureException, RuntimeException);\nextend(LocateFailureException.prototype, {\n\tgetSegment: function getSegment() {\n\t\treturn this._seg;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocateFailureException;\n\t}\n});\nLocateFailureException.msgWithSpatial = function (msg, seg) {\n\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\n\treturn msg;\n};\n\nfunction TriangleVisitor() {}\nextend(TriangleVisitor.prototype, {\n\tvisit: function visit(triEdges) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleVisitor;\n\t}\n});\n\nfunction QuadEdgeSubdivision() {\n\tthis._visitedKey = 0;\n\tthis._quadEdges = new ArrayList();\n\tthis._startingEdge = null;\n\tthis._tolerance = null;\n\tthis._edgeCoincidenceTolerance = null;\n\tthis._frameVertex = new Array(3).fill(null);\n\tthis._frameEnv = null;\n\tthis._locator = null;\n\tthis._seg = new LineSegment();\n\tthis._triEdges = new Array(3).fill(null);\n\tvar env = arguments[0],\n\t    tolerance = arguments[1];\n\tthis._tolerance = tolerance;\n\tthis._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n\tthis.createFrame(env);\n\tthis._startingEdge = this.initSubdiv();\n\tthis._locator = new LastFoundQuadEdgeLocator(this);\n}\nextend(QuadEdgeSubdivision.prototype, {\n\tgetTriangleVertices: function getTriangleVertices(includeFrame) {\n\t\tvar visitor = new TriangleVertexListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleVertices();\n\t},\n\tisFrameVertex: function isFrameVertex(v) {\n\t\tif (v.equals(this._frameVertex[0])) return true;\n\t\tif (v.equals(this._frameVertex[1])) return true;\n\t\tif (v.equals(this._frameVertex[2])) return true;\n\t\treturn false;\n\t},\n\tisVertexOfEdge: function isVertexOfEdge(e, v) {\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tconnect: function connect(a, b) {\n\t\tvar q = QuadEdge.connect(a, b);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t},\n\tgetVoronoiCellPolygon: function getVoronoiCellPolygon(qe, geomFact) {\n\t\tvar cellPts = new ArrayList();\n\t\tvar startQE = qe;\n\t\tdo {\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\n\t\t\tcellPts.add(cc);\n\t\t\tqe = qe.oPrev();\n\t\t} while (qe !== startQE);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.addAll(cellPts, false);\n\t\tcoordList.closeRing();\n\t\tif (coordList.size() < 4) {\n\t\t\tSystem.out.println(coordList);\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\n\t\t}\n\t\tvar pts = coordList.toCoordinateArray();\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts), null);\n\t\tvar v = startQE.orig();\n\t\tcellPoly.setUserData(v.getCoordinate());\n\t\treturn cellPoly;\n\t},\n\tsetLocator: function setLocator(locator) {\n\t\tthis._locator = locator;\n\t},\n\tinitSubdiv: function initSubdiv() {\n\t\tvar ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1]);\n\t\tvar eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2]);\n\t\tQuadEdge.splice(ea.sym(), eb);\n\t\tvar ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0]);\n\t\tQuadEdge.splice(eb.sym(), ec);\n\t\tQuadEdge.splice(ec.sym(), ea);\n\t\treturn ea;\n\t},\n\tisFrameBorderEdge: function isFrameBorderEdge(e) {\n\t\tvar leftTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n\t\tvar rightTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n\t\tvar vLeftTriOther = e.lNext().dest();\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\n\t\tvar vRightTriOther = e.sym().lNext().dest();\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\n\t\treturn false;\n\t},\n\tmakeEdge: function makeEdge(o, d) {\n\t\tvar q = QuadEdge.makeEdge(o, d);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t},\n\tvisitTriangles: function visitTriangles(triVisitor, includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edgeStack = new Stack$2();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\n\t\t\t}\n\t\t}\n\t},\n\tisFrameEdge: function isFrameEdge(e) {\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n\t\treturn false;\n\t},\n\tisOnEdge: function isOnEdge(e, p) {\n\t\tthis._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\t\tvar dist = this._seg.distance(p);\n\t\treturn dist < this._edgeCoincidenceTolerance;\n\t},\n\tgetEnvelope: function getEnvelope() {\n\t\treturn new Envelope(this._frameEnv);\n\t},\n\tcreateFrame: function createFrame(env) {\n\t\tvar deltaX = env.getWidth();\n\t\tvar deltaY = env.getHeight();\n\t\tvar offset = 0.0;\n\t\tif (deltaX > deltaY) {\n\t\t\toffset = deltaX * 10.0;\n\t\t} else {\n\t\t\toffset = deltaY * 10.0;\n\t\t}\n\t\tthis._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n\t\tthis._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n\t\tthis._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n\t\tthis._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate());\n\t\tthis._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate());\n\t},\n\tgetTriangleCoordinates: function getTriangleCoordinates(includeFrame) {\n\t\tvar visitor = new TriangleCoordinatesVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangles();\n\t},\n\tgetVertices: function getVertices(includeFrame) {\n\t\tvar vertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext();) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n\t\t\tvar vd = qe.dest();\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n\t\t}\n\t\treturn vertices;\n\t},\n\tfetchTriangleToVisit: function fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges) {\n\t\tvar curr = edge;\n\t\tvar edgeCount = 0;\n\t\tvar isFrame = false;\n\t\tdo {\n\t\t\tthis._triEdges[edgeCount] = curr;\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\n\t\t\tvar sym = curr.sym();\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\n\t\t\tvisitedEdges.add(curr);\n\t\t\tedgeCount++;\n\t\t\tcurr = curr.lNext();\n\t\t} while (curr !== edge);\n\t\tif (isFrame && !includeFrame) return null;\n\t\treturn this._triEdges;\n\t},\n\tgetEdges: function getEdges() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this._quadEdges;\n\t\t} else if (arguments.length === 1) {\n\t\t\tvar geomFact = arguments[0];\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\n\t\t\tvar i = 0;\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext();) {\n\t\t\t\tvar qe = it.next();\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n\t\t\t}\n\t\t\treturn geomFact.createMultiLineString(edges);\n\t\t}\n\t},\n\tgetVertexUniqueEdges: function getVertexUniqueEdges(includeFrame) {\n\t\tvar edges = new ArrayList();\n\t\tvar visitedVertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext();) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (!visitedVertices.contains(v)) {\n\t\t\t\tvisitedVertices.add(v);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\n\t\t\t\t\tedges.add(qe);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar qd = qe.sym();\n\t\t\tvar vd = qd.orig();\n\t\t\tif (!visitedVertices.contains(vd)) {\n\t\t\t\tvisitedVertices.add(vd);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\n\t\t\t\t\tedges.add(qd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tgetTriangleEdges: function getTriangleEdges(includeFrame) {\n\t\tvar visitor = new TriangleEdgesListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleEdges();\n\t},\n\tgetPrimaryEdges: function getPrimaryEdges(includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edges = new ArrayList();\n\t\tvar edgeStack = new Stack$2();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar priQE = edge.getPrimary();\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n\t\t\t\tedgeStack.push(edge.oNext());\n\t\t\t\tedgeStack.push(edge.sym().oNext());\n\t\t\t\tvisitedEdges.add(edge);\n\t\t\t\tvisitedEdges.add(edge.sym());\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tdelete: function _delete(e) {\n\t\tQuadEdge.splice(e, e.oPrev());\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\n\t\tvar eSym = e.sym();\n\t\tvar eRot = e.rot();\n\t\tvar eRotSym = e.rot().sym();\n\t\tthis._quadEdges.remove(e);\n\t\tthis._quadEdges.remove(eSym);\n\t\tthis._quadEdges.remove(eRot);\n\t\tthis._quadEdges.remove(eRotSym);\n\t\te.delete();\n\t\teSym.delete();\n\t\teRot.delete();\n\t\teRotSym.delete();\n\t},\n\tlocateFromEdge: function locateFromEdge(v, startEdge) {\n\t\tvar iter = 0;\n\t\tvar maxIter = this._quadEdges.size();\n\t\tvar e = startEdge;\n\t\twhile (true) {\n\t\t\titer++;\n\t\t\tif (iter > maxIter) {\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\n\t\t\t}\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\n\t\t\t\tbreak;\n\t\t\t} else if (v.rightOf(e)) {\n\t\t\t\te = e.sym();\n\t\t\t} else if (!v.rightOf(e.oNext())) {\n\t\t\t\te = e.oNext();\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\n\t\t\t\te = e.dPrev();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t},\n\tgetTolerance: function getTolerance() {\n\t\treturn this._tolerance;\n\t},\n\tgetVoronoiCellPolygons: function getVoronoiCellPolygons(geomFact) {\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\n\t\tvar cells = new ArrayList();\n\t\tvar edges = this.getVertexUniqueEdges(false);\n\t\tfor (var i = edges.iterator(); i.hasNext();) {\n\t\t\tvar qe = i.next();\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\n\t\t}\n\t\treturn cells;\n\t},\n\tgetVoronoiDiagram: function getVoronoiDiagram(geomFact) {\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n\t},\n\tgetTriangles: function getTriangles(geomFact) {\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = triPtsList.iterator(); it.hasNext();) {\n\t\t\tvar triPt = it.next();\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt), null);\n\t\t}\n\t\treturn geomFact.createGeometryCollection(tris);\n\t},\n\tinsertSite: function insertSite(v) {\n\t\tvar e = this.locate(v);\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn e;\n\t\t}\n\t\tvar base = this.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\treturn startEdge;\n\t},\n\tlocate: function locate() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vertex) {\n\t\t\t\tvar v = arguments[0];\n\t\t\t\treturn this._locator.locate(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tvar p = arguments[0];\n\t\t\t\treturn this._locator.locate(new Vertex(p));\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p0 = arguments[0],\n\t\t\t    p1 = arguments[1];\n\t\t\tvar e = this._locator.locate(new Vertex(p0));\n\t\t\tif (e === null) return null;\n\t\t\tvar base = e;\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n\t\t\tvar locEdge = base;\n\t\t\tdo {\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n\t\t\t\tlocEdge = locEdge.oNext();\n\t\t\t} while (locEdge !== base);\n\t\t\treturn null;\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn QuadEdgeSubdivision;\n\t}\n});\nQuadEdgeSubdivision.getTriangleEdges = function (startQE, triEdge) {\n\ttriEdge[0] = startQE;\n\ttriEdge[1] = triEdge[0].lNext();\n\ttriEdge[2] = triEdge[1].lNext();\n\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n};\nfunction TriangleCircumcentreVisitor() {}\nextend(TriangleCircumcentreVisitor.prototype, {\n\tvisit: function visit(triEdges) {\n\t\tvar a = triEdges[0].orig().getCoordinate();\n\t\tvar b = triEdges[1].orig().getCoordinate();\n\t\tvar c = triEdges[2].orig().getCoordinate();\n\t\tvar cc = Triangle$1.circumcentre(a, b, c);\n\t\tvar ccVertex = new Vertex(cc);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleCircumcentreVisitor;\n\t}\n});\nfunction TriangleEdgesListVisitor() {\n\tthis._triList = new ArrayList();\n}\nextend(TriangleEdgesListVisitor.prototype, {\n\tgetTriangleEdges: function getTriangleEdges() {\n\t\treturn this._triList;\n\t},\n\tvisit: function visit(triEdges) {\n\t\tthis._triList.add(triEdges.clone());\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleEdgesListVisitor;\n\t}\n});\nfunction TriangleVertexListVisitor() {\n\tthis._triList = new ArrayList();\n}\nextend(TriangleVertexListVisitor.prototype, {\n\tvisit: function visit(triEdges) {\n\t\tthis._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n\t},\n\tgetTriangleVertices: function getTriangleVertices() {\n\t\treturn this._triList;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleVertexListVisitor;\n\t}\n});\nfunction TriangleCoordinatesVisitor() {\n\tthis._coordList = new CoordinateList();\n\tthis._triCoords = new ArrayList();\n}\nextend(TriangleCoordinatesVisitor.prototype, {\n\tcheckTriangleSize: function checkTriangleSize(pts) {\n\t\tvar loc = \"\";\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]);else {\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n\t\t}\n\t},\n\tvisit: function visit(triEdges) {\n\t\tthis._coordList.clear();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar v = triEdges[i].orig();\n\t\t\tthis._coordList.add(v.getCoordinate());\n\t\t}\n\t\tif (this._coordList.size() > 0) {\n\t\t\tthis._coordList.closeRing();\n\t\t\tvar pts = this._coordList.toCoordinateArray();\n\t\t\tif (pts.length !== 4) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._triCoords.add(pts);\n\t\t}\n\t},\n\tgetTriangles: function getTriangles() {\n\t\treturn this._triCoords;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn TriangleCoordinatesVisitor;\n\t}\n});\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n\nfunction Segment() {\n\tthis._ls = null;\n\tthis._data = null;\n\tif (arguments.length === 2) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t} else if (arguments.length === 3) {\n\t\tvar p0 = arguments[0],\n\t\t    p1 = arguments[1],\n\t\t    data = arguments[2];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t\tthis._data = data;\n\t} else if (arguments.length === 6) {\n\t\tvar x1 = arguments[0],\n\t\t    y1 = arguments[1],\n\t\t    z1 = arguments[2],\n\t\t    x2 = arguments[3],\n\t\t    y2 = arguments[4],\n\t\t    z2 = arguments[5];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n\t} else if (arguments.length === 7) {\n\t\tvar x1 = arguments[0],\n\t\t    y1 = arguments[1],\n\t\t    z1 = arguments[2],\n\t\t    x2 = arguments[3],\n\t\t    y2 = arguments[4],\n\t\t    z2 = arguments[5],\n\t\t    data = arguments[6];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\n\t}\n}\nextend(Segment.prototype, {\n\tgetLineSegment: function getLineSegment() {\n\t\treturn this._ls;\n\t},\n\tgetEndZ: function getEndZ() {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.z;\n\t},\n\tgetStartZ: function getStartZ() {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.z;\n\t},\n\tintersection: function intersection(s) {\n\t\treturn this._ls.intersection(s.getLineSegment());\n\t},\n\tgetStart: function getStart() {\n\t\treturn this._ls.getCoordinate(0);\n\t},\n\tgetEnd: function getEnd() {\n\t\treturn this._ls.getCoordinate(1);\n\t},\n\tgetEndY: function getEndY() {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.y;\n\t},\n\tgetStartX: function getStartX() {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.x;\n\t},\n\tequalsTopo: function equalsTopo(s) {\n\t\treturn this._ls.equalsTopo(s.getLineSegment());\n\t},\n\tgetStartY: function getStartY() {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.y;\n\t},\n\tsetData: function setData(data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function getData() {\n\t\treturn this._data;\n\t},\n\tgetEndX: function getEndX() {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.x;\n\t},\n\ttoString: function toString() {\n\t\treturn this._ls.toString();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn Segment;\n\t}\n});\n\nfunction KdNodeVisitor() {}\nextend(KdNodeVisitor.prototype, {\n\tvisit: function visit(node) {},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn KdNodeVisitor;\n\t}\n});\n\nfunction KdNode() {\n\tthis._p = null;\n\tthis._data = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis._count = null;\n\tif (arguments.length === 2) {\n\t\tvar p = arguments[0],\n\t\t    data = arguments[1];\n\t\tthis._p = new Coordinate(p);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t} else if (arguments.length === 3) {\n\t\tvar _x = arguments[0],\n\t\t    _y = arguments[1],\n\t\t    data = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t}\n}\nextend(KdNode.prototype, {\n\tisRepeated: function isRepeated() {\n\t\treturn this._count > 1;\n\t},\n\tgetRight: function getRight() {\n\t\treturn this._right;\n\t},\n\tgetCoordinate: function getCoordinate() {\n\t\treturn this._p;\n\t},\n\tsetLeft: function setLeft(_left) {\n\t\tthis._left = _left;\n\t},\n\tgetX: function getX() {\n\t\treturn this._p.x;\n\t},\n\tgetData: function getData() {\n\t\treturn this._data;\n\t},\n\tgetCount: function getCount() {\n\t\treturn this._count;\n\t},\n\tgetLeft: function getLeft() {\n\t\treturn this._left;\n\t},\n\tgetY: function getY() {\n\t\treturn this._p.y;\n\t},\n\tincrement: function increment() {\n\t\tthis._count = this._count + 1;\n\t},\n\tsetRight: function setRight(_right) {\n\t\tthis._right = _right;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn KdNode;\n\t}\n});\n\nfunction KdTree() {\n\tthis._root = null;\n\tthis._numberOfNodes = null;\n\tthis._tolerance = null;\n\tif (arguments.length === 0) {\n\t\tKdTree.call(this, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tvar tolerance = arguments[0];\n\t\tthis._tolerance = tolerance;\n\t}\n}\nextend(KdTree.prototype, {\n\tinsert: function insert() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar p = arguments[0];\n\t\t\treturn this.insert(p, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p = arguments[0],\n\t\t\t    data = arguments[1];\n\t\t\tif (this._root === null) {\n\t\t\t\tthis._root = new KdNode(p, data);\n\t\t\t\treturn this._root;\n\t\t\t}\n\t\t\tif (this._tolerance > 0) {\n\t\t\t\tvar matchNode = this.findBestMatchNode(p);\n\t\t\t\tif (matchNode !== null) {\n\t\t\t\t\tmatchNode.increment();\n\t\t\t\t\treturn matchNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.insertExact(p, data);\n\t\t}\n\t},\n\tquery: function query() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar queryEnv = arguments[0];\n\t\t\tvar result = new ArrayList();\n\t\t\tthis.query(queryEnv, result);\n\t\t\treturn result;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n\t\t\t\tvar queryEnv = arguments[0],\n\t\t\t\t    result = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, {\n\t\t\t\t\tinterfaces_: function interfaces_() {\n\t\t\t\t\t\treturn [KdNodeVisitor];\n\t\t\t\t\t},\n\t\t\t\t\tvisit: function visit(node) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n\t\t\t\tvar queryEnv = arguments[0],\n\t\t\t\t    visitor = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tqueryNode: function queryNode(currentNode, queryEnv, odd, visitor) {\n\t\tif (currentNode === null) return null;\n\t\tvar min = null;\n\t\tvar max = null;\n\t\tvar discriminant = null;\n\t\tif (odd) {\n\t\t\tmin = queryEnv.getMinX();\n\t\t\tmax = queryEnv.getMaxX();\n\t\t\tdiscriminant = currentNode.getX();\n\t\t} else {\n\t\t\tmin = queryEnv.getMinY();\n\t\t\tmax = queryEnv.getMaxY();\n\t\t\tdiscriminant = currentNode.getY();\n\t\t}\n\t\tvar searchLeft = min < discriminant;\n\t\tvar searchRight = discriminant <= max;\n\t\tif (searchLeft) {\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n\t\t}\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\n\t\t\tvisitor.visit(currentNode);\n\t\t}\n\t\tif (searchRight) {\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n\t\t}\n\t},\n\tfindBestMatchNode: function findBestMatchNode(p) {\n\t\tvar visitor = new BestMatchVisitor(p, this._tolerance);\n\t\tthis.query(visitor.queryEnvelope(), visitor);\n\t\treturn visitor.getNode();\n\t},\n\tisEmpty: function isEmpty() {\n\t\tif (this._root === null) return true;\n\t\treturn false;\n\t},\n\tinsertExact: function insertExact(p, data) {\n\t\tvar currentNode = this._root;\n\t\tvar leafNode = this._root;\n\t\tvar isOddLevel = true;\n\t\tvar isLessThan = true;\n\t\twhile (currentNode !== null) {\n\t\t\tif (currentNode !== null) {\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance;\n\t\t\t\tif (isInTolerance) {\n\t\t\t\t\tcurrentNode.increment();\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOddLevel) {\n\t\t\t\tisLessThan = p.x < currentNode.getX();\n\t\t\t} else {\n\t\t\t\tisLessThan = p.y < currentNode.getY();\n\t\t\t}\n\t\t\tleafNode = currentNode;\n\t\t\tif (isLessThan) {\n\t\t\t\tcurrentNode = currentNode.getLeft();\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.getRight();\n\t\t\t}\n\t\t\tisOddLevel = !isOddLevel;\n\t\t}\n\t\tthis._numberOfNodes = this._numberOfNodes + 1;\n\t\tvar node = new KdNode(p, data);\n\t\tif (isLessThan) {\n\t\t\tleafNode.setLeft(node);\n\t\t} else {\n\t\t\tleafNode.setRight(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn KdTree;\n\t}\n});\nKdTree.toCoordinates = function () {\n\tif (arguments.length === 1) {\n\t\tvar kdnodes = arguments[0];\n\t\treturn KdTree.toCoordinates(kdnodes, false);\n\t} else if (arguments.length === 2) {\n\t\tvar kdnodes = arguments[0],\n\t\t    includeRepeated = arguments[1];\n\t\tvar coord = new CoordinateList();\n\t\tfor (var it = kdnodes.iterator(); it.hasNext();) {\n\t\t\tvar node = it.next();\n\t\t\tvar count = includeRepeated ? node.getCount() : 1;\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcoord.add(node.getCoordinate(), true);\n\t\t\t}\n\t\t}\n\t\treturn coord.toCoordinateArray();\n\t}\n};\nfunction BestMatchVisitor() {\n\tthis._tolerance = null;\n\tthis._matchNode = null;\n\tthis._matchDist = 0.0;\n\tthis._p = null;\n\tvar p = arguments[0],\n\t    tolerance = arguments[1];\n\tthis._p = p;\n\tthis._tolerance = tolerance;\n}\nextend(BestMatchVisitor.prototype, {\n\tvisit: function visit(node) {\n\t\tvar dist = this._p.distance(node.getCoordinate());\n\t\tvar isInTolerance = dist <= this._tolerance;\n\t\tif (!isInTolerance) return null;\n\t\tvar update = false;\n\t\tif (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true;\n\t\tif (update) {\n\t\t\tthis._matchNode = node;\n\t\t\tthis._matchDist = dist;\n\t\t}\n\t},\n\tqueryEnvelope: function queryEnvelope() {\n\t\tvar queryEnv = new Envelope(this._p);\n\t\tqueryEnv.expandBy(this._tolerance);\n\t\treturn queryEnv;\n\t},\n\tgetNode: function getNode() {\n\t\treturn this._matchNode;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [KdNodeVisitor];\n\t},\n\tgetClass: function getClass() {\n\t\treturn BestMatchVisitor;\n\t}\n});\nKdTree.BestMatchVisitor = BestMatchVisitor;\n\nfunction ConformingDelaunayTriangulator() {\n\tthis._initialVertices = null;\n\tthis._segVertices = null;\n\tthis._segments = new ArrayList();\n\tthis._subdiv = null;\n\tthis._incDel = null;\n\tthis._convexHull = null;\n\tthis._splitFinder = new NonEncroachingSplitPointFinder();\n\tthis._kdt = null;\n\tthis._vertexFactory = null;\n\tthis._computeAreaEnv = null;\n\tthis._splitPt = null;\n\tthis._tolerance = null;\n\tvar initialVertices = arguments[0],\n\t    tolerance = arguments[1];\n\tthis._initialVertices = new ArrayList(initialVertices);\n\tthis._tolerance = tolerance;\n\tthis._kdt = new KdTree(tolerance);\n}\nextend(ConformingDelaunayTriangulator.prototype, {\n\tgetInitialVertices: function getInitialVertices() {\n\t\treturn this._initialVertices;\n\t},\n\tgetKDT: function getKDT() {\n\t\treturn this._kdt;\n\t},\n\tenforceConstraints: function enforceConstraints() {\n\t\tthis.addConstraintVertices();\n\t\tvar count = 0;\n\t\tvar splits = 0;\n\t\tdo {\n\t\t\tsplits = this.enforceGabriel(this._segments);\n\t\t\tcount++;\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n\t},\n\tinsertSites: function insertSites(vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext();) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tgetVertexFactory: function getVertexFactory() {\n\t\treturn this._vertexFactory;\n\t},\n\tgetPointArray: function getPointArray() {\n\t\tvar pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._initialVertices.iterator(); i.hasNext();) {\n\t\t\tvar v = i.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\tfor (var i2 = this._segVertices.iterator(); i2.hasNext();) {\n\t\t\tvar v = i2.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\treturn pts;\n\t},\n\tsetConstraints: function setConstraints(segments, segVertices) {\n\t\tthis._segments = segments;\n\t\tthis._segVertices = segVertices;\n\t},\n\tcomputeConvexHull: function computeConvexHull() {\n\t\tvar fact = new GeometryFactory();\n\t\tvar coords = this.getPointArray();\n\t\tvar hull = new ConvexHull(coords, fact);\n\t\tthis._convexHull = hull.getConvexHull();\n\t},\n\taddConstraintVertices: function addConstraintVertices() {\n\t\tthis.computeConvexHull();\n\t\tthis.insertSites(this._segVertices);\n\t},\n\tfindNonGabrielPoint: function findNonGabrielPoint(seg) {\n\t\tvar p = seg.getStart();\n\t\tvar q = seg.getEnd();\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n\t\tvar segRadius = p.distance(midPt);\n\t\tvar env = new Envelope(midPt);\n\t\tenv.expandBy(segRadius);\n\t\tvar result = this._kdt.query(env);\n\t\tvar closestNonGabriel = null;\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tfor (var i = result.iterator(); i.hasNext();) {\n\t\t\tvar nextNode = i.next();\n\t\t\tvar testPt = nextNode.getCoordinate();\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n\t\t\tvar testRadius = midPt.distance(testPt);\n\t\t\tif (testRadius < segRadius) {\n\t\t\t\tvar testDist = testRadius;\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\n\t\t\t\t\tclosestNonGabriel = testPt;\n\t\t\t\t\tminDist = testDist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestNonGabriel;\n\t},\n\tgetConstraintSegments: function getConstraintSegments() {\n\t\treturn this._segments;\n\t},\n\tsetSplitPointFinder: function setSplitPointFinder(splitFinder) {\n\t\tthis._splitFinder = splitFinder;\n\t},\n\tgetConvexHull: function getConvexHull() {\n\t\treturn this._convexHull;\n\t},\n\tgetTolerance: function getTolerance() {\n\t\treturn this._tolerance;\n\t},\n\tenforceGabriel: function enforceGabriel(segsToInsert) {\n\t\tvar newSegments = new ArrayList();\n\t\tvar splits = 0;\n\t\tvar segsToRemove = new ArrayList();\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext();) {\n\t\t\tvar seg = i.next();\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\n\t\t\tif (encroachPt === null) continue;\n\t\t\tthis._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt);\n\t\t\tvar splitVertex = this.createVertex(this._splitPt, seg);\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n\t\t\tnewSegments.add(s1);\n\t\t\tnewSegments.add(s2);\n\t\t\tsegsToRemove.add(seg);\n\t\t\tsplits = splits + 1;\n\t\t}\n\t\tsegsToInsert.removeAll(segsToRemove);\n\t\tsegsToInsert.addAll(newSegments);\n\t\treturn splits;\n\t},\n\tcreateVertex: function createVertex() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar p = arguments[0];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null);else v = new ConstraintVertex(p);\n\t\t\treturn v;\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar p = arguments[0],\n\t\t\t    seg = arguments[1];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg);else v = new ConstraintVertex(p);\n\t\t\tv.setOnConstraint(true);\n\t\t\treturn v;\n\t\t}\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\treturn this._subdiv;\n\t},\n\tcomputeBoundingBox: function computeBoundingBox() {\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices);\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices);\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\n\t\tallPointsEnv.expandToInclude(segEnv);\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\n\t\tvar delta = Math.max(deltaX, deltaY);\n\t\tthis._computeAreaEnv = new Envelope(allPointsEnv);\n\t\tthis._computeAreaEnv.expandBy(delta);\n\t},\n\tsetVertexFactory: function setVertexFactory(vertexFactory) {\n\t\tthis._vertexFactory = vertexFactory;\n\t},\n\tformInitialDelaunay: function formInitialDelaunay() {\n\t\tthis.computeBoundingBox();\n\t\tthis._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance);\n\t\tthis._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv));\n\t\tthis._incDel = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\tthis.insertSites(this._initialVertices);\n\t},\n\tinsertSite: function insertSite() {\n\t\tif (arguments[0] instanceof ConstraintVertex) {\n\t\t\tvar v = arguments[0];\n\t\t\tvar kdnode = this._kdt.insert(v.getCoordinate(), v);\n\t\t\tif (!kdnode.isRepeated()) {\n\t\t\t\tthis._incDel.insertSite(v);\n\t\t\t} else {\n\t\t\t\tvar snappedV = kdnode.getData();\n\t\t\t\tsnappedV.merge(v);\n\t\t\t\treturn snappedV;\n\t\t\t}\n\t\t\treturn v;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tvar p = arguments[0];\n\t\t\tthis.insertSite(this.createVertex(p));\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConformingDelaunayTriangulator;\n\t}\n});\nConformingDelaunayTriangulator.computeVertexEnvelope = function (vertices) {\n\tvar env = new Envelope();\n\tfor (var i = vertices.iterator(); i.hasNext();) {\n\t\tvar v = i.next();\n\t\tenv.expandToInclude(v.getCoordinate());\n\t}\n\treturn env;\n};\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n\nfunction DelaunayTriangulationBuilder() {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n}\nextend(DelaunayTriangulationBuilder.prototype, {\n\tcreate: function create() {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tsetTolerance: function setTolerance(tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetSites: function setSites() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tgetEdges: function getEdges(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tgetTriangles: function getTriangles(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn DelaunayTriangulationBuilder;\n\t}\n});\nDelaunayTriangulationBuilder.extractUniqueCoordinates = function (geom) {\n\tif (geom === null) return new CoordinateList();\n\tvar coords = geom.getCoordinates();\n\treturn DelaunayTriangulationBuilder.unique(coords);\n};\nDelaunayTriangulationBuilder.envelope = function (coords) {\n\tvar env = new Envelope();\n\tfor (var i = coords.iterator(); i.hasNext();) {\n\t\tvar coord = i.next();\n\t\tenv.expandToInclude(coord);\n\t}\n\treturn env;\n};\nDelaunayTriangulationBuilder.unique = function (coords) {\n\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\n\tArrays.sort(coordsCopy);\n\tvar coordList = new CoordinateList(coordsCopy, false);\n\treturn coordList;\n};\nDelaunayTriangulationBuilder.toVertices = function (coords) {\n\tvar verts = new ArrayList();\n\tfor (var i = coords.iterator(); i.hasNext();) {\n\t\tvar coord = i.next();\n\t\tverts.add(new Vertex(coord));\n\t}\n\treturn verts;\n};\n\nfunction ConformingDelaunayTriangulationBuilder() {\n\tthis._siteCoords = null;\n\tthis._constraintLines = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._constraintVertexMap = new TreeMap();\n}\nextend(ConformingDelaunayTriangulationBuilder.prototype, {\n\tcreateSiteVertices: function createSiteVertices(coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext();) {\n\t\t\tvar coord = i.next();\n\t\t\tif (this._constraintVertexMap.containsKey(coord)) continue;\n\t\t\tverts.add(new ConstraintVertex(coord));\n\t\t}\n\t\treturn verts;\n\t},\n\tcreate: function create() {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar segments = new ArrayList();\n\t\tif (this._constraintLines !== null) {\n\t\t\tsiteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal());\n\t\t\tthis.createVertices(this._constraintLines);\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines);\n\t\t}\n\t\tvar sites = this.createSiteVertices(this._siteCoords);\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this._tolerance);\n\t\tcdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()));\n\t\tcdt.formInitialDelaunay();\n\t\tcdt.enforceConstraints();\n\t\tthis._subdiv = cdt.getSubdivision();\n\t},\n\tsetTolerance: function setTolerance(tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetConstraints: function setConstraints(constraintLines) {\n\t\tthis._constraintLines = constraintLines;\n\t},\n\tsetSites: function setSites(geom) {\n\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t},\n\tgetEdges: function getEdges(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tgetTriangles: function getTriangles(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t},\n\tcreateVertices: function createVertices(geom) {\n\t\tvar coords = geom.getCoordinates();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tvar v = new ConstraintVertex(coords[i]);\n\t\t\tthis._constraintVertexMap.put(coords[i], v);\n\t\t}\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ConformingDelaunayTriangulationBuilder;\n\t}\n});\nConformingDelaunayTriangulationBuilder.createConstraintSegments = function () {\n\tif (arguments.length === 1) {\n\t\tvar geom = arguments[0];\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tvar constraintSegs = new ArrayList();\n\t\tfor (var i = lines.iterator(); i.hasNext();) {\n\t\t\tvar line = i.next();\n\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n\t\t}\n\t\treturn constraintSegs;\n\t} else if (arguments.length === 2) {\n\t\tvar line = arguments[0],\n\t\t    constraintSegs = arguments[1];\n\t\tvar coords = line.getCoordinates();\n\t\tfor (var i = 1; i < coords.length; i++) {\n\t\t\tconstraintSegs.add(new Segment(coords[i - 1], coords[i]));\n\t\t}\n\t}\n};\n\nfunction VoronoiDiagramBuilder() {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._clipEnv = null;\n\tthis._diagramEnv = null;\n}\nextend(VoronoiDiagramBuilder.prototype, {\n\tcreate: function create() {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tthis._diagramEnv = siteEnv;\n\t\tvar expandBy = Math.max(this._diagramEnv.getWidth(), this._diagramEnv.getHeight());\n\t\tthis._diagramEnv.expandBy(expandBy);\n\t\tif (this._clipEnv !== null) this._diagramEnv.expandToInclude(this._clipEnv);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tgetDiagram: function getDiagram(geomFact) {\n\t\tthis.create();\n\t\tvar polys = this._subdiv.getVoronoiDiagram(geomFact);\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv);\n\t},\n\tsetTolerance: function setTolerance(tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetSites: function setSites() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tvar geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tvar coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tsetClipEnvelope: function setClipEnvelope(clipEnv) {\n\t\tthis._clipEnv = clipEnv;\n\t},\n\tgetSubdivision: function getSubdivision() {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn VoronoiDiagramBuilder;\n\t}\n});\nVoronoiDiagramBuilder.clipGeometryCollection = function (geom, clipEnv) {\n\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\n\tvar clipped = new ArrayList();\n\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\tvar g = geom.getGeometryN(i);\n\t\tvar result = null;\n\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g;else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n\t\t\tresult = clipPoly.intersection(g);\n\t\t\tresult.setUserData(g.getUserData());\n\t\t}\n\t\tif (result !== null && !result.isEmpty()) {\n\t\t\tclipped.add(result);\n\t\t}\n\t}\n\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n};\n\nfunction LinearLocation() {\n\tthis._componentIndex = 0;\n\tthis._segmentIndex = 0;\n\tthis._segmentFraction = 0.0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tvar loc = arguments[0];\n\t\tthis._componentIndex = loc._componentIndex;\n\t\tthis._segmentIndex = loc._segmentIndex;\n\t\tthis._segmentFraction = loc._segmentFraction;\n\t} else if (arguments.length === 2) {\n\t\tvar segmentIndex = arguments[0],\n\t\t    segmentFraction = arguments[1];\n\t\tLinearLocation.call(this, 0, segmentIndex, segmentFraction);\n\t} else if (arguments.length === 3) {\n\t\tvar componentIndex = arguments[0],\n\t\t    segmentIndex = arguments[1],\n\t\t    segmentFraction = arguments[2];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tthis.normalize();\n\t} else if (arguments.length === 4) {\n\t\tvar componentIndex = arguments[0],\n\t\t    segmentIndex = arguments[1],\n\t\t    segmentFraction = arguments[2],\n\t\t    doNormalize = arguments[3];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tif (doNormalize) this.normalize();\n\t}\n}\nextend(LinearLocation.prototype, {\n\tgetSegmentIndex: function getSegmentIndex() {\n\t\treturn this._segmentIndex;\n\t},\n\tgetComponentIndex: function getComponentIndex() {\n\t\treturn this._componentIndex;\n\t},\n\tisEndpoint: function isEndpoint(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\treturn this._segmentIndex >= nseg || this._segmentIndex === nseg && this._segmentFraction >= 1.0;\n\t},\n\tisValid: function isValid(linearGeom) {\n\t\tif (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false;\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tif (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false;\n\t\tif (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false;\n\t\tif (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false;\n\t\treturn true;\n\t},\n\tnormalize: function normalize() {\n\t\tif (this._segmentFraction < 0.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction > 1.0) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t\tif (this._componentIndex < 0) {\n\t\t\tthis._componentIndex = 0;\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentIndex < 0) {\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction === 1.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t\tthis._segmentIndex += 1;\n\t\t}\n\t},\n\ttoLowest: function toLowest(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\tif (this._segmentIndex < nseg) return this;\n\t\treturn new LinearLocation(this._componentIndex, nseg, 1.0, false);\n\t},\n\tgetCoordinate: function getCoordinate(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) return p0;\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction);\n\t},\n\tgetSegmentFraction: function getSegmentFraction() {\n\t\treturn this._segmentFraction;\n\t},\n\tgetSegment: function getSegment(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) {\n\t\t\tvar prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2);\n\t\t\treturn new LineSegment(prev, p0);\n\t\t}\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn new LineSegment(p0, p1);\n\t},\n\tclamp: function clamp(linear) {\n\t\tif (this._componentIndex >= linear.getNumGeometries()) {\n\t\t\tthis.setToEnd(linear);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._segmentIndex >= linear.getNumPoints()) {\n\t\t\tvar line = linear.getGeometryN(this._componentIndex);\n\t\t\tthis._segmentIndex = line.getNumPoints() - 1;\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t},\n\tsetToEnd: function setToEnd(linear) {\n\t\tthis._componentIndex = linear.getNumGeometries() - 1;\n\t\tvar lastLine = linear.getGeometryN(this._componentIndex);\n\t\tthis._segmentIndex = lastLine.getNumPoints() - 1;\n\t\tthis._segmentFraction = 1.0;\n\t},\n\tcompareTo: function compareTo(o) {\n\t\tvar other = o;\n\t\tif (this._componentIndex < other._componentIndex) return -1;\n\t\tif (this._componentIndex > other._componentIndex) return 1;\n\t\tif (this._segmentIndex < other._segmentIndex) return -1;\n\t\tif (this._segmentIndex > other._segmentIndex) return 1;\n\t\tif (this._segmentFraction < other._segmentFraction) return -1;\n\t\tif (this._segmentFraction > other._segmentFraction) return 1;\n\t\treturn 0;\n\t},\n\tclone: function clone() {\n\t\treturn new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction);\n\t},\n\ttoString: function toString() {\n\t\treturn \"LinearLoc[\" + this._componentIndex + \", \" + this._segmentIndex + \", \" + this._segmentFraction + \"]\";\n\t},\n\tisOnSameSegment: function isOnSameSegment(loc) {\n\t\tif (this._componentIndex !== loc._componentIndex) return false;\n\t\tif (this._segmentIndex === loc._segmentIndex) return true;\n\t\tif (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true;\n\t\tif (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true;\n\t\treturn false;\n\t},\n\tsnapToVertex: function snapToVertex(linearGeom, minDistance) {\n\t\tif (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null;\n\t\tvar segLen = this.getSegmentLength(linearGeom);\n\t\tvar lenToStart = this._segmentFraction * segLen;\n\t\tvar lenToEnd = segLen - lenToStart;\n\t\tif (lenToStart <= lenToEnd && lenToStart < minDistance) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t} else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t},\n\tcompareLocationValues: function compareLocationValues(componentIndex1, segmentIndex1, segmentFraction1) {\n\t\tif (this._componentIndex < componentIndex1) return -1;\n\t\tif (this._componentIndex > componentIndex1) return 1;\n\t\tif (this._segmentIndex < segmentIndex1) return -1;\n\t\tif (this._segmentIndex > segmentIndex1) return 1;\n\t\tif (this._segmentFraction < segmentFraction1) return -1;\n\t\tif (this._segmentFraction > segmentFraction1) return 1;\n\t\treturn 0;\n\t},\n\tgetSegmentLength: function getSegmentLength(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar segIndex = this._segmentIndex;\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2;\n\t\tvar p0 = lineComp.getCoordinateN(segIndex);\n\t\tvar p1 = lineComp.getCoordinateN(segIndex + 1);\n\t\treturn p0.distance(p1);\n\t},\n\tisVertex: function isVertex() {\n\t\treturn this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearLocation;\n\t}\n});\nLinearLocation.getEndLocation = function (linear) {\n\tvar loc = new LinearLocation();\n\tloc.setToEnd(linear);\n\treturn loc;\n};\nLinearLocation.pointAlongSegmentByFraction = function (p0, p1, frac) {\n\tif (frac <= 0.0) return p0;\n\tif (frac >= 1.0) return p1;\n\tvar x = (p1.x - p0.x) * frac + p0.x;\n\tvar y = (p1.y - p0.y) * frac + p0.y;\n\tvar z = (p1.z - p0.z) * frac + p0.z;\n\treturn new Coordinate(x, y, z);\n};\nLinearLocation.compareLocationValues = function (componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n\tif (componentIndex0 < componentIndex1) return -1;\n\tif (componentIndex0 > componentIndex1) return 1;\n\tif (segmentIndex0 < segmentIndex1) return -1;\n\tif (segmentIndex0 > segmentIndex1) return 1;\n\tif (segmentFraction0 < segmentFraction1) return -1;\n\tif (segmentFraction0 > segmentFraction1) return 1;\n\treturn 0;\n};\n\nfunction LinearIterator() {\n\tthis._linearGeom = null;\n\tthis._numLines = null;\n\tthis._currentLine = null;\n\tthis._componentIndex = 0;\n\tthis._vertexIndex = 0;\n\tif (arguments.length === 1) {\n\t\tvar linear = arguments[0];\n\t\tLinearIterator.call(this, linear, 0, 0);\n\t} else if (arguments.length === 2) {\n\t\tvar linear = arguments[0],\n\t\t    start = arguments[1];\n\t\tLinearIterator.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start));\n\t} else if (arguments.length === 3) {\n\t\tvar linearGeom = arguments[0],\n\t\t    componentIndex = arguments[1],\n\t\t    vertexIndex = arguments[2];\n\t\tif (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException(\"Lineal geometry is required\");\n\t\tthis._linearGeom = linearGeom;\n\t\tthis._numLines = linearGeom.getNumGeometries();\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._vertexIndex = vertexIndex;\n\t\tthis.loadCurrentLine();\n\t}\n}\nextend(LinearIterator.prototype, {\n\tgetComponentIndex: function getComponentIndex() {\n\t\treturn this._componentIndex;\n\t},\n\tgetLine: function getLine() {\n\t\treturn this._currentLine;\n\t},\n\tgetVertexIndex: function getVertexIndex() {\n\t\treturn this._vertexIndex;\n\t},\n\tgetSegmentEnd: function getSegmentEnd() {\n\t\tif (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1);\n\t\treturn null;\n\t},\n\tnext: function next() {\n\t\tif (!this.hasNext()) return null;\n\t\tthis._vertexIndex++;\n\t\tif (this._vertexIndex >= this._currentLine.getNumPoints()) {\n\t\t\tthis._componentIndex++;\n\t\t\tthis.loadCurrentLine();\n\t\t\tthis._vertexIndex = 0;\n\t\t}\n\t},\n\tloadCurrentLine: function loadCurrentLine() {\n\t\tif (this._componentIndex >= this._numLines) {\n\t\t\tthis._currentLine = null;\n\t\t\treturn null;\n\t\t}\n\t\tthis._currentLine = this._linearGeom.getGeometryN(this._componentIndex);\n\t},\n\tgetSegmentStart: function getSegmentStart() {\n\t\treturn this._currentLine.getCoordinateN(this._vertexIndex);\n\t},\n\tisEndOfLine: function isEndOfLine() {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false;\n\t\treturn true;\n\t},\n\thasNext: function hasNext() {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearIterator;\n\t}\n});\nLinearIterator.segmentEndVertexIndex = function (loc) {\n\tif (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1;\n\treturn loc.getSegmentIndex();\n};\n\nfunction LocationIndexOfPoint() {\n\tthis._linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LocationIndexOfPoint.prototype, {\n\tindexOf: function indexOf(inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, null);\n\t},\n\tindexOfFromStart: function indexOfFromStart(inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar minComponentIndex = 0;\n\t\tvar minSegmentIndex = 0;\n\t\tvar minFrac = -1.0;\n\t\tvar seg = new LineSegment();\n\t\tfor (var it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segFrac = seg.segmentFraction(inputPt);\n\t\t\t\tvar candidateComponentIndex = it.getComponentIndex();\n\t\t\t\tvar candidateSegmentIndex = it.getVertexIndex();\n\t\t\t\tif (segDistance < minDistance) {\n\t\t\t\t\tif (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n\t\t\t\t\t\tminComponentIndex = candidateComponentIndex;\n\t\t\t\t\t\tminSegmentIndex = candidateSegmentIndex;\n\t\t\t\t\t\tminFrac = segFrac;\n\t\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (minDistance === Double.MAX_VALUE) {\n\t\t\treturn new LinearLocation(minIndex);\n\t\t}\n\t\tvar loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac);\n\t\treturn loc;\n\t},\n\tindexOfAfter: function indexOfAfter(inputPt, minIndex) {\n\t\tif (minIndex === null) return this.indexOf(inputPt);\n\t\tvar endLoc = LinearLocation.getEndLocation(this._linearGeom);\n\t\tif (endLoc.compareTo(minIndex) <= 0) return endLoc;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter.compareTo(minIndex) >= 0, \"computed location is before specified minimum location\");\n\t\treturn closestAfter;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocationIndexOfPoint;\n\t}\n});\nLocationIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLocationIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n\nfunction LocationIndexOfLine() {\n\tthis._linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LocationIndexOfLine.prototype, {\n\tindicesOf: function indicesOf(subLine) {\n\t\tvar startPt = subLine.getGeometryN(0).getCoordinateN(0);\n\t\tvar lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1);\n\t\tvar endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1);\n\t\tvar locPt = new LocationIndexOfPoint(this._linearGeom);\n\t\tvar subLineLoc = new Array(2).fill(null);\n\t\tsubLineLoc[0] = locPt.indexOf(startPt);\n\t\tif (subLine.getLength() === 0.0) {\n\t\t\tsubLineLoc[1] = subLineLoc[0].clone();\n\t\t} else {\n\t\t\tsubLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0]);\n\t\t}\n\t\treturn subLineLoc;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocationIndexOfLine;\n\t}\n});\nLocationIndexOfLine.indicesOf = function (linearGeom, subLine) {\n\tvar locater = new LocationIndexOfLine(linearGeom);\n\treturn locater.indicesOf(subLine);\n};\n\nfunction LinearGeometryBuilder() {\n\tthis._geomFact = null;\n\tthis._lines = new ArrayList();\n\tthis._coordList = null;\n\tthis._ignoreInvalidLines = false;\n\tthis._fixInvalidLines = false;\n\tthis._lastPt = null;\n\tvar geomFact = arguments[0];\n\tthis._geomFact = geomFact;\n}\nextend(LinearGeometryBuilder.prototype, {\n\tgetGeometry: function getGeometry() {\n\t\tthis.endLine();\n\t\treturn this._geomFact.buildGeometry(this._lines);\n\t},\n\tgetLastCoordinate: function getLastCoordinate() {\n\t\treturn this._lastPt;\n\t},\n\tendLine: function endLine() {\n\t\tif (this._coordList === null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._ignoreInvalidLines && this._coordList.size() < 2) {\n\t\t\tthis._coordList = null;\n\t\t\treturn null;\n\t\t}\n\t\tvar rawPts = this._coordList.toCoordinateArray();\n\t\tvar pts = rawPts;\n\t\tif (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts);\n\t\tthis._coordList = null;\n\t\tvar line = null;\n\t\ttry {\n\t\t\tline = this._geomFact.createLineString(pts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof IllegalArgumentException) {\n\t\t\t\tif (!this._ignoreInvalidLines) throw ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (line !== null) this._lines.add(line);\n\t},\n\tsetFixInvalidLines: function setFixInvalidLines(fixInvalidLines) {\n\t\tthis._fixInvalidLines = fixInvalidLines;\n\t},\n\tadd: function add() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar pt = arguments[0];\n\t\t\tthis.add(pt, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar pt = arguments[0],\n\t\t\t    allowRepeatedPoints = arguments[1];\n\t\t\tif (this._coordList === null) this._coordList = new CoordinateList();\n\t\t\tthis._coordList.add(pt, allowRepeatedPoints);\n\t\t\tthis._lastPt = pt;\n\t\t}\n\t},\n\tsetIgnoreInvalidLines: function setIgnoreInvalidLines(ignoreInvalidLines) {\n\t\tthis._ignoreInvalidLines = ignoreInvalidLines;\n\t},\n\tvalidCoordinateSequence: function validCoordinateSequence(pts) {\n\t\tif (pts.length >= 2) return pts;\n\t\tvar validPts = [pts[0], pts[0]];\n\t\treturn validPts;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LinearGeometryBuilder;\n\t}\n});\n\nfunction ExtractLineByLocation() {\n\tthis._line = null;\n\tvar line = arguments[0];\n\tthis._line = line;\n}\nextend(ExtractLineByLocation.prototype, {\n\tcomputeLinear: function computeLinear(start, end) {\n\t\tvar builder = new LinearGeometryBuilder(this._line.getFactory());\n\t\tbuilder.setFixInvalidLines(true);\n\t\tif (!start.isVertex()) builder.add(start.getCoordinate(this._line));\n\t\tfor (var it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n\t\t\tif (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break;\n\t\t\tvar pt = it.getSegmentStart();\n\t\t\tbuilder.add(pt);\n\t\t\tif (it.isEndOfLine()) builder.endLine();\n\t\t}\n\t\tif (!end.isVertex()) builder.add(end.getCoordinate(this._line));\n\t\treturn builder.getGeometry();\n\t},\n\tcomputeLine: function computeLine(start, end) {\n\t\tvar coordinates = this._line.getCoordinates();\n\t\tvar newCoordinates = new CoordinateList();\n\t\tvar startSegmentIndex = start.getSegmentIndex();\n\t\tif (start.getSegmentFraction() > 0.0) startSegmentIndex += 1;\n\t\tvar lastSegmentIndex = end.getSegmentIndex();\n\t\tif (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1;\n\t\tif (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1;\n\t\tif (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line));\n\t\tfor (var i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n\t\t\tnewCoordinates.add(coordinates[i]);\n\t\t}\n\t\tif (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line));\n\t\tif (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line));\n\t\tvar newCoordinateArray = newCoordinates.toCoordinateArray();\n\t\tif (newCoordinateArray.length <= 1) {\n\t\t\tnewCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]];\n\t\t}\n\t\treturn this._line.getFactory().createLineString(newCoordinateArray);\n\t},\n\textract: function extract(start, end) {\n\t\tif (end.compareTo(start) < 0) {\n\t\t\treturn this.reverse(this.computeLinear(end, start));\n\t\t}\n\t\treturn this.computeLinear(start, end);\n\t},\n\treverse: function reverse(linear) {\n\t\tif (linear instanceof LineString) return linear.reverse();\n\t\tif (linear instanceof MultiLineString) return linear.reverse();\n\t\tAssert.shouldNeverReachHere(\"non-linear geometry encountered\");\n\t\treturn null;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn ExtractLineByLocation;\n\t}\n});\nExtractLineByLocation.extract = function (line, start, end) {\n\tvar ls = new ExtractLineByLocation(line);\n\treturn ls.extract(start, end);\n};\n\nfunction LocationIndexedLine() {\n\tthis._linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n\tthis.checkGeometryType();\n}\nextend(LocationIndexedLine.prototype, {\n\tclampIndex: function clampIndex(index) {\n\t\tvar loc = index.clone();\n\t\tloc.clamp(this._linearGeom);\n\t\treturn loc;\n\t},\n\tproject: function project(pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tcheckGeometryType: function checkGeometryType() {\n\t\tif (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException(\"Input geometry must be linear\");\n\t},\n\textractPoint: function extractPoint() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar index = arguments[0];\n\t\t\treturn index.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar index = arguments[0],\n\t\t\t    offsetDistance = arguments[1];\n\t\t\tvar indexLow = index.toLowest(this._linearGeom);\n\t\t\treturn indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function isValidIndex(index) {\n\t\treturn index.isValid(this._linearGeom);\n\t},\n\tgetEndIndex: function getEndIndex() {\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t},\n\tgetStartIndex: function getStartIndex() {\n\t\treturn new LinearLocation();\n\t},\n\tindexOfAfter: function indexOfAfter(pt, minIndex) {\n\t\treturn LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t},\n\textractLine: function extractLine(startIndex, endIndex) {\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex);\n\t},\n\tindexOf: function indexOf(pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tindicesOf: function indicesOf(subLine) {\n\t\treturn LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LocationIndexedLine;\n\t}\n});\n\nfunction LengthIndexOfPoint() {\n\tthis._linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthIndexOfPoint.prototype, {\n\tindexOf: function indexOf(inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, -1.0);\n\t},\n\tindexOfFromStart: function indexOfFromStart(inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar ptMeasure = minIndex;\n\t\tvar segmentStartMeasure = 0.0;\n\t\tvar seg = new LineSegment();\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure);\n\t\t\t\tif (segDistance < minDistance && segMeasureToPt > minIndex) {\n\t\t\t\t\tptMeasure = segMeasureToPt;\n\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t}\n\t\t\t\tsegmentStartMeasure += seg.getLength();\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn ptMeasure;\n\t},\n\tindexOfAfter: function indexOfAfter(inputPt, minIndex) {\n\t\tif (minIndex < 0.0) return this.indexOf(inputPt);\n\t\tvar endIndex = this._linearGeom.getLength();\n\t\tif (endIndex < minIndex) return endIndex;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter >= minIndex, \"computed index is before specified minimum index\");\n\t\treturn closestAfter;\n\t},\n\tsegmentNearestMeasure: function segmentNearestMeasure(seg, inputPt, segmentStartMeasure) {\n\t\tvar projFactor = seg.projectionFactor(inputPt);\n\t\tif (projFactor <= 0.0) return segmentStartMeasure;\n\t\tif (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength();\n\t\treturn segmentStartMeasure + seg.getLength();\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LengthIndexOfPoint;\n\t}\n});\nLengthIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLengthIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n\nfunction LengthLocationMap() {\n\tthis._linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthLocationMap.prototype, {\n\tgetLength: function getLength(loc) {\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n\t\t\t\t\treturn totalLength + segLen * loc.getSegmentFraction();\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn totalLength;\n\t},\n\tresolveHigher: function resolveHigher(loc) {\n\t\tif (!loc.isEndpoint(this._linearGeom)) return loc;\n\t\tvar compIndex = loc.getComponentIndex();\n\t\tif (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc;\n\t\tdo {\n\t\t\tcompIndex++;\n\t\t} while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0);\n\t\treturn new LinearLocation(compIndex, 0, 0.0);\n\t},\n\tgetLocation: function getLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar length = arguments[0];\n\t\t\treturn this.getLocation(length, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar length = arguments[0],\n\t\t\t    resolveLower = arguments[1];\n\t\t\tvar forwardLength = length;\n\t\t\tif (length < 0.0) {\n\t\t\t\tvar lineLen = this._linearGeom.getLength();\n\t\t\t\tforwardLength = lineLen + length;\n\t\t\t}\n\t\t\tvar loc = this.getLocationForward(forwardLength);\n\t\t\tif (resolveLower) {\n\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn this.resolveHigher(loc);\n\t\t}\n\t},\n\tgetLocationForward: function getLocationForward(length) {\n\t\tif (length <= 0.0) return new LinearLocation();\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (it.isEndOfLine()) {\n\t\t\t\tif (totalLength === length) {\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, 0.0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (totalLength + segLen > length) {\n\t\t\t\t\tvar frac = (length - totalLength) / segLen;\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, frac);\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LengthLocationMap;\n\t}\n});\nLengthLocationMap.getLength = function (linearGeom, loc) {\n\tvar locater = new LengthLocationMap(linearGeom);\n\treturn locater.getLength(loc);\n};\nLengthLocationMap.getLocation = function () {\n\tif (arguments.length === 2) {\n\t\tvar linearGeom = arguments[0],\n\t\t    length = arguments[1];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length);\n\t} else if (arguments.length === 3) {\n\t\tvar linearGeom = arguments[0],\n\t\t    length = arguments[1],\n\t\t    resolveLower = arguments[2];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length, resolveLower);\n\t}\n};\n\nfunction LengthIndexedLine() {\n\tthis._linearGeom = null;\n\tvar linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthIndexedLine.prototype, {\n\tclampIndex: function clampIndex(index) {\n\t\tvar posIndex = this.positiveIndex(index);\n\t\tvar startIndex = this.getStartIndex();\n\t\tif (posIndex < startIndex) return startIndex;\n\t\tvar endIndex = this.getEndIndex();\n\t\tif (posIndex > endIndex) return endIndex;\n\t\treturn posIndex;\n\t},\n\tlocationOf: function locationOf() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar index = arguments[0];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar index = arguments[0],\n\t\t\t    resolveLower = arguments[1];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index, resolveLower);\n\t\t}\n\t},\n\tproject: function project(pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tpositiveIndex: function positiveIndex(index) {\n\t\tif (index >= 0.0) return index;\n\t\treturn this._linearGeom.getLength() + index;\n\t},\n\textractPoint: function extractPoint() {\n\t\tif (arguments.length === 1) {\n\t\t\tvar index = arguments[0];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\treturn loc.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tvar index = arguments[0],\n\t\t\t    offsetDistance = arguments[1];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\tvar locLow = loc.toLowest(this._linearGeom);\n\t\t\treturn locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function isValidIndex(index) {\n\t\treturn index >= this.getStartIndex() && index <= this.getEndIndex();\n\t},\n\tgetEndIndex: function getEndIndex() {\n\t\treturn this._linearGeom.getLength();\n\t},\n\tgetStartIndex: function getStartIndex() {\n\t\treturn 0.0;\n\t},\n\tindexOfAfter: function indexOfAfter(pt, minIndex) {\n\t\treturn LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t},\n\textractLine: function extractLine(startIndex, endIndex) {\n\t\tvar lil = new LocationIndexedLine(this._linearGeom);\n\t\tvar startIndex2 = this.clampIndex(startIndex);\n\t\tvar endIndex2 = this.clampIndex(endIndex);\n\t\tvar resolveStartLower = startIndex2 === endIndex2;\n\t\tvar startLoc = this.locationOf(startIndex2, resolveStartLower);\n\t\tvar endLoc = this.locationOf(endIndex2);\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc);\n\t},\n\tindexOf: function indexOf(pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tindicesOf: function indicesOf(subLine) {\n\t\tvar locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t\tvar index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])];\n\t\treturn index;\n\t},\n\tinterfaces_: function interfaces_() {\n\t\treturn [];\n\t},\n\tgetClass: function getClass() {\n\t\treturn LengthIndexedLine;\n\t}\n});\n\nfunction union$1() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nfunction union(poly1, poly2) {\n  var featurePolygon1 = polygonToFeaturePolygon(poly1),\n      featurePolygon2 = polygonToFeaturePolygon(poly2),\n      FeatureUnion = union$1(featurePolygon1, featurePolygon2);\n  return FeatureUnion;\n}\n\nfunction bbox$1(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\nfunction center(geojson, properties) {\n  var ext = bbox$1(geojson);\n  var x = (ext[0] + ext[2]) / 2;\n  var y = (ext[1] + ext[3]) / 2;\n  return point([x, y], properties);\n}\n\nfunction toMercator(geojson, options) {\n    return convert(geojson, 'mercator', options);\n}\nfunction toWgs84(geojson, options) {\n    return convert(geojson, 'wgs84', options);\n}\nfunction convert(geojson, projection, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n    if (!geojson) throw new Error('geojson is required');\n    if (Array.isArray(geojson) && isNumber(geojson[0])) geojson = projection === 'mercator' ? convertToMercator(geojson) : convertToWgs84(geojson);\n    else {\n            if (mutate !== true) geojson = clone(geojson);\n            coordEach(geojson, function (coord) {\n                var newCoord = projection === 'mercator' ? convertToMercator(coord) : convertToWgs84(coord);\n                coord[0] = newCoord[0];\n                coord[1] = newCoord[1];\n            });\n        }\n    return geojson;\n}\nfunction convertToMercator(lonLat) {\n    var D2R = Math.PI / 180,\n    A = 6378137.0,\n        MAXEXTENT = 20037508.342789244;\n    var adjusted = Math.abs(lonLat[0]) <= 180 ? lonLat[0] : lonLat[0] - sign(lonLat[0]) * 360;\n    var xy = [A * adjusted * D2R, A * Math.log(Math.tan(Math.PI * 0.25 + 0.5 * lonLat[1] * D2R))];\n    if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n    if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n    if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n    if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n    return xy;\n}\nfunction convertToWgs84(xy) {\n    var R2D = 180 / Math.PI;\n    var A = 6378137.0;\n    return [xy[0] * R2D / A, (Math.PI * 0.5 - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D];\n}\nfunction sign(x) {\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n}\n\nvar adder = function () {\n  return new Adder();\n};\nfunction Adder() {\n  this.reset();\n}\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s =\n    this.t = 0;\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n    _add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}\n\nvar epsilon = 1e-6;\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\nvar degrees = 180 / pi;\nvar radians = pi / 180;\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\n\nvar exp = Math.exp;\n\nvar log = Math.log;\n\nvar sin = Math.sin;\n\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }stream.lineEnd();\n}\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }stream.polygonEnd();\n}\nvar geoStream = function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\nvar areaSum = adder();\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nfunction cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar deltaSum = adder();\n\nvar compose = function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\nrotationIdentity.invert = rotationIdentity;\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n  return rotation;\n}\nvar rotation = function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n  return forward;\n};\n\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nvar clipBuffer = function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other;\n  this.e = entry;\n  this.v = false;\n  this.n = this.p = null;\n}\nvar clipPolygon = function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x;\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }stream.lineEnd();\n      return;\n    }\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n  var start = subject[0],\n      points,\n      point;\n  while (1) {\n    var current = start,\n        isSubject = true;\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar ascending = function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\n\nvar merge$1 = function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n  while (++i < n) {\n    j += arrays[i].length;\n  }merged = new Array(j);\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n  return merged;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\nfunction clipExtent(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n  }\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n    x_,\n        y_,\n        v_,\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n    function polygonInside() {\n      var winding = 0;\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n      return winding;\n    }\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge$1(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n    return clipStream;\n  };\n}\n\nvar sum$1 = adder();\nvar polygonContains = function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum$1.reset();\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum$1.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n  return (angle < -epsilon || angle < epsilon && sum$1 < -epsilon) ^ winding & 1;\n};\n\nvar lengthSum = adder();\n\nvar identity$4 = function (x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\nvar lengthSum$1 = adder();\n\nvar clip = function (pointVisible, clipLine, interpolate, start) {\n  return function (rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge$1(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return;\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }sink.lineEnd();\n        }\n        return;\n      }\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n    return clip;\n  };\n};\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]);\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean;\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) {\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon;\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean;\n    }\n  };\n}\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function (radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon;\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n  function clipLine(stream) {\n    var point0,\n    c0,\n    v0,\n    v00,\n    _clean;\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          _clean = 0;\n          if (v) {\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  }\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n    var n1 = [1, 0, 0],\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n    determinant = n2n2 - n1n2 * n1n2;\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q;\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1;\n    else if (lambda > r) code |= 2;\n    if (phi < -r) code |= 4;\n    else if (phi > r) code |= 8;\n    return code;\n  }\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n};\n\nfunction transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n    for (var key in methods) {\n      s[key] = methods[key];\n    }s.stream = stream;\n    return s;\n  };\n}\nfunction TransformStream() {}\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};\n\nfunction fitExtent(projection, extent, object) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        clip = projection.clipExtent && projection.clipExtent();\n    projection.scale(150).translate([0, 0]);\n    if (clip != null) projection.clipExtent(null);\n    geoStream(object, projection.stream(boundsStream$1));\n    var b = boundsStream$1.result(),\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    if (clip != null) projection.clipExtent(clip);\n    return projection.scale(k * 150).translate([x, y]);\n}\nfunction fitSize(projection, size, object) {\n    return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos(30 * radians);\nvar resample = function (project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\nfunction resample$1(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00,\n    lambda0, x0, y0, a0, b0, c0;\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();resampleStream.lineStart = lineStart;\n      }\n    };\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\nfunction projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150,\n  x = 480,\n      y = 250,\n  dx,\n      dy,\n      lambda = 0,\n      phi = 0,\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      projectRotate,\n  theta = null,\n      preclip = clipAntimeridian,\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity$4,\n  delta2 = 0.5,\n      projectResample = resample(projectTransform, delta2),\n  cache,\n      cacheStream;\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n  projection.fitExtent = function (extent$$1, object) {\n    return fitExtent(projection, extent$$1, object);\n  };\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1;\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n  return reclip();\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\nvar geoTransverseMercator = function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n  return rotate([0, 0, 90]).scale(159.155);\n};\n\nfunction buffer$1(geojson, radius, options) {\n    options = options || {};\n    var units = options.units;\n    var steps = options.steps || 64;\n    if (!geojson) throw new Error('geojson is required');\n    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') throw new Error('options must be an object');\n    if (typeof steps !== 'number') throw new Error('steps must be an number');\n    if (radius === undefined) throw new Error('radius is required');\n    if (steps <= 0) throw new Error('steps must be greater than 0');\n    steps = steps || 64;\n    units = units || 'kilometers';\n    var results = [];\n    switch (geojson.type) {\n        case 'GeometryCollection':\n            geomEach(geojson, function (geometry$$1) {\n                var buffered = bufferFeature(geometry$$1, radius, units, steps);\n                if (buffered) results.push(buffered);\n            });\n            return featureCollection(results);\n        case 'FeatureCollection':\n            featureEach(geojson, function (feature$$1) {\n                var multiBuffered = bufferFeature(feature$$1, radius, units, steps);\n                if (multiBuffered) {\n                    featureEach(multiBuffered, function (buffered) {\n                        if (buffered) results.push(buffered);\n                    });\n                }\n            });\n            return featureCollection(results);\n    }\n    return bufferFeature(geojson, radius, units, steps);\n}\nfunction bufferFeature(geojson, radius, units, steps) {\n    var properties = geojson.properties || {};\n    var geometry$$1 = geojson.type === 'Feature' ? geojson.geometry : geojson;\n    if (geometry$$1.type === 'GeometryCollection') {\n        var results = [];\n        geomEach(geojson, function (geometry$$1) {\n            var buffered = bufferFeature(geometry$$1, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    }\n    var projected;\n    var bbox = bbox$1(geojson);\n    var needsTransverseMercator = bbox[1] > 50 && bbox[3] > 50;\n    if (needsTransverseMercator) {\n        projected = {\n            type: geometry$$1.type,\n            coordinates: projectCoords(geometry$$1.coordinates, defineProjection(geometry$$1))\n        };\n    } else {\n        projected = toMercator(geometry$$1);\n    }\n    var reader = new GeoJSONReader();\n    var geom = reader.read(projected);\n    var distance = radiansToLength(lengthToRadians(radius, units), 'meters');\n    var buffered = BufferOp.bufferOp(geom, distance);\n    var writer = new GeoJSONWriter();\n    buffered = writer.write(buffered);\n    if (coordsIsNaN(buffered.coordinates)) return undefined;\n    var result;\n    if (needsTransverseMercator) {\n        result = {\n            type: buffered.type,\n            coordinates: unprojectCoords(buffered.coordinates, defineProjection(geometry$$1))\n        };\n    } else {\n        result = toWgs84(buffered);\n    }\n    return result.geometry ? result : feature(result, properties);\n}\nfunction coordsIsNaN(coords) {\n    if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n    return isNaN(coords[0]);\n}\nfunction projectCoords(coords, proj) {\n    if (_typeof(coords[0]) !== 'object') return proj(coords);\n    return coords.map(function (coord) {\n        return projectCoords(coord, proj);\n    });\n}\nfunction unprojectCoords(coords, proj) {\n    if (_typeof(coords[0]) !== 'object') return proj.invert(coords);\n    return coords.map(function (coord) {\n        return unprojectCoords(coord, proj);\n    });\n}\nfunction defineProjection(geojson) {\n    var coords = center(geojson).geometry.coordinates.reverse();\n    var rotate = coords.map(function (coord) {\n        return -coord;\n    });\n    return geoTransverseMercator().center(coords).rotate(rotate).scale(earthRadius);\n}\n\nfunction createbuffer(object, output, distance, units, comment, steps) {\n    units = units || 'meters';\n    output = (output || 'feature').toLowerCase();\n    var Feature;\n    if (object instanceof google.maps.Polyline || object instanceof google.maps.Polygon || object instanceof google.maps.Marker || object instanceof google.maps.LatLng) {\n        var geometry = Wicket$1().fromObject(object).toJson();\n        Feature = {\n            type: \"Feature\",\n            properties: {},\n            geometry: geometry\n        };\n    } else if (object.type && object.type === 'Feature' && object.geometry) {\n        Feature = object;\n    } else {\n        Feature = polygonToFeaturePolygon(object);\n    }\n    var buffered = buffer$1(Feature, distance, {\n        units: units,\n        steps: steps\n    });\n    if (buffered.type === 'FeatureCollection') {\n        buffered = buffered.features[0];\n    }\n    if (output === 'geometry') {\n        return buffered.geometry;\n    } else if (output === 'object') {\n        return Wicket$1().fromJson(buffered.geometry).toObject();\n    } else {\n        return buffered;\n    }\n}\n\nfunction booleanPointInPolygon(point, polygon, options) {\n    options = options || {};\n    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') throw new Error('options is invalid');\n    var ignoreBoundary = options.ignoreBoundary;\n    if (!point) throw new Error('point is required');\n    if (!polygon) throw new Error('polygon is required');\n    var pt = getCoord(point);\n    var polys = getCoords(polygon);\n    var type = polygon.geometry ? polygon.geometry.type : polygon.type;\n    var bbox = polygon.bbox;\n    if (bbox && inBBox(pt, bbox) === false) return false;\n    if (type === 'Polygon') polys = [polys];\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        if (inRing(pt, polys[i][0], ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n}\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0],\n            yi = ring[i][1];\n        var xj = ring[j][0],\n            yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 && (xi - pt[0]) * (xj - pt[0]) <= 0 && (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = yi > pt[1] !== yj > pt[1] && pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi;\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\nfunction inBBox(pt, bbox) {\n    return bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1];\n}\n\nfunction pointInPolygon(sourceArray, geojsonPolygon) {\n\tvar pointsInside = [];\n\tvar pointsOutside = [];\n\tif (geojsonPolygon.type !== 'Feature') {\n\t\tgeojsonPolygon = {\n\t\t\t\"type\": \"Feature\",\n\t\t\t\"properties\": {},\n\t\t\t\"geometry\": geojsonPolygon\n\t\t};\n\t}\n\tif (geojsonPolygon.geometry.type === 'Polygon' || geojsonPolygon.geometry.type === 'Multipolygon') {\n\t\tforEach(sourceArray, function (item) {\n\t\t\tvar Point = markerToFeaturePoint(item);\n\t\t\tif (booleanPointInPolygon(Point, geojsonPolygon)) {\n\t\t\t\tpointsInside.push(item);\n\t\t\t} else {\n\t\t\t\tpointsOutside.push(item);\n\t\t\t}\n\t\t});\n\t}\n\treturn {\n\t\tpointsInside: pointsInside,\n\t\tpointsOutside: pointsOutside\n\t};\n}\n\nfunction kinks$1(featureIn) {\n    var coordinates;\n    var feature$$1;\n    var results = {\n        type: 'FeatureCollection',\n        features: []\n    };\n    if (featureIn.type === 'Feature') {\n        feature$$1 = featureIn.geometry;\n    } else {\n        feature$$1 = featureIn;\n    }\n    if (feature$$1.type === 'LineString') {\n        coordinates = [feature$$1.coordinates];\n    } else if (feature$$1.type === 'MultiLineString') {\n        coordinates = feature$$1.coordinates;\n    } else if (feature$$1.type === 'MultiPolygon') {\n        coordinates = [].concat.apply([], feature$$1.coordinates);\n    } else if (feature$$1.type === 'Polygon') {\n        coordinates = feature$$1.coordinates;\n    } else {\n        throw new Error('Input must be a LineString, MultiLineString, ' + 'Polygon, or MultiPolygon Feature or Geometry');\n    }\n    coordinates.forEach(function (line1) {\n        coordinates.forEach(function (line2) {\n            for (var i = 0; i < line1.length - 1; i++) {\n                for (var k = i; k < line2.length - 1; k++) {\n                    if (line1 === line2) {\n                        if (Math.abs(i - k) === 1) {\n                            continue;\n                        }\n                        if (\n                        i === 0 && k === line1.length - 2 &&\n                        line1[i][0] === line1[line1.length - 1][0] && line1[i][1] === line1[line1.length - 1][1]) {\n                            continue;\n                        }\n                    }\n                    var intersection = lineIntersects(line1[i][0], line1[i][1], line1[i + 1][0], line1[i + 1][1], line2[k][0], line2[k][1], line2[k + 1][0], line2[k + 1][1]);\n                    if (intersection) {\n                        results.features.push(point([intersection[0], intersection[1]]));\n                    }\n                }\n            }\n        });\n    });\n    return results;\n}\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    var denominator,\n        a,\n        b,\n        numerator1,\n        numerator2,\n        result = {\n        x: null,\n        y: null,\n        onLine1: false,\n        onLine2: false\n    };\n    denominator = (line2EndY - line2StartY) * (line1EndX - line1StartX) - (line2EndX - line2StartX) * (line1EndY - line1StartY);\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        } else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = (line2EndX - line2StartX) * a - (line2EndY - line2StartY) * b;\n    numerator2 = (line1EndX - line1StartX) * a - (line1EndY - line1StartY) * b;\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n    result.x = line1StartX + a * (line1EndX - line1StartX);\n    result.y = line1StartY + a * (line1EndY - line1StartY);\n    if (a >= 0 && a <= 1) {\n        result.onLine1 = true;\n    }\n    if (b >= 0 && b <= 1) {\n        result.onLine2 = true;\n    }\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    } else {\n        return false;\n    }\n}\n\nfunction kinks(object) {\n  var Feature;\n  if (object instanceof google.maps.Polyline || object instanceof google.maps.Polygon) {\n    var geometry = Wicket().fromObject(object).toJson();\n    Feature = {\n      type: \"Feature\",\n      properties: {},\n      geometry: geometry\n    };\n  } else if (object.type && object.type === 'Feature' && object.geometry) {\n    Feature = object;\n  } else {\n    Feature = polygonToFeaturePolygon(object);\n  }\n  return kinks$1(Feature);\n}\n\nvar rbush$1 = require('rbush');\nvar isects = function (feature, filterFn, useSpatialIndex) {\n    if (feature.geometry.type !== 'Polygon') throw new Error('The input feature must be a Polygon');\n    if (useSpatialIndex === undefined) useSpatialIndex = 1;\n    var coord = feature.geometry.coordinates;\n    var output = [];\n    var seen = {};\n    if (useSpatialIndex) {\n        var allEdgesAsRbushTreeItems = [];\n        for (var ring0 = 0; ring0 < coord.length; ring0++) {\n            for (var edge0 = 0; edge0 < coord[ring0].length - 1; edge0++) {\n                allEdgesAsRbushTreeItems.push(rbushTreeItem(ring0, edge0));\n            }\n        }\n        var tree = rbush$1();\n        tree.load(allEdgesAsRbushTreeItems);\n    }\n    for (var ringA = 0; ringA < coord.length; ringA++) {\n        for (var edgeA = 0; edgeA < coord[ringA].length - 1; edgeA++) {\n            if (useSpatialIndex) {\n                var bboxOverlaps = tree.search(rbushTreeItem(ringA, edgeA));\n                bboxOverlaps.forEach(function (bboxIsect) {\n                    var ring1 = bboxIsect.ring;\n                    var edge1 = bboxIsect.edge;\n                    ifIsectAddToOutput(ringA, edgeA, ring1, edge1);\n                });\n            } else {\n                for (var ring1 = 0; ring1 < coord.length; ring1++) {\n                    for (var edge1 = 0; edge1 < coord[ring1].length - 1; edge1++) {\n                        ifIsectAddToOutput(ringA, edgeA, ring1, edge1);\n                    }\n                }\n            }\n        }\n    }\n    if (!filterFn) output = { type: 'Feature', geometry: { type: 'MultiPoint', coordinates: output } };\n    return output;\n    function ifIsectAddToOutput(ring0, edge0, ring1, edge1) {\n        var start0 = coord[ring0][edge0];\n        var end0 = coord[ring0][edge0 + 1];\n        var start1 = coord[ring1][edge1];\n        var end1 = coord[ring1][edge1 + 1];\n        var isect = intersect(start0, end0, start1, end1);\n        if (isect === null) return;\n        var frac0;\n        var frac1;\n        if (end0[0] !== start0[0]) {\n            frac0 = (isect[0] - start0[0]) / (end0[0] - start0[0]);\n        } else {\n            frac0 = (isect[1] - start0[1]) / (end0[1] - start0[1]);\n        }\n        if (end1[0] !== start1[0]) {\n            frac1 = (isect[0] - start1[0]) / (end1[0] - start1[0]);\n        } else {\n            frac1 = (isect[1] - start1[1]) / (end1[1] - start1[1]);\n        }\n        if (frac0 >= 1 || frac0 <= 0 || frac1 >= 1 || frac1 <= 0) return;\n        var key = isect;\n        var unique = !seen[key];\n        if (unique) {\n            seen[key] = true;\n        }\n        if (filterFn) {\n            output.push(filterFn(isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique));\n        } else {\n            output.push(isect);\n        }\n    }\n    function rbushTreeItem(ring, edge) {\n        var start = coord[ring][edge];\n        var end = coord[ring][edge + 1];\n        var minX;\n        var maxX;\n        var minY;\n        var maxY;\n        if (start[0] < end[0]) {\n            minX = start[0];\n            maxX = end[0];\n        } else {\n            minX = end[0];\n            maxX = start[0];\n        }\n        if (start[1] < end[1]) {\n            minY = start[1];\n            maxY = end[1];\n        } else {\n            minY = end[1];\n            maxY = start[1];\n        }\n        return { minX: minX, minY: minY, maxX: maxX, maxY: maxY, ring: ring, edge: edge };\n    }\n};\nfunction intersect(start0, end0, start1, end1) {\n    if (equalArrays$3(start0, start1) || equalArrays$3(start0, end1) || equalArrays$3(end0, start1) || equalArrays$3(end1, start1)) return null;\n    var x0 = start0[0],\n        y0 = start0[1],\n        x1 = end0[0],\n        y1 = end0[1],\n        x2 = start1[0],\n        y2 = start1[1],\n        x3 = end1[0],\n        y3 = end1[1];\n    var denom = (x0 - x1) * (y2 - y3) - (y0 - y1) * (x2 - x3);\n    if (denom === 0) return null;\n    var x4 = ((x0 * y1 - y0 * x1) * (x2 - x3) - (x0 - x1) * (x2 * y3 - y2 * x3)) / denom;\n    var y4 = ((x0 * y1 - y0 * x1) * (y2 - y3) - (y0 - y1) * (x2 * y3 - y2 * x3)) / denom;\n    return [x4, y4];\n}\nfunction equalArrays$3(array1, array2) {\n    if (!array1 || !array2) return false;\n    if (array1.length !== array2.length) return false;\n    for (var i = 0, l = array1.length; i < l; i++) {\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            if (!equalArrays$3(array1[i], array2[i])) return false;\n        } else if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction area$1(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\nvar RADIUS = 6378137;\nfunction calculateArea(geojson) {\n    var area = 0,\n        i;\n    switch (geojson.type) {\n        case 'Polygon':\n            return polygonArea(geojson.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < geojson.coordinates.length; i++) {\n                area += polygonArea(geojson.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < geojson.geometries.length; i++) {\n                area += calculateArea(geojson.geometries[i]);\n            }\n            return area;\n    }\n}\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else {\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n        area = area * RADIUS * RADIUS / 2;\n    }\n    return area;\n}\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nvar rbush = require('rbush');\nvar simplepolygon = function (feature$$1) {\n    if (feature$$1.type != 'Feature') throw new Error('The input must a geojson object of type Feature');\n    if (feature$$1.geometry === undefined || feature$$1.geometry == null) throw new Error('The input must a geojson object with a non-empty geometry');\n    if (feature$$1.geometry.type != 'Polygon') throw new Error('The input must be a geojson Polygon');\n    var numRings = feature$$1.geometry.coordinates.length;\n    var vertices = [];\n    for (var i = 0; i < numRings; i++) {\n        var ring = feature$$1.geometry.coordinates[i];\n        if (!equalArrays$2(ring[0], ring[ring.length - 1])) {\n            ring.push(ring[0]);\n        }\n        vertices.push.apply(vertices, ring.slice(0, ring.length - 1));\n    }\n    if (!isUnique(vertices)) throw new Error('The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)');\n    var numvertices = vertices.length;\n    var selfIsectsData = isects(feature$$1, function filterFn(isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique) {\n        return [isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique];\n    });\n    var numSelfIsect = selfIsectsData.length;\n    if (numSelfIsect == 0) {\n        var outputFeatureArray = [];\n        for (var i = 0; i < numRings; i++) {\n            outputFeatureArray.push(polygon([feature$$1.geometry.coordinates[i]], { parent: -1, winding: windingOfRing(feature$$1.geometry.coordinates[i]) }));\n        }\n        var output = featureCollection(outputFeatureArray);\n        determineParents();\n        setNetWinding();\n        return output;\n    }\n    var pseudoVtxListByRingAndEdge = [];\n    var isectList = [];\n    for (var i = 0; i < numRings; i++) {\n        pseudoVtxListByRingAndEdge.push([]);\n        for (var j = 0; j < feature$$1.geometry.coordinates[i].length - 1; j++) {\n            pseudoVtxListByRingAndEdge[i].push([new PseudoVtx(feature$$1.geometry.coordinates[i][(j + 1).modulo(feature$$1.geometry.coordinates[i].length - 1)], 1, [i, j], [i, (j + 1).modulo(feature$$1.geometry.coordinates[i].length - 1)], undefined)]);\n            isectList.push(new Isect(feature$$1.geometry.coordinates[i][j], [i, (j - 1).modulo(feature$$1.geometry.coordinates[i].length - 1)], [i, j], undefined, undefined, false, true));\n        }\n    }\n    for (var i = 0; i < numSelfIsect; i++) {\n        pseudoVtxListByRingAndEdge[selfIsectsData[i][1]][selfIsectsData[i][2]].push(new PseudoVtx(selfIsectsData[i][0], selfIsectsData[i][5], [selfIsectsData[i][1], selfIsectsData[i][2]], [selfIsectsData[i][6], selfIsectsData[i][7]], undefined));\n        if (selfIsectsData[i][11]) isectList.push(new Isect(selfIsectsData[i][0], [selfIsectsData[i][1], selfIsectsData[i][2]], [selfIsectsData[i][6], selfIsectsData[i][7]], undefined, undefined, true, true));\n    }\n    var numIsect = isectList.length;\n    for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n        for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n            pseudoVtxListByRingAndEdge[i][j].sort(function (a, b) {\n                return a.param < b.param ? -1 : 1;\n            });\n        }\n    }\n    var allIsectsAsIsectRbushTreeItem = [];\n    for (var i = 0; i < numIsect; i++) {\n        allIsectsAsIsectRbushTreeItem.push({ minX: isectList[i].coord[0], minY: isectList[i].coord[1], maxX: isectList[i].coord[0], maxY: isectList[i].coord[1], index: i });\n    }\n    var isectRbushTree = rbush();\n    isectRbushTree.load(allIsectsAsIsectRbushTreeItem);\n    for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n        for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n            for (var k = 0; k < pseudoVtxListByRingAndEdge[i][j].length; k++) {\n                var coordToFind;\n                if (k == pseudoVtxListByRingAndEdge[i][j].length - 1) {\n                    coordToFind = pseudoVtxListByRingAndEdge[i][(j + 1).modulo(feature$$1.geometry.coordinates[i].length - 1)][0].coord;\n                } else {\n                    coordToFind = pseudoVtxListByRingAndEdge[i][j][k + 1].coord;\n                }\n                var IsectRbushTreeItemFound = isectRbushTree.search({ minX: coordToFind[0], minY: coordToFind[1], maxX: coordToFind[0], maxY: coordToFind[1] })[0];\n                pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn = IsectRbushTreeItemFound.index;\n            }\n        }\n    }\n    for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n        for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n            for (var k = 0; k < pseudoVtxListByRingAndEdge[i][j].length; k++) {\n                var coordToFind = pseudoVtxListByRingAndEdge[i][j][k].coord;\n                var IsectRbushTreeItemFound = isectRbushTree.search({ minX: coordToFind[0], minY: coordToFind[1], maxX: coordToFind[0], maxY: coordToFind[1] })[0];\n                var l = IsectRbushTreeItemFound.index;\n                if (l < numvertices) {\n                    isectList[l].nxtIsectAlongRingAndEdge2 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n                } else {\n                    if (equalArrays$2(isectList[l].ringAndEdge1, pseudoVtxListByRingAndEdge[i][j][k].ringAndEdgeIn)) {\n                        isectList[l].nxtIsectAlongRingAndEdge1 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n                    } else {\n                        isectList[l].nxtIsectAlongRingAndEdge2 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n                    }\n                }\n            }\n        }\n    }\n    var queue = [];\n    var i = 0;\n    for (var j = 0; j < numRings; j++) {\n        var leftIsect = i;\n        for (var k = 0; k < feature$$1.geometry.coordinates[j].length - 1; k++) {\n            if (isectList[i].coord[0] < isectList[leftIsect].coord[0]) {\n                leftIsect = i;\n            }\n            i++;\n        }\n        var isectAfterLeftIsect = isectList[leftIsect].nxtIsectAlongRingAndEdge2;\n        for (var k = 0; k < isectList.length; k++) {\n            if (isectList[k].nxtIsectAlongRingAndEdge1 == leftIsect || isectList[k].nxtIsectAlongRingAndEdge2 == leftIsect) {\n                var isectBeforeLeftIsect = k;\n                break;\n            }\n        }\n        var windingAtIsect = isConvex([isectList[isectBeforeLeftIsect].coord, isectList[leftIsect].coord, isectList[isectAfterLeftIsect].coord], true) ? 1 : -1;\n        queue.push({ isect: leftIsect, parent: -1, winding: windingAtIsect });\n    }\n    queue.sort(function (a, b) {\n        return isectList[a.isect].coord > isectList[b.isect].coord ? -1 : 1;\n    });\n    var outputFeatureArray = [];\n    while (queue.length > 0) {\n        var popped = queue.pop();\n        var startIsect = popped.isect;\n        var currentOutputRingParent = popped.parent;\n        var currentOutputRingWinding = popped.winding;\n        var currentOutputRing = outputFeatureArray.length;\n        var currentOutputRingCoords = [isectList[startIsect].coord];\n        var currentIsect = startIsect;\n        if (isectList[startIsect].ringAndEdge1Walkable) {\n            var walkingRingAndEdge = isectList[startIsect].ringAndEdge1;\n            var nxtIsect = isectList[startIsect].nxtIsectAlongRingAndEdge1;\n        } else {\n            var walkingRingAndEdge = isectList[startIsect].ringAndEdge2;\n            var nxtIsect = isectList[startIsect].nxtIsectAlongRingAndEdge2;\n        }\n        while (!equalArrays$2(isectList[startIsect].coord, isectList[nxtIsect].coord)) {\n            currentOutputRingCoords.push(isectList[nxtIsect].coord);\n            var nxtIsectInQueue = undefined;\n            for (var i = 0; i < queue.length; i++) {\n                if (queue[i].isect == nxtIsect) {\n                    nxtIsectInQueue = i;break;\n                }\n            }\n            if (nxtIsectInQueue != undefined) {\n                queue.splice(nxtIsectInQueue, 1);\n            }\n            if (equalArrays$2(walkingRingAndEdge, isectList[nxtIsect].ringAndEdge1)) {\n                walkingRingAndEdge = isectList[nxtIsect].ringAndEdge2;\n                isectList[nxtIsect].ringAndEdge2Walkable = false;\n                if (isectList[nxtIsect].ringAndEdge1Walkable) {\n                    var pushing = { isect: nxtIsect };\n                    if (isConvex([isectList[currentIsect].coord, isectList[nxtIsect].coord, isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge2].coord], currentOutputRingWinding == 1)) {\n                        pushing.parent = currentOutputRingParent;\n                        pushing.winding = -currentOutputRingWinding;\n                    } else {\n                        pushing.parent = currentOutputRing;\n                        pushing.winding = currentOutputRingWinding;\n                    }\n                    queue.push(pushing);\n                }\n                currentIsect = nxtIsect;\n                nxtIsect = isectList[nxtIsect].nxtIsectAlongRingAndEdge2;\n            } else {\n                walkingRingAndEdge = isectList[nxtIsect].ringAndEdge1;\n                isectList[nxtIsect].ringAndEdge1Walkable = false;\n                if (isectList[nxtIsect].ringAndEdge2Walkable) {\n                    var pushing = { isect: nxtIsect };\n                    if (isConvex([isectList[currentIsect].coord, isectList[nxtIsect].coord, isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge1].coord], currentOutputRingWinding == 1)) {\n                        pushing.parent = currentOutputRingParent;\n                        pushing.winding = -currentOutputRingWinding;\n                    } else {\n                        pushing.parent = currentOutputRing;\n                        pushing.winding = currentOutputRingWinding;\n                    }\n                    queue.push(pushing);\n                }\n                currentIsect = nxtIsect;\n                nxtIsect = isectList[nxtIsect].nxtIsectAlongRingAndEdge1;\n            }\n        }\n        currentOutputRingCoords.push(isectList[nxtIsect].coord);\n        outputFeatureArray.push(polygon([currentOutputRingCoords], { index: currentOutputRing, parent: currentOutputRingParent, winding: currentOutputRingWinding, netWinding: undefined }));\n    }\n    var output = featureCollection(outputFeatureArray);\n    determineParents();\n    setNetWinding();\n    function determineParents() {\n        var featuresWithoutParent = [];\n        for (var i = 0; i < output.features.length; i++) {\n            if (output.features[i].properties.parent == -1) featuresWithoutParent.push(i);\n        }\n        if (featuresWithoutParent.length > 1) {\n            for (var i = 0; i < featuresWithoutParent.length; i++) {\n                var parent = -1;\n                var parentArea = Infinity;\n                for (var j = 0; j < output.features.length; j++) {\n                    if (featuresWithoutParent[i] == j) continue;\n                    if (booleanPointInPolygon(output.features[featuresWithoutParent[i]].geometry.coordinates[0][0], output.features[j], { ignoreBoundary: true })) {\n                        if (area$1(output.features[j]) < parentArea) {\n                            parent = j;\n                        }\n                    }\n                }\n                output.features[featuresWithoutParent[i]].properties.parent = parent;\n            }\n        }\n    }\n    function setNetWinding() {\n        for (var i = 0; i < output.features.length; i++) {\n            if (output.features[i].properties.parent == -1) {\n                var netWinding = output.features[i].properties.winding;\n                output.features[i].properties.netWinding = netWinding;\n                setNetWindingOfChildren(i, netWinding);\n            }\n        }\n    }\n    function setNetWindingOfChildren(parent, ParentNetWinding) {\n        for (var i = 0; i < output.features.length; i++) {\n            if (output.features[i].properties.parent == parent) {\n                var netWinding = ParentNetWinding + output.features[i].properties.winding;\n                output.features[i].properties.netWinding = netWinding;\n                setNetWindingOfChildren(i, netWinding);\n            }\n        }\n    }\n    return output;\n};\nvar PseudoVtx = function PseudoVtx(coord, param, ringAndEdgeIn, ringAndEdgeOut, nxtIsectAlongEdgeIn) {\n    this.coord = coord;\n    this.param = param;\n    this.ringAndEdgeIn = ringAndEdgeIn;\n    this.ringAndEdgeOut = ringAndEdgeOut;\n    this.nxtIsectAlongEdgeIn = nxtIsectAlongEdgeIn;\n};\nvar Isect = function Isect(coord, ringAndEdge1, ringAndEdge2, nxtIsectAlongRingAndEdge1, nxtIsectAlongRingAndEdge2, ringAndEdge1Walkable, ringAndEdge2Walkable) {\n    this.coord = coord;\n    this.ringAndEdge1 = ringAndEdge1;\n    this.ringAndEdge2 = ringAndEdge2;\n    this.nxtIsectAlongRingAndEdge1 = nxtIsectAlongRingAndEdge1;\n    this.nxtIsectAlongRingAndEdge2 = nxtIsectAlongRingAndEdge2;\n    this.ringAndEdge1Walkable = ringAndEdge1Walkable;\n    this.ringAndEdge2Walkable = ringAndEdge2Walkable;\n};\nfunction isConvex(pts, righthanded) {\n    if (typeof righthanded === 'undefined') righthanded = true;\n    if (pts.length != 3) throw new Error('This function requires an array of three points [x,y]');\n    var d = (pts[1][0] - pts[0][0]) * (pts[2][1] - pts[0][1]) - (pts[1][1] - pts[0][1]) * (pts[2][0] - pts[0][0]);\n    return d >= 0 == righthanded;\n}\nfunction windingOfRing(ring) {\n    var leftVtx = 0;\n    for (var i = 0; i < ring.length - 1; i++) {\n        if (ring[i][0] < ring[leftVtx][0]) leftVtx = i;\n    }\n    if (isConvex([ring[(leftVtx - 1).modulo(ring.length - 1)], ring[leftVtx], ring[(leftVtx + 1).modulo(ring.length - 1)]], true)) {\n        var winding = 1;\n    } else {\n        var winding = -1;\n    }\n    return winding;\n}\nfunction equalArrays$2(array1, array2) {\n    if (!array1 || !array2) return false;\n    if (array1.length != array2.length) return false;\n    for (var i = 0, l = array1.length; i < l; i++) {\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            if (!equalArrays$2(array1[i], array2[i])) return false;\n        } else if (array1[i] != array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nNumber.prototype.modulo = function (n) {\n    return (this % n + n) % n;\n};\nfunction isUnique(array) {\n    var u = {};\n    var isUnique = 1;\n    for (var i = 0, l = array.length; i < l; ++i) {\n        if (u.hasOwnProperty(array[i])) {\n            isUnique = 0;\n            break;\n        }\n        u[array[i]] = 1;\n    }\n    return isUnique;\n}\n\nfunction unkinkPolygon(geojson) {\n    var features = [];\n    flattenEach(geojson, function (feature$$1) {\n        if (feature$$1.geometry.type !== 'Polygon') return;\n        featureEach(simplepolygon(feature$$1), function (poly) {\n            features.push(polygon(poly.geometry.coordinates, feature$$1.properties));\n        });\n    });\n    return featureCollection(features);\n}\n\nfunction unkink(object) {\n  var polygonFeature = polygonToFeaturePolygon(object);\n  return unkinkPolygon(polygonFeature);\n}\n\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function (value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n    if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nfunction max$1(array) {\n  return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;\n}\n\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nfunction min$1(array) {\n  return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;\n}\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || arr.length - 1, compare || defaultCompare);\n}\nfunction quickselectStep(arr, k, left, right, compare) {\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n        var t = arr[k];\n        var i = left;\n        var j = right;\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) {\n                i++;\n            }while (compare(arr[j], t) > 0) {\n                j--;\n            }\n        }\n        if (compare(arr[left], t) === 0) swap(arr, left, j);else {\n            j++;\n            swap(arr, j, right);\n        }\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction rbush$3(maxEntries, format) {\n    if (!(this instanceof rbush$3)) return new rbush$3(maxEntries, format);\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    if (format) {\n        this._initFormat(format);\n    }\n    this.clear();\n}\nrbush$3.prototype = {\n    all: function all() {\n        return this._all(this.data, []);\n    },\n    search: function search(bbox) {\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n        if (!intersects$1(bbox, node)) return result;\n        var nodesToSearch = [],\n            i,\n            len,\n            child,\n            childBBox;\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n                if (intersects$1(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);else if (contains$1(bbox, childBBox)) this._all(child, result);else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n    collides: function collides(bbox) {\n        var node = this.data,\n            toBBox = this.toBBox;\n        if (!intersects$1(bbox, node)) return false;\n        var nodesToSearch = [],\n            i,\n            len,\n            child,\n            childBBox;\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n                if (intersects$1(bbox, childBBox)) {\n                    if (node.leaf || contains$1(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n        return false;\n    },\n    load: function load(data) {\n        if (!(data && data.length)) return this;\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n        if (!this.data.children.length) {\n            this.data = node;\n        } else if (this.data.height === node.height) {\n            this._splitRoot(this.data, node);\n        } else {\n            if (this.data.height < node.height) {\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n        return this;\n    },\n    insert: function insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n    clear: function clear() {\n        this.data = createNode([]);\n        return this;\n    },\n    remove: function remove(item, equalsFn) {\n        if (!item) return this;\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i,\n            parent,\n            index,\n            goingUp;\n        while (node || path.length) {\n            if (!node) {\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n            if (node.leaf) {\n                index = findItem(item, node.children, equalsFn);\n                if (index !== -1) {\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n            if (!goingUp && !node.leaf && contains$1(node, bbox)) {\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n            } else if (parent) {\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n            } else node = null;\n        }\n        return this;\n    },\n    toBBox: function toBBox(item) {\n        return item;\n    },\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n    toJSON: function toJSON() {\n        return this.data;\n    },\n    fromJSON: function fromJSON(data) {\n        this.data = data;\n        return this;\n    },\n    _all: function _all(node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);else nodesToSearch.push.apply(nodesToSearch, node.children);\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n    _build: function _build(items, left, right, height) {\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n        if (N <= M) {\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n        if (!height) {\n            height = Math.ceil(Math.log(N) / Math.log(M));\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i,\n            j,\n            right2,\n            right3;\n        multiSelect(items, left, right, N1, this.compareMinX);\n        for (i = left; i <= right; i += N1) {\n            right2 = Math.min(i + N1 - 1, right);\n            multiSelect(items, i, right2, N2, this.compareMinY);\n            for (j = i; j <= right2; j += N2) {\n                right3 = Math.min(j + N2 - 1, right2);\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n        calcBBox(node, this.toBBox);\n        return node;\n    },\n    _chooseSubtree: function _chooseSubtree(bbox, node, level, path) {\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n        while (true) {\n            path.push(node);\n            if (node.leaf || path.length - 1 === level) break;\n            minArea = minEnlargement = Infinity;\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n                } else if (enlargement === minEnlargement) {\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n            node = targetNode || node.children[0];\n        }\n        return node;\n    },\n    _insert: function _insert(item, level, isNode) {\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n        node.children.push(item);\n        extend$1(node, bbox);\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n    _split: function _split(insertPath, level) {\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n        this._chooseSplitAxis(node, m, M);\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n        if (level) insertPath[level - 1].children.push(newNode);else this._splitRoot(node, newNode);\n    },\n    _splitRoot: function _splitRoot(node, newNode) {\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n    _chooseSplitIndex: function _chooseSplitIndex(node, m, M) {\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n        minOverlap = minArea = Infinity;\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n                minArea = area < minArea ? area : minArea;\n            } else if (overlap === minOverlap) {\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n        return index;\n    },\n    _chooseSplitAxis: function _chooseSplitAxis(node, m, M) {\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n    _allDistMargin: function _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i,\n            child;\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend$1(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend$1(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n        return margin;\n    },\n    _adjustParentBBoxes: function _adjustParentBBoxes(bbox, path, level) {\n        for (var i = level; i >= 0; i--) {\n            extend$1(path[i], bbox);\n        }\n    },\n    _condense: function _condense(path) {\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n                } else this.clear();\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n    _initFormat: function _initFormat(format) {\n        var compareArr = ['return a', ' - b', ';'];\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n        this.toBBox = new Function('a', 'return {minX: a' + format[0] + ', minY: a' + format[1] + ', maxX: a' + format[2] + ', maxY: a' + format[3] + '};');\n    }\n};\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend$1(destNode, node.leaf ? toBBox(child) : child);\n    }\n    return destNode;\n}\nfunction extend$1(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\nfunction compareNodeMinX(a, b) {\n    return a.minX - b.minX;\n}\nfunction compareNodeMinY(a, b) {\n    return a.minY - b.minY;\n}\nfunction bboxArea(a) {\n    return (a.maxX - a.minX) * (a.maxY - a.minY);\n}\nfunction bboxMargin(a) {\n    return a.maxX - a.minX + (a.maxY - a.minY);\n}\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) * (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n    return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);\n}\nfunction contains$1(a, b) {\n    return a.minX <= b.minX && a.minY <= b.minY && b.maxX <= a.maxX && b.maxY <= a.maxY;\n}\nfunction intersects$1(a, b) {\n    return b.minX <= a.maxX && b.minY <= a.maxY && b.maxX >= a.minX && b.maxY >= a.minY;\n}\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n        if (right - left <= n) continue;\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n        stack.push(left, mid, mid, right);\n    }\n}\n\nfunction geojsonRbush(maxEntries) {\n    var tree = rbush$3(maxEntries);\n    tree.insert = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        } else {\n            feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        }\n        return rbush$3.prototype.insert.call(this, feature);\n    };\n    tree.load = function (features) {\n        var load = [];\n        if (Array.isArray(features)) {\n            features.forEach(function (bbox) {\n                var feature = bboxPolygon(bbox);\n                feature.bbox = bbox;\n                load.push(feature);\n            });\n        } else {\n            featureEach(features, function (feature) {\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush$3.prototype.load.call(this, load);\n    };\n    tree.remove = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        }\n        return rbush$3.prototype.remove.call(this, feature);\n    };\n    tree.clear = function () {\n        return rbush$3.prototype.clear.call(this);\n    };\n    tree.search = function (geojson) {\n        var features = rbush$3.prototype.search.call(this, this.toBBox(geojson));\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n    tree.collides = function (geojson) {\n        return rbush$3.prototype.collides.call(this, this.toBBox(geojson));\n    };\n    tree.all = function () {\n        var features = rbush$3.prototype.all.call(this);\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n    tree.toJSON = function () {\n        return rbush$3.prototype.toJSON.call(this);\n    };\n    tree.fromJSON = function (json) {\n        return rbush$3.prototype.fromJSON.call(this, json);\n    };\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;else bbox = turfBBox(geojson);\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\nfunction bboxPolygon(bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n    var coordinates = [[lowLeft, lowRight, topRight, topLeft, lowLeft]];\n    return {\n        type: 'Feature',\n        bbox: bbox,\n        properties: {},\n        geometry: {\n            type: 'Polygon',\n            coordinates: coordinates\n        }\n    };\n}\nfunction turfBBox(geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n}\n\nfunction lineSegment(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    var results = [];\n    flattenEach(geojson, function (feature$$1) {\n        lineSegmentFeature(feature$$1, results);\n    });\n    return featureCollection(results);\n}\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry$$1 = geojson.geometry;\n    switch (geometry$$1.type) {\n        case 'Polygon':\n            coords = getCoords(geometry$$1);\n            break;\n        case 'LineString':\n            coords = [getCoords(geometry$$1)];\n    }\n    coords.forEach(function (coord) {\n        var segments = createSegments(coord, geojson.properties);\n        segments.forEach(function (segment) {\n            segment.id = results.length;\n            results.push(segment);\n        });\n    });\n}\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox$3(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\nfunction bbox$3(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\n\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    if (line1.type === 'LineString') line1 = feature(line1);\n    if (line2.type === 'LineString') line2 = feature(line2);\n    if (line1.type === 'Feature' && line2.type === 'Feature' && line1.geometry.type === 'LineString' && line2.geometry.type === 'LineString' && line1.geometry.coordinates.length === 2 && line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) results.push(intersect);\n        return featureCollection(results);\n    }\n    var tree = geojsonRbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                var key = getCoords(intersect).join(',');\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error('<intersects> line1 must only contain 2 coordinates');\n    }\n    if (coords2.length !== 2) {\n        throw new Error('<intersects> line2 must only contain 2 coordinates');\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return point([x, y]);\n    }\n    return null;\n}\n\nfunction nearestPointOnLine(lines, pt, options) {\n    options = options || {};\n    if (!isObject$2(options)) throw new Error('options is invalid');\n    var type = lines.geometry ? lines.geometry.type : lines.type;\n    if (type !== 'LineString' && type !== 'MultiLineString') {\n        throw new Error('lines must be LineString or MultiLineString');\n    }\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity\n    });\n    var length = 0.0;\n    flattenEach(lines, function (line) {\n        var coords = getCoords(line);\n        for (var i = 0; i < coords.length - 1; i++) {\n            var start = point(coords[i]);\n            start.properties.dist = distance(pt, start, options);\n            var stop = point(coords[i + 1]);\n            stop.properties.dist = distance(pt, stop, options);\n            var sectionLength = distance(start, stop, options);\n            var heightDistance = Math.max(start.properties.dist, stop.properties.dist);\n            var direction = bearing(start, stop);\n            var perpendicularPt1 = destination(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination(pt, heightDistance, direction - 90, options);\n            var intersect = lineIntersect(lineString([perpendicularPt1.geometry.coordinates, perpendicularPt2.geometry.coordinates]), lineString([start.geometry.coordinates, stop.geometry.coordinates]));\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance(pt, intersectPt, options);\n                intersectPt.properties.location = length + distance(start, intersectPt, options);\n            }\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop.properties.dist < closestPt.properties.dist) {\n                closestPt = stop;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            length += sectionLength;\n        }\n    });\n    return closestPt;\n}\n\nfunction lineSlice(startPt, stopPt, line) {\n    var coords;\n    if (line.type === 'Feature') {\n        coords = line.geometry.coordinates;\n    } else if (line.type === 'LineString') {\n        coords = line.coordinates;\n    } else {\n        throw new Error('input must be a LineString Feature or Geometry');\n    }\n    var startVertex = nearestPointOnLine(line, startPt);\n    var stopVertex = nearestPointOnLine(line, stopPt);\n    var ends;\n    if (startVertex.properties.index <= stopVertex.properties.index) {\n        ends = [startVertex, stopVertex];\n    } else {\n        ends = [stopVertex, startVertex];\n    }\n    var clipCoords = [ends[0].geometry.coordinates];\n    for (var i = ends[0].properties.index + 1; i < ends[1].properties.index + 1; i++) {\n        clipCoords.push(coords[i]);\n    }\n    clipCoords.push(ends[1].geometry.coordinates);\n    return lineString(clipCoords, line.properties);\n}\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nfunction diffCoords(coord1, coord2) {\n\tvar vector = [Math.abs(coord1[0] - coord2[0]), Math.abs(coord1[1] - coord2[1])];\n\treturn Math.sqrt(Math.pow(vector[0], 2) + Math.pow(vector[1], 2));\n}\nfunction findLineIntersection(line1Start, line1End, line2Start, line2End) {\n\tvar line1 = lineString([line1Start, line1End]),\n\t    line2 = lineString([line2Start, line2End]),\n\t    intersectionFC = lineIntersect(line1, line2);\n\tif (intersectionFC.features.length) {\n\t\tvar intersection = intersectionFC.features[0].geometry.coordinates;\n\t\tintersection[0] = Math.round(intersection[0] * 100000000) / 100000000;\n\t\tintersection[1] = Math.round(intersection[1] * 100000000) / 100000000;\n\t\treturn intersection;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction traverseRings(ring1, ring2) {\n\tvar intersections = featureCollection([]);\n\tvar samering = false;\n\tif (isEqual(ring1, ring2)) {\n\t\tsamering = true;\n\t}\n\tfor (var i = 0; i < ring1.length - 1; i++) {\n\t\tvar startK = samering ? i : 0;\n\t\tfor (var k = startK; k < ring2.length - 1; k++) {\n\t\t\tif (ring1 === ring2 && (Math.abs(i - k) === 1 || Math.abs(i - k) === ring1.length - 2)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar intersection = findLineIntersection(ring1[i], ring1[i + 1], ring2[k], ring2[k + 1]);\n\t\t\tif (!intersection) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ((diffCoords(intersection, ring1[0]) < 0.000005 || diffCoords(intersection, ring1[ring1.length - 1]) < 0.000005) && (diffCoords(intersection, ring2[0]) < 0.000005 || diffCoords(intersection, ring2[ring2.length - 1]) < 0.000005)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar FeatureIntersection = point([intersection[0], intersection[1]]);\n\t\t\tFeatureIntersection.properties = {\n\t\t\t\tposition1: i,\n\t\t\t\tposition2: k\n\t\t\t};\n\t\t\tintersections.features.push(FeatureIntersection);\n\t\t}\n\t}\n\treturn intersections;\n}\nfunction trimPaths(arrayLatLng1, arrayLatLng2) {\n\tvar ring1 = toCoords(arrayLatLng1);\n\tvar ring2 = toCoords(arrayLatLng2);\n\tvar intersections = traverseRings(ring1, ring2);\n\tif (intersections.features.length > 0) {\n\t\tvar line1 = lineString(ring1);\n\t\tvar line2 = lineString(ring2);\n\t\tvar line1Start = point(ring1[0]);\n\t\tvar line2End = point(ring2.slice(-1)[0]);\n\t\tvar sliced1, sliced2;\n\t\tvar first_segment_with_kinks = min$1(intersections.features, function (kink) {\n\t\t\treturn kink.properties.position1;\n\t\t});\n\t\tvar kinks_in_first_segment = filter(intersections.features, function (kink) {\n\t\t\treturn kink.properties.position1 === first_segment_with_kinks.properties.position1;\n\t\t});\n\t\tvar chosenIntersection = max$1(kinks_in_first_segment, function (kink) {\n\t\t\treturn kink.properties.position2;\n\t\t});\n\t\tvar intersectLatLng = toLatLngs([chosenIntersection.geometry.coordinates])[0];\n\t\tif (chosenIntersection.properties.position1 === 0) {\n\t\t\tsliced1 = line1;\n\t\t} else {\n\t\t\tsliced1 = lineSlice(line1Start, chosenIntersection, line1);\n\t\t}\n\t\tif (chosenIntersection.properties.position2 >= ring2.length - 1) {\n\t\t\tsliced2 = line2;\n\t\t} else {\n\t\t\tsliced2 = lineSlice(chosenIntersection, line2End, line2);\n\t\t}\n\t\treturn [toLatLngs(sliced1.geometry.coordinates), toLatLngs(sliced2.geometry.coordinates), intersectLatLng];\n\t}\n\treturn [];\n}\n\nvar ig_turfhelper = {\n    along: along,\n    arrayToFeaturePoints: arrayToFeaturePoints,\n    createbuffer: createbuffer,\n    pointInPolygon: pointInPolygon,\n    polygonToFeaturePolygon: polygonToFeaturePolygon,\n    polylineToFeatureLinestring: polylineToFeatureLinestring,\n    simplifyFeature: simplifyFeature,\n    simplifyPointArray: simplifyPointArray,\n    toLatLngs: toLatLngs,\n    toCoords: toCoords,\n    trimPaths: trimPaths,\n    union: union,\n    kinks: kinks,\n    unkink: unkink,\n    concave: concave\n};\n\nexports.along = along;\nexports.arrayToFeaturePoints = arrayToFeaturePoints;\nexports.createbuffer = createbuffer;\nexports.pointInPolygon = pointInPolygon;\nexports.polygonToFeaturePolygon = polygonToFeaturePolygon;\nexports.polylineToFeatureLinestring = polylineToFeatureLinestring;\nexports.simplifyFeature = simplifyFeature;\nexports.simplifyPointArray = simplifyPointArray;\nexports.toLatLngs = toLatLngs;\nexports.toCoords = toCoords;\nexports.trimPaths = trimPaths;\nexports.kinks = kinks;\nexports.unkink = unkink;\nexports.union = union;\nexports.concave = concave;\nexports['default'] = ig_turfhelper;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"names":["global","factory","exports","module","define","amd","turfHelper","this","Wicket$1","Wkt","arrayMap","array","iteratee","index","length","result","Array","eq","value","other","assocIndexOf","key","ListCache","entries","clear","entry","set","baseGetTag","undefined","undefinedTag","nullTag","symToStringTag","Object","isOwn","hasOwnProperty$1","call","symToStringTag$1","tag","unmasked","e","nativeObjectToString","getRawTag","nativeObjectToString$1","objectToString","isObject","type","_typeof","isFunction","funcTag","genTag","asyncTag","proxyTag","toSource","func","funcToString$1","baseIsNative","maskSrcKey","isMasked","reIsNative","reIsHostCtor","test","getNative","object","getValue","Hash","getMapData","map","data","__data__","isKeyable","MapCache","Stack","size","SetCache","values","add","arraySome","predicate","cacheHas","cache","has","equalArrays","bitmask","customizer","equalFunc","stack","isPartial","COMPARE_PARTIAL_FLAG$2","arrLength","othLength","stacked","get","seen","COMPARE_UNORDERED_FLAG$1","arrValue","othValue","compared","othIndex","push","mapToArray","forEach","setToArray","arrayFilter","resIndex","isObjectLike","baseIsArguments","argsTag$1","isIndex","MAX_SAFE_INTEGER","reIsUint","isLength","MAX_SAFE_INTEGER$1","arrayLikeKeys","inherited","isArr","isArray","isArg","isArguments","isBuff","isBuffer","isType","isTypedArray","skipIndexes","n","baseTimes","String","hasOwnProperty$6","baseKeys","Ctor","constructor","prototype","objectProto$11","isPrototype","nativeKeys","hasOwnProperty$8","isArrayLike","keys","getAllKeys","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","baseIsEqualDeep","objIsArr","othIsArr","objTag","arrayTag","getTag$1","othTag","objIsObj","argsTag","objectTag","othIsObj","isSameTag","dataViewTag","byteLength","byteOffset","buffer","arrayBufferTag","Uint8Array","boolTag","dateTag","numberTag","errorTag","name","message","regexpTag","stringTag","mapTag","convert","setTag","COMPARE_PARTIAL_FLAG$3","COMPARE_UNORDERED_FLAG$2","symbolTag","symbolValueOf","equalByTag","COMPARE_PARTIAL_FLAG$1","objIsWrapped","hasOwnProperty$4","othIsWrapped","objUnwrapped","othUnwrapped","COMPARE_PARTIAL_FLAG$4","objProps","objLength","hasOwnProperty$5","skipCtor","objValue","objCtor","othCtor","equalObjects","baseIsEqual","isStrictComparable","matchesStrictComparable","srcValue","baseMatches","source","matchData","getMatchData","noCustomizer","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","isSymbol","symbolTag$1","isKey","reIsPlainProp","reIsDeepProp","memoize","resolver","TypeError","FUNC_ERROR_TEXT","memoized","args","arguments","apply","Cache","baseToString","symbolToString","INFINITY","castPath","stringToPath","toString","toKey","INFINITY$1","baseGet","path","baseHasIn","hasIn","hasFunc","hasPath","baseMatchesProperty","defaultValue","get$1","COMPARE_PARTIAL_FLAG$5","COMPARE_UNORDERED_FLAG$3","identity","property","baseProperty","basePropertyDeep","baseIteratee","collection","baseEach","castFunction","toLatLng","position","google","maps","LatLng","lat","lng","toLatLngs","coordinates","toCoord$1","Error","toCoords","arrayLatLng","closeRing","ring","last_coord","pop","feature","geometry","properties","bbox","id","indexOf","feat","point","isNumber","polygon","i","j","lineString","featureCollection","features","fc","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","radiansToDegrees","Math","PI","degreesToRadians","degrees","num","isNaN","isObject$2","input","arrayToFeaturePolygon","LatLngArray","polylineToFeatureLinestring","objeto","vertices","Polyline","getPath","getArray","polygonToFeaturePolygon","polygonFeature","Polygon","arrayToFeaturePoints","latLngArray","FeatureCollection","latLng","Feature","tin","points","z","isPointZ","sort","byX","a","b","c","A","B","G","xmin","x","xmax","ymin","y","ymax","dx","dy","dmax","xmid","ymid","open","Triangle","__sentinel","closed","edges","r","splice","dedup","abs","triangulate","p","point$$1","triangle","C","D","E","F","m","outer","clone","geojson","cloneFeature","cloned","cloneFeatureCollection","cloneGeometry","cloneProperties","item","geom","geometries","deepSlice","coords","slice","coord","getCoord","obj","getCoords","containsNumber","getType","coordEach","callback","excludeWrapCoord","featureIndex","geometryIndex","k","l","geometry$$1","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureSubIndex","geomType","featureEach","geomEach","g","featureProperties","featureBBox","featureId","flattenEach","coordinate","lineReduce","initialValue","previousValue","feature$$1","lineIndex","lineEach","currentLine","lineDissolve","options","mutate","lastLine","previousLine","merged","coords1","coords2","s1","coordId","e1","s2","e2","concat","reverse","mergeLineStrings","multiLineString","line","topology","o","arc","arcs","transformPoint","transform","mergeArcs","objects","extract","polygonsByArc","polygons","area","planarRingArea","groups","_","group","neighbors","stitch","ki","t","reverse$1","start","end","mid","geomifyObject","output","geomifyFeature","geomifyGeometry","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","polygonDissolve","geoms","topo","geometryCollection","merge","dissolve","types","getHomogenousType","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","pow","sin","cos","atan2","sqrt","concave$1","maxEdge","Infinity","tinPolys","cleaned","existing","pt","join","hasOwnProperty","removeDuplicates","filter","pt1","pt2","pt3","dist1","dist2","dist3","dissolved","concave","cleanLine","equals","prevPoint","nextPoint","newPoints","secondToLast","startX","startY","endX","endY","dxl","dyl","isPointOnLineSegment","simplify","tolerance","highQuality","newCoords","polyPoints","cleanCoords","simplifyLine","lines","simplifyPolygon","rings","simplifyGeom","simplifyJS","pts","simpleRing","checkValidity","simplifyPointArray","coordArray","simplifyFeature","toLowerCase","fromObject","toJson","simplifiedgeom","warn","fromJson","toObject","bearing","final","bear","calculateFinalBearing","lon1","lon2","destination","origin","longitude1","latitude1","bearing_rad","latitude2","asin","along$1","distance$$1","travelled","overshot","direction","along","NumberUtil","IllegalArgumentException","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","AssertionFailedException","Assert","Coordinate","NULL_ORDINATE","DimensionalComparator","_dimensionsToTest","dimensionsToTest","Iterator","Collection","IndexOutOfBoundsException$1","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","CoordinateList","ensureCapacity","allowRepeated","Envelope","_minx","_maxx","_miny","_maxy","init","env","p1","p2","x1","x2","y1","y2","Exception","NotRepresentableException","Location","MathUtil","StringBuffer","str","Integer","Character","DD","_hi","_lo","dd","parse","hi","lo","CGAlgorithmsDD","CoordinateSequence","System","HCoordinate","w","_x","_y","_w","q1","q2","px","py","pw","qx","qy","qw","CoordinateSequenceFactory","GeometryComponentFilter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map$3","SortedMap","Set$2","HashSet","colorOf","BLACK","color","parentOf","parent","setColor","leftOf","left","rightOf","right","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","Arrays","Dimension","GeometryFilter","CoordinateSequenceFilter","GeometryCollection","_geometries","hasNullElements","MultiLineString","lineStrings","BoundaryOp","_geom","_geomFact","_bnRule","_endpointMap","MOD2_BOUNDARY_RULE","bnRule","getFactory","Counter","count","IOException","StringUtil","CoordinateSequences","LineString","_points","Puntal","Point","_coordinates","Polygonal","_shell","_holes","shell","holes","createLinearRing","isEmpty","hasNonEmptyElements","MultiPoint","LinearRing","GeometryFactory","getCoordinateSequenceFactory","create","hasInterface","validateConstruction","MultiPolygon","GeometryEditor","_isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","_dimension","Number","isInteger","fill","coordSeq","getDimension","getCoordinateCopy","dimension","CoordinateArraySequenceFactory","is","sharedIterator","itp","array2","done","next","v","sharedSize","_values","HashMap","map_","MapImpl","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","scale","pm","_name","nameToTypeMap","put","_precisionModel","_coordinateSequenceFactory","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","SRID","WKTParser","geometryFactory","WKTWriter","parser","LineIntersector","_result","_inputLines","_intPt","_intLineIndex","_isProper","_pa","_pb","RobustLineIntersector","RobustDeterminant","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","CGAlgorithms","LineSegment","p0","ls","x0","y0","IntersectionMatrix","_matrix","setAll","FALSE","elements","INTERIOR","BOUNDARY","EXTERIOR","Centroid","_areaBasePt","_triangleCent3","_areasum2","_cg3","_lineCentSum","_totalLength","_ptCount","_ptCentSum","EmptyStackException","Stack$2","UniqueCoordinateArrayFilter","treeSet","list","ConvexHull","_geomFactory","_inputPts","extractCoordinates","geomFactory","filterCoordinates","RadialComparator","_origin","GeometryTransformer","_inputGeom","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","LineStringSnapper","_snapTolerance","_srcPts","_seg","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","getCoordinates","srcPts","isClosed","GeometrySnapper","_srcGeom","srcGeom","SnapTransformer","_snapPts","_isSelfSnap","snapPts","isSelfSnap","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","_commonBitsX","_commonBitsY","Translater","trans","GeometryCollectionIterator","_parent","_atStart","_max","_index","_subcollectionIterator","getNumGeometries","PointLocator","_boundaryRule","OGC_SFS_BOUNDARY_RULE","_isIn","_numBoundaries","boundaryRule","Octant","SegmentString","BasicSegmentString","_pts","_data","Boundable","ItemBoundable","_bounds","_item","bounds","PriorityQueue","_size","_items","ItemVisitor","SpatialIndex","AbstractNode","_childBoundables","_level","level","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","AbstractSTRtree","_root","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity","isTrue","ItemDistance","STRtree","STRtreeNode","SegmentPointComparator","SegmentNode","_segString","segmentIndex","_segmentOctant","_isInterior","segString","segmentOctant","equals2D","getCoordinate","SegmentNodeList","_nodeMap","_edge","edge","NodeVertexIterator","_nodeList","_nodeIt","_currNode","_nextNode","_currSegIndex","nodeList","getEdge","iterator","readNextNode","NodableSegmentString","NodedSegmentString","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","MonotoneChain","_start","_end","_env","_context","_id","context","Quadrant","MonotoneChainBuilder","Noder","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","si","SegmentOverlapAction","_si","TopologyException","msg","msgWithCoord","SegmentIntersector","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_li","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","li","FastNodingValidator","_segStrings","_isValid","segStrings","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","_mapOp","mapOp","Position","TopologyLocation","location","on","ON","gl","LEFT","RIGHT","Label","elt","onLoc","lbl","geomIndex","NONE","setLocation","leftLoc","rightLoc","setLocations","EdgeRing","_startDe","_maxNodeDegree","_edges","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","MinimalEdgeRing","MaximalEdgeRing","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","label","Node","_coord","NodeMap","nodeMap","nodeFact","EdgeEnd","_node","_p0","_p1","_dx","_dy","_quadrant","DirectedEdge","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","isForward","getNumPoints","computeDirectedLabel","NodeFactory","PlanarGraph","_nodes","_edgeEndList","PolygonBuilder","_shellList","LineBuilder","_op","_ptLocator","_lineEdgesList","_resultLineList","op","ptLocator","PointBuilder","_resultPointList","PointOnGeometryLocator","SimplePointInAreaLocator","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","DirectedEdgeStar","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","OverlayNodeFactory","MonotoneChain$1","mce","chainIndex","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","DELETE","INSERT","EdgeSetIntersector","SegmentIntersector$1","_hasIntersection","_hasProper","_hasProperInterior","_properIntersectionPoint","_includeProper","_recordIsolated","_isSelfIntersection","_numIntersections","numTests","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","SimpleMCSweepLineIntersector","events","nOverlaps","IntervalRTreeNode$1","_min","POSITIVE_INFINITY","NEGATIVE_INFINITY","NodeComparator","IntervalRTreeLeafNode","min","max","IntervalRTreeBranchNode","_node1","_node2","n1","n2","buildExtent","SortedPackedIntervalRTree","_leaves","LinearComponentExtracter","_lines","_isForcedToLineString","isForcedToLineString","ArrayListVisitor","IndexedPointInAreaLocator","IntervalIndexedGeometry","SegmentVisitor","_counter","counter","EdgeIntersection","dist","EdgeIntersectionList","MonotoneChainIndexer","MonotoneChainEdge","startIndex","env1","env2","mcb","getChainStartIndices","Depth","NULL_VALUE","Edge","eiList","_mce","_isIsolated","_depthDelta","GeometryGraph","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","argIndex","parentGeom","boundaryNodeRule","GeometryGraphOperation","_resultPrecisionModel","_arg","g0","setComputationPrecision","getPrecisionModel","g1","compareTo","OrientedCoordinateArray","_orientation","orientation","EdgeList","_ocaMap","OverlayOp","_resultGeom","_graph","_resultPolyList","SnapOverlayOp","_cbr","g2","computeSnapTolerance","SnapIfNeededOverlayOp","InteriorPointArea","_interiorPoint","_maxWidth","SafeBisectorFinder","_poly","_centreY","_hiY","MAX_VALUE","_loY","poly","getEnvelopeInternal","getMaxY","getMinY","avg","InteriorPointLine","_centroid","_minDistance","getCentroid","addInterior","addEndpoints","InteriorPointPoint","MonotoneChainSelectAction","selectedSegment","NodeBase","_subnode","Interval","interval","DoubleBits","Key","_pt","_interval","computeKey","Node$1","_centre","getMin","getMax","IntervalSize","Root","Bintree","_minExtent","PointInRing","MCPointInRing","_tree","_crossings","buildIndex","MCSelecter","mcp","Angle","Triangle$1","MinimumBoundingCircle","_input","_extremalPts","_radius","MinimumDiameter","_isConvex","_convexHullPts","_minBaseSeg","_minWidthPt","_minPtIndex","_minWidth","inputGeom","isConvex","Densifier","_distanceTolerance","DensifyTransformer","distanceTolerance","HalfEdge","_orig","orig","MarkHalfEdge","_isMarked","EdgeGraph","_vertexMap","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","_nodeEdgeStack","_ringStartEdge","NodeBase$1","Key$1","itemEnv","Node$2","_centrex","_centrey","getMinX","getMaxX","Root$1","Quadtree","GeoJSONParser","GeoJSONReader","GeoJSONWriter","p2c","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","noder","scaleFactor","isIntegerPrecision","IsSimpleOp","_isClosedEndpointsInInterior","_nonSimpleLocation","isInBoundary","EndpointInfo","degree","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","endCapStyle","setEndCapStyle","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","LinkedList","BufferSubgraph","_finder","_dirEdgeList","_rightMostCoord","BufferInputLineSimplifier","_inputLine","_distanceTol","_isDeleted","_angleOrientation","COUNTERCLOCKWISE","inputLine","OffsetSegmentString","_ptList","_minimimVertexDistance","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","getQuadrantSegments","getJoinStyle","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","SubgraphDepthLocater","_subgraphs","_cga","subgraphs","DepthSegment","_upwardSeg","_leftDepth","seg","depth","OffsetCurveSetBuilder","_curveBuilder","_curveList","curveBuilder","IntersectionAdder","_hasInterior","numIntersections","numInteriorIntersections","numProperIntersections","BufferBuilder","_workingPrecisionModel","_workingNoder","NodingValidator","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","MCIndexPointSnapper","HotPixelSnapAction","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","hotPixel","parentEdge","hotPixelVertexIndex","InteriorIntersectionFinderAdder","_interiorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","setPrecisionModel","getScale","BufferOp","_argGeom","_resultGeometry","_saveException","PolygonExtracter","_comps","comps","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","segIndex","PointExtracter","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_minDistanceLocation","terminateDistance","EdgeString","_directedEdges","GraphComponent$1","DirectedEdge$1","_from","_to","_edgeDirection","_angle","directionPt","edgeDirection","quadrant","LineMergeDirectedEdge","Edge$1","_dirEdge","de0","de1","setDirectedEdges","DirectedEdgeStar$1","_outEdges","_sorted","Node$3","_deStar","deStar","LineMergeEdge","_line","NodeMap$1","PlanarGraph$1","_dirEdges","LineMergeGraph","LineMerger","_mergedLineStrings","_edgeStrings","PolygonizeDirectedEdge","PolygonizeEdge","ConnectedInteriorTester","_geomGraph","_disconnectedRingcoord","geomGraph","EdgeEndBuilder","EdgeEndBundle","_edgeEnds","getDirectedCoordinate","getLabel","insert","EdgeEndBundleStar","RelateNode","RelateNodeFactory","RelateNodeGraph","ConsistentAreaTester","_nodeGraph","IndexedNestedRingTester","_rings","_totalEnv","_nestedPt","graph","TopologyValidationError","_errorType","errorType","copy","IsValidOp","_parentGeometry","_isSelfTouchingRingFormingHoleValid","_validErr","parentGeometry","EdgeRing$1","_deList","_lowestEdge","_ringPts","_isProcessed","_isIncludedSet","_isIncluded","EnvelopeComparator","PolygonizeGraph","Polygonizer","_lineStringAdder","LineStringAdder","_dangles","_cutEdges","_invalidRingLines","_holeList","_polyList","_isCheckingRingsValid","_extractOnlyPolygonal","extractOnlyPolygonal","RelateComputer","_im","_isolatedEdges","arg","RectangleContains","_rectEnv","rectangle","RectangleLineIntersector","_diagUp0","_diagUp1","_diagDown0","_diagDown1","rectEnv","ShortCircuitedGeometryVisitor","RectangleIntersects","_rectangle","EnvelopeIntersectsVisitor","_intersects","GeometryContainsPointVisitor","_rectSeq","_containsPoint","getExteriorRing","getCoordinateSequence","RectangleIntersectsSegmentVisitor","_rectIntersector","RelateOp","_relate","GeometryCombiner","_skipEmpty","_inputGeoms","extractFactory","CascadedPolygonUnion","_inputPolys","polys","PointGeometryUnion","_pointGeom","_otherGeom","pointGeom","otherGeom","GeometryExtracter","_sortIndex","sortIndex","UnaryUnionOp","_polygons","geomFact","UnionInteracting","_g0","_g1","_interacts0","_interacts1","UnionOp","PrecisionReducerCoordinateOperation","_targetPM","_removeCollapsed","targetPM","removeCollapsed","GeometryPrecisionReducer","_changePrecisionModel","_isPointwise","DouglasPeuckerLineSimplifier","_usePt","DouglasPeuckerSimplifier","_isEnsureValidTopology","DPTransformer","isEnsureValidTopology","TaggedLineSegment","TaggedLineString","_parentLine","_segs","_resultSegs","_minimumSize","parentLine","minimumSize","LineSegmentIndex","LineSegmentVisitor","_querySeg","querySeg","TaggedLineStringSimplifier","_inputIndex","_outputIndex","_linePts","inputIndex","outputIndex","TaggedLinesSimplifier","TopologyPreservingSimplifier","_lineSimplifier","_linestringMap","LineStringTransformer","linestringMap","LineStringMapBuilderFilter","tps","SplitSegment","_segLen","_splitPt","_minimumLen","getLength","ConstraintSplitPointFinder","NonEncroachingSplitPointFinder","TrianglePredicate","Vertex","_z","ConstraintVertex","_isOnConstraint","_constraint","QuadEdge","_rot","_vertex","IncrementalDelaunayTriangulator","_subdiv","_isUsingTolerance","subdiv","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","_lastEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","QuadEdgeSubdivision","_visitedKey","_quadEdges","_startingEdge","_tolerance","_edgeCoincidenceTolerance","_frameVertex","_frameEnv","_locator","_triEdges","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","TriangleCircumcentreVisitor","TriangleEdgesListVisitor","_triList","TriangleVertexListVisitor","TriangleCoordinatesVisitor","_coordList","_triCoords","Segment","_ls","z1","z2","KdNodeVisitor","KdNode","_left","_right","_count","KdTree","_numberOfNodes","BestMatchVisitor","_matchNode","_matchDist","ConformingDelaunayTriangulator","_initialVertices","_segVertices","_segments","_incDel","_convexHull","_splitFinder","_kdt","_vertexFactory","_computeAreaEnv","initialVertices","DelaunayTriangulationBuilder","_siteCoords","ConformingDelaunayTriangulationBuilder","_constraintLines","_constraintVertexMap","VoronoiDiagramBuilder","_clipEnv","_diagramEnv","LinearLocation","_componentIndex","_segmentIndex","_segmentFraction","loc","segmentFraction","componentIndex","normalize","doNormalize","LinearIterator","_linearGeom","_numLines","_currentLine","_vertexIndex","linear","getComponentIndex","segmentEndVertexIndex","linearGeom","vertexIndex","loadCurrentLine","LocationIndexOfPoint","LocationIndexOfLine","LinearGeometryBuilder","_ignoreInvalidLines","_fixInvalidLines","_lastPt","ExtractLineByLocation","LocationIndexedLine","checkGeometryType","LengthIndexOfPoint","LengthLocationMap","LengthIndexedLine","union","poly1","poly2","reader","read","JSON","stringify","write","union$1","bbox$1","BBox","projection","convertToMercator","convertToWgs84","newCoord","lonLat","D2R","MAXEXTENT","xy","sign","log","tan","R2D","atan","exp","Adder","reset","_add","adder","s","bv","av","halfPi","noop","streamGeometry","stream","streamGeometryType","streamLine","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","rotationIdentity","pi","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleRadius","cosRadius","radius","acos","epsilon","Intersection","link","clipExtent","visible","interpolate","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","linePoint","first","x__","y__","v__","v_","x_","clipMin","clipMax","y_","clipLine","clean","segments","bufferStream","clipBuffer","clipStream","NaN","rejoin","startInside","winding","a0","b0","b1","polygonInside","cleanInside","merge$1","clipPolygon","validSegment","segment","transformer","methods","TransformStream","fitExtent","extent","h","clip","translate","geoStream","boundsStream$1","project","projectAt","projectRotate","projectTransform","recenter","rotate","center","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","delta2","projectResample","resample","transformRadians","clipAngle","clipCircle","precision","extent$$1","fitSize","projectionMutator","mercatorRaw","transverseMercatorRaw","bufferFeature","steps","results","buffered","projected","needsTransverseMercator","projectCoords","defineProjection","toMercator","bufferOp","coordsIsNaN","unprojectCoords","toWgs84","proj","ext","geoTransverseMercator","earthRadius","createbuffer","comment","Marker","multiBuffered","buffer$1","booleanPointInPolygon","ignoreBoundary","inBBox","insidePoly","inRing","inHole","isInside","xi","yi","xj","yj","pointInPolygon","sourceArray","geojsonPolygon","pointsInside","pointsOutside","marker","getPosition","markerToFeaturePoint","kinks","Wicket","featureIn","line1","line2","intersection","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","numerator1","numerator2","onLine1","onLine2","lineIntersects","kinks$1","equalArrays$3","array1","area$1","currentGeometry","currentIndex","currentProperties","geomReduce","calculateArea","polygonArea","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","RADIUS","righthanded","equalArrays$2","unkink","simplepolygon","unkinkPolygon","baseExtremum","comparator","current","computed","baseGt","baseLt","quickselect","arr","compare","quickselectStep","sd","floor","swap","tmp","rbush$3","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","calcBBox","node","toBBox","distBBox","children","destNode","createNode","minX","minY","maxX","maxY","child","extend$1","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains$1","intersects$1","height","multiSelect","bboxPolygon","lowLeft","topLeft","topRight","turfBBox","lineSegment","reduce","previousCoords","currentCoords","bbox$3","createSegments","lineSegmentFeature","lineIntersect","unique","intersect","intersects","tree","load","remove","search","collides","all","toJSON","fromJSON","json","geojsonRbush","match","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","nearestPointOnLine","closestPt","sectionLength","heightDistance","perpendicularPt1","perpendicularPt2","intersectPt","lineSlice","startPt","stopPt","ends","startVertex","stopVertex","clipCoords","diffCoords","coord1","coord2","findLineIntersection","line1Start","line1End","line2Start","line2End","intersectionFC","round","traverseRings","ring1","ring2","intersections","samering","isEqual","FeatureIntersection","position1","position2","trimPaths","arrayLatLng1","arrayLatLng2","sliced1","sliced2","first_segment_with_kinks","min$1","chosenIntersection","max$1","kink","intersectLatLng","beginsWith","endsWith","Symbol","_wrapped","sub","substring","delimiter","trim","initializer","wrapVertices","regExes","typeStr","spaces","numeric","comma","parenComma","doubleParenComma","trimParens","ogcTypes","crudeJson","components","isCollection","sameCoords","deconstruct","isRectangle","config","construct","iring","oring","cs","exec","toUpperCase","wkt","prefix","matches","base","ingest","console","pieces","_point","multipoint","_multipoint","parts","linestring","_linestring","multilinestring","_multilinestring","_polygon","multipolygon","_multipolygon","box","_box","geometrycollection","split","parseFloat","multipoints","replace","subcomponents","x_cord","y_cord","optimized","editable","LatLngBounds","Rectangle","verts","paths","reverseInnerPolygons","extend","multiFlag","response","vertex","linestrings","computeSignedArea","getAt","areas","getPaths","lastIndexOf","unshift","Circle","getCenter","getRadius","d2r","rlat","rlng","getSouthWest","getNorthEast","getBounds","Data","getGeometry","freeGlobal","freeSelf","self","root","Function","_Symbol","objectProto$1","toStringTag","coreJsData","uid","IE_PROTO","funcProto","objectProto","funcToString","RegExp","Map$1","nativeCreate","HASH_UNDEFINED","hasOwnProperty$2","hasOwnProperty$3","HASH_UNDEFINED$1","hash","string","LARGE_ARRAY_SIZE","pairs","HASH_UNDEFINED$2","symbolProto","valueOf","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","objectProto$9","hasOwnProperty$7","propertyIsEnumerable$1","freeExports","nodeType","freeModule","Buffer","typedArrayTags","freeExports$1","freeModule$1","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","baseUnary","overArg","DataView","Promise$1","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","MAX_MEMOIZE_SIZE","reLeadingDot","rePropName","reEscapeChar","memoizeCapped","number","quote","symbolProto$1","baseFor","fromRight","iterable","props","createBaseFor","eachFunc","createBaseEach","rsAstral","rsCombo","rsNonAstral","rsRegional","rsSurrPair","reOptMod","meters","metres","millimeters","millimetres","centimeters","centimetres","kilometers","kilometres","miles","nauticalmiles","inches","yards","feet","debug","bind","identity$2","kx","ky","flush","fragmentByEnd","fragmentByStart","f","stitchedArcs","fragments","emptyIndex","dp","fg","gf","hashmap","equal","keyType","keyEmpty","valueType","keystore","LN2","valstore","mask","matchKey","collisions","maybeSet","missingValue","equalPoint","pointA","pointB","floats","Float64Array","uints","Uint32Array","hashPoint","sequence","previousIndex","nextIndex","visitedByIndex","leftIndex","leftByIndex","rightIndex","rightByIndex","junctionCount","junctionByIndex","hashIndex","equalIndex","indexes","indexByPoint","Int32Array","Int8Array","ringStart","ringEnd","junctionByPoint","empty","store","hashset","cut","junctions","lineMid","0","1","ringMid","ringFixed","rotateArray","dedup$1","dedupLine","startPoint","endPoint","startArcs","startArc","endArcs","endArc","arcsByEnd","equalLine","reverseEqualLine","equalRing","ka","findMinimumOffset","kb","reverseEqualRing","minimum","minimumPoint","arcCount","dedupRing","quantization","indexGeometry","indexGeometryType","indexArcs","indexByArc","indexMultiArcs","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","inputs","outputs","geometry$1","quantizePoint","quantizePoints","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometry","quantizeGeometryType","prequantize","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","delta","require","target","interfaces_","getClass","equalsWithTolerance","doubleToLongBits","longBitsToDouble","isInfinite","isFinite","inherits$1","shouldNeverReachHere","assertion","expectedValue","actualValue","setOrdinate","ordinateIndex","X","Y","Z","getOrdinate","equals3D","equalInZ","CloneNotSupportedException","distance3D","dz","hashCode","setCoordinate","trunc","o1","o2","c1","c2","compX","compY","serialVersionUID","hasNext","toArray","element","oldElement","Iterator_","len","found","arrayList","arrayList_","position_","coll","isChanged","toCoordinateArray","coordArrayType","inc","getArea","getWidth","getHeight","otherEnvelope","isNull","intMinX","intMinY","covers","expandToInclude","minExtent","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","q","minq","maxq","minp","maxp","toLocationSymbol","locationValue","log10","ln","LOG_10","v1","v2","v3","v4","clamp","wrap","average","append","setCharAt","substr","intValue","isWhitespace","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","TEN","divide","gt","lt","ONE","multiply","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","isZero","selfSubtract","getSpecialNumberString","selfDivide","yhi","ylo","hc","tc","hy","ty","U","u","SPLIT","dump","createNaN","ge","selfMultiply","reciprocal","fhi","flo","rint","setValue","isNegative","ax","axdd","d2","H","S","T","zhi","zlo","hx","tx","selfSqr","ex","toStandardNotation","toSciNotation","specialStr","sigDigits","charAt","stringOfChar","numZeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","digitsWithDecimal","isPositive","signum","strlen","signCh","val","numBeforeDec","ch","isDigit","parseInt","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","xMag","TWO_PI","PI_2","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","denom1","denom2","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","DP_SAFE_EPSILON","getX","expandEnvelope","getY","M","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","xInt","yInt","getSortIndex","SORTINDEX_GEOMETRYCOLLECTION","getGeometryN","equalsTopo","equalsExact","geometryChanged","geometryChangedFilter","geometryChangedAction","equalsNorm","norm","compareToSameClass","comp","getUserData","getEnvelope","toGeometry","checkNotGeometryCollection","computeEnvelopeInternal","setSRID","setUserData","userData","aElement","bElement","comparison","isGeometryCollectionOrDerived","SORTINDEX_MULTIPOINT","SORTINDEX_MULTILINESTRING","SORTINDEX_MULTIPOLYGON","SORTINDEX_POINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_POLYGON","boundaryCount","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","isRing","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","removeNull","nonNull","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","entrySet","javascript","util","Iterator_$1","hashSet","hashSet_","cmp","getKey","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","Iterator_$2","treeSet_","asList","toDimensionSymbol","dimensionValue","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","toDimensionValue","dimensionSymbol","seq","isDone","isGeometryChanged","childCoordinates","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","thisGeom","holeComp","getBoundary","getGeometryType","nLines","revLines","createMultiLineString","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","it","valence","bop","chars","getStackTrace","os","ps","printStackTrace","stackTrace","lineNumberReader","readLine","NEWLINE","separator","separatorlen","tokenList","tmpString","pos","token","res","SIMPLE_ORDINATE_FORMAT","copyCoord","minDim","dim","cs1","cs2","cs1Size","fact","newseq","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","computeLength","createLineString","isCoordinate","shellCoordinates","signedArea","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","isCCW","convexHull","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","isValid","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","allRingsArray","setCopyUserData","isUserDataCopied","edit","operation","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","createPolygon","hole","editCoordinates","cloneCoordinates","strBuf","readResolve","instance","instanceObject","defineProperty$1","defineProperty","MapPolyfill","proto","objectOnly","_keys","_itp","createCollection","delete","Map","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","isFloating","FLOATING_SINGLE","description","makePrecise","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","emptyTypeStr","extract$1","wktType","_coordinate","linearring","_linearring","wktArray","toLineString","getIndexAlongSegment","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","isInteriorIntersection","inputLineIndex","getIntersection","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","POINT_INTERSECTION","isInSegmentEnvelopes","intPt","env0","normalizeToMinimum","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","xabs","checkDD","intPtDD","isIn","out","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","distanceLineLine","noIntersection","r_num","isPointInRing","nPts","hiPt","hiIndex","iPrev","iNext","prev","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","CLOCKWISE","STRAIGHT","orient0","orient1","isVertical","projectionFactor","pf0","pf1","newp0","newp1","angle","distancePerpendicular","midPoint","closestPoints","close00","closestPoint","close01","close10","close11","comp0","temp","lineIntersection","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","inputPt","segFrac","isHorizontal","pointAlong","bits0","java","lang","hash0","bits1","isIntersects","isDisjoint","isCovers","isCoveredBy","dimensionSymbols","row","col","column","isContains","setAtLeast","minimumDimensionSymbols","minimumDimensionValue","setAtLeastIfValid","isWithin","isTouches","dimensionOfGeometryA","dimensionOfGeometryB","isOverlaps","isEquals","ai","bi","transpose","requiredDimensionSymbols","im","isCrosses","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","addPoint","setBasePoint","basePt","addLineSegments","lineLen","segmentLen","midx","midy","addHole","isPositiveArea","addTriangle","cent","addShell","centroid3","area2","IndexOutOfBoundsException","peek","preSort","computeOctRing","inputPts","octPts","computeOctPts","lineOrPolygon","cleanRing","linearRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","reducedSet","reducedPts","padArray3","getConvexHull","sortedPts","cHS","grahamScan","cH","pad","polarCompare","dxp","dyp","dxq","dyq","orient","oq","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","seqSize","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","snapPt","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","snapGeom","extractTargetCoordinates","snapToSelf","cleanResult","snappedGeom","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snap","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","SNAP_PRECISION_FACTOR","snapLine","snapper","newPts","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","Long","toBinaryString","bitStr","getBit","nBits","num1","num2","addCommonBits","removeCommonBits","invCoord","getCommonCoordinate","xp","yp","isAtomic","UnsupportedOperationException","locateInternal","shellLoc","locateInPolygonRing","holeLoc","locate","updateLocationInfo","computeLocation","ml","mpoly","geomi","octant","adx","ady","setData","getData","getSegmentOctant","getItem","poll","minItem","reorder","visitItem","query","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","getNodeCapacity","lastNode","nodes","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","top","boundable","searchBounds","getIntersectsOp","visitor","childBoundables","createHigherLevels","getRoot","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","IntersectsOp","item1","item2","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","yComparator","minLeafCount","xComparator","nearestNeighbour","itemDist","initBndPair","distanceLowerBound","minPair","bndPair","currentDistance","bnd","centreX","centreY","aBounds","bBounds","relativeSign","xSign","ySign","compareValue","compareSign0","compareSign1","print","maxSegmentIndex","isInterior","getSplitCoordinates","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","eiNew","checkSplitEdgesCorrectness","splitEdges","edgePts","pt0","splitnPts","ptn","addIntersection","safeOctant","addIntersectionNode","getNodeList","normalizedSegmentIndex","nextSegIndex","nextPt","addIntersections","getNodedSubstrings","resultEdgelist","overlap","mc1","start1","mc2","start2","getLineSegment","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","mcList","computeNodes","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","ss1","ss2","processIntersections","e0","segIndex0","segIndex1","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","execute","checkInteriorIntersections","checkValid","getErrorMessage","intSegs","computeIntersections","nv","mapped","opposite","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","posIndex","isArea","isAnyNull","locIndex","isEqualOnSide","allPositionsEqual","getGeometryCount","side","toLine","toLineLabel","lineLabel","isIsolated","de","isFirstEdge","getEdgeRing","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","getNode","getEdges","getOutgoingDegree","isHole","setInResult","containsPoint","isShell","getMaxNodeDegree","getShell","deLabel","setShell","toPolygon","holeLR","er","setMinEdgeRing","getNextMin","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","setVisited","isVisited","isInResult","isCovered","isCoveredSet","setLabel","setCovered","updateIM","computeIM","isIncidentEdgeInResult","computeMergedLocation","label2","eltIndex","nLoc","onLocation","setNode","setLabelBoundary","find","addNode","getBoundaryNodes","bdyNodes","compareDirection","getDy","className","lastDotPos","getDx","getQuadrant","computeLabel","getDepth","setDepth","depthVal","isInteriorAreaEdge","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","getSym","printEdge","printReverse","setSym","setVisitedEdge","setEdgeDepths","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","printEdges","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de2","getNodes","findEdge","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","findCoveredLineEdges","buildLines","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","INTERSECTION","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","getDegree","containsPointInPolygon","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","isAreaLabelsConsistent","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","computeLabelling","hasDimensionalCollapseEdge","insertEdgeEnd","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","getRightmostEdge","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","computeDepths","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","eLabel","eLoc","computeIntersectsForChain","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","setIsDoneIfProperInt","isDoneWhenProperInt","hasProperInteriorIntersection","isBoundaryPointInternal","hasProperIntersection","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","setIsolated","prepareEvents","processOverlaps","edges0","edges1","addEdge","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","ev1","queryMin","queryMax","mid2","buildTree","IntervalRTreeNode","buildLevel","buildRoot","printNode","setForceToLineString","getLines","forceToLineString","getItems","rcc","addLine","getSegmentIndex","chainIndex0","chainIndex1","computeIntersects","depthValue","minDepth","newValue","getDelta","depthAtLocation","getCollapsedEdge","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","addPolygon","addPolygonRing","addLineString","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","addCollection","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","edgeColl","findEdgeIndex","findEqualEdge","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","cancelDuplicateResultEdges","sym","computeGeometry","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","getResultGeometry","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","polyBuilder","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","overlayOp","geom1","MapOp","symDifference","SYMDIFFERENCE","resultDimension","dim0","dim1","UNION","DIFFERENCE","difference","loc0","loc1","selfSnap","remGeom","prepareResult","prepGeom","isSuccess","savedException","width","bisector","horizontalBisector","widestIntersection","widestGeometry","getInteriorPoint","bisectY","getBisectorY","updateInterval","hasChildren","isPrunable","hasItems","addAllItems","items","subSize","addAllItemsFromOverlapping","resultItems","isSearchMatch","itemInterval","maxSubDepth","sqd","nodeSize","getSubnodeIndex","subnodeIndex","overlaps","exponent","NumW","Qty","Sign","Expo","Mant","Bin","ExW","32","64","CVTFWD","powerOf2","getInterval","computeLevel","computeInterval","getPoint","searchInterval","childNode","createSubnode","getSubnode","createExpanded","addInterval","expandInt","largerNode","isZeroWidth","maxAbs","MIN_BINARY_EXPONENT","insertContained","collectStats","insertInterval","ensureExtent","foundItems","del","testLineSegment","mcEnv","testMonotoneChain","rayEnv","mcSelecter","segs","toDegrees","PI_TIMES_2","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","compute","getDiameter","getExtremalPoints","computeCirclePoints","hullPts","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","computeCentre","getFarthestPoints","getCircle","centrePoint","getCentre","minSin","minAngPt","minAng","ang","getWidthCoordinate","computeMinimumDiameter","getSupportingSegment","computeWidthConvex","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","maxPerpDistance","nextPerpDistance","maxIndex","getMinimumRectangle","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","getMinimumDiameter","setDistanceTolerance","densifyPoints","precModel","densifiedSegCount","densifiedSegLen","segFract","densify","densifier","roughGeom","createValidArea","roughAreaGeom","oNext","insertAfter","ecmp","ePrev","save","compareAngularDirection","quadrant2","prevNode","mark","setMark","isMarked","setMarkBoth","markBoth","eAdj","eAdjDest","createEdge","isValidEdge","eSame","getVertexEdges","setStart","isStart","updateRingStartEdge","getResult","computeResult","eNode","stackEdges","buildRing","eStartRing","eNext","buildLine","eStart","doneStart","getNodeCount","visitItems","visit","centrex","centrey","computeQuadLevel","quadSize","miny","maxy","insertNode","addEnv","expandEnv","isZeroX","isZeroY","insertEnv","queryAll","posEnv","delX","delY","geometryTypes","parse$1","extract$2","geoJson","shellGeoJson","holeGeoJson","reducePrecision","olReference","ol","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","getPoints","getLineStrings","multiPolygon","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","rescale","ss","nodedSegmentStrings","roundPts","splitSS","intSegStrings","isSimpleMultiPoint","mp","isSimplePolygonal","isSimpleLinearGeometry","hasClosedEndpointIntersection","endPoints","eiInfo","getNonSimpleLocation","hasNonEndpointIntersection","computeSimple","isSimpleGeometryCollection","getEndCapStyle","isSingleSided","quadSegs","JOIN_BEVEL","JOIN_MITRE","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getMitreLimit","setSingleSided","bufferDistanceError","alpha","CAP_FLAT","CAP_SQUARE","getRightmostSide","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","pPrev","pNext","usePrev","findRightmostEdgeAtNode","star","dirEdgeList","addLast","removeFirst","shift","clearVisitedEdges","getRightmostCoordinate","computeNodeDepth","startEdge","copySymDepths","computeDepth","outsideDepth","addReachable","findResultEdges","nodesVisited","nodeQueue","startNode","adjNode","edgeEnv","nodeStack","symNode","getDirectedEdges","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","NUM_PTS_TO_CHECK","collapseLine","INIT","KEEP","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","addPts","lastPt","setMinimumVertexDistance","minimimVertexDistance","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","startAngle","endAngle","OFFSET_SEGMENT_SEPARATION_FACTOR","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","mitreMidLine","bevelEndLeft","bevelEndRight","sideSign","totalAngle","nSegs","currAngleInc","currAngle","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","createCircle","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","hasNarrowConcaveAngle","getOffsetCurve","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","dirEdge","ds","orientIndex","compareX","seg0","seg1","compare0","curve","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","getCurves","cwLeftLoc","cwRightLoc","ringCoord","envMinDimension","getLineIntersector","hasInteriorIntersection","setWorkingPrecisionModel","mergeDelta","newDelta","buildSubgraphs","subgraphList","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","checkEndPtVertexIntersections","ss0","pts0","checkCollapses","checkCollapse","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","pixelEnv","hotPixelSnapAction","isNodeAdded","getInteriorIntersections","checkCorrectness","inputSegmentStrings","snapRound","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","MAX_PRECISION_DIGITS","precisionDigits","precisionScaleFactor","bufferOriginalPrecision","argPM","geomBuf","bufOp","maxPrecisionDigits","bufEnvMax","minUnitLog10","CAP_BUTT","isInsideArea","getGeometryComponent","computeContainmentDistance","locPtPoly","polyGeomIndex","locationsIndex","insideLocs","locs","ptLoc","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","points0","points1","isWithinDistance","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","setMarked","setContext","getComponentWithVisitedState","visitedState","visited","marked","isRemoved","getDirectionPt","getAngle","getFromNode","setEdge","getToNode","toEdges","getOutEdges","addOutEdge","getDirEdge","fromNode","getOppositeNode","getNextEdge","sortEdges","getNextCWEdge","modi","getEdgesBetween","node0","node1","commonEdges","retainAll","findNodesOfDegree","nodesFound","nodeIterator","dirEdgeIterator","edgeIterator","findNode","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","buildEdgeStringsForUnprocessedNodes","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringsForObviousStartNodes","getMergedLineStrings","buildEdgeStringStartingWith","buildEdgeStringsForIsolatedLoops","edgeString","isInRing","setRing","getRing","visitInteriorRing","findDifferentPoint","intDe","visitLinkedDirectedEdges","visitShellInteriors","setInteriorEdgesInResult","startDe","buildEdgeRings","hasUnvisitedShellEdge","isInteriorsConnected","createEdgeEndForNext","eiCurr","eiNext","createEdgeEndForPrev","computeEdgeEnds","computeLabelOn","foundInterior","computeLabelSide","computeLabelSides","eb","updateIMFromEdges","insertEdgeEnds","copyNodesAndLabels","nodeIt","computeIntersectionNodes","eeList","edgeIt","isNodeEdgeAreaLabelsConsistent","hasDuplicateRings","eeb","isNodeConsistentArea","intersector","getNestedPoint","isNonNested","innerRing","innerRingPts","searchRing","searchRingPts","innerRingPt","findPtNotNode","getErrorType","getMessage","errMsg","locStr","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","checkHolesNotNested","nestedTester","innerHole","checkConsistentArea","cat","checkShellInsideHole","shellPts","holePts","shellPt","holePt","checkNoSelfIntersectingRings","checkNoSelfIntersectingRing","checkConnectedInteriors","cit","nodeSet","isFirst","checkHolesInShell","pir","checkTooFewPoints","getValidationError","checkClosedRing","checkClosedRings","checkShellsNotNested","setSelfTouchingRingFormingHoleValid","checkShellNotNested","polyShell","badNestedPt","testCoords","isIncluded","isIncludedSet","startDE","isOuterHole","hasShell","getPolygon","isProcessed","holeER","setIncluded","getOuterHole","adjRing","computeHole","isOuterShell","getLineString","updateIncluded","adjShell","setProcessed","findDirEdgesInRing","minShellEnv","tryShellRing","tryShellEnv","obj0","obj1","r1","findEdgeRing","computeDepthParity","computeNextCWEdges","iNode","linePts","endPt","nStart","nEnd","deleteCutEdges","findLabeledEdgeRings","cutLines","getEdgeRings","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","deleteDangles","nodesToRemove","dangleLines","deleteAllEdges","toNode","getDegreeNonDeleted","edgeRingStarts","currLabel","prevDE","outDE","firstOutDE","prevInDE","inDE","polygonize","getInvalidRingLines","findValidRings","validEdgeRingList","invalidRingList","findShellsAndHoles","assignHolesToShells","includeAll","findDisjointShells","extractPolygons","getDangles","getCutEdges","setCheckRingsValid","isCheckingRingsValid","findOuterShells","outerHoleER","polyList","holeList","assignHoleToShell","isMoreToScan","computeProperIntersectionIM","dimA","dimB","hasProper","hasProperInterior","labelIsolatedEdges","thisIndex","labelIsolatedEdge","computeDisjointIM","labelIsolatedNodes","eeBuilder","ee0","ee1","labelNodeEdges","labelIntersectionNodes","labelIsolatedNode","ga","gb","isContainedInBoundary","isPointContainedInBoundary","isLineStringContainedInBoundary","isLineSegmentContainedInBoundary","segEnv","isSegUpwards","applyTo","ecpVisitor","riVisitor","elementEnv","rectPt","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","getIntersectionMatrix","relate","touches","within","coveredBy","relOp","intersectionPattern","relateWithCheck","disjoint","crosses","extractElements","elems","elemGeom","combine","combiner","createList","obj2","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","STRTREE_NODE_CAPACITY","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","unionAll","gColl","locater","exteriorCoords","ptComp","unionNoOpt","unionWithNull","unionPoints","ptGeom","unionLines","lineGeom","unionPolygons","unionLA","interacts","isInteracting","extractedGeoms","computeInteracting","elem0","interactsWithAny","int0","int1","disjoint0","disjoint1","reducedCoords","noRepeatedCoords","minLength","collapsedCoords","fixPolygonalTopology","geomToBuffer","changePM","bufGeom","finalGeom","reducePointwise","geomEdit","createFactory","finalRemoveCollapsed","newPM","createEditor","setRemoveCollapsedComponents","inputFactory","setChangePrecisionModel","changePrecisionModel","reducePW","setPointwise","isPointwise","reducer","simplifySection","maxDistance","setEnsureValid","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","getParent","addToResult","asLineString","getResultSize","resultSegsSize","getSegment","getParentCoordinates","getMinimumSize","asLinearRing","getSegments","getResultCoordinates","flatten","newSeg","hasBadIntersection","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","isValidToSimplify","furthestPtIndex","findFurthestPoint","maxDist","midPt","isInLineSection","taggedLines","tlss","taggedLine","splitAt","minFrac","pointAlongReverse","getConstrainedLength","setMinimumLength","minLen","getSplitPoint","findSplitPoint","encroachPt","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","maxSplitLen","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","circleCenter","hcc","nre","err","dot","magn","getZ","isInCircle","interpolateZValue","crossProduct","setZ","times","cross","classify","sa","BEHIND","BEYOND","ORIGIN","DESTINATION","BETWEEN","circumRadiusRatio","edgeLength","el","ptLen","getConstraint","setOnConstraint","isOnConstraint","setConstraint","constraint","equalsNonOriented","qe","equalsOriented","toLineSegment","dNext","lPrev","rPrev","rot","oPrev","setOrig","lNext","invRot","setDest","rNext","isLive","getPrimary","dPrev","makeEdge","q0","q3","beta","t3","t4","connect","insertSite","isVertexOfEdge","isOnEdge","insertSites","locateFromEdge","triEdges","getTriangleVertices","includeFrame","visitTriangles","isFrameVertex","getVoronoiCellPolygon","cellPts","startQE","cellPoly","setLocator","locator","ea","ec","isFrameBorderEdge","leftTri","getTriangleEdges","rightTri","vLeftTriOther","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","isFrameEdge","getTriangleCoordinates","getTriangles","getVertices","vd","curr","edgeCount","isFrame","quadEdges","getPrimaryEdges","getVertexUniqueEdges","visitedVertices","qd","priQE","eSym","eRot","eRotSym","iter","maxIter","getVoronoiCellPolygons","cells","getVoronoiDiagram","vorCells","triPtsList","tris","triPt","locEdge","triEdge","ccVertex","checkTriangleSize","getEndZ","getStartZ","getStart","getEnd","getEndY","getStartX","getStartY","getEndX","isRepeated","getRight","setLeft","getCount","getLeft","increment","setRight","matchNode","findBestMatchNode","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchRight","queryEnvelope","leafNode","isOddLevel","isLessThan","toCoordinates","kdnodes","includeRepeated","update","getInitialVertices","getKDT","enforceConstraints","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","getVertexFactory","getPointArray","setConstraints","segVertices","computeConvexHull","hull","findNonGabrielPoint","segRadius","closestNonGabriel","testRadius","getConstraintSegments","setSplitPointFinder","splitFinder","segsToInsert","newSegments","segsToRemove","splitVertex","createVertex","removeAll","getSubdivision","computeBoundingBox","vertexEnv","computeVertexEnvelope","allPointsEnv","setVertexFactory","vertexFactory","formInitialDelaunay","kdnode","snappedV","siteEnv","toVertices","setTolerance","setSites","extractUniqueCoordinates","coordsCopy","createSiteVertices","containsKey","createVertices","createConstraintSegments","cdt","constraintLines","constraintSegs","getDiagram","clipGeometryCollection","setClipEnvelope","clipEnv","clipPoly","clipped","isEndpoint","nseg","lineComp","toLowest","pointAlongSegmentByFraction","getSegmentFraction","setToEnd","isOnSameSegment","snapToVertex","getSegmentLength","lenToStart","lenToEnd","compareLocationValues","componentIndex1","segmentIndex1","segmentFraction1","isVertex","getEndLocation","componentIndex0","segmentIndex0","segmentFraction0","getVertexIndex","getSegmentEnd","getSegmentStart","isEndOfLine","indexOfFromStart","minIndex","minComponentIndex","minSegmentIndex","segDistance","candidateComponentIndex","candidateSegmentIndex","indexOfAfter","endLoc","closestAfter","indicesOf","subLine","locPt","subLineLoc","endLine","getLastCoordinate","rawPts","validCoordinateSequence","setFixInvalidLines","fixInvalidLines","allowRepeatedPoints","setIgnoreInvalidLines","ignoreInvalidLines","computeLinear","builder","computeLine","startSegmentIndex","lastSegmentIndex","newCoordinateArray","clampIndex","extractPoint","indexLow","isValidIndex","ptMeasure","segmentStartMeasure","segMeasureToPt","segmentNearestMeasure","projFactor","totalLength","resolveHigher","compIndex","resolveLower","forwardLength","getLocationForward","positiveIndex","locationOf","locLow","startIndex2","endIndex2","resolveStartLower","quarterPi","streamObjectType","Sphere","sphere","forward","t0","pointEqual","subject","isSubject","ascending","ascendingComparator","arrays","sum$1","x0$2","y0$2","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","normal","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","phiArc","polygonContains","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","cr","two","n2n2","n1n2","determinant","n1xn2","uu","polar","code","smallRadius","notHemisphere","c0","v00","point2","sinRadius","step","circleStream","maxDepth","cosMinDistance","resampleLineTo","phi2","lambda2","resampleStream","ringPoint","lambda00","x00","y00","a00","b00","c00","resample$1","resampleNone","reclip","mercatorProjection","rbush$1","isects","filterFn","useSpatialIndex","ifIsectAddToOutput","ring0","edge1","isect","frac0","frac1","rbushTreeItem","allEdgesAsRbushTreeItems","ringA","edgeA","bboxIsect","rbush","determineParents","featuresWithoutParent","setNetWinding","netWinding","setNetWindingOfChildren","ParentNetWinding","numRings","isUnique","numvertices","selfIsectsData","numSelfIsect","outputFeatureArray","leftVtx","modulo","windingOfRing","pseudoVtxListByRingAndEdge","isectList","PseudoVtx","Isect","numIsect","param","allIsectsAsIsectRbushTreeItem","isectRbushTree","coordToFind","IsectRbushTreeItemFound","nxtIsectAlongEdgeIn","nxtIsectAlongRingAndEdge2","ringAndEdge1","ringAndEdgeIn","nxtIsectAlongRingAndEdge1","queue","leftIsect","isectAfterLeftIsect","isectBeforeLeftIsect","windingAtIsect","popped","startIsect","currentOutputRingParent","currentOutputRingWinding","currentOutputRing","currentOutputRingCoords","currentIsect","ringAndEdge1Walkable","walkingRingAndEdge","nxtIsect","ringAndEdge2","nxtIsectInQueue","ringAndEdge2Walkable","pushing","ringAndEdgeOut","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","equalsFn","goingUp","findItem","_condense","compareMinX","compareMinY","N","right2","right3","N2","N1","_chooseSubtree","targetNode","enlargement","minArea","minEnlargement","enlargedArea","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","minOverlap","intersectionArea","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","ig_turfhelper"],"mappings":"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"}