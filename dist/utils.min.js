!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.turfUtils={})}(this,function(t){"use strict";function e(t,e){return t(e={exports:{}},e.exports),e.exports}"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o=e(function(t,e){var o,n,l;t.exports=(o=function(t,e){return t.substring(0,e.length)===e},n=function(t,e){return t.substring(t.length-e.length)===e},(l=function(t){return t instanceof l?t:this instanceof l?void(this._wrapped=t):new l(t)}).delimiter=" ",l.isArray=function(t){return!(!t||t.constructor!==Array)},l.trim=function(t,e){for(e=e||" ";o(t,e);)t=t.substring(1);for(;n(t,e);)t=t.substring(0,t.length-1);return t},l.Wkt=function(t){this.delimiter=l.delimiter||" ",this.wrapVertices=!0,this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+|\+/,numeric:/-*\d+(\.*\d+)?/,comma:/\s*,\s*/,parenComma:/\)\s*,\s*\(/,coord:/-*\d+\.*\d+ -*\d+\.*\d+/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,ogcTypes:/^(multi)?(point|line|polygon|box)?(string)?$/i,crudeJson:/^{.*"(type|coordinates|geometries|features)":.*}$/},this._stripWhitespaceAndParens=function(t){return t.trim().replace(/^\(?(.*?)\)?$/,"$1")},this.components=void 0,t&&"string"==typeof t?this.read(t):t&&void 0!==(void 0===t?"undefined":y(t))&&this.fromObject(t)},l.Wkt.prototype.isCollection=function(){switch(this.type.slice(0,5)){case"multi":case"polyg":return!0;default:return!1}},l.Wkt.prototype.sameCoords=function(t,e){return t.x===e.x&&t.y===e.y},l.Wkt.prototype.fromObject=function(t){var e;return e=t.hasOwnProperty("type")&&t.hasOwnProperty("coordinates")?this.fromJson(t):this.deconstruct.call(this,t),this.components=e.components,this.isRectangle=e.isRectangle||!1,this.type=e.type,this},l.Wkt.prototype.toObject=function(t){var e=this.construct[this.type].call(this,t);return"object"!==(void 0===e?"undefined":y(e))||l.isArray(e)||(e.properties=this.properties),e},l.Wkt.prototype.toString=function(t){return this.write()},l.Wkt.prototype.fromJson=function(t){var e,o,n,r,i,s;if(this.type=t.type.toLowerCase(),this.components=[],t.hasOwnProperty("geometry"))return this.fromJson(t.geometry),this.properties=t.properties,this;if(r=t.coordinates,l.isArray(r[0])){for(e in r)if(r.hasOwnProperty(e))if(l.isArray(r[e][0])){for(o in s=[],r[e])if(r[e].hasOwnProperty(o))if(l.isArray(r[e][o][0])){for(n in i=[],r[e][o])r[e][o].hasOwnProperty(n)&&i.push({x:r[e][o][n][0],y:r[e][o][n][1]});s.push(i)}else s.push({x:r[e][o][0],y:r[e][o][1]});this.components.push(s)}else"multipoint"===this.type?this.components.push([{x:r[e][0],y:r[e][1]}]):this.components.push({x:r[e][0],y:r[e][1]})}else this.components.push({x:r[0],y:r[1]});return this},l.Wkt.prototype.toJson=function(){var t,e,o,n,r,i,s;if(t=this.components,e={coordinates:[],type:function(){var t,e,o;for(t in o=[],e=this.regExes.ogcTypes.exec(this.type).slice(1))e.hasOwnProperty(t)&&void 0!==e[t]&&o.push(e[t].toLowerCase().slice(0,1).toUpperCase()+e[t].toLowerCase().slice(1));return o}.call(this).join("")},"box"===this.type.toLowerCase()){for(o in e.type="Polygon",e.bbox=[],t)t.hasOwnProperty(o)&&(e.bbox=e.bbox.concat([t[o].x,t[o].y]));return e.coordinates=[[[t[0].x,t[0].y],[t[0].x,t[1].y],[t[1].x,t[1].y],[t[1].x,t[0].y],[t[0].x,t[0].y]]],e}for(o in t)if(t.hasOwnProperty(o))if(l.isArray(t[o])){for(n in s=[],t[o])if(t[o].hasOwnProperty(n))if(l.isArray(t[o][n])){for(r in i=[],t[o][n])t[o][n].hasOwnProperty(r)&&i.push([t[o][n][r].x,t[o][n][r].y]);s.push(i)}else 1<t[o].length?s.push([t[o][n].x,t[o][n].y]):s=s.concat([t[o][n].x,t[o][n].y]);e.coordinates.push(s)}else 1<t.length?e.coordinates.push([t[o].x,t[o].y]):e.coordinates=e.coordinates.concat([t[o].x,t[o].y]);return e},l.Wkt.prototype.merge=function(t){var e=this.type.slice(0,5);if(this.type!==t.type&&this.type.slice(5,this.type.length)!==t.type)throw TypeError("The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other");switch(e){case"point":this.components=[this.components.concat(t.components)];break;case"multi":this.components=this.components.concat("multi"===t.type.slice(0,5)?t.components:[t.components]);break;default:this.components=[this.components,t.components]}return"multi"!==e&&(this.type="multi"+this.type),this},l.Wkt.prototype.read=function(t){var e;if(e=this.regExes.typeStr.exec(t))this.type=e[1].toLowerCase(),this.base=e[2],this.ingest[this.type]&&(this.components=this.ingest[this.type].apply(this,[this.base]));else{if(!this.regExes.crudeJson.test(t))throw console.log("Invalid WKT string provided to read()"),{name:"WKTError",message:"Invalid WKT string provided to read()"};if("object"!==("undefined"==typeof JSON?"undefined":y(JSON))||"function"!=typeof JSON.parse)throw console.log("JSON.parse() is not available; cannot parse GeoJSON strings"),{name:"JSONError",message:"JSON.parse() is not available; cannot parse GeoJSON strings"};this.fromJson(JSON.parse(t))}return this},l.Wkt.prototype.write=function(t){var e,o,n;for(t=t||this.components,(o=[]).push(this.type.toUpperCase()+"("),e=0;e<t.length;e+=1){if(this.isCollection()&&0<e&&o.push(","),!this.extract[this.type])return null;n=this.extract[this.type].apply(this,[t[e]]),this.isCollection()&&"multipoint"!==this.type?o.push("("+n+")"):(o.push(n),e!==t.length-1&&"multipoint"!==this.type&&o.push(","))}return o.push(")"),o.join("")},l.Wkt.prototype.extract={point:function(t){return String(t.x)+this.delimiter+String(t.y)},multipoint:function(t){var e,o,n=[];for(e=0;e<t.length;e+=1)o=this.extract.point.apply(this,[t[e]]),this.wrapVertices&&(o="("+o+")"),n.push(o);return n.join(",")},linestring:function(t){return this.extract.point.apply(this,[t])},multilinestring:function(t){var e,o=[];if(t.length)for(e=0;e<t.length;e+=1)o.push(this.extract.linestring.apply(this,[t[e]]));else o.push(this.extract.point.apply(this,[t]));return o.join(",")},polygon:function(t){return this.extract.multilinestring.apply(this,[t])},multipolygon:function(t){var e,o=[];for(e=0;e<t.length;e+=1)o.push("("+this.extract.polygon.apply(this,[t[e]])+")");return o.join(",")},box:function(t){return this.extract.linestring.apply(this,[t])},geometrycollection:function(t){console.log("The geometrycollection WKT type is not yet supported.")}},l.Wkt.prototype.ingest={point:function(t){var e=l.trim(t).split(this.regExes.spaces);return[{x:parseFloat(this.regExes.numeric.exec(e[0])[0]),y:parseFloat(this.regExes.numeric.exec(e[1])[0])}]},multipoint:function(t){var e,o,n;for(o=[],n=l.trim(t).split(this.regExes.comma),e=0;e<n.length;e+=1)o.push(this.ingest.point.apply(this,[n[e]]));return o},linestring:function(t){var e,o,n;for(o=this.ingest.multipoint.apply(this,[t]),n=[],e=0;e<o.length;e+=1)n=n.concat(o[e]);return n},multilinestring:function(t){var e,o,n,r;for(o=[],1===(r=l.trim(t).split(this.regExes.doubleParenComma)).length&&(r=l.trim(t).split(this.regExes.parenComma)),e=0;e<r.length;e+=1)n=this._stripWhitespaceAndParens(r[e]),o.push(this.ingest.linestring.apply(this,[n]));return o},polygon:function(t){var e,o,n,r,i,s;for(s=l.trim(t).split(this.regExes.parenComma),n=[],e=0;e<s.length;e+=1){for(i=this._stripWhitespaceAndParens(s[e]).split(this.regExes.comma),r=[],o=0;o<i.length;o+=1){var a=i[o].split(this.regExes.spaces);if(2<a.length&&(a=a.filter(function(t){return""!=t})),2===a.length){var p=a[0],g=a[1];r.push({x:parseFloat(p),y:parseFloat(g)})}}n.push(r)}return n},box:function(t){var e,o,n;for(o=this.ingest.multipoint.apply(this,[t]),n=[],e=0;e<o.length;e+=1)n=n.concat(o[e]);return n},multipolygon:function(t){var e,o,n,r;for(o=[],r=l.trim(t).split(this.regExes.doubleParenComma),e=0;e<r.length;e+=1)n=this._stripWhitespaceAndParens(r[e]),o.push(this.ingest.polygon.apply(this,[n]));return o},geometrycollection:function(t){console.log("The geometrycollection WKT type is not yet supported.")}},l)});function n(t,e){var o=t.map(function(t){return function(t){if(google.maps&&google.maps.LatLng&&t instanceof google.maps.LatLng)return[t.lng(),t.lat()];if(t.lat&&t.lng)return[t.lng,t.lat];if(t.length&&2<=t.length)return t;throw new Error("input must be an instance of google.maps.LatLng, google.maps.LatLngLiteral or Position")}(t)});if(!0===e){var n=o.pop();n[0]===o[0][0]&&n[1]===o[0][1]||o.push(n),o.push(o[0])}return o}function r(t){return i=function(t,e){return t+function t(e){var o,n=0;switch(e.type){case"Polygon":return p(e.coordinates);case"MultiPolygon":for(o=0;o<e.coordinates.length;o++)n+=p(e.coordinates[o]);return n;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0;case"GeometryCollection":for(o=0;o<e.geometries.length;o++)n+=t(e.geometries[o]);return n}}(e)},a=s=0,function(t,e){var o,n,r,i,s,a,p,g,l,u,c=0,h="FeatureCollection"===t.type,y="Feature"===t.type,f=h?t.features.length:1;for(o=0;o<f;o++){for(a=h?t.features[o].geometry:y?t.geometry:t,g=h?t.features[o].properties:y?t.properties:{},l=h?t.features[o].bbox:y?t.bbox:void 0,u=h?t.features[o].id:y?t.id:void 0,s=(p=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,r=0;r<s;r++)if(null!==(i=p?a.geometries[r]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,c,g,l,u))return;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],c,g,l,u))return;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,c,g,l,u))return;c++}}(t,function(t,e,o,n,r){a=0===e&&void 0===s?t:i(a,t,e,o,n,r)}),a;var i,s,a}e(function(t,e){var C;(C=o).Wkt.prototype.isRectangle=!1,C.Wkt.prototype.construct={point:function(t,e){var o=e||this.components;return(t=t||{}).position=new google.maps.LatLng(o[0].y,o[0].x),new google.maps.Marker(t)},multipoint:function(t){var e,o,n;for(o=this.components,t=t||{},n=[],e=0;e<o.length;e+=1)n.push(this.construct.point(t,o[e]));return n},linestring:function(t,e){var o,n;for(n=e||this.components,(t=t||{editable:!1}).path=[],o=0;o<n.length;o+=1)t.path.push(new google.maps.LatLng(n[o].y,n[o].x));return new google.maps.Polyline(t)},multilinestring:function(t){var e,o,n;for(o=this.components,(t=t||{editable:!1}).path=[],n=[],e=0;e<o.length;e+=1)n.push(this.construct.linestring(t,o[e]));return n},box:function(t,e){var o=e||this.components;return(t=t||{}).bounds=new google.maps.LatLngBounds(new google.maps.LatLng(o[0].y,o[0].x),new google.maps.LatLng(o[1].y,o[1].x)),new google.maps.Rectangle(t)},polygon:function(t,e){var o,n,r,i,s,a=function(t){var e=0,o=null,n=0;for(n=0;n<t.length;n++)o=(n+1)%t.length,e+=t[n].x*t[o].x,e-=t[o].y*t[n].y;return 0<e};for(r=e||this.components,(t=t||{editable:!1}).paths=[],i=[],o=0;o<r.length;o+=1){for(s=[],n=0;n<r[o].length-1;n+=1)s.push(new google.maps.LatLng(r[o][n].y,r[o][n].x));0!==o&&a(r[o])&&"polygon"==this.type&&s.reverse(),i.push(s)}return t.paths=t.paths.concat(i),this.isRectangle?function(){var t,e;for(e in t=new google.maps.LatLngBounds,i[0])i[0].hasOwnProperty(e)&&t.extend(i[0][e]);return new google.maps.Rectangle({bounds:t})}():new google.maps.Polygon(t)},multipolygon:function(t){var e,o,n;for(o=this.components,(t=t||{editable:!1}).path=[],n=[],e=0;e<o.length;e+=1)n.push(this.construct.polygon(t,o[e]));return n}},C.Wkt.prototype.deconstruct=function(o,t){var n,e,r,i,s,a,p,g,l,u,c,h,y,f;if(google.maps.geometry&&(i=google.maps.geometry.spherical.computeSignedArea),o.constructor===google.maps.LatLng)return{type:"point",components:[{x:o.lng(),y:o.lat()}]};if(o.constructor===google.maps.Point)return{type:"point",components:[{x:o.x,y:o.y}]};if(o.constructor===google.maps.Marker)return{type:"point",components:[{x:o.getPosition().lng(),y:o.getPosition().lat()}]};if(o.constructor===google.maps.Polyline){for(L=[],e=0;e<o.getPath().length;e+=1)s=o.getPath().getAt(e),L.push({x:s.lng(),y:s.lat()});return{type:"linestring",components:L}}if(o.constructor===google.maps.Polygon){for(A=[],void 0===t&&(t=!((f=o.getPaths().length)<=1||(2===f?i(o.getPaths().getAt(0))*i(o.getPaths().getAt(1))<0:(y=o.getPaths().getArray().map(function(t){return i(t)/Math.abs(i(t))})).indexOf(y[0])===y.lastIndexOf(y[0])||!(t=!0)))),e=0;e<o.getPaths().length;e+=1){for(s=o.getPaths().getAt(e),L=[],r=0;r<o.getPaths().getAt(e).length;r+=1)L.push({x:s.getAt(r).lng(),y:s.getAt(r).lat()});s.getAt(s.length-1).equals(s.getAt(0))||(L.push({x:s.getAt(0).lng(),y:s.getAt(0).lat()}),e%2!=0&&L.reverse()),1<o.getPaths().length&&0<e&&(0<i(o.getPaths().getAt(e))&&0<i(o.getPaths().getAt(e-1))||i(o.getPaths().getAt(e))<0&&i(o.getPaths().getAt(e-1))<0?L=[L]:L.reverse()),A.push(L)}return{type:t?"multipolygon":"polygon",components:A}}if(o.constructor===google.maps.Circle){var m=o.getCenter(),d=o.getRadius();L=[];for(var x=Math.PI/180,v=(d/=1609)/3963*(180/Math.PI),w=v/Math.cos(m.lat()*x),P=0;P<=32;P++){var b=Math.PI*(P/16);g=m.lng()+w*Math.cos(b),p=m.lat()+v*Math.sin(b),L.push({x:g,y:p})}return{type:"polygon",components:[L]}}if(o.constructor===google.maps.LatLngBounds)return(L=[]).push({x:(s=o).getSouthWest().lng(),y:s.getNorthEast().lat()}),L.push({x:s.getNorthEast().lng(),y:s.getNorthEast().lat()}),L.push({x:s.getNorthEast().lng(),y:s.getSouthWest().lat()}),L.push({x:s.getSouthWest().lng(),y:s.getSouthWest().lat()}),L.push({x:s.getSouthWest().lng(),y:s.getNorthEast().lat()}),{type:"polygon",isRectangle:!0,components:[L]};if(o.constructor===google.maps.Rectangle)return s=o.getBounds(),(L=[]).push({x:s.getSouthWest().lng(),y:s.getNorthEast().lat()}),L.push({x:s.getNorthEast().lng(),y:s.getNorthEast().lat()}),L.push({x:s.getNorthEast().lng(),y:s.getSouthWest().lat()}),L.push({x:s.getSouthWest().lng(),y:s.getSouthWest().lat()}),L.push({x:s.getSouthWest().lng(),y:s.getNorthEast().lat()}),{type:"polygon",isRectangle:!0,components:[L]};if(o.constructor===google.maps.Data.Feature)return this.deconstruct.call(this,o.getGeometry());if(o.constructor===google.maps.Data.Point)return{type:"point",components:[{x:o.get().lng(),y:o.get().lat()}]};if(o.constructor===google.maps.Data.LineString){for(L=[],e=0;e<o.getLength();e+=1)l=o.getAt(e),L.push({x:l.lng(),y:l.lat()});return{type:"linestring",components:L}}if(o.constructor===google.maps.Data.Polygon){var A=[];for(e=0;e<o.getLength();e+=1){u=o.getAt(e);var L=[];for(r=0;r<u.getLength();r+=1)l=u.getAt(r),L.push({x:l.lng(),y:l.lat()});L.push({x:u.getAt(0).lng(),y:u.getAt(0).lat()}),A.push(L)}return{type:"polygon",components:A}}if(o.constructor===google.maps.Data.MultiPoint){for(L=[],e=0;e<o.getLength();e+=1)l=o.getAt(e),L.push([{x:l.lng(),y:l.lat()}]);return{type:"multipoint",components:L}}if(o.constructor===google.maps.Data.MultiLineString){for(c=[],e=0;e<o.getLength();e+=1){L=[];var E=o.getAt(e);for(r=0;r<E.getLength();r+=1)l=E.getAt(r),L.push({x:l.lng(),y:l.lat()});c.push(L)}return{type:"multilinestring",components:c}}if(o.constructor===google.maps.Data.MultiPolygon){var S=[];for(h=0;h<o.getLength();h+=1){var W=o.getAt(h);for(A=[],e=0;e<W.getLength();e+=1){for(u=W.getAt(e),L=[],r=0;r<u.getLength();r+=1)l=u.getAt(r),L.push({x:l.lng(),y:l.lat()});L.push({x:u.getAt(0).lng(),y:u.getAt(0).lat()}),A.push(L)}S.push(A)}return{type:"multipolygon",components:S}}if(o.constructor===google.maps.Data.GeometryCollection){var O=[];for(h=0;h<o.getLength();h+=1){var k=o.getAt(h);O.push(this.deconstruct.call(this,k))}return{type:"geometrycollection",components:O}}if(C.isArray(o)){for(n=[],e=0;e<o.length;e+=1)n.push(this.deconstruct.call(this,o[e],!0));return(a={type:function(){var t,e=o[0].constructor;for(t=0;t<o.length;t+=1)if(o[t].constructor!==e)return"geometrycollection";switch(e){case google.maps.Marker:return"multipoint";case google.maps.Polyline:return"multilinestring";case google.maps.Polygon:return"multipolygon";default:return"geometrycollection"}}(),components:function(){var t,e;for(e=[],t=0;t<n.length;t+=1)n[t].components&&e.push(n[t].components);return{comps:e}}()}).components=a.components.comps,a}console.log("The passed object does not have any recognizable properties.")}});var g=6378137;function p(t){var e=0;if(t&&0<t.length){e+=Math.abs(i(t[0]));for(var o=1;o<t.length;o++)e-=Math.abs(i(t[o]))}return e}function i(t){var e,o,n,r,i,s,a=0,p=t.length;if(2<p){for(s=0;s<p;s++)s===p-2?(n=p-2,r=p-1,i=0):s===p-1?(n=p-1,r=0,i=1):(r=(n=s)+1,i=s+2),e=t[n],o=t[r],a+=(l(t[i][0])-l(e[0]))*Math.sin(l(o[1]));a=a*g*g/2}return a}function l(t){return t*Math.PI/180}function f(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function m(t){if(!t)throw new Error("obj is required");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return function t(e){if(1<e.length&&f(e[0])&&f(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return t(e[0]);throw new Error("coordinates must only contain numbers")}(e),e;throw new Error("No valid coordinates")}function d(t,e,o){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var r=0,i=e.length-1;r<e.length;i=r++){var s=e[r][0],a=e[r][1],p=e[i][0],g=e[i][1];if(t[1]*(s-p)+a*(p-t[0])+g*(t[0]-s)==0&&(s-t[0])*(p-t[0])<=0&&(a-t[1])*(g-t[1])<=0)return!o;a>t[1]!=g>t[1]&&t[0]<(p-s)*(t[1]-a)/(g-a)+s&&(n=!n)}return n}var s=console.debug.bind(console,"turfHelper:"),a=console.warn.bind(console,"turfHelper:");function u(t){return{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[n(t,!0)]}}}function c(t){if(!t.getPosition||"function"!=typeof t.getPosition)throw new Error("input object does not have a getPosition method");var e=t.getPosition();return{type:"Feature",properties:{},geometry:{type:"Point",coordinates:[e.lng(),e.lat()]}}}var h=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"];function x(t){var e;if("Feature"===t.type)e=t;else if(t instanceof google.maps.Polygon)e=u(n(t=t.getPath().getArray(),!0));else if(t&&t.constructor===Array)e=u(n(t,!0));else{if(!t.coordinates||-1===h.indexOf(t.type))throw new Error("object is not a Feature, Geometry, google.maps.Polygon nor an array of google.maps.LatLng");e={type:"Feature",properties:{},geometry:t}}return e.properties={},e}function v(t){var o={type:"FeatureCollection",features:[]};return t.forEach(function(t){var e={type:"Feature",geometry:{type:"Point",coordinates:n([t])[0]}};o.features.push(e)}),o}t.debug=s,t.warn=a,t.area=function(t){return r(x(t))},t.Wicket=function(){return new o.Wkt},t.arrayToFeaturePolygon=u,t.polygonToFeaturePolygonCollection=function(t){var e;return(t instanceof google.maps.Polygon||t instanceof google.maps.Polyline)&&(e=t.getPath().getArray()),v(e)},t.arrayToFeaturePoints=v,t.markerToFeaturePoint=c,t.latlngToFeaturePoint=function(t){return{type:"Feature",geometry:{type:"Point",coordinates:n([t])[0]}}},t.polygonToFeaturePolygon=x,t.polylineToFeatureLinestring=function(t){return function(t,e,o,n){if(!t)throw new Error("No coordinates passed");if(t.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!f(t[0][1])||!f(t[0][1]))throw new Error("Coordinates must contain numbers");return function(t,e,o,n){if(void 0===t)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(o){if(!Array.isArray(o))throw new Error("bbox must be an Array");if(4!==o.length)throw new Error("bbox must be an Array of 4 numbers")}if(n&&-1===["string","number"].indexOf(void 0===n?"undefined":y(n)))throw new Error("id must be a number or a string");var r={type:"Feature"};return n&&(r.id=n),o&&(r.bbox=o),r.properties=e||{},r.geometry=t,r}({type:"LineString",coordinates:t},e,o,n)}(t instanceof google.maps.Polyline?n(t.getPath().getArray()):n(t))},t.pointInPolygon=function(t,e){var o=[],n=[];return"Feature"!==e.type&&(e={type:"Feature",properties:{},geometry:e}),"Polygon"!==e.geometry.type&&"Multipolygon"!==e.geometry.type||t.forEach(function(t){!function(t,e,o){if("object"!==(void 0===(o=o||{})?"undefined":y(o)))throw new Error("options is invalid");var n=o.ignoreBoundary;if(!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");var r,i,s=function(t){if(!t)throw new Error("obj is required");var e=m(t);if(1<e.length&&f(e[0])&&f(e[1]))return e;throw new Error("Coordinate is not a valid Point")}(t),a=m(e),p=e.geometry?e.geometry.type:e.type,g=e.bbox;if(g&&0==(r=s,(i=g)[0]<=r[0]&&i[1]<=r[1]&&i[2]>=r[0]&&i[3]>=r[1]))return!1;"Polygon"===p&&(a=[a]);for(var l=0,u=!1;l<a.length&&!u;l++)if(d(s,a[l][0],n)){for(var c=!1,h=1;h<a[l].length&&!c;)d(s,a[l][h],!n)&&(c=!0),h++;c||(u=!0)}return u}(c(t),e)?n.push(t):o.push(t)}),{pointsInside:o,pointsOutside:n}},Object.defineProperty(t,"__esModule",{value:!0})});